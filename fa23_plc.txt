// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Code\Mini Factory FA23\fa23_plc.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
2dc0518fc32d26a33099e236594ae8f8c1b3e99541c29d6c10c6fa3380879f120802c1d81e76bdfc
5bc9f08498e872943870beeb68b9c9b6403c4a5f99c0d36dac2fb41eb5472480d977b5f7b3b77c17
dc49caa39fbd0f2626990d46cc7790d3f5c6e21ca56d985fa3ed45028546a0a56243d1e2eff81ec5
fb1e56509bd7a3532d61bf20e2ae0f06b141a9a0829611e8d5826b79056c44e8992928262b9a2e21
46d8a8eff431ef09a2d8c406860d524517e2214cb3d125e3e4fcf3d6ae85edb02bd88e404183c02d
f9b0712f5e4f7eee6e9c0feeb36a46095dd5178c8b28c7bd495c9a4fe350002fbc1f730e63d06cd4
d32bf4c4f1709a0fb465e8f2515dedea8cc66ee638ccb4e4803138486f443a975efbf50979dbb09a
1024cfb3b79ddcaa89b76b9d686747cf90960181058fbc82520b09ef581a481cf28d3331a9d3fd7d
a2ef148f2719eb4cc979f8c915d607b0cc68055118917ec7b2e489be1e94620b49b5f74eabadbf6b
d9c5a1a75caa46a517ae1940fb7737893cdacb0d48257ad2546f2d166fc136181bcfe60b9019cf56
4e7403b419bfb133ee16f574018a77edcccbe8c216bdc7626b950f4998af362cfc2942453730f346
15fa2b38bd3d0bc8c108cfb3b9d40cfbd02418fdffe84a780ca93cd43261a9b4968be2c284624fa5
fead1f19c1bb8dfa8453644591a4a18f7a97994a9b2e7cc4071e75ba61cc845a00185fefbb65d12b
aa6283660a34cea4842d7cdc95d15ff4fa26c1fc6773bb27aa29de33dfb3596770705d4fce733ae6
e166c46a24bb4feb09cd06184a24f44153d2878a5caf3ca2f88f92894b56bea06a63461c53e2c47f
f7b78aab88c8169b06af9ffae2b464887baad674d74d13f56fd8d7f7eadf36479a74905ef9917c4b
35d16b4f18639f46ea84c7b3b177c762cd319c375f0ad176f4babe70804f66c35443bc0efa6703ca
d6a2eacd6d719c00fba91f454f3c1d34e3dcb20420765c17db706e60b73df99efd30e14aa3742587
89b356aae26f2f08c8924cb3003a5055143fb6776ec5ab4eb02d08c7ed2dc21a7706cd9600df47ae
7dabdb8df6c6836e268d713b569ebbb1466f9ca52a0eafff1a23aab32ec97e1a4cd2f871a3dbd6ec
d47c14bbb7103f3942b59bf2f41de10e74995ea3535d4b8843c635c78228fd676a9d2dc88012a614
017a480d3c0702934d55afc572decd802b7c57324401db2b90916692b8fbc94105241cc54396aa41
8fffee0e20cff11e3a7b6c2f5abb5877daaa96114755d1cd625e8bb635f56527a2fa276262cc7323
34d137d5037a0aef20ab5bb04324a7ead5dcb08f08ffea0ff898dcbe3df52d81942a9cd7aa1ff21c
7699459028aa9d9b12be531036bd455ac75e826c63fc48491a1afb74053e53174ad75e8117a350a8
680a6c79482f8666d6cdefbd509d601885293107fa3828a6d52d534a221061d716d1f6b4a311f44e
d6b6318aef2b155f2430eadb3f44fe16c752a2a0bd44ad9536d8775bacf0dbe4abfcd0e9f151e9eb
02b63af4ae1ed3a6399f9c1c8c42b0262cc9bb980dab7a15038845cbf59b70a95c9d889a9bd83061
a815dc1d60cd495ba633dcea011264f825a39e8c43df8c075ddd639026257a13b5cdf21f4bec2708
856b7ec009f7ddec00a60d125b8b0a3c09ac46eabb8f3ecb06d72083f7c307c5f749d33674b925b1
7354307c67e4b599f69a54cb6e7711e0185fde32b58c9295a6f498a22fe17b952611abd1584ee587
818ff589d076bd93a9553e784c2781068bbcaf6d0d552bb905325b0746526adb6dc8a2f3deba152d
cdeef9c3fc2027c638e91ec49f7ab1b951324fd86fc21d3e976ca6e47af11a960363e6302ed06fe8
1ab25f9f488374430612b7e853f68cb53c1b5d8e10a96831ef159a24f64d9df8ba8f32e9f0d7fdda
9cff620145d8b5a5db39e7eb4f6e47f8ab8bacc6a5e7c9df152ffb1c73872e7e300b95c75d54f8e9
c333904c7df71ace490c2d906f7883f54818bee123a0d22079c99f6af36af3bf12bf60435eba70aa
0b8541005a739042a1a92d9c17631548c9b1d804d4cb6e316e2c2c3c20860a60fba7f5c3f5e05c57
04574cbc4a924be19bc69b9cda1ed5fce6727121c2ee5794cb502c4a354a51e8c15ed10274c64370
07152122d230656c638fc6c33d1a80c6d80a66f3a335763bb6c44efc4e0cccec9265cab5e9acb260
ca7113710662372da75ed383257a582403b6bcecf2a48cd1c8e525df92103a4603ccf5acd54bf2f3
d5c5c07ec10f832910761f338f1cc46c4754daabccb4eab7d31b397c44edd17b5c036e8bd3fb12ab
b384864cb77c03df023d9125b0302800aa0b35b877a5e4e9251a34406ed541aab21d4ae2196e664f
51041a906ac0238b92a3cf1d53903f317584f57b9bd6aa76d4eeaa2e0416dfe90c7840ef3d6b9672
d94bb24c421fef8b59bfc7ca6e6a37a2eaed5feceddaca0cfb10b20d18ef5880b9e38e8bc7ed1c94
70ccd9d7be9276856c055b474abd42a429793e9cfbb4c9cabc6cb5deba1b7707bb83a7f3db24939c
415401161cf9bbfb4bc27ad7f453d177483254d90cce3491b3c02294701500ecbf2d47213747d554
07b416d54b589cfd3a7b39cc3073ba40c52756d46a8891bf385341d98fa633c80aea479616a63624
966ae92b993452eb904a1650ff79cc6ec9a8ec1877a8cd397a9203e9d3ce4028630b8702342ce7fb
23959368c6e5a89729eb30aff9e758b5f99c656cbfaa42193740880347bdabf73f7187b84de84ae9
1486a8dbff6bc373b3f67d45cba35c3c9e04f7bcc4e0118a938ec92daf8127503241a0adb68eeea9
5be01a069df0b2912b441a82e0b74f8e2cf827309d9a985d5ee75c169cddc0d83e7e018c876d08ef
31dfbf629f43d3776e7dc443503f6271aa91b84fb3b2d1a3c3cda1bb7b4de9e5dd835e4e7f63bd3e
72ec834917417ab509e852495e04e3dfe09395fd6c48f9e27dcacf643204cee6d3db7c1bd50b2e26
e29b9db0c60f5beb510ac3382daff4c62699936ca9a5a0f0e305aad5cc4b6887456ba96359b4696e
e533ce56eb83260bb167f8703e0aeb75a060056d5f6e8546f68e33576856d32207b126c27cd0141e
a8a3d0d52037d5575a6c2aee06d0499e1221c3b8b85daf03a874ed65ac2242727229e39e80791877
30a6a4144b70fea39cf4a3807875267c3e22ec41edcb8365a89f9c5958225f543db5e8342a0a11e1
0713d7395e51d97e9259f15eb9964fe3672955d50afd081fc6d4fd470b993cef422106cc54186366
2ff3e36592496e01c36212af8c1546295dd4172787dd6e0e4ed9e9a9fe79319a03efe5f35bbb84ea
c4a8e521477f5b012002dfc35e03b3b1138d81528844f4a916b9c51be5465d27424aa415278e9b68
de91b139812003bc7638012b410c3a0de93517526900554f31d39713db328e857b2efbec4a8d3aa5
63119ee466d581b1b65ffd65ded7b996f4691b312301a4171755eaf898b5ce4c870544b6745286a6
51a3fbdefc87d219323f5de289273c4c4afa0948d7570f4fd69d1e0c832c243228d56d0504a90f70
4ee27f306e5011eefcb8832a7b619b3e3f62cb00c6a282585847308ce4a508949101ad26f09f09a3
ea4ab1390d2189c41bcb60ef9ee8b3f7b07a56afb680fe45347b98b3bedc1ca7a9b3c3c575852476
a221bd2003e118f87cef3a8d73ad5f1790e9b059cac5ff5851bf0bc46ff3004212c645d91ae9190b
842b63750365b7449e34afb226e794d1e7ca2d08fc16ae29bada4ac6e1b164be482d780fce8c0e0e
3ed8c7eacf5d1c43d64ecc496144acf81d101eb79dfac4133b263ca8699ad0d2d33411e5778ed2ec
5ccb000a63da11d7b3d30969366b8dda498cfbf3daeeb5396dcfd7f3b7556e4a1309f356479a26be
1502bd67c799c42275ea2fc81984b3a33dbec97bd9abf5d07a7f980fcfcaff513c20a2148e050426
9b950d4822793d7a0e829ac359addf8ab5eb6e2001784b7e90fde163b52ff4a8f51304930c34c185
d401fd78faa64383f7f84e98f8ff1b4843488c6b66245feb11a2333648c6d03265666825fad7e06b
a9b3699c0f003a35fe75f7ed70ab5978e2623a7afbb06cd88dc46670925b3668de7de1de4ee26947
690cad582a7f48568f9dbde8c7c2dc65a672120cacf390f6998670805c27e827d43a0acdf2951d21
0b395e282539dc2c41db6ec359f67e7afd273410eba3fa25ab9461f550955bd7ec72fa74a5baba8f
1e064c967309e82fb026ca41067476ae2c93c737398a3c0d1435d9c020413755c845ebcde0def02a
29c7e76b9e2ddbc5b661bf9561ec5ecddfeae3c2e882df693b8ece571b2779410f2adc49ca0fb3a0
c3face55d95dd408ed2d5b142aaf22f6942a1b798bfe746ab2e5b44d8abda50f932ebc30bbd5fb9e
08574cb7859ba2f6e37bf97e56a2e210cce75102f93e09d164cc3204666e90353c61efc4eda21901
4c15378e40d0c982beff090d494b6e2a958753eac5f2bc95ecd3e60ea360b5958bb1a38cab953298
835e200f2b39382be28aa46820b10efd97b7f372359396c9e66947fcf5dfc95d53f73b60fb34d751
fca0d1e79465421e8f7e1a676ef47baf743ab9d63d57300be7904cc26c4e7ea732ca8edfe9c17ffd
857a0c2bf6209e201ade89222ef6a6b5838af55c678f117d82826306ab2a97b03b0996e75a372cea
49f75a35dbdaa69c62acb5db3280854e0774345e51c580f596ef6d120b70d81e99ffc62e6546e12b
8ec7c85cf95eec6458bdca68f8dfacb1a14591484d1fdedc8f7fe4537b623d2b1dbea35700d3f204
925ec241da158e2eb7ec68320b2bff90c2aef84d8c728c5ac6a5a5269e6b7afd322128cd5ba475f5
e8998af5d190ee2ece0dda8c7e129aafa94f6685155fbfd25b4cda4320c5a18d3f0e8e20c2b2cdd7
6f1724c3df6f86260a52c363bcb079a761809a9e1c5b8e89e3dafad1c43036ba5779180a161c6b49
372902d3d370d48406d46899a749afbd17ac2787933681abd24268209cdb598b370fae67ea4f291f
fc0bc4ceef32256608cb2a0f2af5a2a51e5d8c21183d87d9b86486f297f0b24ac7fe64783915008a
739e0d84706820a95be2104a230bcbd4b6e711f0f195ff1fe86c86b56113e076238b61d5f577efc0
e44a081c24c0fc1e57c7974e2da7c106a15d8044b60c43d8e5a56f6df64d16dcaca55c34ee0e0f23
1eef54a7405115165e44c77f1cd8177c9a44eab39fa964866dc0c330d1a62400f5427ebf5b98a1e6
cfbe2d00652ddeecfaa24b7bfb8a9d7c511e6d6ff36c70dde78c8ce8c88f25dc18e4abb094f40184
803e7a8c7124828a868430b9a1c9c9e0968755fb9a4e35ad3871253cffa737a4a957d537b318f655
6c4c0e527464871c1f130096c3ab2b24b0bcbf797e39a253f1b81204332c4162381c09d0f3fe6064
76f5acf7b037bdb83b4e7a7a36a8eb78c6f83fbbd27fa23f33827eb00e7d997c03fab51a9ae54144
af29de1e78532cdc776e9f5aabebcb6ed8f9921ee6a30a50a42063b04f40376ea79acbe47c72152e
ff3141cbcbe90ca79f41ceacabdff790e98767e97b908389e548a4e6167e3800e49773cdbb8bd998
69d47317d15673f6a00ba5c79b581504c6f1b37a1578010a998274b13889c517e88449b76b8b6c19
4dc0020d8a0a84cb4bc07a9f837fc4d5ba9b05706baed696011bf62b4261db64cc60d9038665502e
ac0c957729daf1b4c9fe17d3c8b19c3570cd387f986e0e52230d7801c4a7647bcbbdc339f4dea60c
c713c88c01be3a033dccb95e119edb6478ab5f817db843dd5eda1bacc987aa4d228b94d7828cf371
1607a77fb98996ba38f3a8e3aa2e848f593a6935ca1c9967ce073d35d2af0866664f7a24af41bbb4
1ef2b1bef1f10f2e34bb704523e224ee52d9d6e589d5371f34f37f6444dd63c1b89465c0b2b5f6b7
54c5ec68393de97fccd5699614f929a2368e27c598690893c804864f3e3a640c2300463f9daad378
91e3734cd743f77f606ad86593fedeebcc59f19557775ee41def4c279dbf2ab7db0a4abfd3034729
6b7a3ac6356cd944e5d1c0c60bca82958f677f370c9d8866ac6e17033540e5ebac6e6874773cad3f
35890aba7cbf071453085c24bc52ec568bcac474e89f319bbb150c2ac8a0bcadf8bbb073a4d0ea93
6621784886f6437e13cdd923ce9d5f9a5d78534271d6a4491ac8fc89776a7ec052c52a2d1faf85ac
b2f1a35fc52153bbcd5f842e82211f0625721a2b3e4ca0926ae55e725973e7bda8fa77536dcacf09
977de44beed6d3f64660feab96169151231043597ba374d335668945bb38bf760752e2a9f5d782ee
b6a20a661b577504f6ee38efd5016af25b79094b90eaa1ab3f254e61d41460d4b4a2b057041614a3
630dfc505f5bba697566a2e30879ba8aad42927d4ae478b4b672012c0654e79a8fee651bc733bf8f
8854915b07f49b36a238774dc6b9fd1d5149ba6d5a93fce285d828ac45a53cec66298ad77474ba5f
24ce1f80eb09d98fe62e3e7842e5986c658ee7ef16de49e7a2629fefb5635550c2491f26d12b3cf3
b62d878a1cb23e727826d7baa178e8ade454dd129411cffc3a4dc7f38a162abe9fba0c0d4f312fd1
45f263873507e8bb66b329df66ad03f41e9cc74df668656fa135301df26c5800a67036d27d49f885
bccf1703bbd75c7f40e0a66eff29fe07f6bc6761888a8bd2fbaea9a37dfead12639e5c48d44508f7
a41bee29e8209d3010f9ac40afa55c386a438af42dab8e73f98f1e15a3427e0a9585ed2aa01efe67
48960ffaff1d92425942cfa2b11d3fab6ebb6c210615a8d4977dd0de1de49c79eda7caae11898c04
128490f68cbfcb6f77def56f663343b8d60ed2214d424986fcc1f9e82a5b484ceb2ffa33e6dcac49
f3f98ebccb5ec506b5926d68a66fe7d102bd6c4c21cbf1e20efe9a00e21b37e92a0c2c459f59a975
2233b142e83791392551b4a018769ca70a2e89f98b227c6ac1465e75671b587708a299d9bf1d2342
2892eea1a36061a428a38ec83c7479aa1b4dde5c22a1aa2402a49034d3a5fdf6c7c8d30af8a16c53
80f71ca0b6fcdd7c58a1e69dd6c395d8ae3f5c11bc616fc5ae74a4c79035b7d76d2d4d52a75c58cf
67dd21d919f4dae6d85849602193b706dbc30f4b9c60a3139618b3d5f8f537239bbd0b682d4a64e5
43cd8f38476f759759dfbab90f04c480c25f487f331289e76e4b65650805cbd6bead1b188fa91f3c
baddcbd47a3976be3b0a0b09a232dd5c0c06b5137dd2b64eb232d898659a574f47b6554f13797a3e
1fd6f955dfb6e377bcf3f492636997506c0ae02a38ae7d8f5ac9bad24a7af64f1f50dfc3272755de
303931ae7bdd0c65363b6f735d01939922a51d103a5497dc992aa68032e347f0e19af4c748f36021
7f6cdf3818ea58190210339cb2b7a43cc09f96fe0cd9b6b6cfe216743d993701002a08aa7ea18419
233ba6b24244ad8885d94c5e4ae4a8aa6054c6e4827b61d882c1b443f9b37fd0d34c592a12094273
ed022960936a24cd3c03126d37019120a824849f31903e554c835aca1e994f497cfb7285222495a2
938c98c941216f4c919c3b334eeffac0d5d63b1613883299af205f846b19b8fc40304011c7a0ace2
57dba6c1a207ca00783862d4c12201c27f660346842ebd6721a364e46b8738e8cf70e5c626176aec
285917fcf6a9b6095ffaaf21500f7cc7ffdeb36ecbbc02d0414ed1fedef74aa941065ce2eff8172b
35af3cff50b2f708fa9633fb54ed3d9eb8ed48aeb2574978e15abbc00c1d72334b9b81153b08eb2e
0ec96433d570eb560328cbf973962523c79045a395c73c0d0b6e68df2299f2ec2aff7f26ab2ce8b8
f8fa6f696180e6a6b0695f541df14ed03a94df60c4f22e41363ffcd1045b148d354754dc2c0c498c
0a6c8f9f08366c8e9b8b8d0b115842664691372a1fef36b2f596ef808001d6ca85f41b09df843167
d0aff021aabd08c930d1526c4eeb1812c4c34fd91dfcd170353ef4052c22d410c96d8a6b4d42c95f
6bd46e858a810bd495bfcbbf76e374991c2155324685660bc047901543e42ddfa62a6c815c8080a4
8352627ab47d14be6a296658295c8568ff42b18e79391888c26936938ed1882e308220473ac1b1b4
8fbeea4a091e06cad2e6e262ceeb8c9385995a75798bd672f97f3572a41d3a3caef0599b1ffeda7c
bf5a0beee41abe03893cedbe6bef93bb8ae754db2fce7f46c8d6639c5e9ed88429f8b59a5ff5a466
dc30a6c60f076b256e0745683b1428c1a936395e22441db01a035abb5430196b7ff24c88f793ac97
df1b1d4884fad1dde036c998ca8579c71dedabe519af73baf8ebbdb5e229af0847bc98bd8ebbf77e
4963715436aa8067527f628b8c97d927dc2027b0bc8aaa9e5e4643cc2a1fb38d7c56e69a089995d0
199a26fd7443bcc916ec305672befbb6e8d30ad1279884dd171429a5b663572f7fe84ea50082cc2c
22c9e1bf218ef1e223f30da7f3d3e7147addb96c3b8f96150be935b2eae508da4370fcfc5b837cab
83c36bebedfd90da6a668835d2b9489284dde67856f7029d45fe788e3ab8742d7475ee9da9ba0041
8049c1842ec9e88ac1a8c47740427c2ceb76fc8cfb9bb62aa6032c086eff8be69de656f0bf83f73e
a626a288c384064cc8293f05906df33f6d4698f631d92516cb4f87e9f8a527991944595060f845fa
7d256b08df2d096fae45edd7a35ae964e223ba69705bb8d53c0f849eb8423d57e369343a2f5bbaa1
d5d90dd0560380f001f146650ca9bdb4a1c621d59d949238be4038c552ffd6ed3ed927a79ac87e9a
d55aa42515233e35245ce58c1557d9e9398e68e3274b6b0b012fcde023230c380eef62ecd75f3345
fb18775bbbfc51f1c733f94595528dda20c779b21a0defd18d1d1cdddfb0d335c7955418c9f27335
b35b4783048854399c6d750bb77a64110b3d41768009cdc2ba552a8aaf08d56b751d2041d428068f
d7d05aba66307dd0962deedf721c447229589a495cd01a704cd2847d8fce488968f818251bac59ba
4e42aabcb53beee004d4235541f79c01504ca9755551d385e45d0cbaf1c9b257ea6ea33e7ce31859
03590af1e57c74569e83cab30a827c6b2dd2728ee165db9b318efc4cc335f51b1cfd3b1b2d03d35d
1fceae19ad607e415f7b3c11dcd8dfa782642c87da043bc7fa933e18a0e3f5e86722f532244df190
cf750ea356b4e9a21f728c80312f5dab6bc431621af7154ddd6dfe52bb3f5292f08c12a9c99b24f5
5a4387ec68370af3354e19aca88bf8ebddf2f7d9f8952649bf8887039f7be2eca453256d3297b275
b3104f22c65fbbdfb64509a4a1537bf0e82897b0a1a63093f33b85dead601e068b3dd25eedc66185
de4e12d705a7c6e80d20d9e63e6ceb064744fa47a969bfab4d16f5d1b5d09c75249dde068c455e5f
ec398b566c9899577885cb81736c13c8310f884679c2d15ebe1264982d9c987388bde4d25d2e5a85
be6a34c12050d2296ae87721ad74c7a8f90db484a3d39c632d010853cc719e6562285eb7a76f3841
90c010ca6f2f818fe4cf106fb1de76c03f1a300a396ef32df826ab92d40a098a2a050f5c42079aeb
27a62166b99df30baca8c41aafe2dc9d87bcf942d0cd2fbaeb1b8d1c35f7cfe132750c17e0de2eac
5a1d1864a549d534b73cddccdbd218ab5ec05b2d75e79ca989555e0be59b0f58be4669275d33d44a
498d7dc5aba518c43805e712deb68e9f9d9996f2c73535b84c48cc79d757a35899913d6c1caf3d3a
da7e462c78ac6f3a56e32c171ea4aa9378168f82b9b17dff061d04a6c48ba67890b53a2b8446cbe5
a25d80e6d4fe5752e39f78f7e99778ba1eb6d203b57b858937900f9c7353c02e323ac2452d0dba69
78388426ea5dbed5862711d69771b4faceda5cdb61b43b39ee58e3471f5277339910845b03ddce88
619e8aa88fe64647da647b1297a2ad98cb6fb925245d7978175e0a8be1cfa575a55f78587b06fc56
285d356aff488f9a72a77321d752ff5471adc40f5b2fedc4666a0e2ae2f9c9902eb254a2f511e5a0
a18c8b224e5bc9e927827b5e4aa7138661358321bd060f32c01de02550e751656c9610d1d8004697
fa45673892036220d2703371b2fbca99fbf0100bbdc99c0198ed6cfe9879175641dfd2c9fd6eff37
71126a5955b158e6cb97931ed070da49161ae28a48eb40ab1b5892e0c7b7087e0405dd7c05446172
97a3c3c57e66a651c0d85e158e35f51695f1ae51c0948f84b4f21e017cc8e779d59da38df91cf438
36982b0936d445f0456e46d5c819f1971c32de28a6d0d708cad84a63156d863d48c4a9666421499f
34620c5b9036c5047ebf001a872a96884787988381a0ea0ace24b777356fab88ba6c1c21fdb26dc7
448aa971f9bcb52270344f0a704f43e001b22ade009f010ad64756a7facb1939b7d8107b3bf3e4e2
722e8c0805fef723895f6fef1e8096e3023cbbb8aa37cd0ba4a9b9f41e23d2669ed2a42b1e99fafe
df027c60b3ed694f23c03f9919336bede2bc9e8460d263792dfa9279b3a11e59c824f1312b06f658
8e29e31a9605dae6aa61e01819a61ee9d7093df1fa7899642f0e62553bb94959941017e1a5d78dbc
1428562bff35c7fbebea96ad4c1499f2d7ee4c7569152247ee0ba528714e6c007f89277bd99d9b9e
f706e09ee4f6b3110d12daa91e131fe58134bd67bae889003ab4cfe4ce61e718779ef2c19c4ace9d
0efbc005ec287ce8fcc1bf1ba7abe9c458d11cc8ac0f96d9016568c54c177a33059ef88f2f31595d
20fcd5f02fedf5901a83ec5dddea98855515b189391c596b599ef3232b1d965d1cec93b680dea708
d567afec05fb381673b220c55b68a01badd4634e82ef2355b7d2ad7f4754881b3274dbeb1f61bf65
bbc609a00e0b62f7e6c22ae44b0d040834ceb114cee017e0733adffabd5cf49f265dc0aa2daad674
5f8d77fbf7765a415dcbc023af5fd3e9064243e29c0bac1dd91f11bc4248fbea78d7811b6166430f
a743db2b3fe5627c023a3442a56812e0431d2a6907471ef940693efa3e143ab8dd88ec06bfcca09b
80939ed718d490292854b654490dd2b5e830f9c070d7b9f4d281f4aebfa8485b641cf75a8144406e
04677fddff6903cce5180ce83afd571602c8c0903eef24d39f47491c01164b296de77ce42ad83738
1c2d6053901ae5910447894b34517d0501a05dd115b2707465417aac6b318512d5106d2786e1d19d
c35d724cabb6c9748f9fdb8ac46b21bfa0fc6912a809765fd997d3ce03bc4ce4162872143bc4fc39
faf9cabf3cdaec03fefae5f5314cf215f39ed5d2133bb86c1abdbe97c5c2a4aaa9ab1af507f55954
7fef910513377425b83ef4da726e0b630c942a1b57bfae2864ec08847da1ef431bf066dd1aed00ad
d9dcd230ca1d187cd07c49ea94441fb40a39b33b32035bcde4fcf3f03fadc1221e6861baec4a15a1
7f73b18ff9c4cb995025e0f5ca989a8fd3392cb69aaff3538bc28ad2b187c95d5bea7b736398d926
f13526500869c3eb6b78480f36c5287ee75bcf5c375aeab7f104506bd98b3c676caa4d95e630060a
aa742c8dd443237891c381702fb3e990b111a37ed64c5525f256d14c49e737a396e5e415b1141902
deb174da4ac4ef3f43ce8998cd2d281bb49bc328e96aad672c889dd0136ac9438f69aeebf86d9557
96488b182193ac9e9d8dbd91a963f9e9cdbdba9324308a990079fc9fab843b998786f89303673956
0c58a6ac63144905247c3db8da2536d41552756d89bebef2b8d7ced559b533961dadbe62787c6f8d
607ffa356044075f1b0c498351a1c9ced5bdfec274970b8b70100e51c0da4300b781cc2251225a86
b86e9bc47a2d3804f98560094c6a651a02d25ea80426d7cb9e1bb5d234b739a5f45ade42ef230eed
ddec500c9cb5e2c04cea5e807f69d8caa6ed45e94904d94f1ef74320d2e41439cb283b2b5b77dfd0
0537669412899a63515955cba469ae7bdf235769a3e26cbbd79e97491df5420ce5830e33e6ddc1e5
078b55fb488d15af02be73e758e539fe3e35f41b6b31997b90bd03cf34f3cc41b0c71d64f321cfce
787acbf0406a06ed772045b60670da63a70dd950666232393249be5e64bbcf4cc90dc6c365b3f196
4da8044ce5a61501a0f1bfb763c1e22ae172e51525e47aa147b231b713837a587a06246a3f7a5238
dd86d43da6eb5844b0ecd2235fdfa9059f43e1bd0f93aa9c630918bc58c7059c3a6a86ee93af6527
d95e24d724782064efea243c9c44a124d38a236f61673bc71e884daf9d3dab52b56e0148d4d700a4
da0fbcb61b38c4fd8cd3aaefe76ebaf792a5a20674080f37783875f41d8f5b7d8de95913b3fe112c
36a6a555b953de31ac3e96f1cf1571dad2598b6e02a9b909edbbd28e1630858de1544d08419aee63
d6e7d808227009b2bd4c34d085bda6ffb84880ec3b6ce8cb723db044c2cda2f2d3391ba5a7963edd
5e471ac5275d41c763e3d3a48f140a497bb12ed90b3dc5bd87a56b3982c7fd2a90e9e38155825116
177845b3c272b4ab01499c502651b45e60b73a4e15f4be532ecc375bd982bceb1f3ad737c74d6b7e
d239f39ce37be8a2f04a16915ad736df071261bcf878f50b1affcc213016e6ca46d00e26dd43ae9b
e7bf5f3cb46722ed4d56d3473d5b713eb91eee464d70d2bac799df18237cf843023de5f1faf1753f
c0821a89d38375090dcbc5e4ad3dfb858f74e7a2461b3fb8ad6b152f1757f3be13349b778cf2f08b
b72f47efcae249da21fba79542fe28cfa695cdd0060036c3d78b823cea1ac35fa188042ff1196fed
59c637b99346fd37dd182b9df1fd2a139818b3595ee0cc1903652ed536bb98ad7c69fe808fdd61a9
a2e9135e45bd2a4ff23ca921421ea420dbdfd64ace4027cb2b1e93845649093c317b7e931969c781
1104554676f7b3eb8be75fd0850206a39696653c1a3e42b2341b3c7f77e709af08ad045994095bcb
515fadaf8223e5c8ce04ec24b9551be1c4db34bd5e77ecc53fb384941d9da0031aa9d8ccf70ab6fd
4b0ca69d178fa67c586b86a0d6aba915cdb074f7f01e802c81d1f016dfcfb1599792ad85972200ee
a3bd791d2c710560ee3320dbb4174c4930cbaab93eb0429180c3297ee04188b1cde22a2f2faae68f
25c239bcee0acd52deee0529f48315fad3844641377adb4e4153de7265cef9c49cb21380fd009462
0989120754f3d62fba17c80d224ea1b46f3050e5aa5b5d636c127b919093d4e0bfa67e11759b68ef
e4a2bc707445a8a9ab2548374b3c200a4bc9ae463f55bffcdd4c638375026dbefe471e46b8fe7485
f9d7ee180d51bc68682cbbb877f96c08bdedade74f030219a5eab3a39f6bd51a8b294e8eab775caf
350485c5a380b4662705bb0cf71df7d9c95cf01d23f878ed8149b39400c3452f458f80c7acc8f8eb
4b03a9a5eed257cdfdd96bd225f518c9e1179e027d55914573267806dc159a3cc34ddd5d14912976
8591e893a19184263126928f8898a3810a56251568cce73d7233c6d3819111f0ead36ac0c6a753ac
abc54ae4280e346f758cd1271aadbaebcd6d242f156cf13d613bb560ac3fea6d07094a4dc9076ba4
0d52923f23d7c1819fb7ab84fda73c1431b352058a9bbf15884abc6131c25367ef5cf5d3d9676209
2f264e65a122dc35ab184f64fc1e94420414fbf4e78d494839394b3f290943ab416534329357bbd9
52f99c6dd21993753ec039c6f71e04e2a37f5e1c1161c3e34c68b705d51f13646cce2d63f4b55580
269881e06e522794197499245b523789653956474695c727f28a6697cf48a02ee43d46d61fead55b
d3e546f95bea107095daee619fb644b6c97ca17f568b412c28e8d6f746b68ff699d46ef10146c20a
0e6648603d1a87191930ddbda25974db129d3572537e9a9a4fd028ce532795baac5ab707956b8dd8
d8d73c3397d918257ad4837049fa15f832e1a88439cbd1a346
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 SSC_Copy_State <Virtual>  0
 HBW_Pick TASK  0 -1
 HBW_Copy_State <Virtual>  0
 PID_10 PID  0
 PID_11 PID  0
 hunt_exp_light PROGRAM  0 -1
 HBW_Home <Virtual>  0
 HBW_Pick_Sto <Virtual>  0
 test TASK  0 -1
 HBW_Pickup_ST PROGRAM  0 -1
 HWB_Extend_Arm <Virtual>  0
 HBW_Retract_Arm <Virtual>  0
 HWB_PickUp TASK  0 -1
 HBW_HTO1POS <Virtual>  0
 HBW_Left_1Block <Virtual>  0
 HBW_HomeTo2_Col <Virtual>  0
 HWB_HomeTo3_Col <Virtual>  0
 HWB_HomeTo2_Row <Virtual>  0
 HWB_HomeTo3_Row <Virtual>  0
 HWB_HomeTo1_Col <Virtual>  0
 HBW_move_left_1 <Virtual>  0
 HWB_Home_to_11 <Virtual>  0
 HWB_11_DropOff <Virtual>  0
 HBW_Pickup <Virtual>  0
 HBW_PickUp_R1 <Virtual>  0
 HBW_Send_VGR <Virtual>  0
 HBW_PickUp_VGR <Virtual>  0
 HBW_Return_VGR <Virtual>  0
 HBW_MotorsOff <Virtual>  0
 HBW_ConvTo11 <Virtual>  0
 HBW_Return_Top <Virtual>  0
 HBW_MV_11_12 <Virtual>  0
 HBW_Conv_12 <Virtual>  0
 HBW_Conv_12_Lat <Virtual>  0
 HBW_RETRACT_13 <Virtual>  0
 HBW_Retract_23 <Virtual>  0
 HBW_Conv13_Lat <Virtual>  0
 HBW_Conv_2Row <Virtual>  0
 HBW_PickUp_R2 <Virtual>  0
 HBW_Conv11_Lat <Virtual>  0
 HBW_Retract_12 <Virtual>  0
 HBW_Shift_C1C2 <Virtual>  0
 HBW_Move_R1_R2 <Virtual>  0
 HBW_Retract_22 <Virtual>  0
 HBW_Retract_21 <Virtual>  0
 HBW_Retract_31 <Virtual>  0
 HBW_Move_R2_R3 <Virtual>  0
 HBW_PickUp_R3 <Virtual>  0
 HBW_Conv_3Row <Virtual>  0
 HBW_Retract_32 <Virtual>  0
 HBW_Retract_33 <Virtual>  0
 HBW_Retract_Done PROGRAM  0 -1
 HBW_Retract_DN <Virtual>  0
 oneOperation <Virtual>  0
 HBW_Check1Puck <Virtual>  0
 HBW_OneTime_R1 <Virtual>  0
 HBW_OneTime_R2 <Virtual>  0
 HBW_OneTime_R3 <Virtual>  0
 HBW_OneTime_C1 <Virtual>  0
 HBW_OneTime_C2 <Virtual>  0
 HBW_OneTime_C3 <Virtual>  0
 HBW_OneDropR3 <Virtual>  0
 HBW_OneDropR2 <Virtual>  0
 HBW_OneDropR1 <Virtual>  0
 VGR_Done <Virtual>  0
 HBW_Return11 <Virtual>  0
 HBW_Return12 <Virtual>  0
 HBW_Return13 <Virtual>  0
 HBW_Return21 <Virtual>  0
 HBW_Return22 <Virtual>  0
 HBW_Return23 <Virtual>  0
#END

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"VGR Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC410 C410 1 0x0 MC409 C409 1 0x0 MC412 Y28 1 0x0 MC412 MC450 1 0x0 MC411 C411 1 0x0 MC408 C408 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC413 Y29 1 0x0 MC413 MC451 1 0x0 X27 MI200 1 0x0 X26 MI454 1 0x0 X25 MI453 1 0x0 MC452 C452 1"

// Rung VGR_Copy_State#2
// Offset 33
NOP

// Rung VGR_Copy_State#3
// Offset 34
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
STR ST1
OUT Y29

// Rung VGR_Suction#2
// Offset 2
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC800 Y41 1 0x0 Y41 MI801 1 0x0 MC802 Y43 1 0x0 Y43 MI803 1 0x0 MC804 C804 1 0x0 MC805 C805 1 0x0 MC806 Y44 1 0x0 MC807 Y20 1 0x0 MC808 C811 1 0x0 MC809 C809 1 0x0 MC810 C810 1 0x0 MC812 C812 1 0x0 MC813 C813 1 0x0 MC814 C814 1 0x0 MC816 Y45 1 0x0 MC817 Y46 1 0x0 MC818 Y21 1 0x0 MC819 Y20 1 0x0 MC820 Y44 1 0x0 MC822 Y52 1"

// Rung MPO_Copy_State#2
// Offset 45
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC800 C1616 1 0x0 MC801 C1617 1 0x0 MC802 C1618 1 0x0 MC803 C1619 1 0x0 MC804 C1620 1 0x0 Y31 MI800 1 0x0 MC850 C1621 1 0x0 MC851 C1626 1 0x0 MC111 C1666 1"

// Rung SLD_Copy_State#2
// Offset 23
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"SSC Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC606 C1200 1 0x0 MC607 C1201 1 0x0 MC608 C1202 1 0x0 MC609 C1203 1 0x0 MC615 C1215 1 0x0 MC616 C1216 1 0x0 MC617 C1217 1 0x0 MC618 C1218 1 0x0 MC619 C1219 1 0x0 MC620 C1220 1"

// Rung SSC_Copy_State#2
// Offset 25
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block HBW_Home
$LGCMOD HBW_Home

// Rung HBW_Home#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Home#2
// Offset 8
STRN C215
ANDN X0
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 60 60
OUT Y51

// Rung HBW_Home#3
// Offset 26
STRN C215
ANDN X3
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5

// Rung HBW_Home#4
// Offset 43
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y76

// Rung HBW_Home#5
// Offset 64
NOP

// Rung HBW_Home#6
// Offset 65
RET

// End of Code Block HBW_Home
$LGCEND HBW_Home

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 Y40 1 0x0 Y80 MHR102 1 0x0 MC101 C205 1 0x0 MC102 C206 1 0x0 MC103 C207 1 0x0 MC104 C208 1 0x0 MC105 C209 1 0x0 MC106 C210 1 0x0 MC107 C211 1 0x0 MC108 C212 1 0x0 MC109 C213 1 0x0 MC110 C214 1 0x0 MC111 C215 1 0x0 MC112 C216 1 0x0 MC113 C300 1 0x0 MC114 C217 1 0x0 MC115 C218 1 0x0 MC116 C219 1 0x0 MC117 C220 1 0x0 MC118 C221 1 0x0 MC119 C222 1 0x0 MC120 C223 1 0x0 MC121 C224 1 0x0 MC122 C225 1 0x0 MC123 C226 1 0x0 X2 MI101 1 0x0 X10 MI102 1 0x0 X11 MI103 1 0x0 X3 MI104 1 0x0 X0 MI105 1 0x0 X6 MI106 1 0x0 X7 MI107 1 0x0 X8 MI108 1 0x0 X9 MI109 1 0x0 $HBW_Encoder_X.Acc MHR1 1 0x0 $HBW_Encoder_Z.Acc MHR2 1"

// Rung HBW_Copy_State#2
// Offset 77
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block HBW_HomeTo2_Col
$LGCMOD HBW_HomeTo2_Col

// Rung HBW_HomeTo2_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_HomeTo2_Col#2
// Offset 17
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_HomeTo2_Col#3
// Offset 22
NOP

// Rung HBW_HomeTo2_Col#4
// Offset 23
NOP

// Rung HBW_HomeTo2_Col#5
// Offset 24
NOP

// Rung HBW_HomeTo2_Col#6
// Offset 25
RET

// End of Code Block HBW_HomeTo2_Col
$LGCEND HBW_HomeTo2_Col

// Beginning of Code Block HWB_HomeTo1_Col
$LGCMOD HWB_HomeTo1_Col

// Rung HWB_HomeTo1_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HWB_HomeTo1_Col#2
// Offset 17
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_HomeTo1_Col#3
// Offset 22
NOP

// Rung HWB_HomeTo1_Col#4
// Offset 23
NOP

// Rung HWB_HomeTo1_Col#5
// Offset 24
RET

// End of Code Block HWB_HomeTo1_Col
$LGCEND HWB_HomeTo1_Col

// Beginning of Code Block HWB_Home_to_11
$LGCMOD HWB_Home_to_11

// Rung HWB_Home_to_11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HWB_Home_to_11#2
// Offset 22
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_Home_to_11#3
// Offset 27
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HWB_Home_to_11#4
// Offset 49
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_Home_to_11#5
// Offset 54
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HWB_Home_to_11#6
// Offset 73
NOP

// Rung HWB_Home_to_11#7
// Offset 74
NOP

// Rung HWB_Home_to_11#8
// Offset 75
RET

// End of Code Block HWB_Home_to_11
$LGCEND HWB_Home_to_11

// Beginning of Code Block HWB_11_DropOff
$LGCMOD HWB_11_DropOff

// Rung HWB_11_DropOff#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HWB_11_DropOff#2
// Offset 8
STRGE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_11_DropOff#3
// Offset 13
STRN C215
ANDN C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51

// Rung HWB_11_DropOff#4
// Offset 31
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y4
AND ST2
OUT Y5

// Rung HWB_11_DropOff#5
// Offset 51
STRGE 2730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_11_DropOff#6
// Offset 56
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 60 60
OUT Y7

// Rung HWB_11_DropOff#7
// Offset 73
RET

// End of Code Block HWB_11_DropOff
$LGCEND HWB_11_DropOff

// Beginning of Code Block HBW_PickUp_R1
$LGCMOD HBW_PickUp_R1

// Rung HBW_PickUp_R1#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R1#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R1#3
// Offset 41
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R1#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R1#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_PickUp_R1#6
// Offset 69
NOP

// Rung HBW_PickUp_R1#7
// Offset 70
NOP

// Rung HBW_PickUp_R1#8
// Offset 71
NOP

// Rung HBW_PickUp_R1#9
// Offset 72
NOP

// Rung HBW_PickUp_R1#10
// Offset 73
RET

// End of Code Block HBW_PickUp_R1
$LGCEND HBW_PickUp_R1

// Beginning of Code Block HBW_Send_VGR
$LGCMOD HBW_Send_VGR

// Rung HBW_Send_VGR#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Send_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_Send_VGR#3
// Offset 37
STRN C215
AND X2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y48
AND ST2
OUT Y49

// Rung HBW_Send_VGR#4
// Offset 56
NOP

// Rung HBW_Send_VGR#5
// Offset 57
NOP

// Rung HBW_Send_VGR#6
// Offset 58
RET

// End of Code Block HBW_Send_VGR
$LGCEND HBW_Send_VGR

// Beginning of Code Block HBW_PickUp_VGR
$LGCMOD HBW_PickUp_VGR

// Rung HBW_PickUp_VGR#1
// Offset 0
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_PickUp_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_PickUp_VGR#3
// Offset 37
STRN C215
AND X11
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_PickUp_VGR#4
// Offset 56
NOP

// Rung HBW_PickUp_VGR#5
// Offset 57
NOP

// Rung HBW_PickUp_VGR#6
// Offset 58
RET

// End of Code Block HBW_PickUp_VGR
$LGCEND HBW_PickUp_VGR

// Beginning of Code Block HBW_Return_VGR
$LGCMOD HBW_Return_VGR

// Rung HBW_Return_VGR#1
// Offset 0
STRN C215
ANDN C251
DUPBOOL
AND C299
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y6

// Rung HBW_Return_VGR#2
// Offset 22
STRN C215
AND X1
DUPBOOL
AND C299
AND C251
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
POPBOOL
AND ST2
OUT Y48

// Rung HBW_Return_VGR#3
// Offset 45
STRN C215
DUPBOOL
AND C299
ANDN X1
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_Return_VGR#4
// Offset 68
STRLE 2550 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_VGR#5
// Offset 73
NOP

// Rung HBW_Return_VGR#6
// Offset 74
NOP

// Rung HBW_Return_VGR#7
// Offset 75
RET

// End of Code Block HBW_Return_VGR
$LGCEND HBW_Return_VGR

// Beginning of Code Block HBW_MotorsOff
$LGCMOD HBW_MotorsOff

// Rung HBW_MotorsOff#1
// Offset 0
STRN C215
ANDN ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_MotorsOff#2
// Offset 18
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_MotorsOff#3
// Offset 36
STRN C215
AND ST2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
OUT Y48

// Rung HBW_MotorsOff#4
// Offset 54
NOP

// Rung HBW_MotorsOff#5
// Offset 55
NOP

// Rung HBW_MotorsOff#6
// Offset 56
NOP

// Rung HBW_MotorsOff#7
// Offset 57
RET

// End of Code Block HBW_MotorsOff
$LGCEND HBW_MotorsOff

// Beginning of Code Block HBW_ConvTo11
$LGCMOD HBW_ConvTo11

// Rung HBW_ConvTo11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_ConvTo11#2
// Offset 22
NOP

// Rung HBW_ConvTo11#3
// Offset 23
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_ConvTo11#4
// Offset 28
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_ConvTo11#5
// Offset 50
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_ConvTo11#6
// Offset 55
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_ConvTo11#7
// Offset 74
NOP

// Rung HBW_ConvTo11#8
// Offset 75
NOP

// Rung HBW_ConvTo11#9
// Offset 76
RET

// End of Code Block HBW_ConvTo11
$LGCEND HBW_ConvTo11

// Beginning of Code Block HBW_Return_Top
$LGCMOD HBW_Return_Top

// Rung HBW_Return_Top#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Return_Top#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HBW_Return_Top#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_Top#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_Return_Top#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return_Top#6
// Offset 69
NOP

// Rung HBW_Return_Top#7
// Offset 70
NOP

// Rung HBW_Return_Top#8
// Offset 71
RET

// End of Code Block HBW_Return_Top
$LGCEND HBW_Return_Top

// Beginning of Code Block HBW_MV_11_12
$LGCMOD HBW_MV_11_12

// Rung HBW_MV_11_12#1
// Offset 0
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_MV_11_12#2
// Offset 21
NOP

// Rung HBW_MV_11_12#3
// Offset 22
NOP

// Rung HBW_MV_11_12#4
// Offset 23
NOP

// Rung HBW_MV_11_12#5
// Offset 24
RET

// End of Code Block HBW_MV_11_12
$LGCEND HBW_MV_11_12

// Beginning of Code Block HBW_Conv_12
$LGCMOD HBW_Conv_12

// Rung HBW_Conv_12#1
// Offset 0
NOP

// Rung HBW_Conv_12#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_12#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Conv_12#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 80
OUT C251

// Rung HBW_Conv_12#5
// Offset 45
NOP

// Rung HBW_Conv_12#6
// Offset 46
RET

// End of Code Block HBW_Conv_12
$LGCEND HBW_Conv_12

// Beginning of Code Block HBW_Conv_12_Lat
$LGCMOD HBW_Conv_12_Lat

// Rung HBW_Conv_12_Lat#1
// Offset 0
NOP

// Rung HBW_Conv_12_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv_12_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv_12_Lat#4
// Offset 42
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv_12_Lat#5
// Offset 47
NOP

// Rung HBW_Conv_12_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv_12_Lat
$LGCEND HBW_Conv_12_Lat

// Beginning of Code Block HBW_RETRACT_13
$LGCMOD HBW_RETRACT_13

// Rung HBW_RETRACT_13#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_RETRACT_13#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_RETRACT_13#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_RETRACT_13#4
// Offset 46
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_RETRACT_13#5
// Offset 68
STRGE 7650 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_RETRACT_13#6
// Offset 73
RET

// End of Code Block HBW_RETRACT_13
$LGCEND HBW_RETRACT_13

// Beginning of Code Block HBW_Retract_23
$LGCMOD HBW_Retract_23

// Rung HBW_Retract_23#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_23#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_23#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_23#4
// Offset 46
STRN C215
AND ST2
OUT Y51
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_Retract_23#5
// Offset 65
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_23#6
// Offset 70
RET

// End of Code Block HBW_Retract_23
$LGCEND HBW_Retract_23

// Beginning of Code Block HBW_Conv13_Lat
$LGCMOD HBW_Conv13_Lat

// Rung HBW_Conv13_Lat#1
// Offset 0
NOP

// Rung HBW_Conv13_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv13_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv13_Lat#4
// Offset 42
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv13_Lat#5
// Offset 47
NOP

// Rung HBW_Conv13_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv13_Lat
$LGCEND HBW_Conv13_Lat

// Beginning of Code Block HBW_Conv_2Row
$LGCMOD HBW_Conv_2Row

// Rung HBW_Conv_2Row#1
// Offset 0
NOP

// Rung HBW_Conv_2Row#2
// Offset 1
NOP

// Rung HBW_Conv_2Row#3
// Offset 2
NOP

// Rung HBW_Conv_2Row#4
// Offset 3
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_2Row#5
// Offset 22
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Conv_2Row#6
// Offset 42
STRGE $HBW_Encoder_Z.Acc 1380
OUT C251

// Rung HBW_Conv_2Row#7
// Offset 47
NOP

// Rung HBW_Conv_2Row#8
// Offset 48
RET

// End of Code Block HBW_Conv_2Row
$LGCEND HBW_Conv_2Row

// Beginning of Code Block HBW_PickUp_R2
$LGCMOD HBW_PickUp_R2

// Rung HBW_PickUp_R2#1
// Offset 0
NOP

// Rung HBW_PickUp_R2#2
// Offset 1
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R2#3
// Offset 20
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R2#4
// Offset 38
NOP

// Rung HBW_PickUp_R2#5
// Offset 39
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R2#6
// Offset 61
STRLE 1400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R2#7
// Offset 66
NOP

// Rung HBW_PickUp_R2#8
// Offset 67
NOP

// Rung HBW_PickUp_R2#9
// Offset 68
NOP

// Rung HBW_PickUp_R2#10
// Offset 69
RET

// End of Code Block HBW_PickUp_R2
$LGCEND HBW_PickUp_R2

// Beginning of Code Block HBW_Conv11_Lat
$LGCMOD HBW_Conv11_Lat

// Rung HBW_Conv11_Lat#1
// Offset 0
NOP

// Rung HBW_Conv11_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv11_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv11_Lat#4
// Offset 42
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv11_Lat#5
// Offset 47
NOP

// Rung HBW_Conv11_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv11_Lat
$LGCEND HBW_Conv11_Lat

// Beginning of Code Block HBW_Retract_12
$LGCMOD HBW_Retract_12

// Rung HBW_Retract_12#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_12#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_12#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_12#4
// Offset 46
RET

// End of Code Block HBW_Retract_12
$LGCEND HBW_Retract_12

// Beginning of Code Block HBW_Shift_C1C2
$LGCMOD HBW_Shift_C1C2

// Rung HBW_Shift_C1C2#1
// Offset 0
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Shift_C1C2#2
// Offset 5
NOP

// Rung HBW_Shift_C1C2#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Shift_C1C2#4
// Offset 25
NOP

// Rung HBW_Shift_C1C2#5
// Offset 26
STRN C215
AND ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_Shift_C1C2#6
// Offset 44
NOP

// Rung HBW_Shift_C1C2#7
// Offset 45
RET

// End of Code Block HBW_Shift_C1C2
$LGCEND HBW_Shift_C1C2

// Beginning of Code Block HBW_Move_R1_R2
$LGCMOD HBW_Move_R1_R2

// Rung HBW_Move_R1_R2#1
// Offset 0
STRGE 1760 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Move_R1_R2#2
// Offset 5
NOP

// Rung HBW_Move_R1_R2#3
// Offset 6
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Move_R1_R2#4
// Offset 25
NOP

// Rung HBW_Move_R1_R2#5
// Offset 26
NOP

// Rung HBW_Move_R1_R2#6
// Offset 27
RET

// End of Code Block HBW_Move_R1_R2
$LGCEND HBW_Move_R1_R2

// Beginning of Code Block HBW_Retract_22
$LGCMOD HBW_Retract_22

// Rung HBW_Retract_22#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_22#2
// Offset 22
STRGE 1730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_22#3
// Offset 27
NOP

// Rung HBW_Retract_22#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_22#5
// Offset 47
STRLE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_22#6
// Offset 52
STRN C215
AND C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
AND ST2
OUT Y50

// Rung HBW_Retract_22#7
// Offset 72
NOP

// Rung HBW_Retract_22#8
// Offset 73
RET

// End of Code Block HBW_Retract_22
$LGCEND HBW_Retract_22

// Beginning of Code Block HBW_Retract_21
$LGCMOD HBW_Retract_21

// Rung HBW_Retract_21#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_21#2
// Offset 22
STRGE 1730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_21#3
// Offset 27
NOP

// Rung HBW_Retract_21#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_21#5
// Offset 47
STRLE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_21#6
// Offset 52
STRN C215
AND C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
AND ST2
OUT Y50

// Rung HBW_Retract_21#7
// Offset 72
NOP

// Rung HBW_Retract_21#8
// Offset 73
RET

// End of Code Block HBW_Retract_21
$LGCEND HBW_Retract_21

// Beginning of Code Block HBW_Retract_31
$LGCMOD HBW_Retract_31

// Rung HBW_Retract_31#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_31#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_31#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_31#4
// Offset 46
STRN C215
AND ST2
OUT Y51
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_Retract_31#5
// Offset 65
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_31#6
// Offset 70
RET

// End of Code Block HBW_Retract_31
$LGCEND HBW_Retract_31

// Beginning of Code Block HBW_Move_R2_R3
$LGCMOD HBW_Move_R2_R3

// Rung HBW_Move_R2_R3#1
// Offset 0
STRGE 3600 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Move_R2_R3#2
// Offset 5
NOP

// Rung HBW_Move_R2_R3#3
// Offset 6
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Move_R2_R3#4
// Offset 25
NOP

// Rung HBW_Move_R2_R3#5
// Offset 26
NOP

// Rung HBW_Move_R2_R3#6
// Offset 27
RET

// End of Code Block HBW_Move_R2_R3
$LGCEND HBW_Move_R2_R3

// Beginning of Code Block HBW_PickUp_R3
$LGCMOD HBW_PickUp_R3

// Rung HBW_PickUp_R3#1
// Offset 0
NOP

// Rung HBW_PickUp_R3#2
// Offset 1
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R3#3
// Offset 20
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R3#4
// Offset 38
STRLE 2800 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R3#5
// Offset 43
NOP

// Rung HBW_PickUp_R3#6
// Offset 44
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R3#7
// Offset 66
NOP

// Rung HBW_PickUp_R3#8
// Offset 67
NOP

// Rung HBW_PickUp_R3#9
// Offset 68
NOP

// Rung HBW_PickUp_R3#10
// Offset 69
RET

// End of Code Block HBW_PickUp_R3
$LGCEND HBW_PickUp_R3

// Beginning of Code Block HBW_Conv_3Row
$LGCMOD HBW_Conv_3Row

// Rung HBW_Conv_3Row#1
// Offset 0
NOP

// Rung HBW_Conv_3Row#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_3Row#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Conv_3Row#4
// Offset 40
STRLE $HBW_Encoder_Z.Acc 2730
OUT C251

// Rung HBW_Conv_3Row#5
// Offset 45
NOP

// Rung HBW_Conv_3Row#6
// Offset 46
RET

// End of Code Block HBW_Conv_3Row
$LGCEND HBW_Conv_3Row

// Beginning of Code Block HBW_Retract_32
$LGCMOD HBW_Retract_32

// Rung HBW_Retract_32#1
// Offset 0
STRGE 3300 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_32#2
// Offset 5
NOP

// Rung HBW_Retract_32#3
// Offset 6
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_32#4
// Offset 28
NOP

// Rung HBW_Retract_32#5
// Offset 29
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_32#6
// Offset 48
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_32#7
// Offset 53
NOP

// Rung HBW_Retract_32#8
// Offset 54
STRN C215
AND C250
DUPBOOL
ANDN C251
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_Retract_32#9
// Offset 77
NOP

// Rung HBW_Retract_32#10
// Offset 78
RET

// End of Code Block HBW_Retract_32
$LGCEND HBW_Retract_32

// Beginning of Code Block HBW_Retract_33
$LGCMOD HBW_Retract_33

// Rung HBW_Retract_33#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_33#2
// Offset 22
STRGE 3300 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_33#3
// Offset 27
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_33#4
// Offset 46
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_33#5
// Offset 51
NOP

// Rung HBW_Retract_33#6
// Offset 52
STRN C215
AND C250
DUPBOOL
ANDN C251
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_Retract_33#7
// Offset 75
NOP

// Rung HBW_Retract_33#8
// Offset 76
RET

// End of Code Block HBW_Retract_33
$LGCEND HBW_Retract_33

// Beginning of Code Block HBW_Retract_DN
$LGCMOD HBW_Retract_DN

// Rung HBW_Retract_DN#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_DN#2
// Offset 22
STRGE 3200 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_DN#3
// Offset 27
NOP

// Rung HBW_Retract_DN#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_DN#5
// Offset 47
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_DN#6
// Offset 52
STRN C215
AND C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
AND ST2
OUT Y50

// Rung HBW_Retract_DN#7
// Offset 72
NOP

// Rung HBW_Retract_DN#8
// Offset 73
RET

// End of Code Block HBW_Retract_DN
$LGCEND HBW_Retract_DN

// Beginning of Code Block oneOperation
$LGCMOD oneOperation

// Rung oneOperation#1
// Offset 0
NOP

// Rung oneOperation#2
// Offset 1
NOP

// Rung oneOperation#3
// Offset 2
RET

// End of Code Block oneOperation
$LGCEND oneOperation

// Beginning of Code Block HBW_Check1Puck
$LGCMOD HBW_Check1Puck

// Rung HBW_Check1Puck#1
// Offset 0
STR ST1
MOVE 0 C301

// Rung HBW_Check1Puck#2
// Offset 3
STR C217
MOVE 1 C301
MOVE 1 N2

// Rung HBW_Check1Puck#3
// Offset 8
STR C218
MOVE 1 C301
MOVE 2 N2

// Rung HBW_Check1Puck#4
// Offset 13
STR C219
MOVE 1 C301
MOVE 3 N2

// Rung HBW_Check1Puck#5
// Offset 18
STR C220
MOVE 1 C301
MOVE 4 N2

// Rung HBW_Check1Puck#6
// Offset 23
STR C221
MOVE 1 C301
MOVE 5 N2

// Rung HBW_Check1Puck#7
// Offset 28
STR C222
MOVE 1 C301
MOVE 6 N2

// Rung HBW_Check1Puck#8
// Offset 33
STR C223
MOVE 1 C301
MOVE 7 N2

// Rung HBW_Check1Puck#9
// Offset 38
STR C224
MOVE 1 C301
MOVE 8 N2

// Rung HBW_Check1Puck#10
// Offset 43
STR C225
MOVE 1 C301
MOVE 9 N2

// Rung HBW_Check1Puck#11
// Offset 48
RET

// End of Code Block HBW_Check1Puck
$LGCEND HBW_Check1Puck

// Beginning of Code Block HBW_OneTime_R1
$LGCMOD HBW_OneTime_R1

// Rung HBW_OneTime_R1#1
// Offset 0
STRGE 375 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneTime_R1#2
// Offset 5
NOP

// Rung HBW_OneTime_R1#3
// Offset 6
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_OneTime_R1#4
// Offset 25
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneTime_R1#5
// Offset 45
NOP

// Rung HBW_OneTime_R1#6
// Offset 46
RET

// End of Code Block HBW_OneTime_R1
$LGCEND HBW_OneTime_R1

// Beginning of Code Block HBW_OneTime_R2
$LGCMOD HBW_OneTime_R2

// Rung HBW_OneTime_R2#1
// Offset 0
STRGE 1650 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneTime_R2#2
// Offset 5
NOP

// Rung HBW_OneTime_R2#3
// Offset 6
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_OneTime_R2#4
// Offset 25
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneTime_R2#5
// Offset 45
NOP

// Rung HBW_OneTime_R2#6
// Offset 46
RET

// End of Code Block HBW_OneTime_R2
$LGCEND HBW_OneTime_R2

// Beginning of Code Block HBW_OneTime_R3
$LGCMOD HBW_OneTime_R3

// Rung HBW_OneTime_R3#1
// Offset 0
STRGE 3200 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneTime_R3#2
// Offset 5
NOP

// Rung HBW_OneTime_R3#3
// Offset 6
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_OneTime_R3#4
// Offset 25
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneTime_R3#5
// Offset 45
NOP

// Rung HBW_OneTime_R3#6
// Offset 46
RET

// End of Code Block HBW_OneTime_R3
$LGCEND HBW_OneTime_R3

// Beginning of Code Block HBW_OneTime_C1
$LGCMOD HBW_OneTime_C1

// Rung HBW_OneTime_C1#1
// Offset 0
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_OneTime_C1#2
// Offset 5
NOP

// Rung HBW_OneTime_C1#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_OneTime_C1#4
// Offset 25
NOP

// Rung HBW_OneTime_C1#5
// Offset 26
RET

// End of Code Block HBW_OneTime_C1
$LGCEND HBW_OneTime_C1

// Beginning of Code Block HBW_OneTime_C2
$LGCMOD HBW_OneTime_C2

// Rung HBW_OneTime_C2#1
// Offset 0
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_OneTime_C2#2
// Offset 5
NOP

// Rung HBW_OneTime_C2#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_OneTime_C2#4
// Offset 25
NOP

// Rung HBW_OneTime_C2#5
// Offset 26
RET

// End of Code Block HBW_OneTime_C2
$LGCEND HBW_OneTime_C2

// Beginning of Code Block HBW_OneTime_C3
$LGCMOD HBW_OneTime_C3

// Rung HBW_OneTime_C3#1
// Offset 0
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_OneTime_C3#2
// Offset 5
NOP

// Rung HBW_OneTime_C3#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_OneTime_C3#4
// Offset 25
NOP

// Rung HBW_OneTime_C3#5
// Offset 26
RET

// End of Code Block HBW_OneTime_C3
$LGCEND HBW_OneTime_C3

// Beginning of Code Block HBW_OneDropR3
$LGCMOD HBW_OneDropR3

// Rung HBW_OneDropR3#1
// Offset 0
NOP

// Rung HBW_OneDropR3#2
// Offset 1
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_OneDropR3#3
// Offset 23
STRGE 3300 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneDropR3#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneDropR3#5
// Offset 47
NOP

// Rung HBW_OneDropR3#6
// Offset 48
NOP

// Rung HBW_OneDropR3#7
// Offset 49
RET

// End of Code Block HBW_OneDropR3
$LGCEND HBW_OneDropR3

// Beginning of Code Block HBW_OneDropR2
$LGCMOD HBW_OneDropR2

// Rung HBW_OneDropR2#1
// Offset 0
NOP

// Rung HBW_OneDropR2#2
// Offset 1
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_OneDropR2#3
// Offset 23
STRGE 1730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneDropR2#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneDropR2#5
// Offset 47
NOP

// Rung HBW_OneDropR2#6
// Offset 48
NOP

// Rung HBW_OneDropR2#7
// Offset 49
RET

// End of Code Block HBW_OneDropR2
$LGCEND HBW_OneDropR2

// Beginning of Code Block HBW_OneDropR1
$LGCMOD HBW_OneDropR1

// Rung HBW_OneDropR1#1
// Offset 0
NOP

// Rung HBW_OneDropR1#2
// Offset 1
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_OneDropR1#3
// Offset 23
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneDropR1#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneDropR1#5
// Offset 47
NOP

// Rung HBW_OneDropR1#6
// Offset 48
NOP

// Rung HBW_OneDropR1#7
// Offset 49
RET

// End of Code Block HBW_OneDropR1
$LGCEND HBW_OneDropR1

// Beginning of Code Block VGR_Done
$LGCMOD VGR_Done

// Rung VGR_Done#1
// Offset 0
STR ST1
MOVE 0 C700

// Rung VGR_Done#2
// Offset 3
NOP

// Rung VGR_Done#3
// Offset 4
RET

// End of Code Block VGR_Done
$LGCEND VGR_Done

// Beginning of Code Block HBW_Return11
$LGCMOD HBW_Return11

// Rung HBW_Return11#1
// Offset 0
NOP

// Rung HBW_Return11#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Return11#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Return11#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 80
OUT C251

// Rung HBW_Return11#5
// Offset 45
NOP

// Rung HBW_Return11#6
// Offset 46
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Return11#7
// Offset 68
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return11#8
// Offset 73
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Return11#9
// Offset 92
NOP

// Rung HBW_Return11#10
// Offset 93
RET

// End of Code Block HBW_Return11
$LGCEND HBW_Return11

// Beginning of Code Block HBW_Return12
$LGCMOD HBW_Return12

// Rung HBW_Return12#1
// Offset 0
NOP

// Rung HBW_Return12#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Return12#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Return12#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 80
OUT C251

// Rung HBW_Return12#5
// Offset 45
NOP

// Rung HBW_Return12#6
// Offset 46
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Return12#7
// Offset 68
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return12#8
// Offset 73
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Return12#9
// Offset 92
NOP

// Rung HBW_Return12#10
// Offset 93
RET

// End of Code Block HBW_Return12
$LGCEND HBW_Return12

// Beginning of Code Block HBW_Return13
$LGCMOD HBW_Return13

// Rung HBW_Return13#1
// Offset 0
NOP

// Rung HBW_Return13#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Return13#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Return13#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 80
OUT C251

// Rung HBW_Return13#5
// Offset 45
NOP

// Rung HBW_Return13#6
// Offset 46
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Return13#7
// Offset 68
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return13#8
// Offset 73
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Return13#9
// Offset 92
NOP

// Rung HBW_Return13#10
// Offset 93
RET

// End of Code Block HBW_Return13
$LGCEND HBW_Return13

// Beginning of Code Block HBW_Return21
$LGCMOD HBW_Return21

// Rung HBW_Return21#1
// Offset 0
NOP

// Rung HBW_Return21#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Return21#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Return21#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 1380
OUT C251

// Rung HBW_Return21#5
// Offset 45
NOP

// Rung HBW_Return21#6
// Offset 46
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Return21#7
// Offset 68
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return21#8
// Offset 73
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Return21#9
// Offset 92
NOP

// Rung HBW_Return21#10
// Offset 93
RET

// End of Code Block HBW_Return21
$LGCEND HBW_Return21

// Beginning of Code Block HBW_Return22
$LGCMOD HBW_Return22

// Rung HBW_Return22#1
// Offset 0
NOP

// Rung HBW_Return22#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Return22#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Return22#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 1380
OUT C251

// Rung HBW_Return22#5
// Offset 45
NOP

// Rung HBW_Return22#6
// Offset 46
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Return22#7
// Offset 68
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return22#8
// Offset 73
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Return22#9
// Offset 92
NOP

// Rung HBW_Return22#10
// Offset 93
RET

// End of Code Block HBW_Return22
$LGCEND HBW_Return22

// Beginning of Code Block HBW_Return23
$LGCMOD HBW_Return23

// Rung HBW_Return23#1
// Offset 0
NOP

// Rung HBW_Return23#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Return23#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Return23#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 1380
OUT C251

// Rung HBW_Return23#5
// Offset 45
NOP

// Rung HBW_Return23#6
// Offset 46
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Return23#7
// Offset 68
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return23#8
// Offset 73
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Return23#9
// Offset 92
NOP

// Rung HBW_Return23#10
// Offset 93
RET

// End of Code Block HBW_Return23
$LGCEND HBW_Return23

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#2
// Offset 3
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#3
// Offset 6
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#4
// Offset 9
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#5
// Offset 12
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// Rung $Main#6
// Offset 15
#BEGIN FMT_COMMENT 
"Hunter Demo Light<br>"
#END

STR ST1
RUN hunt_exp_light

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
SG HBW_Program.S0

// Rung HBW_Program#2
// Offset 2
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#3
// Offset 10
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#4
// Offset 12
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#5
// Offset 14
STR ST1
MOVE 0 C298

// Rung HBW_Program#6
// Offset 17
STR ST1
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#7
// Offset 25
STR ST1
CALL HBW_Check1Puck 0x1 DST511 "3" "3"

// Rung HBW_Program#8
// Offset 33
STR C301
JMP HBW_Program.S19

// Rung HBW_Program#9
// Offset 35
NOP

// Rung HBW_Program#10
// Offset 36
STR C216
JMP HBW_Program.S1

// Rung HBW_Program#11
// Offset 38
STR C213
JMP HBW_Program.S1

// Rung HBW_Program#12
// Offset 40
SG HBW_Program.S1

// Rung HBW_Program#13
// Offset 42
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#14
// Offset 50
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#15
// Offset 52
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#16
// Offset 54
STR ST1
MOVE 0 N1

// Rung HBW_Program#17
// Offset 57
STR ST1
MOVE 0 C299

// Rung HBW_Program#18
// Offset 60
NOP

// Rung HBW_Program#19
// Offset 61
STR ST1
DUPBOOL
STR C205
ANDN C206
STR C206
ANDN C205
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 500 60
POPBOOL
DUPBOOL
AND C205
OUT Y48
POPBOOL
AND C206
OUT Y49

// Rung HBW_Program#20
// Offset 90
STR ST1
DUPBOOL
STR C207
ANDN C208
STRN C207
AND C208
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
POPBOOL
DUPBOOL
AND C207
OUT Y50
POPBOOL
AND C208
OUT Y51

// Rung HBW_Program#21
// Offset 119
STR ST1
DUPBOOL
STR C209
ANDN C210
STRN C209
AND C210
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
POPBOOL
DUPBOOL
AND C209
OUT Y4
POPBOOL
AND C210
OUT Y5

// Rung HBW_Program#22
// Offset 148
STR ST1
DUPBOOL
STR C211
ANDN C212
STRN C211
AND C212
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
POPBOOL
DUPBOOL
AND C211
OUT Y6
POPBOOL
AND C212
OUT Y7

// Rung HBW_Program#23
// Offset 177
STR C226
JMP HBW_Program.S0

// Rung HBW_Program#24
// Offset 179
STR C213
JMP HBW_Program.S2

// Rung HBW_Program#25
// Offset 181
SG HBW_Program.S2

// Rung HBW_Program#26
// Offset 183
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#27
// Offset 191
STR X0
OUT $HBW_Encoder_X.ResetLevel

// Rung HBW_Program#28
// Offset 193
STR X3
OUT $HBW_Encoder_Z.ResetLevel

// Rung HBW_Program#29
// Offset 195
STR ST1
CALL HBW_Home 0x1 DST511 "3" "3"

// Rung HBW_Program#30
// Offset 203
STR X0
AND X11
AND X3
JMP HBW_Program.S3

// Rung HBW_Program#31
// Offset 207
STR C212
JMP HBW_Program.S3

// Rung HBW_Program#32
// Offset 209
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#33
// Offset 211
SG HBW_Program.S3

// Rung HBW_Program#34
// Offset 213
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#35
// Offset 221
STR ST1
CALL HWB_Home_to_11 0x1 DST511 "3" "3"

// Rung HBW_Program#36
// Offset 229
STRN C250
ANDN C251
JMP HBW_Program.S4

// Rung HBW_Program#37
// Offset 232
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#38
// Offset 234
SG HBW_Program.S4

// Rung HBW_Program#39
// Offset 236
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#40
// Offset 244
STR ST1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#41
// Offset 252
STR X10
ANDN C251
JMP HBW_Program.S5

// Rung HBW_Program#42
// Offset 255
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#43
// Offset 257
NOP

// Rung HBW_Program#44
// Offset 258
SG HBW_Program.S5

// Rung HBW_Program#45
// Offset 260
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#46
// Offset 268
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#47
// Offset 276
STRN C251
AND C250
JMP HBW_Program.S6

// Rung HBW_Program#48
// Offset 279
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#49
// Offset 281
SG HBW_Program.S6

// Rung HBW_Program#50
// Offset 283
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#51
// Offset 291
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#52
// Offset 299
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#53
// Offset 301
STRN X2
MOVE 1 C298

// Rung HBW_Program#54
// Offset 304
STRN X2
JMP HBW_Program.S7
INC N1

// Rung HBW_Program#55
// Offset 307
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#56
// Offset 309
NOP

// Rung HBW_Program#57
// Offset 310
SG HBW_Program.S7

// Rung HBW_Program#58
// Offset 312
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#59
// Offset 320
STR C300
MOVE 1 C299

// Rung HBW_Program#60
// Offset 323
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#61
// Offset 331
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#62
// Offset 340
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#63
// Offset 342
NOP

// Rung HBW_Program#64
// Offset 343
SG HBW_Program.S8

// Rung HBW_Program#65
// Offset 345
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#66
// Offset 353
STR ST1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#67
// Offset 361
STR ST1
MOVE 0 C299
MOVE 0 C298

// Rung HBW_Program#68
// Offset 366
STRN C250
JMP HBW_Program.S9

// Rung HBW_Program#69
// Offset 368
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#70
// Offset 370
NOP

// Rung HBW_Program#71
// Offset 371
SG HBW_Program.S9

// Rung HBW_Program#72
// Offset 373
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#73
// Offset 381
STR ST1
CALL HBW_Return_Top 0x1 DST511 "3" "3"

// Rung HBW_Program#74
// Offset 389
STR X10
ANDN C251
JMP HBW_Program.S10
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#75
// Offset 399
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#76
// Offset 401
NOP

// Rung HBW_Program#77
// Offset 402
SG HBW_Program.S10

// Rung HBW_Program#78
// Offset 404
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#79
// Offset 412
STR ST1
CALL HBW_MV_11_12 0x1 DST511 "3" "3"

// Rung HBW_Program#80
// Offset 420
STRN C250
JMP HBW_Program.S11

// Rung HBW_Program#81
// Offset 422
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#82
// Offset 424
NOP

// Rung HBW_Program#83
// Offset 425
SG HBW_Program.S11

// Rung HBW_Program#84
// Offset 427
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#85
// Offset 435
STRE N1 1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#86
// Offset 446
STRE N1 2
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#87
// Offset 457
STRE N1 3
CALL HBW_Move_R1_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#88
// Offset 468
STRE N1 3
ANDLE 1650 $HBW_Encoder_Z.Acc
JMP HBW_Program.S51

// Rung HBW_Program#89
// Offset 477
STRE N1 4
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#90
// Offset 488
STRE N1 5
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#91
// Offset 499
STRE N1 6
CALL HBW_Move_R2_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#92
// Offset 510
STRE N1 6
ANDLE 3200 $HBW_Encoder_Z.Acc
JMP HBW_Program.S51

// Rung HBW_Program#93
// Offset 519
STRE N1 7
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#94
// Offset 530
STRE N1 8
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#95
// Offset 541
STRE N1 9
JMP HBW_Program.S18

// Rung HBW_Program#96
// Offset 546
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#97
// Offset 548
NOP

// Rung HBW_Program#98
// Offset 549
NOP

// Rung HBW_Program#99
// Offset 550
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#100
// Offset 553
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#101
// Offset 555
SG HBW_Program.S51

// Rung HBW_Program#102
// Offset 557
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#103
// Offset 565
STRE N1 3
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#104
// Offset 576
STRE N1 6
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#105
// Offset 587
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#106
// Offset 589
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#107
// Offset 592
SG HBW_Program.S12

// Rung HBW_Program#108
// Offset 594
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#109
// Offset 602
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#110
// Offset 610
STRN C251
AND C250
JMP HBW_Program.S13

// Rung HBW_Program#111
// Offset 613
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#112
// Offset 615
SG HBW_Program.S13

// Rung HBW_Program#113
// Offset 617
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#114
// Offset 625
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#115
// Offset 633
STRN X2
MOVE 1 C298

// Rung HBW_Program#116
// Offset 636
STR C300
MOVE 1 C299

// Rung HBW_Program#117
// Offset 639
STRN X2
AND C299
JMP HBW_Program.S14
INC N1

// Rung HBW_Program#118
// Offset 643
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#119
// Offset 645
SG HBW_Program.S14

// Rung HBW_Program#120
// Offset 647
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#121
// Offset 655
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#122
// Offset 663
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#123
// Offset 672
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#124
// Offset 674
SG HBW_Program.S15

// Rung HBW_Program#125
// Offset 676
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#126
// Offset 684
STR ST1
MOVE 0 C299
MOVE 0 C298

// Rung HBW_Program#127
// Offset 689
STRE N1 1
CALL HBW_Return11 0x1 DST511 "3" "3"

// Rung HBW_Program#128
// Offset 700
STRE N1 2
CALL HBW_Return12 0x1 DST511 "3" "3"

// Rung HBW_Program#129
// Offset 711
STRE N1 3
CALL HBW_Return13 0x1 DST511 "3" "3"

// Rung HBW_Program#130
// Offset 722
STRE N1 4
CALL HBW_Return21 0x1 DST511 "3" "3"

// Rung HBW_Program#131
// Offset 733
STRE N1 5
CALL HBW_Return22 0x1 DST511 "3" "3"

// Rung HBW_Program#132
// Offset 744
STRE N1 6
CALL HBW_Return23 0x1 DST511 "3" "3"

// Rung HBW_Program#133
// Offset 755
STRE N1 7
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#134
// Offset 766
STRE N1 8
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#135
// Offset 777
STRE N1 9
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#136
// Offset 788
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#137
// Offset 790
STRN C251
JMP HBW_Program.S16
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#138
// Offset 799
SG HBW_Program.S16

// Rung HBW_Program#139
// Offset 801
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#140
// Offset 809
STRE N1 1
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#141
// Offset 820
STRE N1 2
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#142
// Offset 831
STRE N1 3
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#143
// Offset 842
STRE N1 4
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#144
// Offset 853
STRE N1 5
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#145
// Offset 864
STRE N1 6
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#146
// Offset 875
STRE N1 7
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#147
// Offset 886
STRE N1 8
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#148
// Offset 897
STRE N1 9
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#149
// Offset 908
NOP

// Rung HBW_Program#150
// Offset 909
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#151
// Offset 911
STRN C250
AND X10
JMP HBW_Program.S17

// Rung HBW_Program#152
// Offset 914
SG HBW_Program.S17

// Rung HBW_Program#153
// Offset 916
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#154
// Offset 924
STRE N1 1
CALL HBW_Retract_12 0x1 DST511 "3" "3"

// Rung HBW_Program#155
// Offset 935
STRE N1 2
CALL HBW_RETRACT_13 0x1 DST511 "3" "3"

// Rung HBW_Program#156
// Offset 946
STRE N1 3
CALL HBW_Retract_23 0x1 DST511 "3" "3"

// Rung HBW_Program#157
// Offset 957
STRE N1 4
CALL HBW_Retract_22 0x1 DST511 "3" "3"

// Rung HBW_Program#158
// Offset 968
STRE N1 5
CALL HBW_Retract_21 0x1 DST511 "3" "3"

// Rung HBW_Program#159
// Offset 979
STRE N1 6
CALL HBW_Retract_21 0x1 DST511 "3" "3"

// Rung HBW_Program#160
// Offset 990
STRE N1 7
CALL HBW_Retract_32 0x1 DST511 "3" "3"

// Rung HBW_Program#161
// Offset 1001
STRE N1 8
CALL HBW_Retract_33 0x1 DST511 "3" "3"

// Rung HBW_Program#162
// Offset 1012
STRE N1 9
CALL HBW_Retract_33 0x1 DST511 "3" "3"

// Rung HBW_Program#163
// Offset 1023
NOP

// Rung HBW_Program#164
// Offset 1024
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#165
// Offset 1026
STR X11
ANDN C251
ANDN C250
JMP HBW_Program.S11

// Rung HBW_Program#166
// Offset 1030
STR X11
ANDE N1 1
JMP HBW_Program.S50

// Rung HBW_Program#167
// Offset 1036
SG HBW_Program.S18

// Rung HBW_Program#168
// Offset 1038
STR ST1
JMP HBW_Program.S0

// Rung HBW_Program#169
// Offset 1040
SG HBW_Program.S50

// Rung HBW_Program#170
// Offset 1042
STR ST1
CALL HBW_Shift_C1C2 0x1 DST511 "3" "3"

// Rung HBW_Program#171
// Offset 1050
STRN Y50
ANDN C250
JMP HBW_Program.S11

// Rung HBW_Program#172
// Offset 1053
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#173
// Offset 1055
NOP

// Rung HBW_Program#174
// Offset 1056
SG HBW_Program.S19

// Rung HBW_Program#175
// Offset 1058
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#176
// Offset 1066
STR X0
OUT $HBW_Encoder_X.ResetLevel

// Rung HBW_Program#177
// Offset 1068
STR X3
OUT $HBW_Encoder_Z.ResetLevel

// Rung HBW_Program#178
// Offset 1070
NOP

// Rung HBW_Program#179
// Offset 1071
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#180
// Offset 1073
STR ST1
CALL HBW_Home 0x1 DST511 "3" "3"

// Rung HBW_Program#181
// Offset 1081
STR X0
AND X11
AND X3
JMP HBW_Program.S20

// Rung HBW_Program#182
// Offset 1085
SG HBW_Program.S20

// Rung HBW_Program#183
// Offset 1087
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#184
// Offset 1095
NOP

// Rung HBW_Program#185
// Offset 1096
STRE N2 1
CALL HBW_OneTime_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#186
// Offset 1107
STRE N2 2
CALL HBW_OneTime_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#187
// Offset 1118
STRE N2 3
CALL HBW_OneTime_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#188
// Offset 1129
STRE N2 4
CALL HBW_OneTime_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#189
// Offset 1140
STRE N2 5
CALL HBW_OneTime_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#190
// Offset 1151
STRE N2 6
CALL HBW_OneTime_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#191
// Offset 1162
STRE N2 7
CALL HBW_OneTime_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#192
// Offset 1173
STRE N2 8
CALL HBW_OneTime_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#193
// Offset 1184
STRE N2 9
CALL HBW_OneTime_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#194
// Offset 1195
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#195
// Offset 1197
STRN C251
JMP HBW_Program.S21

// Rung HBW_Program#196
// Offset 1199
SG HBW_Program.S21

// Rung HBW_Program#197
// Offset 1201
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#198
// Offset 1209
NOP

// Rung HBW_Program#199
// Offset 1210
STRE N2 1
CALL HBW_OneTime_C1 0x1 DST511 "3" "3"

// Rung HBW_Program#200
// Offset 1221
STRE N2 2
CALL HBW_OneTime_C2 0x1 DST511 "3" "3"

// Rung HBW_Program#201
// Offset 1232
STRE N2 3
CALL HBW_OneTime_C3 0x1 DST511 "3" "3"

// Rung HBW_Program#202
// Offset 1243
STRE N2 4
CALL HBW_OneTime_C1 0x1 DST511 "3" "3"

// Rung HBW_Program#203
// Offset 1254
STRE N2 5
CALL HBW_OneTime_C2 0x1 DST511 "3" "3"

// Rung HBW_Program#204
// Offset 1265
STRE N2 6
CALL HBW_OneTime_C3 0x1 DST511 "3" "3"

// Rung HBW_Program#205
// Offset 1276
STRE N2 7
CALL HBW_OneTime_C1 0x1 DST511 "3" "3"

// Rung HBW_Program#206
// Offset 1287
STRE N2 8
CALL HBW_OneTime_C2 0x1 DST511 "3" "3"

// Rung HBW_Program#207
// Offset 1298
STRE N2 9
CALL HBW_OneTime_C3 0x1 DST511 "3" "3"

// Rung HBW_Program#208
// Offset 1309
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#209
// Offset 1311
STRN C250
JMP HBW_Program.S22

// Rung HBW_Program#210
// Offset 1313
SG HBW_Program.S22

// Rung HBW_Program#211
// Offset 1315
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#212
// Offset 1323
STRE N2 1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#213
// Offset 1334
STRE N2 2
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#214
// Offset 1345
STRE N2 3
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#215
// Offset 1356
STRE N2 4
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#216
// Offset 1367
STRE N2 5
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#217
// Offset 1378
STRE N2 6
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#218
// Offset 1389
STRE N2 7
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#219
// Offset 1400
STRE N2 8
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#220
// Offset 1411
STRE N2 9
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#221
// Offset 1422
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#222
// Offset 1424
STRN C251
JMP HBW_Program.S23

// Rung HBW_Program#223
// Offset 1426
SG HBW_Program.S23

// Rung HBW_Program#224
// Offset 1428
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#225
// Offset 1436
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#226
// Offset 1444
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#227
// Offset 1446
STRN C251
AND C250
JMP HBW_Program.S24

// Rung HBW_Program#228
// Offset 1449
SG HBW_Program.S24

// Rung HBW_Program#229
// Offset 1451
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#230
// Offset 1459
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#231
// Offset 1467
STRN X2
MOVE 1 C298

// Rung HBW_Program#232
// Offset 1470
STRN X2
AND C299
JMP HBW_Program.S25

// Rung HBW_Program#233
// Offset 1473
STR C300
MOVE 1 C299

// Rung HBW_Program#234
// Offset 1476
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#235
// Offset 1478
SG HBW_Program.S25

// Rung HBW_Program#236
// Offset 1480
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#237
// Offset 1488
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#238
// Offset 1496
STR X11
JMP HBW_Program.S26
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#239
// Offset 1505
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#240
// Offset 1507
NOP

// Rung HBW_Program#241
// Offset 1508
SG HBW_Program.S26

// Rung HBW_Program#242
// Offset 1510
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#243
// Offset 1518
STR ST1
MOVE 0 C299
MOVE 0 C298

// Rung HBW_Program#244
// Offset 1523
STRE N2 1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#245
// Offset 1534
STRE N2 2
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#246
// Offset 1545
STRE N2 3
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#247
// Offset 1556
STRE N2 4
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#248
// Offset 1567
STRE N2 5
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#249
// Offset 1578
STRE N2 6
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#250
// Offset 1589
STRE N2 7
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#251
// Offset 1600
STRE N2 8
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#252
// Offset 1611
STRE N2 9
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#253
// Offset 1622
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#254
// Offset 1624
STRN C251
JMP HBW_Program.S27
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#255
// Offset 1633
SG HBW_Program.S27

// Rung HBW_Program#256
// Offset 1635
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#257
// Offset 1643
STRE N2 1
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#258
// Offset 1654
STRE N2 2
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#259
// Offset 1665
STRE N2 3
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#260
// Offset 1676
STRE N2 4
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#261
// Offset 1687
STRE N2 5
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#262
// Offset 1698
STRE N2 6
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#263
// Offset 1709
STRE N2 7
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#264
// Offset 1720
STRE N2 8
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#265
// Offset 1731
STRE N2 9
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#266
// Offset 1742
NOP

// Rung HBW_Program#267
// Offset 1743
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#268
// Offset 1745
STRN C250
AND X10
JMP HBW_Program.S28

// Rung HBW_Program#269
// Offset 1748
SG HBW_Program.S28

// Rung HBW_Program#270
// Offset 1750
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#271
// Offset 1758
STRE N2 1
CALL HBW_OneDropR1 0x1 DST511 "3" "3"

// Rung HBW_Program#272
// Offset 1769
STRE N2 2
CALL HBW_OneDropR1 0x1 DST511 "3" "3"

// Rung HBW_Program#273
// Offset 1780
STRE N2 3
CALL HBW_OneDropR1 0x1 DST511 "3" "3"

// Rung HBW_Program#274
// Offset 1791
STRE N2 4
CALL HBW_OneDropR2 0x1 DST511 "3" "3"

// Rung HBW_Program#275
// Offset 1802
STRE N2 5
CALL HBW_OneDropR2 0x1 DST511 "3" "3"

// Rung HBW_Program#276
// Offset 1813
STRE N2 6
CALL HBW_OneDropR2 0x1 DST511 "3" "3"

// Rung HBW_Program#277
// Offset 1824
STRE N2 7
CALL HBW_OneDropR3 0x1 DST511 "3" "3"

// Rung HBW_Program#278
// Offset 1835
STRE N2 8
CALL HBW_OneDropR3 0x1 DST511 "3" "3"

// Rung HBW_Program#279
// Offset 1846
STRE N2 9
CALL HBW_OneDropR3 0x1 DST511 "3" "3"

// Rung HBW_Program#280
// Offset 1857
STR X11
JMP HBW_Program.S0

// Rung HBW_Program#281
// Offset 1859
STR C215
JMP HBW_Program.S0

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
SG VGR_Program.S0

// Rung VGR_Program#2
// Offset 2
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#3
// Offset 10
STR ST1
DUPBOOL
STR C410
ANDN C409
STRN C410
AND C409
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
POPBOOL
DUPBOOL
AND C410
OUT Y27
POPBOOL
AND C409
OUT Y26

// Rung VGR_Program#4
// Offset 39
STR ST1
DUPBOOL
STR C408
ANDN C411
STRN C408
AND C411
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
POPBOOL
DUPBOOL
AND C408
OUT Y24
POPBOOL
AND C411
OUT Y25

// Rung VGR_Program#5
// Offset 68
STR ST1
DUPBOOL
STR C406
ANDN C407
STRN C406
AND C407
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
POPBOOL
DUPBOOL
AND C406
OUT Y23
POPBOOL
AND C407
OUT Y22

// Rung VGR_Program#6
// Offset 97
STR C452
JMP VGR_Program.S1

// Rung VGR_Program#7
// Offset 99
SG VGR_Program.S1

// Rung VGR_Program#8
// Offset 101
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#9
// Offset 103
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#10
// Offset 111
STRN X25
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
OUT Y22

// Rung VGR_Program#11
// Offset 127
STRN X26
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
OUT Y24

// Rung VGR_Program#12
// Offset 143
STRN X27
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
OUT Y26

// Rung VGR_Program#13
// Offset 159
STR X27
OUT $VGR_Encoder_Rot.ResetLevel

// Rung VGR_Program#14
// Offset 161
STR X26
OUT $VGR_Encoder_X.ResetLevel

// Rung VGR_Program#15
// Offset 163
STR X25
OUT $VGR_Encoder_Y.ResetLevel

// Rung VGR_Program#16
// Offset 165
STR X25
AND X26
AND X27
JMP VGR_Program.S2

// Rung VGR_Program#17
// Offset 169
SG VGR_Program.S2

// Rung VGR_Program#18
// Offset 171
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#19
// Offset 179
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#20
// Offset 181
STR ST1
OUT $VGR_Encoder_Rot.EnableCapture

// Rung VGR_Program#21
// Offset 183
STR ST1
OUT $VGR_Encoder_X.EnableCapture

// Rung VGR_Program#22
// Offset 185
STR ST1
OUT $VGR_Encoder_Y.EnableCapture

// Rung VGR_Program#23
// Offset 187
STR ST1
OUT $VGR_Encoder_Rot.EnableCapture

// Rung VGR_Program#24
// Offset 189
STR ST1
OUT $VGR_Encoder_X.EnableCapture

// Rung VGR_Program#25
// Offset 191
STR ST1
OUT $VGR_Encoder_Y.EnableCapture

// Rung VGR_Program#26
// Offset 193
STRGE 5340 $VGR_Encoder_Rot.Acc
ANDGE 5360 $VGR_Encoder_Rot.Acc
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
OUT Y27

// Rung VGR_Program#27
// Offset 216
STRGE 725 $VGR_Encoder_X.Acc
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
OUT Y25

// Rung VGR_Program#28
// Offset 235
STRN X2
JMP VGR_Program.S3

// Rung VGR_Program#29
// Offset 237
SG VGR_Program.S3

// Rung VGR_Program#30
// Offset 239
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#31
// Offset 247
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#32
// Offset 249
STRGE 600 $VGR_Encoder_Y.Acc
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
OUT Y23

// Rung VGR_Program#33
// Offset 268
STRGE $VGR_Encoder_Y.Acc 600
JMP VGR_Program.S4

// Rung VGR_Program#34
// Offset 273
SG VGR_Program.S4

// Rung VGR_Program#35
// Offset 275
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#36
// Offset 283
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#37
// Offset 285
STR ST1
OUT Y28

// Rung VGR_Program#38
// Offset 287
STR Y28
JMP VGR_Program.S5

// Rung VGR_Program#39
// Offset 289
SG VGR_Program.S5

// Rung VGR_Program#40
// Offset 291
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#41
// Offset 299
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#42
// Offset 301
STR ST1
OUT Y28

// Rung VGR_Program#43
// Offset 303
STR ST1
OUT Y29

// Rung VGR_Program#44
// Offset 305
STR Y29
JMP VGR_Program.S6

// Rung VGR_Program#45
// Offset 307
SG VGR_Program.S6

// Rung VGR_Program#46
// Offset 309
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#47
// Offset 317
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#48
// Offset 319
STR ST1
OUT Y28
OUT Y29

// Rung VGR_Program#49
// Offset 322
STRN X25
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
OUT Y22

// Rung VGR_Program#50
// Offset 338
STR X25
JMP VGR_Program.S7

// Rung VGR_Program#51
// Offset 340
SG VGR_Program.S7

// Rung VGR_Program#52
// Offset 342
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#53
// Offset 350
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#54
// Offset 352
STR ST1
OUT Y28
OUT Y29

// Rung VGR_Program#55
// Offset 355
STR ST1
MOVE 1 C299

// Rung VGR_Program#56
// Offset 358
STRN X26
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
OUT Y24

// Rung VGR_Program#57
// Offset 374
STR X26
JMP VGR_Program.S8

// Rung VGR_Program#58
// Offset 376
SG VGR_Program.S8

// Rung VGR_Program#59
// Offset 378
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#60
// Offset 386
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#61
// Offset 388
STR ST1
OUT Y28
OUT Y29

// Rung VGR_Program#62
// Offset 391
STRN X27
ANDGE $VGR_Encoder_Rot.Acc 3567
ANDGE $VGR_Encoder_Rot.Acc 3557
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
OUT Y26

// Rung VGR_Program#63
// Offset 415
STRGE 3404 $VGR_Encoder_X.Acc
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
OUT Y25

// Rung VGR_Program#64
// Offset 434
STRGE $VGR_Encoder_X.Acc 3404
JMP VGR_Program.S9

// Rung VGR_Program#65
// Offset 439
SG VGR_Program.S9

// Rung VGR_Program#66
// Offset 441
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#67
// Offset 449
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#68
// Offset 451
STR ST1
OUT Y28
OUT Y29

// Rung VGR_Program#69
// Offset 454
STRGE 2026 $VGR_Encoder_Y.Acc
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
OUT Y23

// Rung VGR_Program#70
// Offset 473
STRGE $VGR_Encoder_Y.Acc 2026
JMP VGR_Program.S10

// Rung VGR_Program#71
// Offset 478
SG VGR_Program.S10

// Rung VGR_Program#72
// Offset 480
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#73
// Offset 488
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#74
// Offset 490
STR ST2
OUT Y29

// Rung VGR_Program#75
// Offset 492
STRN X25
ANDN Y29
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
OUT Y22

// Rung VGR_Program#76
// Offset 509
STRN X26
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
OUT Y24

// Rung VGR_Program#77
// Offset 525
STR ST2
JMP VGR_Program.S11

// Rung VGR_Program#78
// Offset 527
STR X25
AND X26
JMP VGR_Program.S2

// Rung VGR_Program#79
// Offset 530
SG VGR_Program.S11

// Rung VGR_Program#80
// Offset 532
STRN X25
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
OUT Y22

// Rung VGR_Program#81
// Offset 548
STRN X26
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
OUT Y24

// Rung VGR_Program#82
// Offset 564
STRN X27
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
OUT Y26

// Rung VGR_Program#83
// Offset 580
STR X27
OUT $VGR_Encoder_Rot.ResetLevel

// Rung VGR_Program#84
// Offset 582
STR X26
OUT $VGR_Encoder_X.ResetLevel

// Rung VGR_Program#85
// Offset 584
STR X25
OUT $VGR_Encoder_Y.ResetLevel

// Rung VGR_Program#86
// Offset 586
STR ST1
MOVE 1 C700

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STR C813
OUT Y18

// Rung MPO_Program#4
// Offset 12
STR C810
OUT Y17

// Rung MPO_Program#5
// Offset 14
STR C811
OUT Y52

// Rung MPO_Program#6
// Offset 16
STR ST1
DUPBOOL
STR C804
ANDN C805
STR C805
ANDN C804
ORSTR
ANDSTR
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 100
POPBOOL
DUPBOOL
AND C804
OUT Y53
POPBOOL
AND C805
OUT Y15

// Rung MPO_Program#7
// Offset 45
STR C814
OUT Y19

// Rung MPO_Program#8
// Offset 47
STR C809
JMP MPO_Program.S1

// Rung MPO_Program#9
// Offset 49
SG MPO_Program.S1

// Rung MPO_Program#10
// Offset 51
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#11
// Offset 59
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#12
// Offset 61
STR X24
RST C1199

// Rung MPO_Program#13
// Offset 63
STRN X24
SET Y17

// Rung MPO_Program#14
// Offset 65
STR Y17
OUT Y20
ANDN X17
ONDTMR T105 3000 Y44

// Rung MPO_Program#15
// Offset 71
STR X17
JMP MPO_Program.S10

// Rung MPO_Program#16
// Offset 73
SG MPO_Program.S10

// Rung MPO_Program#17
// Offset 75
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#18
// Offset 83
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#19
// Offset 85
STR X17
RST Y20

// Rung MPO_Program#20
// Offset 87
STR X17
ONDTMR T106 2000 Y16

// Rung MPO_Program#21
// Offset 91
STR T106.Done
JMP MPO_Program.S11

// Rung MPO_Program#22
// Offset 93
SG MPO_Program.S11

// Rung MPO_Program#23
// Offset 95
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#24
// Offset 103
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#25
// Offset 105
STRN X18
OUT Y52

// Rung MPO_Program#26
// Offset 107
STR X18
RST Y20

// Rung MPO_Program#27
// Offset 109
STR X18
RST Y16

// Rung MPO_Program#28
// Offset 111
STRN Y16
ONDTMR T107 1000 C819

// Rung MPO_Program#29
// Offset 115
STR C819
JMP MPO_Program.S2

// Rung MPO_Program#30
// Offset 117
SG MPO_Program.S2

// Rung MPO_Program#31
// Offset 119
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#32
// Offset 127
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#33
// Offset 129
NOP

// Rung MPO_Program#34
// Offset 130
STRN X19
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y53

// Rung MPO_Program#35
// Offset 146
STR X19
JMP MPO_Program.S3

// Rung MPO_Program#36
// Offset 148
SG MPO_Program.S3

// Rung MPO_Program#37
// Offset 150
STR ST1
SET Y17

// Rung MPO_Program#38
// Offset 152
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#39
// Offset 160
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#40
// Offset 162
STR X19
SET Y19

// Rung MPO_Program#41
// Offset 164
STR X19
ONDTMR T100 1000 Y18

// Rung MPO_Program#42
// Offset 168
STR T100.DN
JMP MPO_Program.S4

// Rung MPO_Program#43
// Offset 170
SG MPO_Program.S4

// Rung MPO_Program#44
// Offset 172
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#45
// Offset 180
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#46
// Offset 182
STR X19
RST Y19

// Rung MPO_Program#47
// Offset 184
STRN X16
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y15

// Rung MPO_Program#48
// Offset 200
STR X16
JMP MPO_Program.S5

// Rung MPO_Program#49
// Offset 202
SG MPO_Program.S5

// Rung MPO_Program#50
// Offset 204
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#51
// Offset 212
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#52
// Offset 214
STR X16
SET Y19

// Rung MPO_Program#53
// Offset 216
STR Y19
ONDTMR T101 1000 C815

// Rung MPO_Program#54
// Offset 220
STR C815
RST Y18

// Rung MPO_Program#55
// Offset 222
STRN Y18
ONDTMR T110 1000 C830

// Rung MPO_Program#56
// Offset 226
STR C830
JMP MPO_Program.S6

// Rung MPO_Program#57
// Offset 228
SG MPO_Program.S6

// Rung MPO_Program#58
// Offset 230
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#59
// Offset 238
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#60
// Offset 240
STR X16
RST Y19

// Rung MPO_Program#61
// Offset 242
STRN Y19
ONDTMR T102 1000 C818

// Rung MPO_Program#62
// Offset 246
STR C818
JMP MPO_Program.S7

// Rung MPO_Program#63
// Offset 248
SG MPO_Program.S7

// Rung MPO_Program#64
// Offset 250
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#65
// Offset 258
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#66
// Offset 260
STRN X15
OUT Y45

// Rung MPO_Program#67
// Offset 262
STR X15
TMRDOWN T102 1000
OUT Y43

// Rung MPO_Program#68
// Offset 266
STR T102.Done
JMP MPO_Program.S8

// Rung MPO_Program#69
// Offset 268
SG MPO_Program.S8

// Rung MPO_Program#70
// Offset 270
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#71
// Offset 278
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#72
// Offset 280
STRN X13
OUT Y45

// Rung MPO_Program#73
// Offset 282
STR X13
TMRDOWN T103 1000
OUT Y21

// Rung MPO_Program#74
// Offset 286
STR T103.Done
JMP MPO_Program.S9

// Rung MPO_Program#75
// Offset 288
SG MPO_Program.S9

// Rung MPO_Program#76
// Offset 290
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#77
// Offset 298
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#78
// Offset 300
STRN X12
ONDTMR T104 1000 Y46

// Rung MPO_Program#79
// Offset 304
STR ST1
OUT Y47

// Rung MPO_Program#80
// Offset 306
STR X12
JMP MPO_Program.S12

// Rung MPO_Program#81
// Offset 308
SG MPO_Program.S12

// Rung MPO_Program#82
// Offset 310
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#83
// Offset 318
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#84
// Offset 320
STR X12
RST Y17

// Rung MPO_Program#85
// Offset 322
STRN Y17
JMP MPO_Program.S1

// Rung MPO_Program#86
// Offset 324
STRN X14
SET C1199

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
SG SLD_Program.S0

// Rung SLD_Program#2
// Offset 2
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#3
// Offset 10
STR C1616
OUT Y30

// Rung SLD_Program#4
// Offset 12
STR C1617
OUT Y31

// Rung SLD_Program#5
// Offset 14
STR C1618
OUT Y32

// Rung SLD_Program#6
// Offset 16
STR C1619
OUT Y33

// Rung SLD_Program#7
// Offset 18
STR C1620
OUT Y34

// Rung SLD_Program#8
// Offset 20
STR C1621
JMP SLD_Program.S1

// Rung SLD_Program#9
// Offset 22
SG SLD_Program.S1

// Rung SLD_Program#10
// Offset 24
STR C1666
JMP SLD_Program.S0

// Rung SLD_Program#11
// Offset 26
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#12
// Offset 34
STRN C1621
JMP SLD_Program.S0

// Rung SLD_Program#13
// Offset 36
STRN X35
OFFDTMR T200 1750 C1622

// Rung SLD_Program#14
// Offset 40
STR C1622
OUT Y30

// Rung SLD_Program#15
// Offset 42
STRND Y30
JMP SLD_Program.S2

// Rung SLD_Program#16
// Offset 45
STR C1626
OUT Y47

// Rung SLD_Program#17
// Offset 47
SG SLD_Program.S2

// Rung SLD_Program#18
// Offset 49
STR C1666
JMP SLD_Program.S0

// Rung SLD_Program#19
// Offset 51
STR C1626
OUT Y47

// Rung SLD_Program#20
// Offset 53
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#21
// Offset 61
STRN C1621
JMP SLD_Program.S0

// Rung SLD_Program#22
// Offset 63
STR ST1
MOVE WX0 V3216

// Rung SLD_Program#23
// Offset 66
STRLE WX0 13333
JMP SLD_Program.S3

// Rung SLD_Program#24
// Offset 71
STRGE WX0 16000
ANDLE WX0 20999
JMP SLD_Program.S4

// Rung SLD_Program#25
// Offset 80
STRGE WX0 21000
ANDLE WX0 24000
JMP SLD_Program.S5

// Rung SLD_Program#26
// Offset 89
STRGE WX0 24001
JMP SLD_Program.S1

// Rung SLD_Program#27
// Offset 94
SG SLD_Program.S3

// Rung SLD_Program#28
// Offset 96
STR C1666
JMP SLD_Program.S0

// Rung SLD_Program#29
// Offset 98
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#30
// Offset 106
STR ST1
OUT Y31

// Rung SLD_Program#31
// Offset 108
STR Y31
TMR T216 1900

// Rung SLD_Program#32
// Offset 111
STR T216.Timing
ANDN T216.Done
OUT Y30

// Rung SLD_Program#33
// Offset 114
STR T216.Done
OUT Y32

// Rung SLD_Program#34
// Offset 116
STRN C1621
JMP SLD_Program.S0

// Rung SLD_Program#35
// Offset 118
STR Y32
ONDTMR T217 125 C1623

// Rung SLD_Program#36
// Offset 122
STR C1623
JMP SLD_Program.S1

// Rung SLD_Program#37
// Offset 124
SG SLD_Program.S4

// Rung SLD_Program#38
// Offset 126
STR C1666
JMP SLD_Program.S0

// Rung SLD_Program#39
// Offset 128
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#40
// Offset 136
STR ST1
OUT Y31

// Rung SLD_Program#41
// Offset 138
STR Y31
TMR T218 2850

// Rung SLD_Program#42
// Offset 141
STR T218.Timing
ANDN T218.Done
OUT Y30

// Rung SLD_Program#43
// Offset 144
STR T218.Done
OUT Y33

// Rung SLD_Program#44
// Offset 146
STR Y33
ONDTMR T219 125 C1624

// Rung SLD_Program#45
// Offset 150
STR C1624
JMP SLD_Program.S1

// Rung SLD_Program#46
// Offset 152
STRN C1621
JMP SLD_Program.S0

// Rung SLD_Program#47
// Offset 154
SG SLD_Program.S5

// Rung SLD_Program#48
// Offset 156
STR C1666
JMP SLD_Program.S0

// Rung SLD_Program#49
// Offset 158
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#50
// Offset 166
STR ST1
OUT Y31

// Rung SLD_Program#51
// Offset 168
STR Y31
TMR T220 3800

// Rung SLD_Program#52
// Offset 171
STR T220.Timing
ANDN T220.Done
OUT Y30

// Rung SLD_Program#53
// Offset 174
STR T220.Done
OUT Y34

// Rung SLD_Program#54
// Offset 176
STR Y34
ONDTMR T221 125 C1625

// Rung SLD_Program#55
// Offset 180
STR C1625
JMP SLD_Program.S1

// Rung SLD_Program#56
// Offset 182
STRN C1621
JMP SLD_Program.S0

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STR C1200
OUT Y39

// Rung SSC_Program#4
// Offset 12
STR C1201
OUT Y40

// Rung SSC_Program#5
// Offset 14
STR C1202
OUT Y41

// Rung SSC_Program#6
// Offset 16
STR C1215
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y35

// Rung SSC_Program#7
// Offset 32
STR C1216
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y36

// Rung SSC_Program#8
// Offset 48
STR C1217
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#9
// Offset 64
STR C1218
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#10
// Offset 80
STR ST2
ANDPD X47
ANDPDPF
STR ST2
AND CT150.Done
CNT CT150 100

// Rung SSC_Program#11
// Offset 88
STR C1203
JMP SSC_Program.S1

// Rung SSC_Program#12
// Offset 90
SG SSC_Program.S1

// Rung SSC_Program#13
// Offset 92
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#14
// Offset 100
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#15
// Offset 102
STRN X41
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#16
// Offset 118
STRN X40
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y36

// Rung SSC_Program#17
// Offset 134
STR X40
AND X41
JMP SSC_Program.S2

// Rung SSC_Program#18
// Offset 137
SG SSC_Program.S2

// Rung SSC_Program#19
// Offset 139
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#20
// Offset 147
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#21
// Offset 149
STR X44
ANDPDPF
STR ST2
CNT CT150 300

// Rung SSC_Program#22
// Offset 154
STRN CT150.Done
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y35

// Rung SSC_Program#23
// Offset 170
STR X46
STR ST2
CNT CT151 1300

// Rung SSC_Program#24
// Offset 174
STRN CT151.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#25
// Offset 190
STR CT150.Done
AND CT151.Done
JMP SSC_Program.S3

// Rung SSC_Program#26
// Offset 193
SG SSC_Program.S3

// Rung SSC_Program#27
// Offset 195
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#28
// Offset 203
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#29
// Offset 205
STR X46
STR ST2
CNT CT152 300

// Rung SSC_Program#30
// Offset 209
STRN CT152.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#31
// Offset 225
STR CT152.Done
JMP SSC_Program.S4

// Rung SSC_Program#32
// Offset 227
SG SSC_Program.S4

// Rung SSC_Program#33
// Offset 229
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#34
// Offset 237
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#35
// Offset 239
STR X46
STR ST2
CNT CT153 135

// Rung SSC_Program#36
// Offset 243
STRN CT153.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#37
// Offset 259
STR X44
STR ST2
CNT CT154 210

// Rung SSC_Program#38
// Offset 263
STRN CT154.Done
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y36

// Rung SSC_Program#39
// Offset 279
STR CT153.Done
AND CT154.Done
JMP SSC_Program.S5

// Rung SSC_Program#40
// Offset 282
SG SSC_Program.S5

// Rung SSC_Program#41
// Offset 284
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#42
// Offset 292
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#43
// Offset 294
STR X46
STR ST2
CNT CT155 1100

// Rung SSC_Program#44
// Offset 298
STRN CT155.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// End of Code Block SSC_Program
$PGMEND SSC_Program

// Beginning of Code Block hunt_exp_light
$PRGRM hunt_exp_light

// Rung hunt_exp_light#1
// Offset 0
STR ST2
COPY 0x1 "4 0x0 MC402 Y39 1"

// End of Code Block hunt_exp_light
$PGMEND hunt_exp_light

// Beginning of Code Block HWB_PickUp
$TSK HWB_PickUp

// Rung HWB_PickUp#1
// Offset 0
NOP

// End of Code Block HWB_PickUp
$TSKEND HWB_PickUp

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"C1","copy","",""
"C11","C11_Interlock","","Used to delay logic by one scan"
"C12","C12_Interlock_2","","Used to delay logic by one scan"
"C20","HBW_Has_Pallet","","True when carrying a pallet"
"C51","X_Direction","","True: Left False: Right"
"C52","Z_Direction","","True: Down False: Up"
"C80","Conveyor_Timeout","","Bit high when Conveyor Timeout timer active"
"C90","HBW_XY_PID_EN","","Enables PID control in HBW_Move_XZ"
"C101","HBW_T1_Send","Modbus MC101","Task to deliver a pallet to conveyor"
"C102","HBW_T2_Receive","Modbus MC102","Task to pickup a pallet from conveyor"
"C103","HBW_T3_Reset","Modbus MC103","Reinitialize and home all axises"
"C104","HBW_T4_Manual","Modbus MC104","Switch to manual mode"
"C110","HBW_Move_X_L","Modbus MC110","Move Horizontal Axis towards bay"
"C111","HBW_Move_X_R","Modbus MC111","Move Horizontal Axis towards Conveyor"
"C112","HBW_Move_Y_In","Modbus MC112","Move Cantilever In"
"C113","HBW_Move_Y_Out","Modbus MC113","Move Cantilever Out"
"C114","HBW_Move_Z_Up","Modbus MC114","Move Vertical Axis Up"
"C115","HBW_Move_Z_Down","Modbus MC115","Move Vertical Axis Down"
"C116","HBW_Conveyor_In","Modbus MC116","Move Conveyor In"
"C117","HBW_Conveyor_Out","Modbus MC117","Move Conveyor Out"
"C130","HBW_Status_Ready","Modbus MC130","On when ready for a task"
"C133","HBW_Mov_Conveyor","Modbus MC133","Status Conveyor Moving"
"C134","HBW_Moving_X","Modbus MC134","Status GantryMovingX"
"C135","HBW_Moving_Y","Modbus MC135","Status GantryMovingY"
"C136","HBW_Moving_Z","Modbus MC136","Status GantryMovingZ"
"C138","HBW_Status_Y_Pos","Modbus MC138","Current Y position"
"C141","HBW_Target_Y_Pos","Modbus MC141","Target Y position"
"C150","HBW_MoveComplete","","HBW_Move_XZ completion interlock."
"C180","HBW_Fault","Modbus MC180","Status in Fault State"
"C182","Fault_X_Target","","Active when X target out of range"
"C183","Fault_Z_target","","Active when Z target out of range"
"C400","VGR_T0","",""
"C410","VGR_T1","",""
"C420","VGR_T2","",""
"C430","VGR_T3","",""
"C440","VGR_T4","",""
"C500","VGR_Man_Control","",""
"C799","VGR_RESET","",""
"V105","HBW_Task_X_slot","Modbus MHR105","Value for slot X coord"
"V106","HBW_Task_Y_slot","Modbus MHR106","Value for slot y coord"
"V118","HBW_PWM_Set_X","Modbus MHR118","Set Horizontal Axis PWM Duty Cycle %"
"V119","HBW_PWM_Set_Y","Modbus MHR119","Set Cantilever Axis PWM Duty Cycle %"
"V120","HBW_PWM_Set_Z","Modbus MHR120","Set Vertical Axis PWM Duty cycle %"
"V131","HBW_Cur_Progress","Modbus MHR131","0 to 100 percent job completion"
"V132","HBW_Cur_Stage","Modbus MHR132","Current stage number"
"V137","HBW_Status_X_Pos","Modbus MHR137","Current X encoder position"
"V139","HBW_Status_Z_Pos","Modbus MHR139","Current Z encoder position"
"V140","HBW_Target_X_Pos","Modbus MHR140","Target X encoder position"
"V142","HBW_Target_Z_Pos","Modbus MHR142","Target Z encoder position"
"V181","HBW_Fault_code","Modbus MHR181","Current Fault code"
"V801","VGR_Fault_Code","",""
"N810","VGR_Rot_Target","",""
"N811","VGR_X_Target","",""
"N812","VGR_Y_Target","",""
"D0","MC","",""
"D1","Feeder_Extend","",""
"D140","X_Start_Position","","Distance to target"
"D142","Y_Start_Position","","Distance to target"
"D143","HBW_PWM_Cur_X","","PWM value for X for XZ movement task"
"D144","HBW_PWM_Cur_Z","","PWM value for Z for XZ movement task"
"T3","T_HBW_S6","",""
"T4","T_Conveyor_Timer","","Used to detect conveyor faults"
"MPO_Program.S2","Vaccum_MO","",""
"MPO_Program.S3","Vaccum","",""
"MPO_Program.S4","Vacumm_MO","",""
"MPO_Program.S5","Vaccum_Load","",""
"US0","_CP_Strogram_A","","CP_State_Program"
"US1","_VGR_Movement","","VGR_Movement"
"US2","_SSC_Check_InOut","","SSC_Check_InOut"
"UB0","_VGR_MisScan_A","","VGR_Movement.Done ThisScan"
#END

