// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\aaron\Documents\classes\uidaho\2023-spring-and-fall\466\ui_cda_mini_factory_fa23\fa23_plc.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
b5391b635aa8b26428c6c6aea0020267422128abfc006bf382f70ecb11e0542a65694864494cf6a6
d4dc3070e7e04133c8385e604dcbc91083015c134027a1498c5c2911763e5689a80f7e7daea21676
b21863a25c7e83535f1f7cc6b37b106180fcbb02e7ddd7bc75f6b1b0d47de6d1d136d6cb2a320371
bdbd4aaeb86347b81c50d6127894d39a545d89a474e17f9a85d9d47536a1a819745073396b548016
103851a7d26f274981cbace9b84b8a596344e7549319d81621b436426e4a0bc4c1389f15145fc7aa
0fe9ca14e4f144a19c92a31ea318b5b9f4142e6e981ec016545630255c50157a48bffb82bcc09317
61144d5ce4c3be3fc584db93e3d41d2f6e84a3fb00fc14595f9759181eb1e623cb4e81b10af995d2
e5026c598a33a10553a78c1039e4b549855fc55ac4ebd2728d0254d896d0dbc797fe3da264cc110a
b135fd716d3540daa8f5aceef58f55e99b1ae29a0d5d36685fa65a0e97f012ebfa0bdefd380dd7f3
6a0eae6e7805a7629238e979cd135ee50785375d19a64bf163b5bf138ff3619820b18acb42664e63
f871475fc6cdba0d208b85875aa142fb8e05f8220304240eb580ea4f45bb3177269ddac09515b934
360f6b514b7b13cc32079c8f3a4b56626e29391b7c08216f6478a28bfc1384ca1c6bed6752d9829d
e2f406e36b448ceadd54531095f288384972b15e13ce89277018f325c526f50eca3ff3a469500980
c9374306e6b560f1fb406498cc1dbc6871ddedfff02c2281102d2f7b37a0ca16df3589cad8c873ba
614a9ebd68dbe85e262e54020ea450293a47187b4e81ec1ea82f0eec48fe33536bf5b0d140eabf61
4d80d6b3579d5e8e52bee649638fabb20bd995f4fe7600779ac4eb210e25a2cc6220da2d9b07ff6a
b6f75b2386ea3a2b7bd2a63ae6c4fb6be6c2a89493edec4912b9f4f2390210289710d17eb81d4168
3eecc110e52cbb3b8943f33a10e6f2f18a38f45d0b1aa74e0a04d76b5450707f805c66bc853bed5f
2c0da3f3c5d528c403d0508af52785042ac4e2a8b7f4fff97a4b6ae094b01b4dab788643d7e229e2
ec7f8a6a0cb5115660249cb475f2051a564ead484539956482217aef9f53fc10d4b679cf7c3ba4a2
0eff9f1b0e028decaf6b9d2e0aff11e5453edf8c5c567e35ea871ddbab683eb1f1d0b99e3090378b
bb1044f4aef0a3ee07cbdde79e03797addb9a95fd1e30c51ef3e5ea9109422b6a63654a323bd501d
0d054bfac64339ee77f34f22d68deef48c2750a1a36c569d9b1867a8018d70f69da5084c2a78c0e6
5a5d8144c4a5714413872d97a456c5353730395ed9edb6e539e4eadb7ddf35440c12bdc48bb2f080
63f4fdbf71d22f12589362bd035a8dc1f35050cd88ca2b4017242d64b8bdd422a10ae0c7174dcb3d
861b50d4627c04ebfa14e02f9f3a66d9656ce2e44c30e888c004c0cb54da6d2fbcbee11fbea29833
8363ec70717d64b3a5208b3886578976fa25783b13945a0d39f8dd8b6f03f39b96d0ac35c0b910f7
7ef2776148d6ceae32472ee02cb3d7ed7cd79a4c4782c13c5f0c4fc6fe13f3872273c20dcf3a7257
77153cb26583d72aa9a8fa9672fc8a7161602d0b806d77dce64af8068b3d98d311a0bec611cb7a7e
b49d185f6948ab61b9a5936ee9146dc1289cd4f7e4a6dc3102c309c02e87870fddedf81c42801d12
3e86522cc872ba6773af92e4f168a40fa0c5e759f09d1039f4e8c75eb7fdb2d2713068208dcae821
1e2d7c40871fa5479cc06bc817c9f5ef6374707ca3c7bd8bf3265a435a176c13a8d45168f120e8c1
e3dd5e44fade0fead6b67653c3804ded30229341bc1a252c7bbb0420f19487e7270292d11c8c0fb6
b7730c7ab4dee8d70e559fa712f0f9a53a10adf911a06c39cf9cc329b5a913e8818270a1cb8cd0d8
3d7d5068a1c6d22141705ad8b3f3e95fc02a2ff47373364ce884a4ed6ff588a0c396a653acfc2e3b
45840f86fedb078449a7e1f10690a1963dbe476f35fcbece41b402d1f69dca18cc530a479494b80f
77220689a21087909fbdc06620012e3284bf9ff818d707e9c84f1341bd5ede1587b1a204cf39616b
778daa8087c1a286ae413b3868c5b00b22a03a46bc79008fe0687b7884ec2ef17b029edb95f11558
11d58ec0445bd225c61c5a1d6a997136331ba5df23b646f8a5671a2c0d2b5a9207cdc6215debf2da
e42f58c508859aebcf896aa4706ff083df58385ee31df74c9ceb19fae69522d2413512926d49c95d
a1c21fe3b87143d61461ee52b0b09c1b7068392751a351a064964d1e80a3ff4dc33746976d82119a
a1d6e4b09a88329a88e3df76220a6efafc60fe36cff1588a5b53a6404d4d4ad8512b941694af992f
beb4c8de94fd3b90bd84804f6f039df7633135a76679da25c7430be3ed5be1f4fafbf10d0067d2c4
209efaa3a746953d6c2a50cdcb516a32a29e03249c3aae9e6bbb944b267ecb9e8089931963725eba
59b0d9c7e965484d021a2f58146c9693d7e822899b6dfca06d4d2d272012611c4e0be2838c93d249
fa7feec335266ad29440d106a16a9e821db2d95c21c7768862d9224375cc6755495764acec6820a4
28b607c3173756adb7e516e733d430d5c135e6feaf790ffd0fae3387a6cd25762950967dcb009404
084ab8e2373d1dfd0c95a0d39cb6c43d1a778fa100f061870167835fbbaa8729ff41b30c64d36198
092a0c33201aac6c929e32782379ccb50675036c2c3df94ceeac1320d3bbdbc47b1268664b1d0c78
958723fefd9438650ce4b94f1b33aa97081ecb81927614e9f29311aa370301b6c04f97d084334db4
66811a31fb5a7fa6d68e53c9104d7812ee3680333317bf989879ca0526a073047749a4e2bef6d434
eb6d1443fe58cbd29031280e4de993863b854ace71f0b7eeada7a453275279b6593e82e103a5f1b6
79933bac067729adbd42c1946801222bb7a02dde96124899029b62adc8dc3e732a201b5b4c337e78
42b8376170bb1204d0fe76436408ae09037ba412e38875749e81f9462092b347ec2373f7611ad0bc
7ec28cbb9d614ead1b51f1d7979b73692ce9b9a002f4109c1b2bc04d0150baee145a35b0d0210cfb
cab4db579a5580198e1e147743878623e2f41730eb570013d0934db95ac0d649de68ef3cea6152ca
89aaf7a8f7a535061ed7fdfe291241cfd009d87793f35649da6ada9facaa23d7daf64ceee89960e5
0847c51197c3c5550a24dac9692fb613d9f5607b4155d8fb6233deaa230069e7d66c337242fffc29
1af8438e4dcd96e058a38fbee974137a4986d0f9c5bd5c7fd53f6e3cfce832997bf5ecb63323337b
1653c6e8b9d4997debd2e3c055b889e652a161a3112ad2c4f8d883de203b4fc602aae5601cd788d2
1d4b39ca3b4d7aa3a4e22a03def7f3dd53346af4b52a40c0cd8fc0d292bf44cdee92261322c82804
81029e8bc35ea7838b6e2e03519f3b5f3605ae779141ac4ced18a95f3d0faff1a4cc2695b6ea7e30
1125fd01e22de4cca15105d3afa3ca2a4ddb79035d6dff7e21f46c2ea9e10ab63b82921c67b860cb
751cdaf130c7c3850717a3e3647d240d9ed1ebccc7994b8729a41d1c7aadcb59aa50fef872e8d50f
853181fd432e129012688540374a7e6d1923d69001da7aa2cbe8269383017bf8589d72c2dad111f6
f7b5589fe0e37aff9a4d97411552169a9ab1521b97e27702803fe41c77ab5a55781b6897c91c84c6
4038b4a241968ff536402230955cd12c9233511eebf018325a72f19864be77a77fd45b2a44170e58
35210ff265c58193a9e0692702fbf7aa640935b7811b204fc716b62beea1a988bc634fd6ce78063d
4906fbd0d5b7701b9982b2b4e4177b3de96ef221d2f85cabc2ae317e8ba2410884f7e25f89ebec19
a26433d61d906140ba0cb93105da440b704ee03d76aee9a087a5d005dff4f1934bf00e1424226a18
df4ece94d45d168e14ce70d1c30e6d76c0be85f5bad456e932f843976669442f1dc19f4ad2b034d1
4706ec3087911b7cee1dc76d361fde296d20f8b2fbdc3e55dc671f6f7e4ac0d85b91c3793a962e1c
60f31f9b3ca08d4e877f257ba3e23d2f877e92a8188ea5afdc6ff7544380fa237ea345d246195951
70449bb7466d8ec74b32671f9d22f903b87a8144272fa3b83850a89269fb24d2b38567b420fa404d
2f8d4d6dfdf6c3981633071c443fb61d368ef701610b7ea4100b3f0a1cb6d19f965a73962790068f
4390b1f214071697669077fa60a8dd564f8dd49ce749192fa6436aa2aa913b648213cdfa7649ca22
759f1bcf35f3608b007705d053882aa5bbe603a5cdc933311f798f01b054bf1038423c4f94633933
dd448b23bf50921d3ebe14a2e79f228466b0d6917805ce6d07597634dd89dc44fefa14edad578b9f
f9ca02917571c0001ee9c0faa44db01446e328354720ae6e67615fe8c0cdb072ab5336b8f8ff75aa
b38b8fc4d393c679fe96a7b708a76f790bcb58bcb81dddab512d23ca29fa58ce54c823df692a556d
acdaa757bf700dacc95ffbbb626d5bdb4baede255025deb4a80365422ca4a54ee6faa2bb8c9a24a1
b5c35f2db84b3350110e64eeb20d85746feef510f77cd57f9e04d9f187a52bd0bdffae525e3c83d9
46e27314a451c8bfd20ec0e54c372e58b009a4329266444b6d0bf7714583c17abab55a3636e3a1b0
ae73c6b1edd66550d3863de2bb0236ff053b257af63187e053646e5d704d1d18ed3a4043fbd6b284
6eda1b5a79159fe6794cb423f8281179d56da01f0372e76b980267ec8c6aa58ed59ae85624ad0260
ab609fbfd55ed656aada93c0e561bade1ca9e36bc4d6f598f6fcd2b3aa22357b1b80c49eecf2d92c
abd23365559d449f70fcf2ddc55766731730514127e618472a166b442fc721d44fc29eef1068ed2c
d2acfa63401b35464d99cf5114c80c3b19daabcc55fbb784ec407683a490c4e1ddabf63ffbcceedb
cd8dcf0df01c35d1a073f4168ef12ab4f12eeaddff3c4d2ab59fc4b97acbf561f1587a14e89d2035
0029673edf08bc98776bb5441d256f12f485be54f890fc41805d195849021cd96551011dfbca168f
949d533699ee9d27668d1d50775a593094bf7f1371201efd2892084ab1ad336d5e91c8721dc2656b
a1222c4b076fb19cc96603504261c6bc1e949f74ee611b3424dccb97322895daef50dc94ed3c6dca
f2fdd75b11227c03ec4ed1f7920ede57b43c1a8ba39d35c85e18d3608b51f46bfbe05c77b703054b
3889869941a1b9fb7679672727754c5fe49b433c814aebc48fcb2848d5f44394590dce9f7c91a675
94155cc067582103380b209a28d51c7f4031a0f1e9d3083c738e7d7d1a21505dd4d86fbd81045b5d
2d1e6f46c0b4d0e194c36e5f2e1aefa2be1871ff556ffbf7ccf7fcbc0c880f278b8e8aac2c054594
c1af75b9d9c16e357ff3c8619a87ea2dfd1c1013667a0b3f3fcdea199df220cd8024cf036d1d7b2b
5611a6fa20b3e8fd5755d4342d0167dfb6fcee983f58dd9ad0cccd2876b61ba389989b0dac44a242
f0a72f33bb0ca9fc9073ea72bd15560a9f317c20f170c063d46aff7005a45d1225e9b83d7490cc4d
a19c378291fd48ab2a092cbfb07aa77f83f9d712d3e17f118c23631e51ba12f651d9344c22f04ae1
c99da0327405523caece8569522c91b6ebbf1c1b8355a89728d8f5d74aaf2f75997e27da2af28b14
fca57a517686ac1a4ae0ca0ff3a1e437c0834eac3643bbef5fea6138e2e5e587c5bb5dc19c61da03
d5363dc9885f66440cef15362c40640eecfc8fc5028eface5f635d5f7648682d446958469dcb3cf8
4348c20f5cde895ce56b6ea54346d9c48667e06b1ec67a4e2e4ea8811361bd6592548d4adcdf7dc8
0d3e5310c75cae2d62ee533a7a5e066e65da0b4b95f2c7327d51177500c727208cb3556613b934f2
da1583a56ebbdc8a86d981cdf9b6e19fadcaef0760ced4bc570762b9e81907843aae160cc8a03ae0
fc52df5152663a2691ca4b2cb0878ca3a6bd033c86678d933b2bc230ecf8aa15ff88008f7319ffea
fb23130aba01689ab1757f84763254e4c3b21987503728b0a76e6ef7c0dc4cada594f52988354b55
6f46e6c6ef1ce32be5bb4bd631432b5cb2851dc19c760ec43d52127ba9dbe7b35ab9d2ab9bd953ce
95e5b08489bcb69f3b859bf717ee516cbcb4e93acc04209b4dd1164e46db26c842c8740cacdaeae4
18662ddaf9f88cf759817ea72926ead176aca0c9c09d271b956e62f3969e3d3890f3ed98772145d4
6574b5cc7457953fbfa58cf36f0b79a6afe0f9048c505b5152a530d934d884955b431e3b9a137f6b
ff751bcb311d64124179e28968517548d7eb536f092a955611ffa9585ce460de4a5accc7b1d00afa
41ef4230e37f8a2338df0fdff1c769f5ebd87f2ee41b772b00dc81d873ece36fdfdb06db134fb0ef
c2168cc9f2790662925e05f62116d3b8c039ea5abd41a7565488a137c36fa76d4c763eb86ed5bba9
ff3b7a81b5952c0b7fa00fc66a34bbfb91f900f08ff86e3314d617a6e95dea7bffad27fa3700c834
4286f50e567cfdd71aeb58df252096a31355a618b6576527a41b19596eb0bfd909fdd9919fa0509c
c42f798068cf051b25b4c30b715a7caec5595509fdf198097c0ab2e277ab6727cf8f4fe43e831191
ae24a4023a4cfa9d718569130f0c5ec933dabb68032dbceaf323d0915aee4f0f85cefd4d0ba3c308
982c3c419d7f00e1a963ca87cd3237d1fe701a70671d7a60f4b3401904906d8afb877133ee668d02
9289929fcbdf9b53cfbee80489d429d66df7ac7592853dea0fdc9c74a051d425a7c1f3c573e2a652
d5208a21b2ba8f1536cd6157043fb04b4dd76c7764785bcf0afd2e6349a28e57f58e166c47b3a89e
f850013a82716f77b001536c2114b6ca96581e973e11388d6f629e79c6ee214c99778b38a9d3c29f
6f8bd734cdc9283b5028525afe082a77536ba5f8e270eb73561108cb31800a486bb7b8a260fa4b5d
c7c0d3041cfe9ef7ba2948c834773fd5179d542f2f5e02504e6e677939dff7a355d37b27bbaba4e1
8be571b3bf49ecb9be1622ca3ab53c3de681cefe0a0250332da9f618528bd61979ad09bb0f280e68
97dd017da82214d131d66857f677bec4a9a64e46deaa668f5b38c017208be6182eff7fa90e8d2235
eaf57f34f68c7e0ae15595b55959e658eed4501fa859d661dc3ceb39b0fcd61ee267660894de6fda
b56150a53834d84ef882732326dff225cc35780d4570f36a09764945bace9414715c84108d5ccea3
c7ef47f18c81ad170d11824c92a471b654ff5366a68f7fa2767728850154efd993a1076395938dac
c08b57f099c131ed3b1e7cba2a1df8d62de18ead38e909a8293bbeeae21b13ac0227189c52f72569
d8bd16693ad3ae995c9f57d0f3ad64409585a0ad69f9b4349f9f8fb519da38a066a8f3fe229dd187
7cd2603ed1d6a5469731c4f00e395a2440de221d320f4589dad9463f113017a93f4fe3b4d804b303
4ae8726a12658181fc33e20c5b944a42adc6eda4877a84a53f2b900e0992366571405f5b0a82e2ad
8e535e271f0ad3e41f817d362a362f20cdba88f4f6d3878e194ed5e373c3852d4bb0e20fd29fd851
a6d8eca25f3f1fbb093eab97f2c9b11878d006208bd5150dbfd1c629b35471114b2748b53d70fafe
564fd7e4ad52a7e386207bda893113c2ec41bbbc8e951675ee7cd1ba3f440755f096e644bc65d32b
19a93a53a1cb7da37ca856f942297096b315c9b7cc70057aff493686ac362b9d2549d28f14e1ebd2
e5c3d27ffeb1ff9d071d975626cff00321d700c13bc93e596f6543ae8bf0c2d5582c2773d0ad2303
3ad09e894c12f06913a6afeaa43c5fb592ab9e6b0cc6f9250ae7fa22e65941b711aadc8bec6d8705
5965d9679b61646dfab41b0fd0e8a89fb6926befbc988f3992b63b1c7b5e1cf8c9d38ff4b71b42cf
600bba7e06cd70539ff61462b788526d8479b4896900547ea6f4ea90047ae7d91f0fb5128cb8b876
36e87a840661cdcd4143d69d9a89aed83e19dc8bc052d2a328c4048045ce080acfefbf47bd8955a0
af2175192c604715bf88497d94fcec5dee019afa4d6ec06c7d205b5c6bd7a65522e28a82a37f8f8f
0d9b7a74ce91ae38c33c0c1c948933619ec40d6e7ad5368eacca8b0296505cc10304a3b3603370e5
ee6dc9893373ab4b9c33f6ed64e965b4ae7eb6851042d5448b9947bd2d3ce545b08d12174cbe6bf8
2ef08cb72c232813402fd1b54f92992d4ec4a25f6be6c68c90a53fc9dd512ce78bcab65c72b0a480
af14023b0cd56d26543153f977ec4e96a91c845db5d72651eda21b04d20e052729edfdd82f1d3a8b
a82fefb58482a4f5491070c3d1f5763d92d9b2854ec3ec9dbc9d9f77f65c3c095fa48dd3d92fdf66
575759c79b062a3afd269e6c2c1a25b33d405928c9e2b28ac36a457e34355a9060fb8be8c02aa22d
5a6c8b9b6a0b5aef50e23c8e28850d2e9dd03ecf5054e76c41bdc3ee85c7b31c093547eca3704046
3a6990775e8f890467c4b0e1421a571d407dbcdbf8369b6910053a8392ccbf74016b72ea24f84772
27f66392060da0d2e560cd74491965fbe9247a339c67d5d529f59135fe7adf7ed5e4e9e3e1adb41f
5d19d805968061bb70ee72bdd1264617215cd7674d0efab230f175c66d90f509df547ba384fa3a14
953bf2b2d531a7d7578788b640551c7af9a5ae10390cc56a38020a4ca57389907799fec9df606404
22f4e8d0c5a89d1a060b8b4ff7fe49f461f5b06246388d4a11bf3608b0b9e71b02fc661e276c56e7
19de9a30e8729fed8077039f5cdb09949908d6b332173e196ab1074d5dedef8978d5807be767fcbd
716d6b15a0276374170dec594edadd27c98e9b7ccd998f3c1157d5ac6515206b676bd2ec866b103c
9a62e9ec91746332503530d0734e7dae026c7f10aa64824959cec0839b0d560617aadf2746cdc536
53e94e3134aa9204d54890a50117094c8d9e6819bcdedb0f7b17d92080312df750005c33e705a8eb
dce0506729b8f2a8370a94b1afb9868c3fb14031de2351cc17d6a716159aedb74ebade21465ade95
a6f2926d5880c309fab59b70023df47f4f139e6883dab15a69918b90e16cb3241ca170de09168bc4
e8b571bcdc638e1bcb9fd13b29a7e4df85185b41a57b22fcd7ac35de8648d8b1b5d47d72ba28f87c
cef97b1027210c64ae025802fbffe4ea23c0876b6d053b87a3416c533d88e5a3efb7afe9ae09c124
e3fbc9e911683c85cad89c5c5a24aa28907c768ca0376d536bd0ab83136a4b466bc10c608c9aff73
0429bc35c0561445dfd753bf89c7c4638792ed9c41b3fa80990590a9ac411c5f8982cbb10ea854e1
ec99053a7580893c06d80d44b6741628fda0d2079e75e36863bba9258239e4ec6712bd82d36aa971
f82019c640b73857aa20a4ca85cf89e3d931cd2c3b1d5a01e0c04430ccadbf100697cfbecf7eea48
ebb364009d5c16a5d657475536d301cfbefc2b1e99a2d08f4c953c6933f410e250c684522a281690
d1bb3305e23124702f41c1102eccbd302308508bc19ab395b47193b6d02c2e0d15dff713e671b9cb
d3a3f2a57071b24ba55738304ef844545f6e249c50548a11fbb367477f823a0739931ea7bd8776bc
946375dc577a84a522d4c5a74dda78f9c33f7fcf92a7f3ab8a92a8b63dffcd06b14effc2f624341b
5eeb2fb1aa750bd504ce70e4e3e326e709b075411fb0a75e923cec756e13ab618723ffec6505892b
604d936f4ec15f840c7b52995b3799a407d8c98c200e50dff7d277c49f89d859bdd02bc5121c2a92
c3412fd68253528ac80e9283d20793b7c638fbfefb68f990d3e17fa25792309b7b24800e6560e6c8
ccb6164f91823f39a40102d3c98b353976c63c782f42d3daf8c7319ea211b8b3df48a88802f25d8b
2973145f5a3553c5c4c251731b667a446db50c42b114471d3beadbf4d940f2d7b19cf45fc69195fb
747b22c7a8d70136d29fa0abcaba9f7d06b97692b5214daed1b496a2e0a5e8abfde0eb55a9738678
b8971b2a141e447820f1e7f494ca2549bddc3873c636ca2cd878289246416545d17c9af98d4ceab6
5769d1fda3776c28de4f4ce38df7cf61d0c83bdf0d0d3458153bf1b601fdc2548650e0a1b5da9677
b8ab3681b74dd7318659fb9647e109a9a174a8f950a8eff368b7a0c4a8f5bf6e2cabeefcf3d9288a
66e1eef42870b113d1f260142ebfaa3a0263c2ee34f5b4269589de472c1d9cc97fc36e4c205432cf
8163bc13e7e5d2ddccffdd4bb0d1d688c2ede0c444ac6e93933fedb00e46f29d6426a64416911bcb
145fd7059761bf8f8e45ffa3be8d280298ecd79598c6dd339541102566a43a1e7ab491a2013c3f67
5e3998c79d5ca79ff45968be3f3bfde43d80f29d2caaadea070e1d1fd213b74b67db8e0c0911e5ac
23bfcb59167878a0ba48cac9689c8d4911a5e1ef5ec77457538743ce6364cb46655c6d9d853dab9b
7f6ed0dd3e3b427904a2a4b1bfbcdfbcf64698dc800a899076db18708c72eeb3c8816c6746511661
12679e99e0fac2f823615523add0dd726c0442bf9329d0d72361ffbbc5d17695dc62ffec14c6c938
916267c510b4393d151ebfb989fd3c728e75bf7b196ddabe7aac066a3ef91644b05985363bfcd471
a96e64d5bc0ed123459979bec0e5fad26680f41b97d45ae96f0eadbcb236981ccb405d4521bf491b
be305f47da90fd7eed7c3996289fcf52cbaef5822532c885700da46e3415af0b57c2a9cd9b08d77b
b5cea093894f4b11151b36553a6df626ea4e8b13509f5859e3f09b0b72a1366226a56c6596cbaeae
24071db6736b8f9a6300acdf25a6559d96f1f48dba479914c63f8d8087d323165a51bc2b69d413e5
bc39435fc9f81cd01843c7fe1e0ee80e0344433032a30ebfd9f8ffc02f60ceec4fc3fcc776025a8b
d12acc6ee316c4085e18cb37bc04043c1e6cce1c8525602acbcb9f6f8f81ba75bfe285fbf3fec097
8943cc738c91ad1b9046541958d16321e726caf8b04c51503fc9c42706f5932244a733953d3cc8e9
f57ecf70007fa9de29e4e93aadc86244ae7ea44b769405e86289f7eb3cba01f8eadfdd59fad58a43
4ea1a595cec91c42bb59c43ca77bfca7d86c34123689612b5f3768e01f9536e3c601a7eb20034da8
f6baeb1c7ac98e5bf8b54581dd0a04c37f624dfac0648ce713b7b3c02d2a9be548c6bae45a0e8762
9335e5e6596133225693d76c580c28d3af95ba20232310b34c689258d2dd1f721733757144fee2a6
dd688b763be2ca55ab568e543159d861297dd1daa5f68a5955426d56aa735b1f11c69fd915ebea8f
b59f441a5511c7a31a3e6ff7b05d37124230057d66f409d31cb8bd2355416a27bf1ad5fc8a02fa81
f48321b87b911db4870483ec7574721f64164d25f67affc7e82cd339d9013baeb1a3a8e367e97365
25435b74fda8b7de1babe4873bd6e525b15d28db9de1018c5fb43fd6a6792930cd6cbd54cbac8278
9b38c6db80f71dfc5a9278ad1f324503b72bfa7fa6459c7428de15515397d791a8c94d3642b76f25
52468f97e02176b4042bd5597b5106492c9fb8e2d6da2fd0b31316039cf00d5fb28d1e336a3e6bb7
d3a17cbaf3d6d45570c158dfdd8acfe00334179dd50dd7c32db039cdb053c2feaf0182199212b23b
8a22dae0f6e552af20169417431bfbd2123d73d63e2bd66834bf831db8295139c2fa2f9a6b2fe63e
5cbe1ea49e5a0e487a0e128b8243be3b4318ca50321d7770b1c93a28eaaa6997eaa6c756d37c4b10
6224b29b5e80701819026a3e06b033df7784d148ec4499fcbe0947cb3a5b69a81f44347f754997f0
76b5fe8193f6a122d4a2024e90d08b044a74fa288d331980ed94cbf4086c88f99cb435941827324b
b6db32fd716016d88ea0fb2c726f7bd8d9887e505ff33c6037d14ad9c05e64fe2235991f64a6f7f1
fc264cb3b829a078e55eb405440ccbad2e638795fcf8f43e7c7e613b7d290fccd93248fe3ecbe080
6840f2edd0b38d5aa2544c5849f72c4a5090207d303f293381c302bd8a570abee90ee05c21d2d58c
b78e888d5cb90a47a8a88614af758cef463c31e79ad58428e937def1d301037313cc4a4f038d2f20
5489e88bc2462921e0735462d56577f5864b7b60ead1a0ca6023accd9be07355af55dbbdb08772b4
59f40f2813f7afd7969d2a653e9d471ea2675f7e037a8f68018f8d2b164ad6ca902972ab802c1f2d
003b8a4bc364bd0e1bd1505dc0ef4865878d392bdfa3d1a3e46e074594e3ad8b1575311afbc4a00e
14f410f3d78617dc97340f182f6ad01fec9a45ac847e790b2f746297bcabda3020529fa8a6d49a1c
3e2d0ed4e7fb9e3817a91b8fb8a35c6ca2112a6c1d0eb3a24d36099c1aefc0d7520f23312087b232
30479a578b6270c9994189bf3ceb75c42fabfe428b074f2cdb15e16d936da4e1218b089f9c0aea6e
4bc5fc443a996c4720d3341eda9672025230872b290df424f5ccc3b1c2c0f08653096c631629c691
9f83ad08e083e28ab792c776783f64e94b0020e890c01659dd855c6f814921b1179d73169a472bf9
0d189572d55d282d2da28b2ba38e4a399badc77c8aaa16fe092b25a462351a2ce0ad936a0c5809f7
f7c6e63dc51cab97152ab54ba01f8969d7ba8b64c295103fd4e932fc29b8dbcd2b8089385c6822be
188242607e3d3d3a4a81e99e4501545c247ffd4b8ef65a7365578cafc5d971add3013ffdd160cb40
a241c9c4b313c33cbab24e41fb7279c2ebb3382e67ede357cabce46bf70a1f337a21169d662a2b52
8b1ecbf96e6952823289daf79e9229997f818dd8f5e19c85093cce155a2a032d0aff5175014fd193
0105497ea45bbc96ff11c54cf800cb6133a11234daeefe5ac8008c510c986b05eba8595fc6d504bb
95359eaa1b871dc326903ba376370f1f6229d654926523695c397ad4be7dcf975e5238e472e41f96
3110b495b382726fcdc46658f818cec8390a0ea6708d132164fd42dbba3448df65c8a5c8750a7317
a945127d6c6dde6c78e17c2a7dc758c348fd34d6c5caae658303458f07873eb5682f041e9c52569d
c2bbe3d60ce294a62a3e525740f3764856c43a8d0adb4a596d3a0b6f884e01454ac61d6ec9211ca0
ae5451b232c8299d8f46365e19943a79f8f60a4881f1b87dd1a516e5097de5e0efe3e33d64cd7e9f
8f485b89bdfa081273f0
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 SSC_Copy_State <Virtual>  0
 HBW_Pick TASK  0 -1
 HBW_Copy_State <Virtual>  0
 PID_10 PID  0
 PID_11 PID  0
 hunt_exp_light PROGRAM  0 -1
 HBW_Home <Virtual>  0
 HBW_Pick_Sto <Virtual>  0
 test TASK  0 -1
 HBW_Pickup_ST PROGRAM  0 -1
 HWB_Extend_Arm <Virtual>  0
 HBW_Retract_Arm <Virtual>  0
 HWB_PickUp TASK  0 -1
 HBW_HTO1POS <Virtual>  0
 HBW_Left_1Block <Virtual>  0
 HBW_HomeTo2_Col <Virtual>  0
 HWB_HomeTo3_Col <Virtual>  0
 HWB_HomeTo2_Row <Virtual>  0
 HWB_HomeTo3_Row <Virtual>  0
 HWB_HomeTo1_Col <Virtual>  0
 HBW_move_left_1 <Virtual>  0
 HWB_Home_to_11 <Virtual>  0
 HWB_11_DropOff <Virtual>  0
 HBW_Pickup <Virtual>  0
 HBW_PickUp_R1 <Virtual>  0
 HBW_Send_VGR <Virtual>  0
 HBW_PickUp_VGR <Virtual>  0
 HBW_Return_VGR <Virtual>  0
 HBW_MotorsOff <Virtual>  0
 HBW_ConvTo11 <Virtual>  0
 HBW_Return_Top <Virtual>  0
 HBW_MV_11_12 <Virtual>  0
#END

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"VGR Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC410 C410 1 0x0 MC409 C409 1 0x0 MC412 Y28 1 0x0 MC412 MC450 1 0x0 MC411 C411 1 0x0 MC408 C408 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC413 Y29 1 0x0 MC413 MC451 1 0x0 X27 MI200 1"

// Rung VGR_Copy_State#2
// Offset 27
NOP

// Rung VGR_Copy_State#3
// Offset 28
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC800 Y41 1 0x0 Y41 MI801 1 0x0 MC802 Y43 1 0x0 Y43 MI803 1 0x0 MC804 C804 1 0x0 MC805 C805 1 0x0 MC806 Y44 1 0x0 MC807 Y20 1 0x0 MC808 C811 1 0x0 MC809 C809 1 0x0 MC810 C810 1 0x0 MC812 C812 1 0x0 MC813 C813 1 0x0 MC814 C814 1 0x0 MC816 Y45 1 0x0 MC817 Y46 1 0x0 MC818 Y21 1"

// Rung MPO_Copy_State#2
// Offset 39
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC800 C1600 1 0x0 MC801 C1601 1 0x0 MC802 C1602 1 0x0 MC803 C1603 1 0x0 MC804 C1604 1 0x0 Y31 MI800 1 0x0 MC850 C1605 1"

// Rung SLD_Copy_State#2
// Offset 19
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"SSC Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC606 C1200 1 0x0 MC607 C1201 1 0x0 MC608 C1202 1 0x0 MC609 C1203 1 0x0 MC615 C1215 1 0x0 MC616 C1216 1 0x0 MC617 C1217 1 0x0 MC618 C1218 1 0x0 MC619 C1219 1 0x0 MC620 C1220 1"

// Rung SSC_Copy_State#2
// Offset 25
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block HBW_Home
$LGCMOD HBW_Home

// Rung HBW_Home#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Home#2
// Offset 8
STRN C215
ANDN X0
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 60 60
OUT Y51

// Rung HBW_Home#3
// Offset 26
STRN C215
ANDN X3
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5

// Rung HBW_Home#4
// Offset 43
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y76

// Rung HBW_Home#5
// Offset 64
NOP

// Rung HBW_Home#6
// Offset 65
RET

// End of Code Block HBW_Home
$LGCEND HBW_Home

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 Y40 1 0x0 Y80 MHR102 1 0x0 MC101 C205 1 0x0 MC102 C206 1 0x0 MC103 C207 1 0x0 MC104 C208 1 0x0 MC105 C209 1 0x0 MC106 C210 1 0x0 MC107 C211 1 0x0 MC108 C212 1 0x0 MC109 C213 1 0x0 MC110 C214 1 0x0 MC111 C215 1 0x0 MC112 C216 1 0x0 X2 MI101 1 0x0 X10 MI102 1 0x0 X11 MI103 1 0x0 X3 MI104 1 0x0 X0 MI105 1 0x0 X6 MI106 1 0x0 X7 MI107 1 0x0 X8 MI108 1 0x0 X9 MI109 1 0x0 $HBW_Encoder_X.Acc MHR1 1 0x0 $HBW_Encoder_Z.Acc MHR2 1"

// Rung HBW_Copy_State#2
// Offset 55
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block HBW_HomeTo2_Col
$LGCMOD HBW_HomeTo2_Col

// Rung HBW_HomeTo2_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_HomeTo2_Col#2
// Offset 17
STRGE -2775 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_HomeTo2_Col#3
// Offset 22
NOP

// Rung HBW_HomeTo2_Col#4
// Offset 23
NOP

// Rung HBW_HomeTo2_Col#5
// Offset 24
NOP

// Rung HBW_HomeTo2_Col#6
// Offset 25
RET

// End of Code Block HBW_HomeTo2_Col
$LGCEND HBW_HomeTo2_Col

// Beginning of Code Block HWB_HomeTo1_Col
$LGCMOD HWB_HomeTo1_Col

// Rung HWB_HomeTo1_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HWB_HomeTo1_Col#2
// Offset 17
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_HomeTo1_Col#3
// Offset 22
NOP

// Rung HWB_HomeTo1_Col#4
// Offset 23
NOP

// Rung HWB_HomeTo1_Col#5
// Offset 24
RET

// End of Code Block HWB_HomeTo1_Col
$LGCEND HWB_HomeTo1_Col

// Beginning of Code Block HWB_Home_to_11
$LGCMOD HWB_Home_to_11

// Rung HWB_Home_to_11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HWB_Home_to_11#2
// Offset 22
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_Home_to_11#3
// Offset 27
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HWB_Home_to_11#4
// Offset 49
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_Home_to_11#5
// Offset 54
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HWB_Home_to_11#6
// Offset 73
NOP

// Rung HWB_Home_to_11#7
// Offset 74
NOP

// Rung HWB_Home_to_11#8
// Offset 75
RET

// End of Code Block HWB_Home_to_11
$LGCEND HWB_Home_to_11

// Beginning of Code Block HWB_11_DropOff
$LGCMOD HWB_11_DropOff

// Rung HWB_11_DropOff#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HWB_11_DropOff#2
// Offset 8
STRGE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_11_DropOff#3
// Offset 13
STRN C215
ANDN C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51

// Rung HWB_11_DropOff#4
// Offset 31
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y4
AND ST2
OUT Y5

// Rung HWB_11_DropOff#5
// Offset 51
STRGE 2850 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_11_DropOff#6
// Offset 56
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 60 60
OUT Y7

// Rung HWB_11_DropOff#7
// Offset 73
RET

// End of Code Block HWB_11_DropOff
$LGCEND HWB_11_DropOff

// Beginning of Code Block HBW_PickUp_R1
$LGCMOD HBW_PickUp_R1

// Rung HBW_PickUp_R1#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R1#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R1#3
// Offset 41
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R1#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R1#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_PickUp_R1#6
// Offset 69
NOP

// Rung HBW_PickUp_R1#7
// Offset 70
NOP

// Rung HBW_PickUp_R1#8
// Offset 71
NOP

// Rung HBW_PickUp_R1#9
// Offset 72
NOP

// Rung HBW_PickUp_R1#10
// Offset 73
RET

// End of Code Block HBW_PickUp_R1
$LGCEND HBW_PickUp_R1

// Beginning of Code Block HBW_Send_VGR
$LGCMOD HBW_Send_VGR

// Rung HBW_Send_VGR#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Send_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_Send_VGR#3
// Offset 37
STRN C215
AND X2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y48
AND ST2
OUT Y49

// Rung HBW_Send_VGR#4
// Offset 56
NOP

// Rung HBW_Send_VGR#5
// Offset 57
NOP

// Rung HBW_Send_VGR#6
// Offset 58
RET

// End of Code Block HBW_Send_VGR
$LGCEND HBW_Send_VGR

// Beginning of Code Block HBW_PickUp_VGR
$LGCMOD HBW_PickUp_VGR

// Rung HBW_PickUp_VGR#1
// Offset 0
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_PickUp_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_PickUp_VGR#3
// Offset 37
STRN C215
AND X11
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_PickUp_VGR#4
// Offset 56
NOP

// Rung HBW_PickUp_VGR#5
// Offset 57
NOP

// Rung HBW_PickUp_VGR#6
// Offset 58
RET

// End of Code Block HBW_PickUp_VGR
$LGCEND HBW_PickUp_VGR

// Beginning of Code Block HBW_Return_VGR
$LGCMOD HBW_Return_VGR

// Rung HBW_Return_VGR#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C253
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y6

// Rung HBW_Return_VGR#2
// Offset 22
STRN C215
AND X1
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_Return_VGR#3
// Offset 41
STRN C215
AND C251
DUPBOOL
ANDN X1
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_Return_VGR#4
// Offset 63
STRLE 2575 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_VGR#5
// Offset 68
NOP

// Rung HBW_Return_VGR#6
// Offset 69
NOP

// Rung HBW_Return_VGR#7
// Offset 70
RET

// End of Code Block HBW_Return_VGR
$LGCEND HBW_Return_VGR

// Beginning of Code Block HBW_MotorsOff
$LGCMOD HBW_MotorsOff

// Rung HBW_MotorsOff#1
// Offset 0
STRN C215
ANDN ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_MotorsOff#2
// Offset 18
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_MotorsOff#3
// Offset 36
STRN C215
AND ST2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
OUT Y48

// Rung HBW_MotorsOff#4
// Offset 54
NOP

// Rung HBW_MotorsOff#5
// Offset 55
NOP

// Rung HBW_MotorsOff#6
// Offset 56
NOP

// Rung HBW_MotorsOff#7
// Offset 57
RET

// End of Code Block HBW_MotorsOff
$LGCEND HBW_MotorsOff

// Beginning of Code Block HBW_ConvTo11
$LGCMOD HBW_ConvTo11

// Rung HBW_ConvTo11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_ConvTo11#2
// Offset 22
NOP

// Rung HBW_ConvTo11#3
// Offset 23
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_ConvTo11#4
// Offset 28
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_ConvTo11#5
// Offset 50
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_ConvTo11#6
// Offset 55
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_ConvTo11#7
// Offset 74
NOP

// Rung HBW_ConvTo11#8
// Offset 75
NOP

// Rung HBW_ConvTo11#9
// Offset 76
RET

// End of Code Block HBW_ConvTo11
$LGCEND HBW_ConvTo11

// Beginning of Code Block HBW_Return_Top
$LGCMOD HBW_Return_Top

// Rung HBW_Return_Top#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Return_Top#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HBW_Return_Top#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_Top#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_Return_Top#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return_Top#6
// Offset 69
NOP

// Rung HBW_Return_Top#7
// Offset 70
NOP

// Rung HBW_Return_Top#8
// Offset 71
RET

// End of Code Block HBW_Return_Top
$LGCEND HBW_Return_Top

// Beginning of Code Block HBW_MV_11_12
$LGCMOD HBW_MV_11_12

// Rung HBW_MV_11_12#1
// Offset 0
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_MV_11_12#2
// Offset 21
NOP

// Rung HBW_MV_11_12#3
// Offset 22
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_MV_11_12#4
// Offset 44
STRGE 5325 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_MV_11_12#5
// Offset 49
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
OUT Y4

// Rung HBW_MV_11_12#6
// Offset 67
STRGE 5325 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_MV_11_12#7
// Offset 72
NOP

// Rung HBW_MV_11_12#8
// Offset 73
NOP

// Rung HBW_MV_11_12#9
// Offset 74
RET

// End of Code Block HBW_MV_11_12
$LGCEND HBW_MV_11_12

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#2
// Offset 3
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#3
// Offset 6
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#4
// Offset 9
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#5
// Offset 12
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// Rung $Main#6
// Offset 15
#BEGIN FMT_COMMENT 
"Hunter Demo Light<br>"
#END

STR ST1
RUN hunt_exp_light

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
SG HBW_Program.S0

// Rung HBW_Program#2
// Offset 2
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#3
// Offset 10
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#4
// Offset 12
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#5
// Offset 14
STR ST1
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#6
// Offset 22
NOP

// Rung HBW_Program#7
// Offset 23
STR C213
JMP HBW_Program.S1

// Rung HBW_Program#8
// Offset 25
SG HBW_Program.S1

// Rung HBW_Program#9
// Offset 27
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#10
// Offset 35
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#11
// Offset 37
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#12
// Offset 39
STR ST1
DUPBOOL
STR C205
ANDN C206
STR C206
ANDN C205
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 500 60
POPBOOL
DUPBOOL
AND C205
OUT Y48
POPBOOL
AND C206
OUT Y49

// Rung HBW_Program#13
// Offset 68
STR ST1
DUPBOOL
STR C207
ANDN C208
STRN C207
AND C208
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
POPBOOL
DUPBOOL
AND C207
OUT Y50
POPBOOL
AND C208
OUT Y51

// Rung HBW_Program#14
// Offset 97
STR ST1
DUPBOOL
STR C209
ANDN C210
STRN C209
AND C210
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
POPBOOL
DUPBOOL
AND C209
OUT Y4
POPBOOL
AND C210
OUT Y5

// Rung HBW_Program#15
// Offset 126
STR ST1
DUPBOOL
STR C211
ANDN C212
STRN C211
AND C212
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
POPBOOL
DUPBOOL
AND C211
OUT Y6
POPBOOL
AND C212
OUT Y7

// Rung HBW_Program#16
// Offset 155
STR C213
JMP HBW_Program.S2

// Rung HBW_Program#17
// Offset 157
SG HBW_Program.S2

// Rung HBW_Program#18
// Offset 159
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#19
// Offset 167
STR X0
OUT $HBW_Encoder_X.ResetLevel

// Rung HBW_Program#20
// Offset 169
STR X3
OUT $HBW_Encoder_Z.ResetLevel

// Rung HBW_Program#21
// Offset 171
STR ST1
CALL HBW_Home 0x1 DST511 "3" "3"

// Rung HBW_Program#22
// Offset 179
STR X0
AND X11
AND X3
JMP HBW_Program.S3

// Rung HBW_Program#23
// Offset 183
STR C212
JMP HBW_Program.S3

// Rung HBW_Program#24
// Offset 185
NOP

// Rung HBW_Program#25
// Offset 186
SG HBW_Program.S3

// Rung HBW_Program#26
// Offset 188
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#27
// Offset 196
STR ST1
CALL HWB_Home_to_11 0x1 DST511 "3" "3"

// Rung HBW_Program#28
// Offset 204
STRN C250
ANDN C251
JMP HBW_Program.S4

// Rung HBW_Program#29
// Offset 207
SG HBW_Program.S4

// Rung HBW_Program#30
// Offset 209
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#31
// Offset 217
STR ST1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#32
// Offset 225
STR X10
ANDN C251
JMP HBW_Program.S5

// Rung HBW_Program#33
// Offset 228
SG HBW_Program.S5

// Rung HBW_Program#34
// Offset 230
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#35
// Offset 238
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#36
// Offset 246
STRN C251
AND C250
JMP HBW_Program.S6

// Rung HBW_Program#37
// Offset 249
SG HBW_Program.S6

// Rung HBW_Program#38
// Offset 251
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#39
// Offset 259
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#40
// Offset 267
STRN X2
JMP HBW_Program.S7

// Rung HBW_Program#41
// Offset 269
SG HBW_Program.S7

// Rung HBW_Program#42
// Offset 271
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#43
// Offset 279
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#44
// Offset 287
STR X11
JMP HBW_Program.S8
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#45
// Offset 296
SG HBW_Program.S8

// Rung HBW_Program#46
// Offset 298
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#47
// Offset 306
STR ST1
CALL HBW_ConvTo11 0x1 DST511 "3" "3"

// Rung HBW_Program#48
// Offset 314
STRN C250
ANDN C251
JMP HBW_Program.S9

// Rung HBW_Program#49
// Offset 317
SG HBW_Program.S9

// Rung HBW_Program#50
// Offset 319
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#51
// Offset 327
STR ST1
CALL HBW_Return_Top 0x1 DST511 "3" "3"

// Rung HBW_Program#52
// Offset 335
STR X10
ANDN C251
JMP HBW_Program.S10

// Rung HBW_Program#53
// Offset 338
SG HBW_Program.S10

// Rung HBW_Program#54
// Offset 340
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#55
// Offset 348
STR ST1
CALL HBW_MV_11_12 0x1 DST511 "3" "3"

// Rung HBW_Program#56
// Offset 356
STRN C250
JMP HBW_Program.S11

// Rung HBW_Program#57
// Offset 358
SG HBW_Program.S11

// Rung HBW_Program#58
// Offset 360
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#59
// Offset 368
STR ST1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#60
// Offset 376
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#61
// Offset 379
SG HBW_Program.S12

// Rung HBW_Program#62
// Offset 381
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#63
// Offset 389
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#64
// Offset 397
STRN C251
AND C250
JMP HBW_Program.S13

// Rung HBW_Program#65
// Offset 400
SG HBW_Program.S13

// Rung HBW_Program#66
// Offset 402
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#67
// Offset 410
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#68
// Offset 418
STRN X2
JMP HBW_Program.S14

// Rung HBW_Program#69
// Offset 420
SG HBW_Program.S14

// Rung HBW_Program#70
// Offset 422
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#71
// Offset 430
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#72
// Offset 438
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#73
// Offset 447
SG HBW_Program.S15

// Rung HBW_Program#74
// Offset 449
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#75
// Offset 457
STRN ST1
CALL HBW_ConvTo11 0x1 DST511 "3" "3"

// Rung HBW_Program#76
// Offset 465
STRN C250
ANDN C251
JMP HBW_Program.S16

// Rung HBW_Program#77
// Offset 468
STR C213
JMP HBW_Program.S16

// Rung HBW_Program#78
// Offset 470
SG HBW_Program.S16

// Rung HBW_Program#79
// Offset 472
NOP

// Rung HBW_Program#80
// Offset 473
STR C213
JMP HBW_Program.S1

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#2
// Offset 8
STR ST1
DUPBOOL
STR C410
ANDN C409
STRN C410
AND C409
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
POPBOOL
DUPBOOL
AND C410
OUT Y27
POPBOOL
AND C409
OUT Y26

// Rung VGR_Program#3
// Offset 37
STR ST1
DUPBOOL
STR C408
ANDN C411
STRN C408
AND C411
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
POPBOOL
DUPBOOL
AND C408
OUT Y24
POPBOOL
AND C411
OUT Y25

// Rung VGR_Program#4
// Offset 66
STR ST1
DUPBOOL
STR C406
ANDN C407
STRN C406
AND C407
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
POPBOOL
DUPBOOL
AND C406
OUT Y23
POPBOOL
AND C407
OUT Y22

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STR C813
OUT Y18

// Rung MPO_Program#4
// Offset 12
STR C810
OUT Y17

// Rung MPO_Program#5
// Offset 14
STR C811
OUT Y52

// Rung MPO_Program#6
// Offset 16
STR ST1
DUPBOOL
STR C804
ANDN C805
STR C805
ANDN C804
ORSTR
ANDSTR
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 100
POPBOOL
DUPBOOL
AND C804
OUT Y53
POPBOOL
AND C805
OUT Y15

// Rung MPO_Program#7
// Offset 45
STR C814
OUT Y19

// Rung MPO_Program#8
// Offset 47
STR C809
JMP MPO_Program.S2

// Rung MPO_Program#9
// Offset 49
SG MPO_Program.S1

// Rung MPO_Program#10
// Offset 51
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#11
// Offset 59
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#12
// Offset 61
STRN X24
SET Y17

// Rung MPO_Program#13
// Offset 63
STR Y17
OUT Y20
ANDN X17
ONDTMR T0 1000 Y44

// Rung MPO_Program#14
// Offset 69
SG MPO_Program.S2

// Rung MPO_Program#15
// Offset 71
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#16
// Offset 79
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#17
// Offset 81
STRN X19
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y53

// Rung MPO_Program#18
// Offset 97
STR X19
JMP MPO_Program.S3

// Rung MPO_Program#19
// Offset 99
SG MPO_Program.S3

// Rung MPO_Program#20
// Offset 101
STR ST1
SET Y17

// Rung MPO_Program#21
// Offset 103
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#22
// Offset 111
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#23
// Offset 113
STR X19
SET Y19

// Rung MPO_Program#24
// Offset 115
STR X19
ONDTMR T100 2000 Y18

// Rung MPO_Program#25
// Offset 119
STR T100.DN
JMP MPO_Program.S4

// Rung MPO_Program#26
// Offset 121
SG MPO_Program.S4

// Rung MPO_Program#27
// Offset 123
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#28
// Offset 131
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#29
// Offset 133
STR X19
RST Y19

// Rung MPO_Program#30
// Offset 135
STRN X16
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y15

// Rung MPO_Program#31
// Offset 151
STR X16
JMP MPO_Program.S5

// Rung MPO_Program#32
// Offset 153
SG MPO_Program.S5

// Rung MPO_Program#33
// Offset 155
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#34
// Offset 163
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#35
// Offset 165
STR X16
SET Y19

// Rung MPO_Program#36
// Offset 167
STR Y19
ONDTMR T101 2000 C815

// Rung MPO_Program#37
// Offset 171
STR C815
RST Y18

// Rung MPO_Program#38
// Offset 173
STRN Y18
JMP MPO_Program.S6

// Rung MPO_Program#39
// Offset 175
SG MPO_Program.S6

// Rung MPO_Program#40
// Offset 177
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#41
// Offset 185
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#42
// Offset 187
STR X16
RST Y19

// Rung MPO_Program#43
// Offset 189
STRN Y19
ONDTMR T102 1000 C818

// Rung MPO_Program#44
// Offset 193
STR C818
JMP MPO_Program.S7

// Rung MPO_Program#45
// Offset 195
SG MPO_Program.S7

// Rung MPO_Program#46
// Offset 197
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#47
// Offset 205
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#48
// Offset 207
STRN X15
OUT Y45

// Rung MPO_Program#49
// Offset 209
STR X15
TMRDOWN T102 1000
OUT Y43

// Rung MPO_Program#50
// Offset 213
STR T102.Done
JMP MPO_Program.S8

// Rung MPO_Program#51
// Offset 215
SG MPO_Program.S8

// Rung MPO_Program#52
// Offset 217
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#53
// Offset 225
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#54
// Offset 227
STRN X13
OUT Y45

// Rung MPO_Program#55
// Offset 229
STR X13
TMRDOWN T103 1000
OUT Y21

// Rung MPO_Program#56
// Offset 233
STR T103.Done
JMP MPO_Program.S9

// Rung MPO_Program#57
// Offset 235
SG MPO_Program.S9

// Rung MPO_Program#58
// Offset 237
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#59
// Offset 245
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#60
// Offset 247
STR ST1
OUT Y47

// Rung MPO_Program#61
// Offset 249
STRN X12
ONDTMR T104 1000 Y46

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
SG SLD_Program.S0

// Rung SLD_Program#2
// Offset 2
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#3
// Offset 10
STR C1600
OUT Y30

// Rung SLD_Program#4
// Offset 12
STR C1601
OUT Y31

// Rung SLD_Program#5
// Offset 14
STR C1602
OUT Y32

// Rung SLD_Program#6
// Offset 16
STR C1603
OUT Y33

// Rung SLD_Program#7
// Offset 18
STR C1604
OUT Y34

// Rung SLD_Program#8
// Offset 20
STR C1605
JMP SLD_Program.S1

// Rung SLD_Program#9
// Offset 22
SG SLD_Program.S1

// Rung SLD_Program#10
// Offset 24
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#11
// Offset 32
STRN C1605
JMP SLD_Program.S0

// Rung SLD_Program#12
// Offset 34
STRN X35
OFFDTMR T200 1750 C1651

// Rung SLD_Program#13
// Offset 38
STR C1651
OUT Y30

// Rung SLD_Program#14
// Offset 40
STRGE T200.Acc 1750
FLASHER 500 500 Y899

// Rung SLD_Program#15
// Offset 48
SG SLD_Program.S2

// Rung SLD_Program#16
// Offset 50
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#17
// Offset 58
STRN C1605
JMP SLD_Program.S0

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STR C1200
OUT Y39

// Rung SSC_Program#4
// Offset 12
STR C1201
OUT Y40

// Rung SSC_Program#5
// Offset 14
STR C1202
OUT Y41

// Rung SSC_Program#6
// Offset 16
STR C1215
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y35

// Rung SSC_Program#7
// Offset 32
STR C1216
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y36

// Rung SSC_Program#8
// Offset 48
STR C1217
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#9
// Offset 64
STR C1218
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#10
// Offset 80
STR ST2
ANDPD X47
ANDPDPF
STR ST2
AND CT150.Done
CNT CT150 100

// Rung SSC_Program#11
// Offset 88
STR C1203
JMP SSC_Program.S1

// Rung SSC_Program#12
// Offset 90
SG SSC_Program.S1

// Rung SSC_Program#13
// Offset 92
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#14
// Offset 100
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#15
// Offset 102
STRN X41
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#16
// Offset 118
STRN X40
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y36

// Rung SSC_Program#17
// Offset 134
STR X40
AND X41
JMP SSC_Program.S2

// Rung SSC_Program#18
// Offset 137
SG SSC_Program.S2

// Rung SSC_Program#19
// Offset 139
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#20
// Offset 147
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#21
// Offset 149
STR X44
ANDPDPF
STR ST2
CNT CT150 300

// Rung SSC_Program#22
// Offset 154
STRN CT150.Done
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y35

// Rung SSC_Program#23
// Offset 170
STR X46
STR ST2
CNT CT151 1300

// Rung SSC_Program#24
// Offset 174
STRN CT151.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#25
// Offset 190
STR CT150.Done
AND CT151.Done
JMP SSC_Program.S3

// Rung SSC_Program#26
// Offset 193
SG SSC_Program.S3

// Rung SSC_Program#27
// Offset 195
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#28
// Offset 203
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#29
// Offset 205
STR X46
STR ST2
CNT CT152 300

// Rung SSC_Program#30
// Offset 209
STRN CT152.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// End of Code Block SSC_Program
$PGMEND SSC_Program

// Beginning of Code Block hunt_exp_light
$PRGRM hunt_exp_light

// Rung hunt_exp_light#1
// Offset 0
STR ST2
COPY 0x1 "4 0x0 MC402 Y39 1"

// End of Code Block hunt_exp_light
$PGMEND hunt_exp_light

// Beginning of Code Block HWB_PickUp
$TSK HWB_PickUp

// Rung HWB_PickUp#1
// Offset 0
NOP

// End of Code Block HWB_PickUp
$TSKEND HWB_PickUp

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"C1","copy","",""
"C11","C11_Interlock","","Used to delay logic by one scan"
"C12","C12_Interlock_2","","Used to delay logic by one scan"
"C20","HBW_Has_Pallet","","True when carrying a pallet"
"C51","X_Direction","","True: Left False: Right"
"C52","Z_Direction","","True: Down False: Up"
"C80","Conveyor_Timeout","","Bit high when Conveyor Timeout timer active"
"C90","HBW_XY_PID_EN","","Enables PID control in HBW_Move_XZ"
"C101","HBW_T1_Send","Modbus MC101","Task to deliver a pallet to conveyor"
"C102","HBW_T2_Receive","Modbus MC102","Task to pickup a pallet from conveyor"
"C103","HBW_T3_Reset","Modbus MC103","Reinitialize and home all axises"
"C104","HBW_T4_Manual","Modbus MC104","Switch to manual mode"
"C110","HBW_Move_X_L","Modbus MC110","Move Horizontal Axis towards bay"
"C111","HBW_Move_X_R","Modbus MC111","Move Horizontal Axis towards Conveyor"
"C112","HBW_Move_Y_In","Modbus MC112","Move Cantilever In"
"C113","HBW_Move_Y_Out","Modbus MC113","Move Cantilever Out"
"C114","HBW_Move_Z_Up","Modbus MC114","Move Vertical Axis Up"
"C115","HBW_Move_Z_Down","Modbus MC115","Move Vertical Axis Down"
"C116","HBW_Conveyor_In","Modbus MC116","Move Conveyor In"
"C117","HBW_Conveyor_Out","Modbus MC117","Move Conveyor Out"
"C130","HBW_Status_Ready","Modbus MC130","On when ready for a task"
"C133","HBW_Mov_Conveyor","Modbus MC133","Status Conveyor Moving"
"C134","HBW_Moving_X","Modbus MC134","Status GantryMovingX"
"C135","HBW_Moving_Y","Modbus MC135","Status GantryMovingY"
"C136","HBW_Moving_Z","Modbus MC136","Status GantryMovingZ"
"C138","HBW_Status_Y_Pos","Modbus MC138","Current Y position"
"C141","HBW_Target_Y_Pos","Modbus MC141","Target Y position"
"C150","HBW_MoveComplete","","HBW_Move_XZ completion interlock."
"C180","HBW_Fault","Modbus MC180","Status in Fault State"
"C182","Fault_X_Target","","Active when X target out of range"
"C183","Fault_Z_target","","Active when Z target out of range"
"C400","VGR_T0","",""
"C410","VGR_T1","",""
"C420","VGR_T2","",""
"C430","VGR_T3","",""
"C440","VGR_T4","",""
"C500","VGR_Man_Control","",""
"C799","VGR_RESET","",""
"V105","HBW_Task_X_slot","Modbus MHR105","Value for slot X coord"
"V106","HBW_Task_Y_slot","Modbus MHR106","Value for slot y coord"
"V118","HBW_PWM_Set_X","Modbus MHR118","Set Horizontal Axis PWM Duty Cycle %"
"V119","HBW_PWM_Set_Y","Modbus MHR119","Set Cantilever Axis PWM Duty Cycle %"
"V120","HBW_PWM_Set_Z","Modbus MHR120","Set Vertical Axis PWM Duty cycle %"
"V131","HBW_Cur_Progress","Modbus MHR131","0 to 100 percent job completion"
"V132","HBW_Cur_Stage","Modbus MHR132","Current stage number"
"V137","HBW_Status_X_Pos","Modbus MHR137","Current X encoder position"
"V139","HBW_Status_Z_Pos","Modbus MHR139","Current Z encoder position"
"V140","HBW_Target_X_Pos","Modbus MHR140","Target X encoder position"
"V142","HBW_Target_Z_Pos","Modbus MHR142","Target Z encoder position"
"V181","HBW_Fault_code","Modbus MHR181","Current Fault code"
"V801","VGR_Fault_Code","",""
"N810","VGR_Rot_Target","",""
"N811","VGR_X_Target","",""
"N812","VGR_Y_Target","",""
"D0","MC","",""
"D1","Feeder_Extend","",""
"D140","X_Start_Position","","Distance to target"
"D142","Y_Start_Position","","Distance to target"
"D143","HBW_PWM_Cur_X","","PWM value for X for XZ movement task"
"D144","HBW_PWM_Cur_Z","","PWM value for Z for XZ movement task"
"T3","T_HBW_S6","",""
"T4","T_Conveyor_Timer","","Used to detect conveyor faults"
"MPO_Program.S2","Vaccum_MO","",""
"MPO_Program.S3","Vaccum","",""
"MPO_Program.S4","Vacumm_MO","",""
"MPO_Program.S5","Vaccum_Load","",""
"US0","_CP_Strogram_A","","CP_State_Program"
"US1","_VGR_Movement","","VGR_Movement"
"US2","_SSC_Check_InOut","","SSC_Check_InOut"
"UB0","_VGR_MisScan_A","","VGR_Movement.Done ThisScan"
#END

