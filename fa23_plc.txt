// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\brent\Desktop\factory\ui_cda_mini_factory_fa23\fa23_plc.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
f2f7aaee000b8e1db4c4f6e96eb38f3de11d5137fe302c3d337a54682c98c929542f87d4c517549b
ac413341a12ff1bf939a6318d0c8f8564cb1d048e21ad9d4866466d76f7e3ba63f97a0a47145cc7e
e0c708e0677984506410a38a42d4e9a956978965c45b2a6d8bc29912274fb27ad60013a6cc83ede4
813bf7452faff952c6ef69aca05d152a7b9fa6faeacdfdc90b8af8d2015945900e7859afaad1d3b8
214cc0a8ef25e4f90d901ec4d2c47b9b96f82be1f22073b1ee68736207cae5e74bad4f203f47a84c
964eba9df2a2f2f1fe873ffd7c1044d7dfde7a084946e711947fa6f66af88f952ea6de70b7544223
cb8ca23afde64c345155ef397b2b6b265c61bf78c6dfa9d6a7e6572afbad65e5e8f30e497bf7a737
f981aa7a37bc59745d996500b62e9af806abb858f20acaf54f25ed536ba4d0f077e7bb6142749b77
4259aef55097a7d8345f71bade909d18f6322f49ed8a6849624c49805edea2690f77ddf2e092771d
de6b87d78f33168693ce60a77a29bf31c2779cdbf156a07a8fd701d56f83388ca8eff5e99d5c4a28
1422b145070502e9ac7c8ffce0949dcef38ac4fae81ff51277d5ef3a83cc52732f005154864918e2
935cec05fa90ac3b4b563f868fb54fab5ff40618acaa8cf87f859a7c4f488c2c7b70e0a7c9fe2126
e1651bd521e503442d9b98c18c04a54d26213437e385663ea2ca8f3745405b543ebcd5c9932f5016
c64b8329210769992ca232b8e079a1b330e1b356d1320074dc9ed869bb1e0352e43259830e5b0550
b9e57825cca8624b16fb1f7b0023682de96dad8b5b0a55d0ec140a3f624bc346e040729a74ea684f
fe76c53ee8511bb4546fcefe91b80229e7bc8fd20f7e8fa2aa6a77ca6c368d34a379c2d0f856d9c5
661b60e1dbfac7482af4098a6a9f59569e5faba5d5225cc5491b094b65c090dfe911ef97a892834f
87673d65ef1a5a230e81d4435bdac7ba05e0d5e3f0e432cfbe9fbc688b6c9cbd7366237f31c8c833
3bc9aa3bfbf5f71319138ec48b1065ca81a5d5c4574db408396a84beafda090959115ce8f1368ee1
c768366b498bfd4282e46e0205a7d4042c23d5b08585e096f62d75ef359d6e99e8108b48b0d0a694
fcb350a0b62b98a7cef62473965277a3673d63ebfbb191ab3b181f175b41034df381ff9f3b478d59
a41d045bdece4624cbd555bda02ae0e604e31bca529ad89c50cc3d7f222d7dd15de1cb95a3aed96c
b499804faacf8b1a19bcebc81d2fa4cdd335e537fed1dca4cf4db8460ff69a48f0f7175542002256
6de950514497b6efb82a6e4f1b5a03273854fe29f7cb6cbb0362bf2dc5c16064ab193f103d3e62d2
d08663a55742bd5f91e85fae5eff4cb4e7a2b624661fd471efcc239d252466eb95b5144ae4a42734
cd5d274612e3c794183b2108ad6e6c1fe603d4053fc4b3e693f22f0b944055c5415dc76afd01e28d
a1e84df6e630002cf9a6cbebda06b45d88a2a5268c53871358951caa6face34bbd4b718e916023e9
be021fb6fc4fb7fe99a95811acd8898e0135ca854c047b00840ae9076f1287b273450e3bf3ca2231
78eaa9c5ebfea29475b86a129548c65b96996e19fece6cd6da3ea4d0ecf58d68fbf5898f869da8b1
7a0bec68786a007f6c91427588add0a8182d5ba664674d16128c6e5f02f1832d6c6cd68d6caccd15
f161bd4d1f1af31e84e2f37f5ab089e5b5e8f9c87828499f255d22a8c57480177c2e3f902ef3947b
060351460e1d79f8d4482e3a0d6174488859c231a3fb88b876852237dde2ccdff9d10dfd7f6d3e17
94bf5dfc9ec5976641b13ea221c13f3691cceef077629774c2086d36649572820d9112f20cc522d2
3276f9ae98fec9fe00a6999d1fe54c37898db27a12c31714bd641278e55c2ec979920e391c0ab87f
20b9c533f13a1b59d3d59350646cd8b2c907e11cb8eee5f8d9da0bc44c5198410a82cf64fda0b480
b997534daa4eadd563933e75e9c41a87110ea4396ebe61c627d94d9ea39cfde9d5e20bfa3316b50e
addc789b0e8aad4318c72e7b8408ebc396d0e366046ee52a162ba3ff1207fb279f71e2a1547e8805
2f7b6056a361777eb239bfa250e12f073e3ed95688ff696cf0e25dce2c9cfc79fc4e7b4636f511ed
3634f13c525fae46f9f5ba81b3fd5a0ea84c3a16730e48e1434eb82d5aac390c72946e6781cc25c1
b7835da83ea42d1479e9b9fb306fbcca4b4787cbef605b62cb90f881362f72abf02ddd7da7276253
b2a7832a01159bea8c961878798521c7f8bcf0de44cad83d33589fa03920404254896c127bdde7c6
dddec98f891704a04f6db7fa8bd99d5d548464cebf337ecfac769b9e7240181c7d464d4ddde1fd6b
6e9550cce429bd45bc429546e626b887eee5afa34ac292dfc40b717cf9f8e28e1c0ef035d9521a95
d7377b07bf261e570c22335cc3587bcf7dab5fc626a8fca6db955c00ffa12072e1020f97968aa968
4711c85c7fb6dc29fa4aad18fc110f70bc8f98d23eb8d52d6222e6e6dcca9f88837a38d96c4d2291
b237be48decaacfceb2fce6ca5e835f871664a27dbcca045a39abee3cbb4031ac76b3b84d9027815
ddccb3fe361f82ada18806613f094ea20d360c450a24a7293bdefa5ad5f5abbcb2a0af9b9dbb11ba
647654ee0c96c71874797351eccfaed9e60ed85741ec9415a397326eb95eac5a36a8ac38cb7fc9b3
487a8dd0f3e24fbd3c63ae21186072c0fc9cb601dcb8e1097499311519e3b79b34d8c53921a059b1
fbffbd45e595dbd6b9e7301cdb117810a7475c42789028dd620d9aba3e1416a519135b60a495130f
e9577861c0a0d4bc7c22ba582fc706a470afb81254e75aebbcf66ec178f05bf2afd83bb557b8a064
d4d434e8fb684f17b0c135ba051d7a2cca4ed3af06813dceed964eea23efa51e2796c1e699fc2c95
17aaeedbc52bb50da4022ef49afc513963c05199c31923eccf3c4378913ec53d7f5ed58ba30d79e0
936dd6541492f2e729287dffa063fd7fcf97b82fc2cc52d4d0761f149a364c032def5f91120aa161
ec384cf5003d86b006b4e4f0b8ebba544fa388c86ffda373497828b160f39c14e7e5b3d1e521beb7
7a0d601acbbdf797ed2b4d3cdf60778569e0f094be4a153b4ddbf9488c211b3d180d1b48eacdaa9f
6c208b9ef99533b10fccbf633c28240018edfdbb1515186d79af73e4876d9e397d6b1cb11b1433ff
f8b1a7be1ea3296bbed3e875c3ee86f5c01198d1b0141766abf4b512ac8c741539520fddf4adde7d
4a7675a93cbedb6c6416c34a3698cdf29ad36121b75bc78ffde5f9df4e47d7bdf48e5d20c48335b4
df915c1a9377d776a97eb5401de47c76ddcb459391f8cf64fd111bfd91debe51f6fe01ce0c11533f
5b8ea9f0b51c5df3c7f61cdcf0d55ae27c03792ce7ccd9a57771980e96252ce2fb4128f73f8aa501
a9ba2ab60135e05b0b5cf94a0327ef7c432b62319237a0597d7590d0fddb3e305d21db595856203c
8c60e44ae2a1318d0628063bae0e4a281652d997b2cbc4f12f427efc2ab10a60e839990f0af150cb
4686aa1f9c8065a5d05f38ba05de04bf5700e52e7301760779f8290997e6e31ea001632c792c1d9d
3221b51afc2c024a1ca1823682f7befceac8026f3066c9cfe526ef17550b9ddc0311a51c33657f87
2235680021c8873c268bf8c3bfe954b4a42ac8e1da04e835fda2bf84b6f4c225ba7adc99781529ab
fd664519c42235a7d8e3165001cc30e089aa6417e62a53fff5d91bcd0dedc2f066fdf02808d16f9f
aa5e025bd2400f356ae0b86104c072837595bbf3a542114e2c263931e01a7be80400ad6d8ff477d7
d23e8e888343a489cb2c3e3e6bd451f910ac2198a9cf8206ea220a07f6c2220b30ee019c3ecbb86d
5973289c76c514109e25a83c0f4d3dfa0b26c58ca0d3f1215d51d83449484383e4c6ec6b79792c1f
5a27acba598e92a8ccd7ad8e400bbb047ffc5c59b787441b063d163c2ec95696b451610c30b2f4ee
8354224052975e4db00eafdd10eb687491f181a3760a06ef0cdf5efc86d80c3eaaf78af53fe22a94
dba39d33eea53da4b943fd8667bcc4b4a5274c3ebd27ba61933273a720bc210250a8088c1fca3d4c
df33379a5a6c8ea79c42a89559061b20133920c2385f4c76e56705b75df82e59fadd3a55fee251fb
250b42744b7f643c474e2b697bcf24f7fe756b01b4f39eb9ac203a5cd81112ef3fe31a9632fd5a0f
89391ef801ed7ca275f194adbd3eadcf1501b68dd576e39dc8644e4539ebe1c8794856771b0585dc
7e42cb17bf94bd032ef4d738c5f00310014099337f53076d9019e8c5cce3c9236c2e0447604f6281
f3dc0f7072ab205f7a3db39192af0b07830efb8a7f458cbdf3de27277ad0b8c4466cb67e2705beb0
2065221fde28eca3bb28cdd82cbe478bb9f7daa3ac990525a421b23fcd31d0d03378f481d4775d48
2ae92299281908a60278b1e8ca71bf3647f0cd0cfabef3eb91d54a589ca4ad33854ffc2d290fd462
018a4ea5ead72296729db6e69d0c2976a6589fa14d5a404cab24a8840cdabbe84cbdcd8c8b1416ed
a634896309a8dc57220a0593528a24517c35a15b6959b3b6b055a2e847ed70c132a4dc654346f9c4
cb8174ca1dfbeaa0449a2b760b7e1c045a545acb8a78c27879f1a6298cf3efd4a9b50d50116a607b
f81ff76b0133946ed3336a249be29f5c5c43c8f023e180b28d11b38bed04d822b1f6e8d4beed313d
3771171cad2d332823c90fbc1d567fc1084e930ec023c28baac7cde5a70119399c3ba93750c57076
70ed4d929a2c6d4f663d40430dd060b720c8ad1da8aea6e672ff728cf0470886d4d2a5b43bb901f4
39b0db5424d6b60dbafc7daf131475b9df6ab6f6ef93783edd03cec5f934a5c2ec6c442b96e3b8d1
c95a4e3474a924121673f0fa05d61cd7280863e72fa5f0d10cd13728ac7b97d90403e1c9ef82ec66
5ba587f13288cad5300f3928ebbf0600e20a2f422c26e6c1aaeb9340a6c3f31ff84c1d275a974f19
4998f16086850249328c3250b04509eb8f44fac679ebe562ee5cdb71933919d8d0ea7b8cc908ff3a
ba4c4b01cdba86d8062da5a7c60af8af2921e96909e3117c810db68c7f83f4a8cd67a6b562acc78d
cc9ec5b4cbaab6f8a6ef677c58671dd2fed308dff9fc9df303b52d9a48a8fb883837a87090a86e3f
2ff4eb8224413653fa432eb0ec69ad1b498a9ab5232c1a6546001351464e5e05a77a691af3819ce6
87bde3a59bb81c79ebd8a01573419067b6c4380fe3f333bd44d2fad713979dc04ecf7cbeefae4011
863cec0550df2239c813432a429e1a5ae419c09dacb68b7f02aae7bdcf93e4ad72b3b2af609d1a3f
bb5e07c7ae4de042b40fe806737aab35e4930129ecf47f63b5e7ca0aaa7d2e69d13f079306854d9d
1235a82c9abb681f66b6e5508893663830510d2daf02ba149facd5251c6119af648c570b0ae4414d
85b9aa375b1f9d7979eabf03985c6785619dbd84609c595b08aa16e43b9e6b79c2143371a4777fd0
dab39fa833329d44aac3dd492a20df4ffb9c40a84d57c5aa6bd32026876af9b500bf492450de0491
01817c702fa6c43cd8db51283706129724a229fe6cdee2fe17960fda3cfa5c95ae37ae27dff6c71e
21b7034e5af09e6d44e50403640994cb79dc6f35b12e4e2d01ec2050aaab20052ac4219469e56804
458dde10cf5a054dd8b7b79b18224f8be3fdefecaf7b008c1c49b14f3a0ebfc4ee182b97c9cba805
713437879cfe0eb9a4eab18db548e10e269b66efa153b21fa93fd6eb2e9d8753e1199aed98482f97
5fa4ba7b4a6e7592819b7d8532d7f55067cc868151c9c6fc6d96cc05b4a2d89dee6a0e64361121b2
6dfa045ab35367785af961bcc062eec10e50dc2a0a06edc6891fad29edd320e81d44ade62f8bf4cb
191112700b1f584468be35c0116c4463fa845808e7fab27e1cdd3b84409114c6fa36514cb132ceda
49f781bebe7cc12d58d337527280d1f07988f5a9409ca12230862158d4182e9c81defa0db2eeb67f
c17727d95a8ff4f2ed24251c104a69f5207c3c755015378c0cfb4c35c657b3159d24daa4618c1a90
8b26ae3685fd67eadd5755b569d59b2f1c17bf14bf6bfebaa7a75752de921259c4528d31b11e1978
7b1215c982b351a214e5be3e60f787474641b0f25b782e38f4ab48b33ccdcf777c68d01bea357f98
63003b937a6a9c6165f7f8feb8739dcfc616450633ed597c056e0a34d23e49d60455a9f262137764
7cb29e88082f496e5ae88d2d2d8d3eb5f5b913945b64304573a789b31f17650b6d2a4d2cde8690b9
484ef6efb633238d03cfbac431e22c81c3668dcc6f4cb2936253341dd00b4a2ed5a42a8ef10e30d6
f1b3628a1d5ef07252366d6a43fa89c2c02c6846689eb623e08e3783487fe6fc0d8965cf850bbd3a
e418b5691784828c5bb45484c46ee887b55557ef8137afc422ce9325190147d935a775e0054ddf92
47f473891ed1940fa5a806a82472b6496fbe8790947b6457e3d4311472f874fecd358f9456ac65f0
e0e8857272dc87fcc8f4129c76667de094fb0f88530b21a1c0d65842cdda07be773e329e1ef3927d
9d4939918abe14a16d0e23b5441744e0a193bb53f41474c743ada83d79430b8d03aa4a6c3e62fc3c
2da3a8a69282c8a1477b77beba9d94493e6dbb91d2e0ac7eccf128ae8b1090365256302946b283e4
77bf33fb11588272c9794b1d6f1e051e93c4d09470d5cc729b160653de873992f5c37128fe85febd
ae0221b57043925f709bb7421c66e8e854398eeef386f5fbe887397958d61f90bc9bef6b4b6267f7
fbeaa4e567e788a43df0dcb266b2b5a5a5f3637c418d20a26a9695344e1f42b2d683639a9a1b3517
375ebc7a4aa4f2632ddf55e7eb9cc9bc40a97a4d866d2a7fe8e208f6f1e46ab842efa5155ac226fb
6588f5c3b6a0f0f466c4bdbeb3cd5a29ac7e1efb8273d1931bc02490dfbaa0801e7925f4d1219b1e
c4b1a074c28debe5b85c52548874e328ac490fd1cf8dc17d3adbb1b92f620351421bdd719b0c62b0
e9868e9c16f82e219daca23d65572b8d563423f419274919655fcf6cdb68e7bc6f61c8aa237132a4
a4b3b42b9538e27befb1204357ff177c6f2b51718fe1ab70fa4799802eb2ee8572359bb400d2256a
778b290fb95a9eb927725011127f721606f0f4a92f03863b38c0da6f38f10e5e8f3f58f9bb326687
ea8364f34ce8277d80348ac1523dec956784795c765f3439b1b459e925ef02d1b8542b5e10eb2c17
492063493cc5fa8348ca973d0bfdc0a983d197e402aed61df23ff11d330fb5243c5f87b6f88ba81c
0d7a6a25292eed042381ebe3c60b1a013ce1ed535cb12434b010b6d470595102b6dae153df99fd68
450f3629cd4041030a69775aa4ac194a7a9833260525f65a4c5448de65a986da1d42f43e10e9012f
30dee376c8725985871e63638aeadf7f68b435368acae3c56cc9e87ad192e73840c70b22960b9406
3dea204af51b5e250a1060df95893096bb9da021eb2b272de9018e6c8e7a3a4645ecd9e676efc0da
0dac364c504354b1b351b2aaa9360b975a2db326d948364a819036aa33f3ecf8c1b170d52da260de
787c89c012cba66a020994406ff5808a026f82204aa55f83ecbcec9dcfe98fe9aa432f9cf13822e5
ba62f5d6986192dd245d2b0875ca6862fb4e6060537554a0dff13d56f67b7f5ef9214474bedc66b3
c9e802a2497e24bec4663b580dcf8fa7c4a2798bad4e271bca319690a039917aacd68e0f29e70f41
9f6df14a688c9e498d1c87ec6a7cd7d0f65167758a9018074592621084ed5061ccbbe91947524e5b
c76e3e342abe189f67679c540dcc5c1137759fd3ed5e992ba3ed9b6dd2cdaa22d6a30022924cc9a2
a7495e8296293adc8b57b003c95f907eeeb2d374e774eb2f1d9fe39afc9147cf834aba20e102fe60
a459776f7308cf147409562e96637137501ec51ca6de88ba932e6b8a88f5e1d9db32325a196d27cd
d93400b3b8f0ee828e26c6be7e2efa970c15574d8a4d28c44f5a1858cb0029a7467ed3dfc6dc4cbc
b667c77fe2d9a4c17892cc15c8f4bdd0fa793fa1603d6ed8f25e0605557170f5b8bab58e45ed73fd
06ffe6e006e006196d6bd9e25330c6f357e73011cf78444091cf536a6ace9137cb9bbc925c69c595
3f08506021cad940eb66527fca423a1a8f4f846fc320b4652941937aba760ff5b91490a9910d863f
eab377db00b20e42de5e328a00e1441ad10c4b3bc9795bf290388c0652e1c5387558fe2e37403a5c
68559536b5a11a96cb32d9dec9a56f30589477b21593905ff90c3a5d92688ebbeb8feb142ad8e2e9
2a3765a163ad85a3612e91d942bc5c51c9aae1f0e68da9f517dcc194cdd4cb63fa01dbffce887ce2
3bfd91d46a8e0fab3e4285558b21a112a3bc904f8391df151a21215ce6776f571d8d19200900614d
f159ae8e5f9c0eb75725d4e16312663562560931be2ace425b2ed965a3c89133335eaa63214a9bb0
b3198223dc874a651b4cfa6dac76d973359b687702b4f7d346dab15dd044a2c33a2c652643365c9d
0ee028396acba79325f49bab8c8bcc53da251060539be95b7d72e043520fdf210775d2dcc2af81f8
ad1bf9d145c2762bcf8cb596f399d314bf06996086f82ef8d1c919e80dfa6adbc843623c823768b2
124a4c03eb03e3b170ca1fae048903768e1e2a560b4d538a98672639ff57f1e1a39e3aaa098ee30e
329c43539e87b83bacf889b53504427eef5ac6bb8368b629ef8e27f7f1a7d8a4c7644d5f0bd02963
a3ac4fa5054757b3d14c2fcfaafcc45d8dd4055858d21ac5058320912dd45934517336b61e4f36ac
7f587a1fa1f526745159ff2c185571fd46bc83e60ed8befb2232893adf35e125296fe144350c5a02
4f4739acedc2d68cd061ee804d5903947d5c233029819480966577aa73dd602907ef807d9956a50f
c808bf6d3b590df4c37e7fca0ff203036d2fbd8f3ed322f088377bfba85d998078254f3ef3bc2bfd
627b72ce1ea7750291b76e43004b33774ed427d427a314ba9a52cf895c8f509c2e3da99d1cd4e526
9049aa2e856d7a093c5c1f8b851a078378383f857e3f794c13624023abb9156e3b457f4b874bbf35
64576cbf99a1561630bf9a57f36121954eef96340e0160a11ead3065acb96af39edcaadaf4a01912
09e1a72f8974d154c85845c213efd84130bb8c03198da3fc5a78a9e6054e4224902f78c54ac32524
923802ab88c51d0a07de65a5e059fb43a52f48abdec8c73598b859f24e4d711979fea2c2dee913fc
ec573d5effc878fa8554b8b30a86233493b1e70d1761def85b3dffcf2140ae512fb61b6cd6ec5476
2765bb9f535be897a940c4c10f3054349ad15ecac0b39544944e6edd40fb92fc0b451cfd75efd810
f4a2dda7915a82e62b0d6fa75f5be52aa96728c02d9f57360aef6ffcd0d13f4f8effae44a0b0cef0
7a612b469bef3f0ba95368cac50c16b7abdcc83b09bf1048a1c32e20998546545d0853732aeda195
fdee29d2a8715633fa7581cfc9bcfe7d64592f46c63152adeeaaefc69e7256c55b4257c400061e02
b2ac3a1d98511112de4f103f6eff5c1a2a10226c897ac05e5583fcfbfc3f3b14f62c0e0b40fa49da
62aa99d2fb1373306200dd6a1aff86e8e00283547673e9b2de2ad87d71dec07bdee618940af25057
b2aefcb863de587f5c6e93066d40f00793a4298ddf9cd949114a4b7ffcf966657c772fd351c21989
54401f9dd486f7b78d10a980687e3c0209531db10c509f9a038b923b262480ffa0e5f28e1f3df713
d4a22cd07c9a68fb5ce10decf26e32764d893c5ba5cb255ac1dd4436a145f433dec7ef4db10e9aa1
8c90ba35dc710f35515c50b9348863aeeae7b57f748518cc3f78ac501db208c594633eb571d1bcab
873d055ad03c5459bef069bdd3c956c5bc9f8f4bdd334054d57278b4617631dac44839c462327946
3eaa87684afd92ecf125f19593aae49528356034bad03728fb2cb50b06abacdd549a1fbc77e42a01
daadc3eafc8af271e2158e754baf72f735f8ebf70edfa0071a7cd8f02eb6f9ed78dc5e1a688c812a
9ad26448ea4ee42ac2d14637b29ba45207a91b2af93386d372e0160fa58e526a63e02471500601d4
def7af35cef4622ad9b31ff9d9d8132fa8b1b2b8f5c45e85a9f72b323068d4453faf483987f7aa40
867006af51d904d7a9dce152cda3c67a3de7d21c78c580e3245baf7927f16f0e7be84c30b1da44a2
e50c66ab0968183d8199ce3b70b59b3d132f5fc7df0966943438159b2a9d8252a631e47cb0af50de
c2badde2baacd1765eff00df875628db10967056427886bd91405a4b7530c966203019a4917ab7b2
c193b19a4b5faaab001c9a05758d2605f498dae97bb7234ffe846149eaa2caee95c5e459986f19b3
ce63671ee1c9b3e56145142ccd3d21d5bdb8f9101c7425b8cec1168f932a055d9064834fc8edc748
6d599ad4be6a88dd2c887a7a4ea7abfd86d5782a8b7c3cdca84eb0390fe2f4cd769675e794035186
c38b249a8ed5e72b6a38ed883ed76efd229a409fd62f857ec0b296b3afaf9dde06011d6b3ad385c4
a2f560e6c92a8460958ab5aefb16408cd7e44dd4f6ae03e2252cc64971aa3bcaa26465eea036bb93
0fcf3916baad2ac4f970992b592618fe0a9a2cd1382992de3bc5f280538171149eecfd0daf6c3251
baadc249e584223856334f9c300b000d2a4ecce3463c585db4a176c8a4eedc9b7be3dabad6a5b24e
50b940873cba27fcedcd15cd2163b6a187f00594ea402e4c91be5c55ac6f8b8e1c2a60efe1dc5b19
4e4dafeb6094400b918d5c11a3aeb3e284be2057fc71340d58b9636f812c0b2becbf0ef610e1f763
9e7738576d5ecccc3cd4347366cb7eef75a6532f29270749bc4f1792c6934f2b60f2740fc4ea2cb6
9ebb8ba41796eb48417162527fd736fc943f82880321efcd806bc6eff4004079dd28634d1eaf84fb
36a8d3bb4dd376c31bc9a8c74e7835c5efbe654af3736655206c19a0c8f6b97aaa5a028f94c70558
4ae55f388bb74ffa6ad359acb3d5c142a931d15b50b401a6ebeef09c05447206d86b3ccb583ddf7d
26e2c2f8a1e167dd30283287e66cb129d7542ec8f31596e5e6b36f6c3eadf1581b366a0ad619bc74
807018a7c4700aadee84c5286f4e786098ee0a8931d7022746f495cebc2750678906867e8ebfefdd
a0f01f8e0709abb1887e619c9933fa7c3913be77c20171ed57b140042cd27a8ffc5200a8f4d2b51d
5f6a76eb5b3c796b144766c6ea85b91e8c2b1a9c09c05245570668c04907f73f44df96bb5f78075f
2b507b02061f2bd378afb8e9a4adb98b2678948701dfb13fdf5646a1df7d6bcc4179fd49d52312e0
94f630e334c91aa3f01e56698f536c1802be9725193a5538158bd111ff4679f6af86f859f4ca52cd
844d4a57f3bd0774de2bfe1e8eaa5534265559c029ccc99a3ec8a75d652a2fecade7c1278dd82636
b92621933ef4e8e4b2322749d61fb4c26a6b98d888bec15792656a43d1fe40e912f2be43d6fc57e5
46b0a6016e0368bebaa7500446ab30b4b6e591619984f747d39f5a8f9662af1892bbeab4971c3078
7cf3485dfb81a92f8b7f44e42e76337f86c8d8095fc9901b1e4dd8f9115e85131e242657917146a7
b49b5feb026ba2f67a3bd5b097612ba211e76034c60e5566ee4c01d93ae3311c05de83cee742e077
d97a64e0f3efa0602530ddeea98ce4962dddb9f37237124690f6843aece006927633be819bb70e86
18aa872178657ea9ddda4bc7f15fe66bce11a93d178345d566950572086cbb2492a352b9d999c580
c16fea8b335ef97aab5990aba9f020d867615057e318cead82865ce1faec479dc5ad933cf95fed50
14275c6caeaa0fb3183e35b223563550a90ec3ea4f530618489bc2b41074d93a776bf2bf73f718b9
019d6754772ea29d495c58eebfee8425ad0779012708cd69db366129c987e8b73efe0f47a8d99073
969deb6b279a7e6e1dc8d8b73a66e4aa284e74f8f605a4aae88b08b10801b676b0c2b8844f47ef6a
448f1ce79dc0dde1d16a09a01391b1c702f6421c8b16a31662df95ac89ef0e8291215215ac279d69
520893b66ede14a184a568ca3c33fbe15294e6027e199b5a8a70f97bed318ace59fef940268ed273
3a426d5d10a27f26ad7e36884de2fb368a86eaee78afcb03705327a3b9a3a2155c8e785fcf7a1888
b0dabb10fac7c302935598ecc9eff484d65f0ce2b8256f248d8ea8fd448ffc15a6431a64f1f19aa6
02ab4aea20b558a6634b77bafa7dd1243182d2eeea5e2bcc13361213617004ff948bb663ab6770ca
4f8fdf3042541b545119c0ed5d009e4981c4681d104a12da50546b84444c5a471910102290ee08d8
0aaccb50b67295fe8e83fc7662772471a72a567e7e2c7f3ae645a401eb4d92f921abccf151a18910
2ceaa708cd1532849c55913bcfd030ca12df1436cd647345085d29d42292cde7517e504fc32e0c98
3531880215f35cccba472d910aed46d9a7410dbf9a7b9b9ded94f7acedf1bf72af04e56287acb38f
b5a66f1a1c4ade75796b407075c0d95ed3c0eb5547c773ec266651561759c3160507ce7a2bb8d53f
4c21f37eac15c4065a2a9e54c8c65dbc0de0dd70fd23a0ecff1165f75535351ba74cbf1d13925473
5f69a5e8d63cda8fde20201131fa02db6c50d2ed7248a0198767d9b4856a0c58ddf279449fd10f9e
fdeb2b8089385ce8a73b9d07c7d5f7b4b4b3c3086017c480d5dda5fe7cca0f77dbf2e4d60d2ea4b9
914d33e1df1d318823a84aa9212c5bfb2bd4525aa6a9d3464df6df870c1a531d12a63d4b139c00fd
e8c48dd6e1926a26e78158cde6d443447faf1fa4f7dab3bf04f412ecd085a8bcc126aa9f9d410efe
e8c6e1e84763f7b6286a8783cf00d926c1eb826cb831857db61c4edc6f49a7938327b7ed1a8e4fb2
77b6e5d6ce522b1a97931b6922c412d17583de9db054cd52ad39393e8b983aaff751276250f6b27f
0c927ab650f456cfc2404411764fd2827ec939d00533658b5c84542fa84c9b65fbc98c15a93051df
23b507aac7aa17681174ca267a150405b6041089144314ae31aa21945dbfaca3c70cea6a2caa22a2
1b904d0a213bb70104cc53267e5b816f1915998de1e671fb7e425cae50e561b22301356253379056
15414ec219ea4da5803c32c8cd6eee14ed594b82f2aaed60ca898885797bb2c2eb2e82f64596fe4a
c119e32d086cd7be0de4b9bc6fa5692edcc6061c
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 SSC_Copy_State <Virtual>  0
 HBW_Pick TASK  0 -1
 HBW_Copy_State <Virtual>  0
 PID_10 PID  0
 PID_11 PID  0
 hunt_exp_light PROGRAM  0 -1
 HBW_Home <Virtual>  0
 HBW_Pick_Sto <Virtual>  0
 test TASK  0 -1
 HBW_Pickup_ST PROGRAM  0 -1
 HWB_Extend_Arm <Virtual>  0
 HBW_Retract_Arm <Virtual>  0
 HWB_PickUp TASK  0 -1
 HBW_HTO1POS <Virtual>  0
 HBW_Left_1Block <Virtual>  0
 HBW_HomeTo2_Col <Virtual>  0
 HWB_HomeTo3_Col <Virtual>  0
 HWB_HomeTo2_Row <Virtual>  0
 HWB_HomeTo3_Row <Virtual>  0
 HWB_HomeTo1_Col <Virtual>  0
 HBW_move_left_1 <Virtual>  0
 HWB_Home_to_11 <Virtual>  0
 HWB_11_DropOff <Virtual>  0
 HBW_Pickup <Virtual>  0
 HBW_PickUp_R1 <Virtual>  0
 HBW_Send_VGR <Virtual>  0
 HBW_PickUp_VGR <Virtual>  0
 HBW_Return_VGR <Virtual>  0
 HBW_MotorsOff <Virtual>  0
 HBW_ConvTo11 <Virtual>  0
 HBW_Return_Top <Virtual>  0
 HBW_MV_11_12 <Virtual>  0
 HBW_Conv_12 <Virtual>  0
 HBW_Conv_12_Lat <Virtual>  0
 HBW_RETRACT_13 <Virtual>  0
#END

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"VGR Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC410 C410 1 0x0 MC409 C409 1 0x0 MC412 Y28 1 0x0 MC412 MC450 1 0x0 MC411 C411 1 0x0 MC408 C408 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC413 Y29 1 0x0 MC413 MC451 1 0x0 X27 MI200 1"

// Rung VGR_Copy_State#2
// Offset 27
NOP

// Rung VGR_Copy_State#3
// Offset 28
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC800 Y41 1 0x0 Y41 MI801 1 0x0 MC802 Y43 1 0x0 Y43 MI803 1 0x0 MC804 C804 1 0x0 MC805 C805 1 0x0 MC806 Y44 1 0x0 MC807 Y20 1 0x0 MC808 C811 1 0x0 MC809 C809 1 0x0 MC810 C810 1 0x0 MC812 C812 1 0x0 MC813 C813 1 0x0 MC814 C814 1 0x0 MC816 Y45 1 0x0 MC817 Y46 1 0x0 MC818 Y21 1"

// Rung MPO_Copy_State#2
// Offset 39
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC800 C1600 1 0x0 MC801 C1601 1 0x0 MC802 C1602 1 0x0 MC803 C1603 1 0x0 MC804 C1604 1 0x0 Y31 MI800 1 0x0 MC850 C1605 1"

// Rung SLD_Copy_State#2
// Offset 19
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"SSC Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC606 C1200 1 0x0 MC607 C1201 1 0x0 MC608 C1202 1 0x0 MC609 C1203 1 0x0 MC615 C1215 1 0x0 MC616 C1216 1 0x0 MC617 C1217 1 0x0 MC618 C1218 1 0x0 MC619 C1219 1 0x0 MC620 C1220 1"

// Rung SSC_Copy_State#2
// Offset 25
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block HBW_Home
$LGCMOD HBW_Home

// Rung HBW_Home#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Home#2
// Offset 8
STRN C215
ANDN X0
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 60 60
OUT Y51

// Rung HBW_Home#3
// Offset 26
STRN C215
ANDN X3
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5

// Rung HBW_Home#4
// Offset 43
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y76

// Rung HBW_Home#5
// Offset 64
NOP

// Rung HBW_Home#6
// Offset 65
RET

// End of Code Block HBW_Home
$LGCEND HBW_Home

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 Y40 1 0x0 Y80 MHR102 1 0x0 MC101 C205 1 0x0 MC102 C206 1 0x0 MC103 C207 1 0x0 MC104 C208 1 0x0 MC105 C209 1 0x0 MC106 C210 1 0x0 MC107 C211 1 0x0 MC108 C212 1 0x0 MC109 C213 1 0x0 MC110 C214 1 0x0 MC111 C215 1 0x0 MC112 C216 1 0x0 X2 MI101 1 0x0 X10 MI102 1 0x0 X11 MI103 1 0x0 X3 MI104 1 0x0 X0 MI105 1 0x0 X6 MI106 1 0x0 X7 MI107 1 0x0 X8 MI108 1 0x0 X9 MI109 1 0x0 $HBW_Encoder_X.Acc MHR1 1 0x0 $HBW_Encoder_Z.Acc MHR2 1"

// Rung HBW_Copy_State#2
// Offset 55
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block HBW_HomeTo2_Col
$LGCMOD HBW_HomeTo2_Col

// Rung HBW_HomeTo2_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_HomeTo2_Col#2
// Offset 17
STRGE -2775 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_HomeTo2_Col#3
// Offset 22
NOP

// Rung HBW_HomeTo2_Col#4
// Offset 23
NOP

// Rung HBW_HomeTo2_Col#5
// Offset 24
NOP

// Rung HBW_HomeTo2_Col#6
// Offset 25
RET

// End of Code Block HBW_HomeTo2_Col
$LGCEND HBW_HomeTo2_Col

// Beginning of Code Block HWB_HomeTo1_Col
$LGCMOD HWB_HomeTo1_Col

// Rung HWB_HomeTo1_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HWB_HomeTo1_Col#2
// Offset 17
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_HomeTo1_Col#3
// Offset 22
NOP

// Rung HWB_HomeTo1_Col#4
// Offset 23
NOP

// Rung HWB_HomeTo1_Col#5
// Offset 24
RET

// End of Code Block HWB_HomeTo1_Col
$LGCEND HWB_HomeTo1_Col

// Beginning of Code Block HWB_Home_to_11
$LGCMOD HWB_Home_to_11

// Rung HWB_Home_to_11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HWB_Home_to_11#2
// Offset 22
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_Home_to_11#3
// Offset 27
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HWB_Home_to_11#4
// Offset 49
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_Home_to_11#5
// Offset 54
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HWB_Home_to_11#6
// Offset 73
NOP

// Rung HWB_Home_to_11#7
// Offset 74
NOP

// Rung HWB_Home_to_11#8
// Offset 75
RET

// End of Code Block HWB_Home_to_11
$LGCEND HWB_Home_to_11

// Beginning of Code Block HWB_11_DropOff
$LGCMOD HWB_11_DropOff

// Rung HWB_11_DropOff#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HWB_11_DropOff#2
// Offset 8
STRGE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_11_DropOff#3
// Offset 13
STRN C215
ANDN C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51

// Rung HWB_11_DropOff#4
// Offset 31
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y4
AND ST2
OUT Y5

// Rung HWB_11_DropOff#5
// Offset 51
STRGE 2850 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_11_DropOff#6
// Offset 56
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 60 60
OUT Y7

// Rung HWB_11_DropOff#7
// Offset 73
RET

// End of Code Block HWB_11_DropOff
$LGCEND HWB_11_DropOff

// Beginning of Code Block HBW_PickUp_R1
$LGCMOD HBW_PickUp_R1

// Rung HBW_PickUp_R1#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R1#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R1#3
// Offset 41
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R1#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R1#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_PickUp_R1#6
// Offset 69
NOP

// Rung HBW_PickUp_R1#7
// Offset 70
NOP

// Rung HBW_PickUp_R1#8
// Offset 71
NOP

// Rung HBW_PickUp_R1#9
// Offset 72
NOP

// Rung HBW_PickUp_R1#10
// Offset 73
RET

// End of Code Block HBW_PickUp_R1
$LGCEND HBW_PickUp_R1

// Beginning of Code Block HBW_Send_VGR
$LGCMOD HBW_Send_VGR

// Rung HBW_Send_VGR#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Send_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_Send_VGR#3
// Offset 37
STRN C215
AND X2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y48
AND ST2
OUT Y49

// Rung HBW_Send_VGR#4
// Offset 56
NOP

// Rung HBW_Send_VGR#5
// Offset 57
NOP

// Rung HBW_Send_VGR#6
// Offset 58
RET

// End of Code Block HBW_Send_VGR
$LGCEND HBW_Send_VGR

// Beginning of Code Block HBW_PickUp_VGR
$LGCMOD HBW_PickUp_VGR

// Rung HBW_PickUp_VGR#1
// Offset 0
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_PickUp_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_PickUp_VGR#3
// Offset 37
STRN C215
AND X11
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_PickUp_VGR#4
// Offset 56
NOP

// Rung HBW_PickUp_VGR#5
// Offset 57
NOP

// Rung HBW_PickUp_VGR#6
// Offset 58
RET

// End of Code Block HBW_PickUp_VGR
$LGCEND HBW_PickUp_VGR

// Beginning of Code Block HBW_Return_VGR
$LGCMOD HBW_Return_VGR

// Rung HBW_Return_VGR#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C253
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y6

// Rung HBW_Return_VGR#2
// Offset 22
STRN C215
AND X1
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_Return_VGR#3
// Offset 41
STRN C215
AND C251
DUPBOOL
ANDN X1
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_Return_VGR#4
// Offset 63
STRLE 2575 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_VGR#5
// Offset 68
NOP

// Rung HBW_Return_VGR#6
// Offset 69
NOP

// Rung HBW_Return_VGR#7
// Offset 70
RET

// End of Code Block HBW_Return_VGR
$LGCEND HBW_Return_VGR

// Beginning of Code Block HBW_MotorsOff
$LGCMOD HBW_MotorsOff

// Rung HBW_MotorsOff#1
// Offset 0
STRN C215
ANDN ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_MotorsOff#2
// Offset 18
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_MotorsOff#3
// Offset 36
STRN C215
AND ST2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
OUT Y48

// Rung HBW_MotorsOff#4
// Offset 54
NOP

// Rung HBW_MotorsOff#5
// Offset 55
NOP

// Rung HBW_MotorsOff#6
// Offset 56
NOP

// Rung HBW_MotorsOff#7
// Offset 57
RET

// End of Code Block HBW_MotorsOff
$LGCEND HBW_MotorsOff

// Beginning of Code Block HBW_ConvTo11
$LGCMOD HBW_ConvTo11

// Rung HBW_ConvTo11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_ConvTo11#2
// Offset 22
NOP

// Rung HBW_ConvTo11#3
// Offset 23
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_ConvTo11#4
// Offset 28
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_ConvTo11#5
// Offset 50
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_ConvTo11#6
// Offset 55
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_ConvTo11#7
// Offset 74
NOP

// Rung HBW_ConvTo11#8
// Offset 75
NOP

// Rung HBW_ConvTo11#9
// Offset 76
RET

// End of Code Block HBW_ConvTo11
$LGCEND HBW_ConvTo11

// Beginning of Code Block HBW_Return_Top
$LGCMOD HBW_Return_Top

// Rung HBW_Return_Top#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Return_Top#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HBW_Return_Top#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_Top#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_Return_Top#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return_Top#6
// Offset 69
NOP

// Rung HBW_Return_Top#7
// Offset 70
NOP

// Rung HBW_Return_Top#8
// Offset 71
RET

// End of Code Block HBW_Return_Top
$LGCEND HBW_Return_Top

// Beginning of Code Block HBW_MV_11_12
$LGCMOD HBW_MV_11_12

// Rung HBW_MV_11_12#1
// Offset 0
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_MV_11_12#2
// Offset 21
NOP

// Rung HBW_MV_11_12#3
// Offset 22
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_MV_11_12#4
// Offset 44
STRGE 5325 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_MV_11_12#5
// Offset 49
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
OUT Y4

// Rung HBW_MV_11_12#6
// Offset 67
STRGE 5325 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_MV_11_12#7
// Offset 72
NOP

// Rung HBW_MV_11_12#8
// Offset 73
NOP

// Rung HBW_MV_11_12#9
// Offset 74
RET

// End of Code Block HBW_MV_11_12
$LGCEND HBW_MV_11_12

// Beginning of Code Block HBW_Conv_12
$LGCMOD HBW_Conv_12

// Rung HBW_Conv_12#1
// Offset 0
NOP

// Rung HBW_Conv_12#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_12#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Conv_12#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 80
OUT C251

// Rung HBW_Conv_12#5
// Offset 45
NOP

// Rung HBW_Conv_12#6
// Offset 46
RET

// Rung HBW_Conv_12#7
// Offset 47
NOP

// Rung HBW_Conv_12#8
// Offset 48
NOP

// End of Code Block HBW_Conv_12
$LGCEND HBW_Conv_12

// Beginning of Code Block HBW_Conv_12_Lat
$LGCMOD HBW_Conv_12_Lat

// Rung HBW_Conv_12_Lat#1
// Offset 0
NOP

// Rung HBW_Conv_12_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv_12_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv_12_Lat#4
// Offset 42
STRGE 5325 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv_12_Lat#5
// Offset 47
NOP

// Rung HBW_Conv_12_Lat#6
// Offset 48
RET

// Rung HBW_Conv_12_Lat#7
// Offset 49
NOP

// Rung HBW_Conv_12_Lat#8
// Offset 50
NOP

// End of Code Block HBW_Conv_12_Lat
$LGCEND HBW_Conv_12_Lat

// Beginning of Code Block HBW_RETRACT_13
$LGCMOD HBW_RETRACT_13

// Rung HBW_RETRACT_13#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_RETRACT_13#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_RETRACT_13#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_RETRACT_13#4
// Offset 46
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_RETRACT_13#5
// Offset 68
STRGE 7685 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_RETRACT_13#6
// Offset 73
RET

// End of Code Block HBW_RETRACT_13
$LGCEND HBW_RETRACT_13

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#2
// Offset 3
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#3
// Offset 6
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#4
// Offset 9
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#5
// Offset 12
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// Rung $Main#6
// Offset 15
#BEGIN FMT_COMMENT 
"Hunter Demo Light<br>"
#END

STR ST1
RUN hunt_exp_light

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
SG HBW_Program.S0

// Rung HBW_Program#2
// Offset 2
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#3
// Offset 10
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#4
// Offset 12
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#5
// Offset 14
STR ST1
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#6
// Offset 22
NOP

// Rung HBW_Program#7
// Offset 23
STR C213
JMP HBW_Program.S1

// Rung HBW_Program#8
// Offset 25
SG HBW_Program.S1

// Rung HBW_Program#9
// Offset 27
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#10
// Offset 35
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#11
// Offset 37
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#12
// Offset 39
STR ST1
DUPBOOL
STR C205
ANDN C206
STR C206
ANDN C205
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 500 60
POPBOOL
DUPBOOL
AND C205
OUT Y48
POPBOOL
AND C206
OUT Y49

// Rung HBW_Program#13
// Offset 68
STR ST1
DUPBOOL
STR C207
ANDN C208
STRN C207
AND C208
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
POPBOOL
DUPBOOL
AND C207
OUT Y50
POPBOOL
AND C208
OUT Y51

// Rung HBW_Program#14
// Offset 97
STR ST1
DUPBOOL
STR C209
ANDN C210
STRN C209
AND C210
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
POPBOOL
DUPBOOL
AND C209
OUT Y4
POPBOOL
AND C210
OUT Y5

// Rung HBW_Program#15
// Offset 126
STR ST1
DUPBOOL
STR C211
ANDN C212
STRN C211
AND C212
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
POPBOOL
DUPBOOL
AND C211
OUT Y6
POPBOOL
AND C212
OUT Y7

// Rung HBW_Program#16
// Offset 155
STR C213
JMP HBW_Program.S2

// Rung HBW_Program#17
// Offset 157
SG HBW_Program.S2

// Rung HBW_Program#18
// Offset 159
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#19
// Offset 167
STR X0
OUT $HBW_Encoder_X.ResetLevel

// Rung HBW_Program#20
// Offset 169
STR X3
OUT $HBW_Encoder_Z.ResetLevel

// Rung HBW_Program#21
// Offset 171
STR ST1
CALL HBW_Home 0x1 DST511 "3" "3"

// Rung HBW_Program#22
// Offset 179
STR X0
AND X11
AND X3
JMP HBW_Program.S3

// Rung HBW_Program#23
// Offset 183
STR C212
JMP HBW_Program.S3

// Rung HBW_Program#24
// Offset 185
NOP

// Rung HBW_Program#25
// Offset 186
SG HBW_Program.S3

// Rung HBW_Program#26
// Offset 188
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#27
// Offset 196
STR ST1
CALL HWB_Home_to_11 0x1 DST511 "3" "3"

// Rung HBW_Program#28
// Offset 204
STRN C250
ANDN C251
JMP HBW_Program.S4

// Rung HBW_Program#29
// Offset 207
SG HBW_Program.S4

// Rung HBW_Program#30
// Offset 209
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#31
// Offset 217
STR ST1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#32
// Offset 225
STR X10
ANDN C251
JMP HBW_Program.S5

// Rung HBW_Program#33
// Offset 228
SG HBW_Program.S5

// Rung HBW_Program#34
// Offset 230
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#35
// Offset 238
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#36
// Offset 246
STRN C251
AND C250
JMP HBW_Program.S6

// Rung HBW_Program#37
// Offset 249
SG HBW_Program.S6

// Rung HBW_Program#38
// Offset 251
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#39
// Offset 259
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#40
// Offset 267
STRN X2
JMP HBW_Program.S7

// Rung HBW_Program#41
// Offset 269
SG HBW_Program.S7

// Rung HBW_Program#42
// Offset 271
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#43
// Offset 279
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#44
// Offset 287
STR X11
JMP HBW_Program.S8
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#45
// Offset 296
SG HBW_Program.S8

// Rung HBW_Program#46
// Offset 298
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#47
// Offset 306
STR ST1
CALL HBW_ConvTo11 0x1 DST511 "3" "3"

// Rung HBW_Program#48
// Offset 314
STRN C250
ANDN C251
JMP HBW_Program.S9

// Rung HBW_Program#49
// Offset 317
SG HBW_Program.S9

// Rung HBW_Program#50
// Offset 319
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#51
// Offset 327
STR ST1
CALL HBW_Return_Top 0x1 DST511 "3" "3"

// Rung HBW_Program#52
// Offset 335
STR X10
ANDN C251
JMP HBW_Program.S10

// Rung HBW_Program#53
// Offset 338
SG HBW_Program.S10

// Rung HBW_Program#54
// Offset 340
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#55
// Offset 348
STR ST1
CALL HBW_MV_11_12 0x1 DST511 "3" "3"

// Rung HBW_Program#56
// Offset 356
STRN C250
JMP HBW_Program.S11

// Rung HBW_Program#57
// Offset 358
SG HBW_Program.S11

// Rung HBW_Program#58
// Offset 360
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#59
// Offset 368
STR ST1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#60
// Offset 376
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#61
// Offset 379
SG HBW_Program.S12

// Rung HBW_Program#62
// Offset 381
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#63
// Offset 389
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#64
// Offset 397
STRN C251
AND C250
JMP HBW_Program.S13

// Rung HBW_Program#65
// Offset 400
SG HBW_Program.S13

// Rung HBW_Program#66
// Offset 402
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#67
// Offset 410
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#68
// Offset 418
STRN X2
JMP HBW_Program.S14

// Rung HBW_Program#69
// Offset 420
SG HBW_Program.S14

// Rung HBW_Program#70
// Offset 422
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#71
// Offset 430
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#72
// Offset 438
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#73
// Offset 447
SG HBW_Program.S15

// Rung HBW_Program#74
// Offset 449
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#75
// Offset 457
STR ST1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#76
// Offset 465
STRN C251
JMP HBW_Program.S16
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#77
// Offset 474
SG HBW_Program.S16

// Rung HBW_Program#78
// Offset 476
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#79
// Offset 484
STR ST1
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#80
// Offset 492
STRN C250
AND X10
JMP HBW_Program.S17

// Rung HBW_Program#81
// Offset 495
SG HBW_Program.S17

// Rung HBW_Program#82
// Offset 497
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#83
// Offset 505
STR ST1
CALL HBW_RETRACT_13 0x1 DST511 "3" "3"

// Rung HBW_Program#84
// Offset 513
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#85
// Offset 515
NOP

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#2
// Offset 8
STR ST1
DUPBOOL
STR C410
ANDN C409
STRN C410
AND C409
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
POPBOOL
DUPBOOL
AND C410
OUT Y27
POPBOOL
AND C409
OUT Y26

// Rung VGR_Program#3
// Offset 37
STR ST1
DUPBOOL
STR C408
ANDN C411
STRN C408
AND C411
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
POPBOOL
DUPBOOL
AND C408
OUT Y24
POPBOOL
AND C411
OUT Y25

// Rung VGR_Program#4
// Offset 66
STR ST1
DUPBOOL
STR C406
ANDN C407
STRN C406
AND C407
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
POPBOOL
DUPBOOL
AND C406
OUT Y23
POPBOOL
AND C407
OUT Y22

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STR C813
OUT Y18

// Rung MPO_Program#4
// Offset 12
STR C810
OUT Y17

// Rung MPO_Program#5
// Offset 14
STR C811
OUT Y52

// Rung MPO_Program#6
// Offset 16
STR ST1
DUPBOOL
STR C804
ANDN C805
STR C805
ANDN C804
ORSTR
ANDSTR
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 100
POPBOOL
DUPBOOL
AND C804
OUT Y53
POPBOOL
AND C805
OUT Y15

// Rung MPO_Program#7
// Offset 45
STR C814
OUT Y19

// Rung MPO_Program#8
// Offset 47
STR C809
JMP MPO_Program.S2

// Rung MPO_Program#9
// Offset 49
SG MPO_Program.S1

// Rung MPO_Program#10
// Offset 51
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#11
// Offset 59
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#12
// Offset 61
STRN X24
SET Y17

// Rung MPO_Program#13
// Offset 63
STR Y17
OUT Y20
ANDN X17
ONDTMR T0 1000 Y44

// Rung MPO_Program#14
// Offset 69
SG MPO_Program.S2

// Rung MPO_Program#15
// Offset 71
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#16
// Offset 79
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#17
// Offset 81
STRN X19
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y53

// Rung MPO_Program#18
// Offset 97
STR X19
JMP MPO_Program.S3

// Rung MPO_Program#19
// Offset 99
SG MPO_Program.S3

// Rung MPO_Program#20
// Offset 101
STR ST1
SET Y17

// Rung MPO_Program#21
// Offset 103
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#22
// Offset 111
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#23
// Offset 113
STR X19
SET Y19

// Rung MPO_Program#24
// Offset 115
STR X19
ONDTMR T100 2000 Y18

// Rung MPO_Program#25
// Offset 119
STR T100.DN
JMP MPO_Program.S4

// Rung MPO_Program#26
// Offset 121
SG MPO_Program.S4

// Rung MPO_Program#27
// Offset 123
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#28
// Offset 131
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#29
// Offset 133
STR X19
RST Y19

// Rung MPO_Program#30
// Offset 135
STRN X16
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y15

// Rung MPO_Program#31
// Offset 151
STR X16
JMP MPO_Program.S5

// Rung MPO_Program#32
// Offset 153
SG MPO_Program.S5

// Rung MPO_Program#33
// Offset 155
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#34
// Offset 163
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#35
// Offset 165
STR X16
SET Y19

// Rung MPO_Program#36
// Offset 167
STR Y19
ONDTMR T101 2000 C815

// Rung MPO_Program#37
// Offset 171
STR C815
RST Y18

// Rung MPO_Program#38
// Offset 173
STRN Y18
JMP MPO_Program.S6

// Rung MPO_Program#39
// Offset 175
SG MPO_Program.S6

// Rung MPO_Program#40
// Offset 177
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#41
// Offset 185
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#42
// Offset 187
STR X16
RST Y19

// Rung MPO_Program#43
// Offset 189
STRN Y19
ONDTMR T102 1000 C818

// Rung MPO_Program#44
// Offset 193
STR C818
JMP MPO_Program.S7

// Rung MPO_Program#45
// Offset 195
SG MPO_Program.S7

// Rung MPO_Program#46
// Offset 197
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#47
// Offset 205
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#48
// Offset 207
STRN X15
OUT Y45

// Rung MPO_Program#49
// Offset 209
STR X15
TMRDOWN T102 1000
OUT Y43

// Rung MPO_Program#50
// Offset 213
STR T102.Done
JMP MPO_Program.S8

// Rung MPO_Program#51
// Offset 215
SG MPO_Program.S8

// Rung MPO_Program#52
// Offset 217
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#53
// Offset 225
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#54
// Offset 227
STRN X13
OUT Y45

// Rung MPO_Program#55
// Offset 229
STR X13
TMRDOWN T103 1000
OUT Y21

// Rung MPO_Program#56
// Offset 233
STR T103.Done
JMP MPO_Program.S9

// Rung MPO_Program#57
// Offset 235
SG MPO_Program.S9

// Rung MPO_Program#58
// Offset 237
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#59
// Offset 245
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#60
// Offset 247
STR ST1
OUT Y47

// Rung MPO_Program#61
// Offset 249
STRN X12
ONDTMR T104 1000 Y46

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
SG SLD_Program.S0

// Rung SLD_Program#2
// Offset 2
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#3
// Offset 10
STR C1600
OUT Y30

// Rung SLD_Program#4
// Offset 12
STR C1601
OUT Y31

// Rung SLD_Program#5
// Offset 14
STR C1602
OUT Y32

// Rung SLD_Program#6
// Offset 16
STR C1603
OUT Y33

// Rung SLD_Program#7
// Offset 18
STR C1604
OUT Y34

// Rung SLD_Program#8
// Offset 20
STR C1605
JMP SLD_Program.S1

// Rung SLD_Program#9
// Offset 22
SG SLD_Program.S1

// Rung SLD_Program#10
// Offset 24
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#11
// Offset 32
STRN C1605
JMP SLD_Program.S0

// Rung SLD_Program#12
// Offset 34
STRN X35
OFFDTMR T200 1750 C1651

// Rung SLD_Program#13
// Offset 38
STR C1651
OUT Y30

// Rung SLD_Program#14
// Offset 40
STRGE T200.Acc 1750
FLASHER 500 500 Y899

// Rung SLD_Program#15
// Offset 48
SG SLD_Program.S2

// Rung SLD_Program#16
// Offset 50
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#17
// Offset 58
STRN C1605
JMP SLD_Program.S0

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STR C1200
OUT Y39

// Rung SSC_Program#4
// Offset 12
STR C1201
OUT Y40

// Rung SSC_Program#5
// Offset 14
STR C1202
OUT Y41

// Rung SSC_Program#6
// Offset 16
STR C1215
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y35

// Rung SSC_Program#7
// Offset 32
STR C1216
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y36

// Rung SSC_Program#8
// Offset 48
STR C1217
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#9
// Offset 64
STR C1218
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#10
// Offset 80
STR ST2
ANDPD X47
ANDPDPF
STR ST2
AND CT150.Done
CNT CT150 100

// Rung SSC_Program#11
// Offset 88
STR C1203
JMP SSC_Program.S1

// Rung SSC_Program#12
// Offset 90
SG SSC_Program.S1

// Rung SSC_Program#13
// Offset 92
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#14
// Offset 100
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#15
// Offset 102
STRN X41
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#16
// Offset 118
STRN X40
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y36

// Rung SSC_Program#17
// Offset 134
STR X40
AND X41
JMP SSC_Program.S2

// Rung SSC_Program#18
// Offset 137
SG SSC_Program.S2

// Rung SSC_Program#19
// Offset 139
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#20
// Offset 147
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#21
// Offset 149
STR X44
ANDPDPF
STR ST2
CNT CT150 300

// Rung SSC_Program#22
// Offset 154
STRN CT150.Done
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y35

// Rung SSC_Program#23
// Offset 170
STR X46
STR ST2
CNT CT151 1300

// Rung SSC_Program#24
// Offset 174
STRN CT151.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#25
// Offset 190
STR CT150.Done
AND CT151.Done
JMP SSC_Program.S3

// Rung SSC_Program#26
// Offset 193
SG SSC_Program.S3

// Rung SSC_Program#27
// Offset 195
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#28
// Offset 203
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#29
// Offset 205
STR X46
STR ST2
CNT CT152 300

// Rung SSC_Program#30
// Offset 209
STRN CT152.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// End of Code Block SSC_Program
$PGMEND SSC_Program

// Beginning of Code Block hunt_exp_light
$PRGRM hunt_exp_light

// Rung hunt_exp_light#1
// Offset 0
STR ST2
COPY 0x1 "4 0x0 MC402 Y39 1"

// End of Code Block hunt_exp_light
$PGMEND hunt_exp_light

// Beginning of Code Block HWB_PickUp
$TSK HWB_PickUp

// Rung HWB_PickUp#1
// Offset 0
NOP

// End of Code Block HWB_PickUp
$TSKEND HWB_PickUp

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"C1","copy","",""
"C11","C11_Interlock","","Used to delay logic by one scan"
"C12","C12_Interlock_2","","Used to delay logic by one scan"
"C20","HBW_Has_Pallet","","True when carrying a pallet"
"C51","X_Direction","","True: Left False: Right"
"C52","Z_Direction","","True: Down False: Up"
"C80","Conveyor_Timeout","","Bit high when Conveyor Timeout timer active"
"C90","HBW_XY_PID_EN","","Enables PID control in HBW_Move_XZ"
"C101","HBW_T1_Send","Modbus MC101","Task to deliver a pallet to conveyor"
"C102","HBW_T2_Receive","Modbus MC102","Task to pickup a pallet from conveyor"
"C103","HBW_T3_Reset","Modbus MC103","Reinitialize and home all axises"
"C104","HBW_T4_Manual","Modbus MC104","Switch to manual mode"
"C110","HBW_Move_X_L","Modbus MC110","Move Horizontal Axis towards bay"
"C111","HBW_Move_X_R","Modbus MC111","Move Horizontal Axis towards Conveyor"
"C112","HBW_Move_Y_In","Modbus MC112","Move Cantilever In"
"C113","HBW_Move_Y_Out","Modbus MC113","Move Cantilever Out"
"C114","HBW_Move_Z_Up","Modbus MC114","Move Vertical Axis Up"
"C115","HBW_Move_Z_Down","Modbus MC115","Move Vertical Axis Down"
"C116","HBW_Conveyor_In","Modbus MC116","Move Conveyor In"
"C117","HBW_Conveyor_Out","Modbus MC117","Move Conveyor Out"
"C130","HBW_Status_Ready","Modbus MC130","On when ready for a task"
"C133","HBW_Mov_Conveyor","Modbus MC133","Status Conveyor Moving"
"C134","HBW_Moving_X","Modbus MC134","Status GantryMovingX"
"C135","HBW_Moving_Y","Modbus MC135","Status GantryMovingY"
"C136","HBW_Moving_Z","Modbus MC136","Status GantryMovingZ"
"C138","HBW_Status_Y_Pos","Modbus MC138","Current Y position"
"C141","HBW_Target_Y_Pos","Modbus MC141","Target Y position"
"C150","HBW_MoveComplete","","HBW_Move_XZ completion interlock."
"C180","HBW_Fault","Modbus MC180","Status in Fault State"
"C182","Fault_X_Target","","Active when X target out of range"
"C183","Fault_Z_target","","Active when Z target out of range"
"C400","VGR_T0","",""
"C410","VGR_T1","",""
"C420","VGR_T2","",""
"C430","VGR_T3","",""
"C440","VGR_T4","",""
"C500","VGR_Man_Control","",""
"C799","VGR_RESET","",""
"V105","HBW_Task_X_slot","Modbus MHR105","Value for slot X coord"
"V106","HBW_Task_Y_slot","Modbus MHR106","Value for slot y coord"
"V118","HBW_PWM_Set_X","Modbus MHR118","Set Horizontal Axis PWM Duty Cycle %"
"V119","HBW_PWM_Set_Y","Modbus MHR119","Set Cantilever Axis PWM Duty Cycle %"
"V120","HBW_PWM_Set_Z","Modbus MHR120","Set Vertical Axis PWM Duty cycle %"
"V131","HBW_Cur_Progress","Modbus MHR131","0 to 100 percent job completion"
"V132","HBW_Cur_Stage","Modbus MHR132","Current stage number"
"V137","HBW_Status_X_Pos","Modbus MHR137","Current X encoder position"
"V139","HBW_Status_Z_Pos","Modbus MHR139","Current Z encoder position"
"V140","HBW_Target_X_Pos","Modbus MHR140","Target X encoder position"
"V142","HBW_Target_Z_Pos","Modbus MHR142","Target Z encoder position"
"V181","HBW_Fault_code","Modbus MHR181","Current Fault code"
"V801","VGR_Fault_Code","",""
"N810","VGR_Rot_Target","",""
"N811","VGR_X_Target","",""
"N812","VGR_Y_Target","",""
"D0","MC","",""
"D1","Feeder_Extend","",""
"D140","X_Start_Position","","Distance to target"
"D142","Y_Start_Position","","Distance to target"
"D143","HBW_PWM_Cur_X","","PWM value for X for XZ movement task"
"D144","HBW_PWM_Cur_Z","","PWM value for Z for XZ movement task"
"T3","T_HBW_S6","",""
"T4","T_Conveyor_Timer","","Used to detect conveyor faults"
"MPO_Program.S2","Vaccum_MO","",""
"MPO_Program.S3","Vaccum","",""
"MPO_Program.S4","Vacumm_MO","",""
"MPO_Program.S5","Vaccum_Load","",""
"US0","_CP_Strogram_A","","CP_State_Program"
"US1","_VGR_Movement","","VGR_Movement"
"US2","_SSC_Check_InOut","","SSC_Check_InOut"
"UB0","_VGR_MisScan_A","","VGR_Movement.Done ThisScan"
#END

