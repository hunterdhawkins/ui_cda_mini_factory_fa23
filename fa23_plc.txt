// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\aaron\Documents\classes\uidaho\2023-spring-and-fall\466\ui_cda_mini_factory_fa23\fa23_plc.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
ec5aa1906278aee20c0789f7c3b8f15f923dae8f3d4f32903804b62ef73b9a61c5df6471430a682e
f650d25356db83ab5dc310a4daf432eaa3d1b02b805dfc91b8602a012ef44848ab55a8f4a2bfc5cd
6ed0f1be46258c37c8566f7d240d32aa771101f6b57496b03935b0d2b5a2237f2f5b14c26af96085
e34ccb9fcd0d0465077e76b35b8c034974d7dee5d5396058f5e6b3922fe0471562156ff2f92e591e
44cb9a95d34f810a2aaf1b3c6b7589197137316a4045fdae27c369c99ef9f1c5219df3d320f8c3a9
46de7ee7744593e7a752aa4ed57e9489a71a847b819604f3f7e16a4e18550cb6228634c0525dbd43
51071be9a9720a78a0108c45b468948f059131bd59b26f2ad1089386922f52771b646c47f8cd7f4e
fb95c61fbb791c57c167c119a288c78fe88301b0af81f9760d8695e73c2c06ab7403e69136eca1e8
d2077b3ef2775369f84e57c5efec2fdba993385804cee4ebad53a5a32341882df171c7c9fc994d2d
9c3a07ce330b1f2015c1f6d076a6b89d5f420f91ae778fcfdf350920d9051c516d68cd1eeffe8356
f15140ee7c2a61d59f449dd831fdef52e66a714fbbfa5fc50e7cf34adbf8860720f0b26f133512f3
1809a336f0c832e927971fe727d53115ede4bdbf225f5724798a4eeae1fba7a1fe40b6f79c4acb47
9bdf117538513a6576dcddc2b5223bf8722c2e37d17c2cef7ac0bd42a6abf0744233df4ca6191864
cf4e38163f22d83e5475d7260c600463ddf3c23a4a63b5e0c36b75163c73193145da71732a06145f
d8a675b1d0888a903696d98583b211b5e70f8199ecf017f22cbed24a8bd7ee834d72f2036d93fb6c
1f3598f08414b4ee581f5f3ce6174e92830dd5d0401c4526fee1f285a5e22b27b7eaed667a143553
8394c088afd46d946e763af64acd74fbc623a5d0051c71fd55635e382c9728102e9bc7e36b5bc09e
992ba35fa7b590df07deb347f60146460a895aebb1ef0fc06f7e5debc01a1278edb0139774f10ab4
9f3972131be5713788dc1a97e5250bfdd5202422e7487d341b5fbb07a4f3dd24321341719ded773c
7cdf418203a7bf3f354b418fe83c10b3b83e292f6bd88e798a2a0320b54f7419b637994cc66d0d59
ad5aac127bbb769baeaef9f3a7fb17530f57a4850fdaab0a1b92861723911476e0bc5a4fb975c37b
b08b96133138ab33c32cd9473d1ac6ddfd91778482990f168abc920baf27da78422636396ba09673
b4a4ad8a244e8fd56bcd3e26f1a7a16ada144377b71c7351d4d74a8461867dfd7e3b793a6d2e9280
6f37187eb13c93fdeb9747c0d83430fac45cff1a5465fbedc721ef505df4989cded0205484d3618a
889f3f66adb207e282a7529e16a8a444439faebd75b89f400f43fd4e650350a770fb347d0686c245
c1d9f15c078921af9c4eef2be42605c36d0f99dc7f5ae4aabd10ef371e8edbd3081a295dab53971d
6e4895b29093920a5480004385bdbf79751c282ecf841544225ea2b4a3f8c7b959687635e0f5050d
7ea6b39cd5d894edd4c3bdf228ef4092e733274faaaf8ddbfdedf6403c2cf1edf3427430ad02b93b
4398682cac26b6d7c939213ac30f8e69526380b316d27cfe90c40d44122d01a03acdd2a927cd7f63
d8d742f63d828844f179b6903ac8f2f1fda96c37809fa4ac77ae37ba86c612c95445ac288e35e851
0638917d3e685ef415cfbf800394b1cccf4d1a505c6dbfcf006c02db699f103b31d067bd1fd3e7d7
e59b7503f84d5cc17cb30a59954531be58fc03e120a793c8a21004b7280b34748dc26529ca6b9ec2
5d6fdea085a54b9b4f19e363f1426325f11053fedfbf5656b0a587a74999b3e51f9f0dbe9f199dd1
50a78eac84f59179c01d1e7b4b17cbac0374941b0865d0606fddb7cc0264510d018ba435656fcc5c
dc02054fec941324b3a4b1adde6da6f9601cf08b269999ad8e9696558a1bfa89b8e9f593c602ac2d
2e3cc14abcf43693227eb3c9028bf03a4bb7fbdf50a353856a010e1d3036ec42c743f2eb1b0c6907
4f9deb0154bb37d4fc692e1d90f298135c605dd38f02ebe7874dc59bb88a9d6e971fd4ab537307fc
31cc8e9422bdd790c8635aeabed6b2f1d03f838a74b1e5ccaf3cd8534421d3bb42197cb73c0711c1
32d8a04be70c74193dd12de6c01a6bc9c8b5ffbfc9796d6d0cd79d5009234ded5da175fedfbb89f4
be3860f212264c5a767a2aab52aa3129a3a9d9fd1c3b2267ceae6976cfd75a55053be77e0f25fd54
53772da34342be1abc8f11b690715e87c2ebc6d9ed899292f36101349158338e13040446c4ec59d7
2ee35f77dd0296901e3adb07915911c729f1bb7d1cf824a2d9485c7289e23b8d077ca17cf970ff73
e7244efbe110449530a149a0367c99c2c9b43ce6469aab83d4445bb87d911ad22e9b5832b0f0b94c
048ba1f38c99ace4c9664af003d443887f9437f6a53019868fcee68fc6ef058d69fb31c6d3860852
0c51a1459e78c02ac324c2b5a3b09c1761fc88a85a18a2952cb5f51f72f6674a7c6f33d117a9d500
87fb0fc6b31aa109045292dde5a9d272c2beb13b1e31b2383adf4f024de730ab70aebff8eb7a6552
932eb3d990a6f3973b11d4efc6fbd1faa49bae86aa2510746fcf0c1286c28ba23f111d34bacd939b
100d670172e7587b783c80f4f329f6dc13372499acda6b3fbc52467f48883219638cf001f385636e
2f89b21baf42a00227be067026e55831cea36c6a6eb2d9526153bf4129dbc37dfdcdd9b23f01b6d0
29d41c59bd8fb0dc9cd5c00f7eae62fa247e0304bbfd1b398eb255c28e30a651320f66693fb2af2a
5805ab72c55e95d9db8b46a485a743b494a576f2132cab76efa3e7a06795f1fe6fc48c98aefd6121
600e12cb66b907ba1d873486e343c13bd3373a10b73041107714c5c5452114520d3ca78033a99285
9563ea45eeeeb2cd3b57c9ec373cfa16cd026f5f5ccdf677982b265bf0aebdb49d87d28a24245db1
b2911c288431ba1741ff0f1382c81dddebc3fd6e8eba37e345e39dc0d5324f450e66118b3f46f1f0
f4730987bc935e01e254cc017f84b4e6bba39f23447039de6bbdcc49d3155bde4c80ee46d0c8c2b4
f4eb00caeb7e94e76494343f09cf33b0648212508ed70ea47e8ac4c5f7880fc135689109ad918d50
4a1adc0bf15fc8fd8a7c4a72c39e78c65fed51f9b98700a35f3577869d7e4d4dc7635262da919f5e
133be00f008f34ce27410fbb2ce43cbe4948b65e50d7e379cf34959b0c280bcdcdcea7700cec3fd9
bcb3bb5bafbb07629744452bf0622a74ae40a415386a45511e62de8053bdc1b38b1afb74b70e59ab
a3a22a22ccfe2c6bcb3a2c1d5d363c2a7c558070ac90cd82af9d5ba98f361d2feff1db1353d42ca2
49e93728529d9d4bfe61a7d659e123260a498251d14b37cdec36da1fe865018b4259e8039fa889a7
7aed4de85bb9ca7d88a254d9efea5db7bd5bf3a38e585407d1b4f4c1841ebde23f387e804922d3ce
72f9a927373b31ee172f065842ba1f0855a06bbdd939e383df02e4f3647b9e3fa429eb17e78ead63
906034e599957c8754a75659749fadc107787be2664379c346dd50b09cc5de68166d13c662a93165
07b9caa9db238307fcead02f177f8e26ed49235091c6f0e6a7786a22db5f56b312eee615a1399a8d
0e74bdd25a8b2bb9fc6f022f78157d12c4045b467d4ee4d136a9694f0a2b467af8bea6bbe63bddca
5f2017e2a4f52531e0da8c31f5457a00832306efd27f36ed1e9610051e4baf597ab425e561478bc4
fea12a42f23d976b9ff3126f5277fcdf0df555d1429502a364558d3890a838840f517f9a3acfbce9
d9c7e357bd0e57128f3477a3839ba1fd22fa516f06f0610e2318c62e13da8598a39c36b2fcd9a09d
786c4ca5ea716cccc4de62e111214f086eec5308e88f8e854522103a11a54ffc9b7e1aa0e337273d
905c2a485ad1c85bb68300a065889838cdbeebd3cdd334ab6b29cc3c516defb9237827fa1c4bda9f
aef5a1e66aa7041fa9d7ec9af5275b573ed3b4a3a8688f80125b49491ca3258d0dbbc6324bf08193
8c3878ff9372e991e1f03259bba090961e6d4ad8580282047bc175004997c1b012d5e43c89213b0d
5b365e3046515a9a7d602251e50fbce5a02d21e094a2409387f8abea812d85e5757e4b109ea6e756
39669f0b980bcb7af1cd9a11a7b1837f6d99a2c9e0cee05f750c0e672b9eb5268453224d9d917644
ab564bc0be27988b9ff9729941c99953e3106093c36ef19a9485c533eb106aa924be7603b4ad772e
661db3f5c35abf965e5664261bc956b57da3b1cdb953ac7570fcf8711d084029708fa4d4adaf76f5
ca4aa2fa9ff345eebc0e0e53a295a32e66800fcfd8856f077bf953897135bd6e2ebbe4bd45bb1af4
7868ed081de9fb026e667c8025326f5bf7b461011b3b6eb12496e9d2a6692f550514a86370e67ce0
0bfb0d68a6512cc0560940b846e79558cb9e2b7bfc95cc616b718d28380db11204e5b2b53b5cd572
621662616877f254ffa53b280392dd05a49193851d20460abccbde1032c1228305ad873b76827e8b
414d023086f6896c3688a2550c05c3b21c90841659b000b501e3fa325037f384a1c6840bc593744f
52d37041c2c98c347c5d4e26accb0708383cb00f573016d01c2e359886ddca252a161049b7fe9bce
2d05f7960da345d0357e7f1726cd3a8ba65b992a3c590ae5404d9ee402d74bd483b14550d2260bf6
f48cd73410f16d2d6b17242b3cf66ce1c36d9afda8027f3f566eeeeb9d415735a502bc88472b0a7e
8f9d2bc0420517352cd28de418d5c549476880edccc8d165428345e84b41cf6f19b8a53bec004e93
98d8a8a2ba7a1714009d3de212db1278ee7ca2c9a1e6d1a2945b8536821888a94bc5972f015dbb5a
cb97e70c55980fe782cc664706bb7eadc021c81b73a5d1ab443566e0f3b87244db8e43f035e68b91
cb8b8eec7ce926f38396d5f559c22809c874b1620fee07d43f2a69b48ef12690d8ddacbfc0942978
c51942ee4f443a29b0dde936d23297f86bf965fecb2657415d33c000b2167372f7ca2ad8135ad43c
36dc5831c1bc79a45540ac8bf6035f4c50b9d9be6f634d525bddb7de5e908e41fc9a58e68a42d922
f7e70017b06ee2af223d735a827304b807a1ffada813aee88058d29223758ce385dacd0991f8be8e
c9e934862b63ac07112f034b5ed8cc08280cbb7288f4fba2217e9b1306cf9c3d9640b9643883d017
8ad3bad66136f2afe9bfd0ec6d2ad5877d8a9e25a421d5c30acb60f7f19d46fcfa741452c0ed5170
7cbcc967908e5caee8568b26ff50d4415f09a2113a53c258ae306d6c31cfac0d81fba09866802ec3
185ac519a69c7f9f012b13e80bb6845e3e25728b4436b5269122d00759750e6176d100706d97080e
56d784cb75e371927054684f694bec7b5f9e20904a7eaff81c9cf3831bfd79c5a44020f689b3fad7
7554be5b60deed1418085154a2ee8506c631e9922b0b97f623169b780a068b75c67808aaf08764b9
299ae89609943a5d4b692ab0259fe6cc993150caebae2e7885930b9802182ba2cac537066d298e69
6054845543a02cb3816681d343e5c6dac0904355ecda8066e55f5a181b14549fc0b30d9018646855
964bdd61de99068e56552619f0923c45307fabfa264c32cb757ff6143797ee9e5748972d77418675
456169ac2f8a5d8789173f5da343c03c0918e1e48d709145aba7be11d90c87910fc2ddb1cb75fb23
cbdeaecb115dcbfe4bef6512780ed65e810515e02ad745fd049d105106b261ff8c5b1392855ec0c9
c5e428a15182e740058c89548b711de95618e214423ac644489bd01900bdde72a8837f19956091fa
bcc126e7ed43763b2a59f28e643707067766deef395f762732e576a1dc65cea76d74e4667419f076
318842c0e63582f2b5b17e8fa976a3ce1394935a39192e45e08549fa3e64e28bca7609e35f838497
432d44768395fbba7bc0691ad4e61cfbae844f96235c0731baa13a204657d8dd7c4e0148ed3eb50f
bec9f4242a06a194631a011e2be136f85d6b8b47efb201023de0c50b4942eeb50e2d912229772707
9e37e8d1d356774a13a1ff4cd78538eff3c6deb6a4ab062f05a80c50d3cd3b1fa01437e56d79dbcc
18fa085a0016533ae1701fc8e3abf1f8c0c55b04f31172acd62ea8989def30e4e2fbc5759e934550
14d3dd5c1fe5e583034b0147ff4557f5ea90871f7a0868bb6100c12d1cadfdc8276a0b8646d271df
5d466f3dadbf69cd745015531083a19757b9c698f5e1c0fadf5666883c5c98ccf7a7f85f1073051e
19209389c75f91739d1edd652adebb894a7c62aa6ce4b103528b1f6a5fc186fd8e4125f0d0f4f3f9
c7bea4690a82a8a5555de51dd407b7f018de7357a1dbc8d62483b9dd92dc9d9f797c0ab7015a7414
e5c95a5b3d6e19640548c800fce5ec5f6c6314c1ce14bd13d9f146a45baba9647541a4c6cef07223
1caecb318596e7103264ce783c18adbeb9259fb5693e9d46b51cb7cd8b458b6971aed8d41d296401
f31a269946fa83e44ff1809d17dcb7ce0beeb4e87357c120736812c8fab265e2a55f084787fe9ff2
f22b3fba710e4899f027716888644c445735c5dabbfa59b751dc62e2807d0b21fe4f446fb826faa9
3a488ed503d329ed160c09feb53b9f82aa35090152d889b6c439fbb73baafb0457285e99b8704de1
d9682dc13238c1e5785017d977f5ca48cc6a5a2c9a0b44b021b49e81d3629079b09fdc9bd263e99f
20353bd1ef9b749df4b2202c0d8d581d9ced28f2b88a54b74e62bc4f6c4c25c701f18d5afd42b426
85379f90b7d2655320b7fc6d8f0133120b6b647f2b36bba24fdcd1092be7d47d02be5b4470258c9a
44559cedfe8a5c9c615a2962e07c1fb3852cd54984ae05d8cbaae81808e8654174f860007be398eb
a4f10d6408dbb08db157c48868926886312dcb7f38249d315c89fa4ead11ce4c8e6d3f469b222f63
ed7c2ffeaa93478cbe6f4a29fb150fd8396e0f71eca67eda55c3675db598b73906359aec1cfcd22a
6d431e09400a53fce008d994d4a587bac5a150f3f43f836a50f3a081c9e3366f4f52e762d8d19466
ff529bbf1abffc5b557382b46e72e8d39661669798e6f37cd9499838db4921216adb5d98e7d7f6dd
863fcc0a5346af732e53871381a0553d0b210e5de48f75124d1dc43f37ee40cc8cac45f6d3a4ae2a
0a43e8c8dcfb7da8f0e950345e969d1e6882d8bbb284939311bbafc2ccaa1953dc4d10190867400c
a2b0b67a310f9c4912cf2e5a73fbde2405c8c96d58453ddc07418519308a74cdd94e6e6b4a434986
fca9a7dcb2c16e0fe9ef899d676204e46506b1945ca03012c9005dcef61f95a148e3d77c36738a93
3fe393a15380ac6565f437838a21cdcea9a8415ebf556eb13d02a531aef8943cdb8eca34b4d1acd2
b471a5c4e15c5f67ab59fbde0e3015beb6ca4ae1318864249b3be72c26c56a14472b7a79d4eda34a
dbac81fea49606b73fb3146ec1607e1518df065683049294a158d124838130372fc4fe40dfaace19
e8e538330c8cff860f0c0a79574a2ea1fc0473c3734a132babe75f4d3032d6e18668a4f012496899
eb37513ab0e6017ddcdf090c3c53c51a80abbe6d40e51401b45b3b6a859ca39d08240c20a4517988
607fe6e68a809cdb9eca3efe60bddd375ebb1602542929bba7350ac2239c09a64906f045064c73b7
c153cf7356f03d66a482326e1c9b7b4ad358b9c00c1d72b36be4ab3e61531a259847f5a205a03bb0
0cd9b08d01e4574fabfcad447012d1e8ec89ff9a2ed66d25a037396aac14c68d0801c09069e23ce2
3b0e2c6f302896f3976d430be415e3582d24ffd227e2e322e829ee6f4d204a0dd972b153019f05ac
5a183ef66cf58e859bb7384b1ac621f4ea71355f5fde09155b55baa8421da8fe4b346bba31269d5c
a544c7f9db9eccc6101783b14a8daf0441aa67963f4a2c80aa222c95230f5dab5f194af825dfd218
b2b83fef1256d8748b30ecf47d49708eddd8c3af1a50a51cbfebd047d9e41b008a3ce36cd05aad25
8dde97b6385987065bc523456edff687773a2e7229fa17cee55840010335e1121d789241b2456b15
ed1c1de6ed6fd26c85cb91545d351f57181b97a9d865c1b6666bcd1e02507cd7a2392a90b88a5adc
a9f6585a0e8a57779ced4b121f29f010820fe7792699f17872b49487a09d687993e6fb62fc82971a
2865e94e1a1a439f945a8ff4fb16ef63618363dff7cad15dc9842d12a527648f116606aebbd987f6
fa02423011d4b9cc4d9fe4836116bb4b955e7ce635f86dc06d03b3abe86e212b8cc75884fd3cea57
c802a1ec9a0393f7d7a33f8b889810347692e0f956fd8e87d3f85284e33edbc3cf0dfaf83ba00657
4b59d093382a1cbd70d4039e7db761ed5d79b40c8d1f636284a1459a7f8f615550aae30739b9ed14
57e30bdb0c21ff788e780b69488cf98397ffe6480a7a42634e81c79eae7cbcdcb27d511b8ff2713d
610286c34e39f603593f29d5f524a633336499c3d03f204a2b431e472e7af195f53d9c4ae5b5a4db
4b7c108d60ab057dd8fa50117610b4f076dec10d6dd54074913fa13cf350a78706a5a931dca6b89e
b5c1b8888d03b99f58f226f7368dc6988e17c26d7ad85f748d51044f3b44467a266ff0c5ec5e1f92
7b120287595bc0158685762efffc7b6bddb118790f12f9a64318827fa888895b0972e65b6e719ea8
d1dab6137ded72202c03f0547507f36cbfb5421dcede840141dd149e1ceb05199f7fbcd2cb8b137f
bb245b907089702573a008bc55df9e5040e1a553e22124dc455212007cd6aeb2b859998ff4d6e467
d1696f94d04f4ef213a3d474e81d78ee7772c274efdf36d9af3ac2468898dbf3f708c1efa4185635
be7c45a3e67d2530b1ad3af7590db7e188541b25ae4cd12539181195436289bd68fadf2e20beecdd
38bc56733d9987388c8918cdab8124dc2ef00fea9b774eec229d1480d1f4cf346f5acf719bbac894
f01fd4b2016fcddcdd344d6dce04ea1d4bbe72d6e823053d0a13e0aca767a98e5580f18a48d10d7d
3a809bfa565e7e636d7aba707433166b5f716620d81811ecc9cee489a7e27cc6aa26017b765040ac
e3fa2afdac0df2e1544727f875b9d94202505682b8b7f1308da9519ad3c00f88fe56d80330be8d3d
58c078a2549f0c8ee83b5a9a8fb61d7dab6ea0822891ebbef51a9ed3f23f907a131181807a914681
99ab8b6b1246ffb0a2ee223c72fc7e46a9a35b77e0aa94ac17547cec93bab79a38f5916177129ee9
c453d613b5f7a63c37b35d6b257ed93d285726f709707a63ff6a5752bbeead7b7f36acf355ae1b16
6ffbdc93666fdae03e0b42b77b1927f3afdd08917aec671c24f67bdb60bdc902b7e8d7863ffc24b1
19c01f996ef18e6ff97d135c165e3406fe02e3f4d295cd2c0c80f4006173ddcb5a02738233a62487
df0064f90472c1b23323711277a668195b6ca9cef587d81bc26b0e54937f823ea8ea3c44fdb2a804
2a3f17fac96b2e21a1c180102b381f2e795d72d469f2ae8f42546548ab95ef00c009309de549e659
29bdbb2408cd81767dd1ac3dd56ed578b42e137f1ed9d4ab8e4d0527bbbe8c6a630c25ca3406baec
984f9b960d4c048dff38e7b017826eb7d6721dfaf960f100e299a488fc42f784283446a107ba6266
29bd4b3b4a70ea0c8b422cf599256ef9bb8319ac27a9ef7aea439acc628106e4dc7e1084e3189991
e82d6c242c138def6bf90125468d466b1c3b205f6f45e813c911be399e4b593a86ca53447a81810c
d419eb368bec5a60d7d514e1f7031b5f8345577c7e4f3b441ac8368eb85d2c49a41efd167e0dc8b2
e809f366e7eb86d54cbb0d72ef3f67333fcd4130c94a77fe86cd57bf59690a9b88db0211467c0a1e
6174d73d061b19d1b1c3fc402421a8f711d14d42233b54e51ff6f9324d7e2036c69aa23c53ee6380
b8bd19513fc165a160a8a3090e777489c9826679cbe6acabd62a0394a789b01ef4356195240023e6
2f065dbc5a09eb7811a51e451a37251486e24913d85463416e0c97181b037d3db3189e3fb863d80c
d46eb3aadcd9c9f6549ec8221e437518a5280f378ecdbf1d601d0ccc999832359086fbb169cb95a1
fa7b7c8e40ab387ec88021a7dc6600b188aa5b362c640ccec1c2b84cd2e25c43c5e7a140eae45e4d
cab27713b981350880fb04373396f8c1f420d2c514aa8dc0ddbd51e45cd3784203ad65e3bae1e84b
97f08ab132e34e7cddb21fb390bec001c0c56e92bbe4087304006cbff70a0bf676e3634b0add53e5
86298f8ce8e2d097c94aa62859862f03241947ea36f7ce79cbdfcd0f41989d4d7dd3bab9740b13dd
17aac386dbe5a300626cafee608e1bd77f32a9a509475544bf7c5898414179335d493cd11e3c65cc
dcc9f4e8d062eaa95a52c0afcde796b63dfc892c087bea655aebab2dffb70178cfdf3be08e069c3b
e92ef9e8916999f53aad761b517c722656a6685e81033095bca83e8af82a3c4c82610a63ba9e02e8
76aadd61bd65cd485ca4fe285cbb4b970ac4a35195571d9192d148741e8c72cdab98ba729558b8f9
0e7f7d8ddd3651f9b4253e1552e59c1cfff8c1e1d60c074cbccce0b3355670976a94b1da3733db7e
58d531380ba7522f333e95071e06afdffc6834283b746a4561eab1a74f20760049f5bdb8ff9ddc3c
bb57921deeb36413b112cb53560305f4cd7771c8d8b746de9d013d1b1cfbc3743042d6808af815e5
090c954a1f69fc51c540053a3704015648f9333489643f8e5fb879b7c133c78369dc381514ed14c9
c3ced716d9e05185f28e914017751b3abde97e571fe56ab56595b56868620b2fee392b354614b6e5
fd87f9dffe701d7306b8a352b3fd67482cadb112a9d633320d4fa8e4b98ea76096103ae17f090a92
b0ea5deb18684c5aa92a1ba568b328e9114e5ad0159c2ee38ebd3502dfbf10ace9cd46a8b7a6ca7f
666993e7fe5d124eab195515987230f637dbe9a15d40412e3835c80131d2ac0e7dae72687dba832e
0a4dbdf8fcc1679b2f8ee2ff269d644a7a844d19a5533a336b4200bf789b0cc992ccf8e780f3648f
31531d0e4434cef672b7891c1e8f9e34c1b2f56aa7dacb6b385a2cf64c1b4267a786c56696f94822
cd8f5016f19e45b5d4418b603fbc76f3cfd1423b4ea8d89e4f982385dc0e6759816a7c7b2d00ed04
18012376bc28d786ce5de16e53254d25d35f601fd22c1f7e0f732b98111311f97c67d82474e22708
512f8d8b6bb11c4424c665b9997feb84ba8c7a9dc31c84981d596a230850b96d7b58ec9dc6583a29
5f469b14d0f11a37382dbb2c49fb2251a0c661909c1ce68a79a1a37c122c6f314999d88c2a1ca1c5
08316020dbb33e56bde253fed8744836728c3a52574ae8bb862cd6de3c9fc45b06384afddda40fea
2d1c07834f99493e0577889e00fd32f2bd8e615b352286107c735cd32e96d6dcf393a08f23b21026
a59a9e1f1019d60d301d4911df06516fe8608ef35e452890b85da3ffca17cb3535b783efd6ade1bd
77408f4b934fe665f6240e9b0b39fc236b7da24cd9cd771dc75482c444b288357d1eb94ae63a98e0
37e02ca1b4e610fba9bbab60e578258462dc9ff8d56d6dca60e6d3b8041ce02769a36176af123fb1
e87903b5c885928ef790a68610bbfb1f94179e165f9af140b75c48d1ae09873ad7e2100e6acf3ab9
0eb5a882cb33830c7fc2feb6137dab292bdbddc44844e3467dcf9206dd44983d54913edcadd2d424
98cd4ca7c289a8f9bda967aafed64763337a9c24357554a2ed6a63a2cb7a6f506a5da36f900a2e04
7f6a81fb65a4416a0ae2ca78770a69376cd98738a510a5d16c467d583e73ffeb5b68dfb129e8fb1d
e2c2a66cd87f486a4b8624d2dd0d17a46210f4781f9d5c4c8fc645d3ef55f1672026ff99f1aa0b42
3a152fe2578a4f4591d967c56ae32f9b97fbfee82b4f87f451b99ec01d3e9720dd52ac8303acc6d4
6d6ad5e68d43b33bfd24e5898b984d7b7661f617de9021148181b0a9d8a8e5c722e76050dda30983
c54aac4284ea80f8969a5414933fcadf6c7c33b468954abf2246feccdc28513286ad4c932570211b
86442e09d401a5806a0d6498ade5b0b070fe3c6445c75bc17cf8ff344b48086141ddb664633e0cbf
dd689b64f1b1d288ff4a484e1e6df652c68b25b45b7bc1037187d08a733673888b6b6bde4d00bd70
060c1f821c2990933d7b9a89272cdb45a46610fa26bd2b24c937e275c17c54b75cea4512dfbfe56b
503ebd2610ddbb40953a9762b137bcbbe6fc8eea5d457a86fa88c4a7d45efb3ab8495f19fa3e172e
1e6372ab3501d9f4ad7d564a0f469d546fb6bef1728619d393a4a3e2b47067ae0a65abbeedc1bac4
b739b567de17a3e7c6f2dbcfb5b065065b794533ceb9c775dcf185f4f1efbfc95f97cc7fe3f012f3
ac73a21af364550f2d0fbe99ef03a49ea3e4b584745b3084b0c591c4484d42949d4f27725103333b
7307e0d7ccde906b8079c678ad1eacaa9be3bcd84fd2d0b7ddb69a9f914ef29399a15de908dd2cec
034f953ff13dca270da3c7b2d5fac492806e3e7f1e0a4f482953a130d2d09d8c62cfd385da9e14de
27c3c8b267dff90a69e2e4c641cc37aff60721e38f462e9512c6b8ce8892d23cf2ee410f52c95d01
8382d857464b083fb44d010069b227c0b775f1a6dd34d02e9ea68a8141c55da203fc74bdf9eb39ff
afa9fce794a00d5e9ba448ce5e649cd355c33441d36c8d15225514abbaae29455e5456fb82221cfc
1ccaa4f663cecdae298c882fb60131f5fc6e521cb595880eb89694cda71559656909497ac4946915
8d5b9e10521fea76a6dac294a404b986936538a1020f5e3eca7f983e9f565517fed55a007fd1adce
938ecdc3bf70f69bcf7f826193fca817ccc0851810029e57bff02c30b50024108d852c14f0e8eda7
f8325efe7214625c056ee9349afe4f59efbee78809cb5aed570d5c68336a0d9e50d0e1ccd5c32316
b1fd461ef515380be56eab42b6eaae5c464bd8
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 SSC_Copy_State <Virtual>  0
 HBW_Pick TASK  0 -1
 HBW_Copy_State <Virtual>  0
 PID_10 PID  0
 PID_11 PID  0
 hunt_exp_light PROGRAM  0 -1
 HBW_Home <Virtual>  0
 HBW_Pick_Sto <Virtual>  0
 test TASK  0 -1
 HBW_Pickup_ST PROGRAM  0 -1
 HWB_Extend_Arm <Virtual>  0
 HBW_Retract_Arm <Virtual>  0
 HWB_PickUp TASK  0 -1
 HBW_HTO1POS <Virtual>  0
 HBW_Left_1Block <Virtual>  0
 HBW_HomeTo2_Col <Virtual>  0
 HWB_HomeTo3_Col <Virtual>  0
 HWB_HomeTo2_Row <Virtual>  0
 HWB_HomeTo3_Row <Virtual>  0
 HWB_HomeTo1_Col <Virtual>  0
 HBW_move_left_1 <Virtual>  0
 HWB_Home_to_11 <Virtual>  0
 HWB_11_DropOff <Virtual>  0
 HBW_Pickup <Virtual>  0
 HBW_PickUp_R1 <Virtual>  0
#END

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"VGR Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC410 C410 1 0x0 MC409 C409 1 0x0 MC412 Y28 1 0x0 MC412 MC450 1 0x0 MC411 C411 1 0x0 MC408 C408 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC413 Y29 1 0x0 MC413 MC451 1 0x0 X27 MI200 1"

// Rung VGR_Copy_State#2
// Offset 27
NOP

// Rung VGR_Copy_State#3
// Offset 28
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC800 Y41 1 0x0 Y41 MI801 1 0x0 MC802 Y43 1 0x0 Y43 MI803 1 0x0 MC804 C804 1 0x0 MC805 C805 1 0x0 MC806 Y44 1 0x0 MC807 Y20 1 0x0 MC808 C811 1 0x0 MC809 C809 1 0x0 MC810 C810 1 0x0 MC812 C812 1 0x0 MC813 C813 1 0x0 MC814 C814 1 0x0 MC816 Y45 1 0x0 MC817 Y46 1 0x0 MC818 Y21 1"

// Rung MPO_Copy_State#2
// Offset 39
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
NOP

// Rung SLD_Copy_State#2
// Offset 1
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"SSC Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC606 C1200 1 0x0 MC607 C1201 1 0x0 MC608 C1202 1 0x0 MC609 C1203 1 0x0 MC615 C1215 1 0x0 MC616 C1216 1 0x0 MC617 C1217 1 0x0 MC618 C1218 1 0x0 MC619 C1219 1 0x0 MC620 C1220 1"

// Rung SSC_Copy_State#2
// Offset 25
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block HBW_Home
$LGCMOD HBW_Home

// Rung HBW_Home#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Home#2
// Offset 8
STRN C215
ANDN X0
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51

// Rung HBW_Home#3
// Offset 26
STRN C215
ANDN X3
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5

// Rung HBW_Home#4
// Offset 44
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7

// Rung HBW_Home#5
// Offset 61
RET

// End of Code Block HBW_Home
$LGCEND HBW_Home

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 Y40 1 0x0 Y80 MHR102 1 0x0 MC101 C205 1 0x0 MC102 C206 1 0x0 MC103 C207 1 0x0 MC104 C208 1 0x0 MC105 C209 1 0x0 MC106 C210 1 0x0 MC107 C211 1 0x0 MC108 C212 1 0x0 MC109 C213 1 0x0 MC110 C214 1 0x0 MC111 C215 1 0x0 MC112 C216 1 0x0 X2 MI101 1 0x0 X10 MI102 1 0x0 X11 MI103 1 0x0 X3 MI104 1 0x0 X0 MI105 1 0x0 X6 MI106 1 0x0 X7 MI107 1 0x0 X8 MI108 1 0x0 X9 MI109 1 0x0 $HBW_Encoder_X.Acc MHR1 1 0x0 $HBW_Encoder_Z.Acc MHR2 1"

// Rung HBW_Copy_State#2
// Offset 55
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block HBW_HomeTo2_Col
$LGCMOD HBW_HomeTo2_Col

// Rung HBW_HomeTo2_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_HomeTo2_Col#2
// Offset 17
STRGE -2775 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_HomeTo2_Col#3
// Offset 22
NOP

// Rung HBW_HomeTo2_Col#4
// Offset 23
NOP

// Rung HBW_HomeTo2_Col#5
// Offset 24
NOP

// Rung HBW_HomeTo2_Col#6
// Offset 25
RET

// End of Code Block HBW_HomeTo2_Col
$LGCEND HBW_HomeTo2_Col

// Beginning of Code Block HWB_HomeTo1_Col
$LGCMOD HWB_HomeTo1_Col

// Rung HWB_HomeTo1_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HWB_HomeTo1_Col#2
// Offset 17
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_HomeTo1_Col#3
// Offset 22
NOP

// Rung HWB_HomeTo1_Col#4
// Offset 23
NOP

// Rung HWB_HomeTo1_Col#5
// Offset 24
RET

// End of Code Block HWB_HomeTo1_Col
$LGCEND HWB_HomeTo1_Col

// Beginning of Code Block HWB_Home_to_11
$LGCMOD HWB_Home_to_11

// Rung HWB_Home_to_11#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HWB_Home_to_11#2
// Offset 19
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_Home_to_11#3
// Offset 24
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HWB_Home_to_11#4
// Offset 43
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_Home_to_11#5
// Offset 48
NOP

// Rung HWB_Home_to_11#6
// Offset 49
NOP

// Rung HWB_Home_to_11#7
// Offset 50
RET

// End of Code Block HWB_Home_to_11
$LGCEND HWB_Home_to_11

// Beginning of Code Block HWB_11_DropOff
$LGCMOD HWB_11_DropOff

// Rung HWB_11_DropOff#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HWB_11_DropOff#2
// Offset 8
STRGE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_11_DropOff#3
// Offset 13
STRN C215
ANDN C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51

// Rung HWB_11_DropOff#4
// Offset 31
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HWB_11_DropOff#5
// Offset 51
STRGE 2850 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_11_DropOff#6
// Offset 56
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7

// Rung HWB_11_DropOff#7
// Offset 73
RET

// End of Code Block HWB_11_DropOff
$LGCEND HWB_11_DropOff

// Beginning of Code Block HBW_PickUp_R1
$LGCMOD HBW_PickUp_R1

// Rung HBW_PickUp_R1#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R1#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R1#3
// Offset 41
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R1#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R1#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_PickUp_R1#6
// Offset 69
NOP

// Rung HBW_PickUp_R1#7
// Offset 70
NOP

// Rung HBW_PickUp_R1#8
// Offset 71
NOP

// Rung HBW_PickUp_R1#9
// Offset 72
NOP

// Rung HBW_PickUp_R1#10
// Offset 73
RET

// End of Code Block HBW_PickUp_R1
$LGCEND HBW_PickUp_R1

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#2
// Offset 3
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#3
// Offset 6
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#4
// Offset 9
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#5
// Offset 12
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// Rung $Main#6
// Offset 15
#BEGIN FMT_COMMENT 
"Hunter Demo Light<br>"
#END

STR ST1
RUN hunt_exp_light

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
SG HBW_Program.S0

// Rung HBW_Program#2
// Offset 2
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#3
// Offset 10
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#4
// Offset 12
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#5
// Offset 14
STR C213
JMP HBW_Program.S1

// Rung HBW_Program#6
// Offset 16
SG HBW_Program.S1

// Rung HBW_Program#7
// Offset 18
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#8
// Offset 26
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#9
// Offset 28
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#10
// Offset 30
STR ST1
DUPBOOL
STR C205
ANDN C206
STR C206
ANDN C205
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 500 60
POPBOOL
DUPBOOL
AND C205
OUT Y48
POPBOOL
AND C206
OUT Y49

// Rung HBW_Program#11
// Offset 59
STR ST1
DUPBOOL
STR C207
ANDN C208
STRN C207
AND C208
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
POPBOOL
DUPBOOL
AND C207
OUT Y50
POPBOOL
AND C208
OUT Y51

// Rung HBW_Program#12
// Offset 88
STR ST1
DUPBOOL
STR C209
ANDN C210
STRN C209
AND C210
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
POPBOOL
DUPBOOL
AND C209
OUT Y4
POPBOOL
AND C210
OUT Y5

// Rung HBW_Program#13
// Offset 117
STR ST1
DUPBOOL
STR C211
ANDN C212
STRN C211
AND C212
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
POPBOOL
DUPBOOL
AND C211
OUT Y6
POPBOOL
AND C212
OUT Y7

// Rung HBW_Program#14
// Offset 146
STR C213
JMP HBW_Program.S2

// Rung HBW_Program#15
// Offset 148
SG HBW_Program.S2

// Rung HBW_Program#16
// Offset 150
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#17
// Offset 158
STR X0
OUT $HBW_Encoder_X.ResetLevel

// Rung HBW_Program#18
// Offset 160
STR X3
OUT $HBW_Encoder_Z.ResetLevel

// Rung HBW_Program#19
// Offset 162
STR ST1
CALL HBW_Home 0x1 DST511 "3" "3"

// Rung HBW_Program#20
// Offset 170
STR X0
AND X11
AND X3
JMP HBW_Program.S3

// Rung HBW_Program#21
// Offset 174
STR C212
JMP HBW_Program.S2

// Rung HBW_Program#22
// Offset 176
NOP

// Rung HBW_Program#23
// Offset 177
SG HBW_Program.S3

// Rung HBW_Program#24
// Offset 179
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#25
// Offset 187
STR ST1
CALL HWB_Home_to_11 0x1 DST511 "3" "3"

// Rung HBW_Program#26
// Offset 195
STRN C250
ANDN C251
JMP HBW_Program.S4

// Rung HBW_Program#27
// Offset 198
SG HBW_Program.S4

// Rung HBW_Program#28
// Offset 200
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#29
// Offset 208
STR ST1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#30
// Offset 216
STR X10
ANDN C251
JMP HBW_Program.S5

// Rung HBW_Program#31
// Offset 219
SG HBW_Program.S5

// Rung HBW_Program#32
// Offset 221
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#33
// Offset 229
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#34
// Offset 237
STR C215
JMP HBW_Program.S1

// Rung HBW_Program#35
// Offset 239
SG HBW_Program.S16

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#2
// Offset 8
STR ST1
DUPBOOL
STR C410
ANDN C409
STRN C410
AND C409
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
POPBOOL
DUPBOOL
AND C410
OUT Y27
POPBOOL
AND C409
OUT Y26

// Rung VGR_Program#3
// Offset 37
STR ST1
DUPBOOL
STR C408
ANDN C411
STRN C408
AND C411
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
POPBOOL
DUPBOOL
AND C408
OUT Y24
POPBOOL
AND C411
OUT Y25

// Rung VGR_Program#4
// Offset 66
STR ST1
DUPBOOL
STR C406
ANDN C407
STRN C406
AND C407
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
POPBOOL
DUPBOOL
AND C406
OUT Y23
POPBOOL
AND C407
OUT Y22

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STR C813
OUT Y18

// Rung MPO_Program#4
// Offset 12
STR C810
OUT Y17

// Rung MPO_Program#5
// Offset 14
STR C811
OUT Y52

// Rung MPO_Program#6
// Offset 16
STR ST1
DUPBOOL
STR C804
ANDN C805
STR C805
ANDN C804
ORSTR
ANDSTR
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 100
POPBOOL
DUPBOOL
AND C804
OUT Y53
POPBOOL
AND C805
OUT Y15

// Rung MPO_Program#7
// Offset 45
STR C814
OUT Y19

// Rung MPO_Program#8
// Offset 47
STR C809
JMP MPO_Program.S2

// Rung MPO_Program#9
// Offset 49
SG MPO_Program.S1

// Rung MPO_Program#10
// Offset 51
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#11
// Offset 59
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#12
// Offset 61
STRN X24
SET Y17

// Rung MPO_Program#13
// Offset 63
STR Y17
OUT Y20
ANDN X17
ONDTMR T0 1000 Y44

// Rung MPO_Program#14
// Offset 69
SG MPO_Program.S2

// Rung MPO_Program#15
// Offset 71
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#16
// Offset 79
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#17
// Offset 81
STRN X19
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y53

// Rung MPO_Program#18
// Offset 97
STR X19
JMP MPO_Program.S3

// Rung MPO_Program#19
// Offset 99
SG MPO_Program.S3

// Rung MPO_Program#20
// Offset 101
STR ST1
SET Y17

// Rung MPO_Program#21
// Offset 103
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#22
// Offset 111
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#23
// Offset 113
STR X19
SET Y19

// Rung MPO_Program#24
// Offset 115
STR X19
ONDTMR T100 2000 Y18

// Rung MPO_Program#25
// Offset 119
STR T100.DN
JMP MPO_Program.S4

// Rung MPO_Program#26
// Offset 121
SG MPO_Program.S4

// Rung MPO_Program#27
// Offset 123
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#28
// Offset 131
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#29
// Offset 133
STR X19
RST Y19

// Rung MPO_Program#30
// Offset 135
STRN X16
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y15

// Rung MPO_Program#31
// Offset 151
STR X16
JMP MPO_Program.S5

// Rung MPO_Program#32
// Offset 153
SG MPO_Program.S5

// Rung MPO_Program#33
// Offset 155
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#34
// Offset 163
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#35
// Offset 165
STR X16
SET Y19

// Rung MPO_Program#36
// Offset 167
STR Y19
ONDTMR T101 2000 C815

// Rung MPO_Program#37
// Offset 171
STR C815
RST Y18

// Rung MPO_Program#38
// Offset 173
STRN Y18
JMP MPO_Program.S6

// Rung MPO_Program#39
// Offset 175
SG MPO_Program.S6

// Rung MPO_Program#40
// Offset 177
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#41
// Offset 185
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#42
// Offset 187
STR X16
RST Y19

// Rung MPO_Program#43
// Offset 189
STRN Y19
ONDTMR T102 1000 C818

// Rung MPO_Program#44
// Offset 193
STR C818
JMP MPO_Program.S7

// Rung MPO_Program#45
// Offset 195
SG MPO_Program.S7

// Rung MPO_Program#46
// Offset 197
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#47
// Offset 205
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#48
// Offset 207
STRN X15
OUT Y45

// Rung MPO_Program#49
// Offset 209
STR X15
TMRDOWN T102 1000
OUT Y43

// Rung MPO_Program#50
// Offset 213
STR T102.Done
JMP MPO_Program.S8

// Rung MPO_Program#51
// Offset 215
SG MPO_Program.S8

// Rung MPO_Program#52
// Offset 217
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#53
// Offset 225
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#54
// Offset 227
STRN X13
OUT Y45

// Rung MPO_Program#55
// Offset 229
STR X13
TMRDOWN T103 1000
OUT Y21

// Rung MPO_Program#56
// Offset 233
STR T103.Done
JMP MPO_Program.S9

// Rung MPO_Program#57
// Offset 235
SG MPO_Program.S9

// Rung MPO_Program#58
// Offset 237
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#59
// Offset 245
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#60
// Offset 247
STR ST1
OUT Y47

// Rung MPO_Program#61
// Offset 249
STRN X12
ONDTMR T104 1000 Y46

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"SLD Program"
#END

STR ST2
COPY 0x1 "4 0x0 MC404 Y40 1"

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STR C1200
OUT Y39

// Rung SSC_Program#4
// Offset 12
STR C1201
OUT Y40

// Rung SSC_Program#5
// Offset 14
STR C1202
OUT Y41

// Rung SSC_Program#6
// Offset 16
STR C1215
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y35

// Rung SSC_Program#7
// Offset 32
STR C1203
JMP SSC_Program.S1

// Rung SSC_Program#8
// Offset 34
STR C1216
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y36

// Rung SSC_Program#9
// Offset 50
STR C1217
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 R0
OUT Y37

// Rung SSC_Program#10
// Offset 66
STR C1218
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 R0
OUT Y38

// Rung SSC_Program#11
// Offset 82
STRPD C1219
SET C1221

// Rung SSC_Program#12
// Offset 85
STRPD X47
ANDPDPF
STR CT150.Done
CNT CT150 100

// Rung SSC_Program#13
// Offset 91
STRN C1220
ANDN CT150.Done
OUT Y38
RST C1221

// Rung SSC_Program#14
// Offset 95
SG SSC_Program.S1

// Rung SSC_Program#15
// Offset 97
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#16
// Offset 105
STRN C1203
JMP SSC_Program.S0

// End of Code Block SSC_Program
$PGMEND SSC_Program

// Beginning of Code Block hunt_exp_light
$PRGRM hunt_exp_light

// Rung hunt_exp_light#1
// Offset 0
STR ST2
COPY 0x1 "4 0x0 MC402 Y39 1"

// End of Code Block hunt_exp_light
$PGMEND hunt_exp_light

// Beginning of Code Block HWB_PickUp
$TSK HWB_PickUp

// Rung HWB_PickUp#1
// Offset 0
NOP

// End of Code Block HWB_PickUp
$TSKEND HWB_PickUp

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"C1","copy","",""
"C11","C11_Interlock","","Used to delay logic by one scan"
"C12","C12_Interlock_2","","Used to delay logic by one scan"
"C20","HBW_Has_Pallet","","True when carrying a pallet"
"C51","X_Direction","","True: Left False: Right"
"C52","Z_Direction","","True: Down False: Up"
"C80","Conveyor_Timeout","","Bit high when Conveyor Timeout timer active"
"C90","HBW_XY_PID_EN","","Enables PID control in HBW_Move_XZ"
"C101","HBW_T1_Send","Modbus MC101","Task to deliver a pallet to conveyor"
"C102","HBW_T2_Receive","Modbus MC102","Task to pickup a pallet from conveyor"
"C103","HBW_T3_Reset","Modbus MC103","Reinitialize and home all axises"
"C104","HBW_T4_Manual","Modbus MC104","Switch to manual mode"
"C110","HBW_Move_X_L","Modbus MC110","Move Horizontal Axis towards bay"
"C111","HBW_Move_X_R","Modbus MC111","Move Horizontal Axis towards Conveyor"
"C112","HBW_Move_Y_In","Modbus MC112","Move Cantilever In"
"C113","HBW_Move_Y_Out","Modbus MC113","Move Cantilever Out"
"C114","HBW_Move_Z_Up","Modbus MC114","Move Vertical Axis Up"
"C115","HBW_Move_Z_Down","Modbus MC115","Move Vertical Axis Down"
"C116","HBW_Conveyor_In","Modbus MC116","Move Conveyor In"
"C117","HBW_Conveyor_Out","Modbus MC117","Move Conveyor Out"
"C130","HBW_Status_Ready","Modbus MC130","On when ready for a task"
"C133","HBW_Mov_Conveyor","Modbus MC133","Status Conveyor Moving"
"C134","HBW_Moving_X","Modbus MC134","Status GantryMovingX"
"C135","HBW_Moving_Y","Modbus MC135","Status GantryMovingY"
"C136","HBW_Moving_Z","Modbus MC136","Status GantryMovingZ"
"C138","HBW_Status_Y_Pos","Modbus MC138","Current Y position"
"C141","HBW_Target_Y_Pos","Modbus MC141","Target Y position"
"C150","HBW_MoveComplete","","HBW_Move_XZ completion interlock."
"C180","HBW_Fault","Modbus MC180","Status in Fault State"
"C182","Fault_X_Target","","Active when X target out of range"
"C183","Fault_Z_target","","Active when Z target out of range"
"C400","VGR_T0","",""
"C410","VGR_T1","",""
"C420","VGR_T2","",""
"C430","VGR_T3","",""
"C440","VGR_T4","",""
"C500","VGR_Man_Control","",""
"C799","VGR_RESET","",""
"V105","HBW_Task_X_slot","Modbus MHR105","Value for slot X coord"
"V106","HBW_Task_Y_slot","Modbus MHR106","Value for slot y coord"
"V118","HBW_PWM_Set_X","Modbus MHR118","Set Horizontal Axis PWM Duty Cycle %"
"V119","HBW_PWM_Set_Y","Modbus MHR119","Set Cantilever Axis PWM Duty Cycle %"
"V120","HBW_PWM_Set_Z","Modbus MHR120","Set Vertical Axis PWM Duty cycle %"
"V131","HBW_Cur_Progress","Modbus MHR131","0 to 100 percent job completion"
"V132","HBW_Cur_Stage","Modbus MHR132","Current stage number"
"V137","HBW_Status_X_Pos","Modbus MHR137","Current X encoder position"
"V139","HBW_Status_Z_Pos","Modbus MHR139","Current Z encoder position"
"V140","HBW_Target_X_Pos","Modbus MHR140","Target X encoder position"
"V142","HBW_Target_Z_Pos","Modbus MHR142","Target Z encoder position"
"V181","HBW_Fault_code","Modbus MHR181","Current Fault code"
"V801","VGR_Fault_Code","",""
"N810","VGR_Rot_Target","",""
"N811","VGR_X_Target","",""
"N812","VGR_Y_Target","",""
"D0","MC","",""
"D1","Feeder_Extend","",""
"D140","X_Start_Position","","Distance to target"
"D142","Y_Start_Position","","Distance to target"
"D143","HBW_PWM_Cur_X","","PWM value for X for XZ movement task"
"D144","HBW_PWM_Cur_Z","","PWM value for Z for XZ movement task"
"T3","T_HBW_S6","",""
"T4","T_Conveyor_Timer","","Used to detect conveyor faults"
"MPO_Program.S2","Vaccum_MO","",""
"MPO_Program.S3","Vaccum","",""
"MPO_Program.S4","Vacumm_MO","",""
"MPO_Program.S5","Vaccum_Load","",""
"US0","_CP_Strogram_A","","CP_State_Program"
"US1","_VGR_Movement","","VGR_Movement"
"US2","_SSC_Check_InOut","","SSC_Check_InOut"
"UB0","_VGR_MisScan_A","","VGR_Movement.Done ThisScan"
#END

