// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Code\Mini Factory FA23\fa23_plc.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
dd51730b32c0da0c40aeaec6c86a6a0f2a4940c39468039bea9f66a379883c420d01200c21249ece
bcb458188f88295ba050360825a3a178eb69347b284fc921e43441791e563ee1c0671615c6ca7e1e
da700bca3416eb3b377714aedb137809e894d36a8fb5bfd41d9ed9d8bc158eb9b95ebea3425a6b19
d5d522c6d00b2fd07438be7a10fcbbf23c35e1cc1c8917f2edb1bc1d5ec9c0711c381b51033ce87e
785039cfba074f21e9a3c481d023e2310b2c8f3cfb71b07e49dc5e2a062263aca950f77d7c37afc2
6781a27c8c992cc9f4facb76cb70ddd19c7c4606f076a87e3c3e584d34387d1220d793ead4a8fb7f
097c25348cabd657adecb3fb8bbc754706eccb9368947c3137ff317076d98e4ba326e9d96291fdba
8d6a0431e25bc96d3bcfe478518cdd21ed37ad32ac83ba1ae56a3cb0feb8b3afff9655ca0ca47962
d95d9519055d28b2c09dc4869de73d81f3728af265355e0037ce3266ff987a839263b6955065bf9b
0266c606106dcf0afa508111a57b368d6fed5f3571ce23990bddd77be79b09f048d9e2a32a0e260b
90192f37aea5d26548e3edef32c92a93e66d904a6b6c4c66dde882272dd3591f4ef5b2a8fd7dd15c
5e67033923137ba45a6ff4e752233e0a06415173146049070c10cae3947beca27403850f3ab1eaf5
8a9c6e8b032ce482b53c3b78fd9ae050211ad9367ba6e14f18709b4dad4e9d66a2579bcc013861e8
a15f2b6e8edd089993280cf0a475d40019b5859798444ae9784547135fc8a27eb75de1a2b0a01bd2
0922f6d500b380364e463c6a66cc3841522f701326e98476c047668420965b3b039dd8b92882d709
25e8bedb3ff536e63ad68e210be7c3da63b1fd9c961e681ff2ac8349664dcaa40a48b245f36f9702
de9f334bee82524313bace528eac93038eaac0fcfb8584217ad19c9a516a7840ff78b916d0752900
5684a9788d44d353e12b9b52788e9a99e2509c356372cf26626cbf033c381817e8340ed4ed538537
4465cb9badbd40ac6bb838e29d4fed6c42ac8ac0df9c979112230288fcd87325c310ee2bbf8a418a
8417e20264dd793e084cf4dc1d9a6d723e26c5202d51fd0cea491287f73b9478bcde11a71453ccca
6697f773666ae584c703f5466297798d2d56b7e4343e165d82ef75b3c30056d999b8d1f658f85fe3
d3782c9cc698cb866fa3b58ff66b1112b5d1c137b98b6439875636c178fc4adece5e3ccb4bd53875
656d2392ae2b51861f9b274abee5869ce44f38c9cb043ef5f3700fc069e5189ef5cd60244210a88e
3235e92caccd192c7bef45ffcc3ead5d5f585136b185de8d518c82b315b75d2c647ad5ace3da98e8
0b9c95d719ba477a30fb0ad56b32e5a99b3838a5e0a243287f4c450cd0d5bc4ac96288af7f25a355
ee7338bc0a146c83927c8847f7520eb10d048a8c245880e0a86ca8a33cb20547d4d68977d6caf05b
eb0b841819150cdbcd48e350ee3fe11e924d10537bfc32655190b5e3076b9bf3feb8c45da8d1789f
169a1f0920bea6c65a2f468844dbbf8514bff2242feaa954376427ae967b9bef4a1baa65a7521a3f
1f7d54da0debbf42c1c092fe1a94e21909084563e8051fb48e22906ee355f0bb79c8d6ae79a31216
dcf570370120c309d1cdfb06817c05a940f4bc9f8cceb4596aab61a846efef67b58590742ae8757a
56ee3a44a01ad20f1bc7fa8c9900cc67c8ad8f3198f578519c80af36df95daba19580048e5a28049
76451428ef77cd2ff4a803a07fa19d870b1c1814cbafd5e39b4e322b327f047bc0bc3900994880a9
8bb5362c92b66782bede1e3babe82585584afb29d4724d4413d36c4899fcef8f4f6afab974e467de
df1b6412dcb680bf663df7cf7a9891cd5278c59179c80451a7f4ab41ddc17b80e9ea18c9a3e4b8b0
55153800c9aeba49291832b0db9b8137a842479c1b1b5e2480eccc85079de0c8abfece3bc4944653
2dec67ee96b36fec21cf89996ef8c9fe55d62f075d94d6a629dc6ab99ef5a270a43b622ffcfcd067
1f4a6ee1ca78eff8f7d5a80e4869465aecd7f79070bf6f81a0277b29d536b67defd9ca6ca7510903
1fe5c2e8efa9caeec629535000add8634ac8522ed41168e788001310ec844699136af6b3fd997d30
79bde6a82c33ba4dae74327502f1195e5b73cdb74bde2e90cd0f7244654332fa6fa5ae4935839ab2
8c4730ad60edf283a7e102cc180798ebb73050368b759f24f48371928efd4aba295d7afa0521a135
c9aa778bd0192bbe7c09863ad8d8f4731800514f39cb39c80cfe2576e8cb9725ab5f2eff05ea79f2
c9be8cd8f2e05af2e08bb71e4a6206929408965ea79930e2333bce28252522b03943fc7efcc7f147
d6dca0b6fc9553f8d5ece827076bf59f0b595dcf0e11b24daf2b638b8533899c92939965680fbaac
48f692cbcf2efd55044238a5a339025acaf66b4cf452c6f603d3fc234e16a3f6e8e1fb710b1a36d2
31d8b1af810d20256a7247307c04fefbbf804ae1f30594c80525454f487a097426638aebe4fbba21
921786ab5d4e02bafc28b96ec902f6ea75dab13449af1ee00ab14a2b1da40f3d213f0cc4840048cc
40de6fab7f5f3ec5df8d7e8f5bbc58bda95d8e96c711679567c65befcea54d1e4138fe15a368fc6c
6022d08a5f55759564fdc8bbf4deac55721fe7c9689809ef690feb37d3c2ef419729db640cbb09f0
6142645b4872c404faf65a104b11a4dd6e1d6b044455912486c47b48bbd3b3ac137a000e23756410
fdef4b9695fc500d648cd127735bc2ff6076a3e9fa1e7c819afb79c25f6b69dea827ffb8ec5b25dc
0ee97259933217cebee63ba17825107a865ee85b5b7fd7f0f011a26d4ec81b6c1f21cc8ad69ebc5c
83057c2b9630a3baf85940662581fbee53ed22a61998df86c5cfcc3b4f3a11de3156ea896bcd99de
11fb53c46e1f41c5d52aa9fc00694a43dfc845b6fe7a20f16af30ac5a0b4561b42487333245b1610
2ad05f0918d37a6cb8961e2b0c60c6616b13cc7a8be01d1cf6e9912e48fadb2f844b1b9f0972b8d4
16aae4d3f50926c5733999bffff31b014481d1c86a9c78f47343a8256938d2867c325dd8b8496493
a2dcb33ff23de871e6767c1f2befee4b8a9c7f58833f687bb8fb25d132a8be21b600875482093aa2
e1c29fc09fcd5d6e76bf9596417a29a7b861b01ffb9b3e21b202b2f7c4c24bbfb29e248680f1088d
602fad79ffabad3d624cb2a10147de7bb19d0813293db0930a5bb6c24b68018fbe045b1a2a979441
72902be625a5fe8830cbe7d6811c7b1221eeb891add53417bd57065494805af1139d84de5b4b5b13
7e3bae80d1bcf11583ba8ba83dd0e18e3ac909cb7942baac90b0ebb6485327ae6ac28d0874bfe0ba
752351a2532512cbcc8a426bb69f9bb53b5c029cdd4228a8a5e7a8bafad72ca586fa4e7b4aa0406c
e96af6e3ab36cfebe306466b39f753375e6dc61ff929c4248570c1375567c799cca44efdde821658
794d95698a458ca4c9396dbbc7cba24225b3116b35059716499c0446c18962de53eafa740fd008a3
1d74b29958afabed6f7fcb8b0c154c65f6b983a4aff123ef41cc757412c5a331c23896901a80bd67
ed59e9952b467af87a00ed285f221605714bbef869b212caa3804efbeb69139030f51aaab2b9799e
9fdd30f7888b1297f225ff297d3a7ef2f2d93a73ff8a1f6ae8578c741fc3323d107300ffa174ecae
2850dcca29fee79d5e284a58fd34b944fa5b39768398705a321a99f00cd61fcf17bc33422c7f6630
5d49679a0dade9fbc188014f6a939fc20c615ddfe9734827af7ede4386c9c1e0d40b27bea6106e55
216e93b8bddf1873f1eadadc8c7f135581069a49ba9034c3aac65916e3ca2960ec9f8a37e1838471
ca0c5bbe75f80928d264d1596db22c63182688551ec681c8efcdb86db79c99fb2398667c4c4a0270
b726a6fcbc357ee67ca618b9ab66051ea8d6ed9dd2bc3e815a902bff0e012c4775a9f722bad85cb9
2f6e8458eff973148675af055e77b641054890da93b4563db40f77071622a8b033f9ab1152fe4674
089b77f354c8e526ef174d13cb8a5547ef16fac070e6cdc7b4079f3c2be8924b16cb2dba2e713139
182cf3df2e05e6af235a0f77f54a916bd012e92c4f47cbd05038c0fa01934cbadbed0fdc48922825
47e52505959eabf07e5b6f742c57de755ee69f69096316cc7863576274deb9f7fe321bfe4ff86ee7
2bf8d99a7c6f7eff0ef81f9208c0b53e27e5bcf48f217147ce2b02cac2f9530cea7ba5921e21a24a
1df773a75d9b08e3681f6db83be042cdd38e6bcda5a15b597711e769d83cd778502a5427fc0b515b
b52ce34bd738fa7556d67cca8ff74aec0ed8bef9106da6056f311e5cb5e1b42c96927c85c53fe3f7
91a26af91d19a8687681a892cc25d87c2e8b405d2f48c6060f093780a8a5d81ac33b5ed090971dc2
dbe3e7acbbfbae1196fecfdf60cf071163a330d4d075b5c339454ba2419230a63ca04bb701423d05
c4b2cf3fd71865c4a13793d30a0533b323c6b64d384db6dcc06b0d2a44cccd268e92cad3e4f24cc9
ddab3745d0235b3879660c86da65ed1c07869d789f14bd17f66cb199efcd43b8d597c63a3654ebb1
2e8a1b7ccc39a0d7ba66a88d245f4630d861cc5afa0e2c2305639f192deba912d2dd325e5e8bc9d8
c61baed985be0d38bbee558ad36a5e976d534d129e59ef883b0c0635182575708552282b93bedaec
06b27332117df78e1124dc4b90407911bd05c8776b1a8f03f06a0f84e402cde6bdf2803e4cc56a08
c308f7d7bd36be3ec2b2fba88d09d2b674c18b03acbe9df09e94badbc24a5d1373e8acf6849ab144
c3ba5b0d3df52cf718949ab5ad3f0e1b7f5839294f8e702f427e032c47af49bc27aaf68778008544
bac4920b28735d2e25f1a7397ca0645371b2c3a43d93dfec84281eebccf8ac89b5c39e5793a486b3
a5e5a76598745db9c81b9c7ee69942dc994682b597542542ddf7acd112a39d099930127c80f5485d
68410f56b760d4f01f03dd2c754d077a9cedd63c90f89429e8357130216a74b10d39697593a27ee7
fcf53b5ef186f54f0ee575381f323158fcd7177b1948769540fa6022d9c55b0536f9a01a75aa0d03
c94a44236f07d9f4a10e6b382a09aed476fcf71c8609735c4cb4a3ff5a40fdb28738b4fc855405a2
9a95bf33794a146b8426b99ffa66b63fdc5472e3cbf55da03670bb08e3399c039388341fdf6b6d23
50e1eef129c9d1931e110f4f4f1d24378cf32b54e92283ace7a34020bd9c2bfc3165a6f714f9ce1d
fc7d34a80f30496b506348f240bd74172859c89981bb60541be6151572493835bcb007d5e96c3335
4576072ea8dcb889fcab0637467287cad67019973d07939fa49f94d464e0674fe3e6e2c4446d2dfc
a9c71dd1b1a9065d179ba009f2ef82459574787b0e12635757a58271f59a48a5e84ca76b05751343
3e79ce9248db80953f3dbc5c45690fb7de9486f05730b5f2b8a4a5401ede73cbe1f0f365c42cca2a
98cf475bd364c194f81b821ad57d3e62f75914489918a80bbc0297186dcc357a4d81d0551cf8a425
c9f45feaf99520c3426144d7d812cf17eb91bf7abb891779e44b0b7639d27a9e39b15c244a982289
a1f5c85a1c6d3a54c6a6ed013a44f9de83d77473eb3dc0ff40b09dbf22c7471df1164fb2429ae37c
94cd12391eeec4722288a2679bc98c5fa8eb26c45e2bd387378209508a8d8defadd335a9f409b26b
bd5e55a1e0370e2c64877d5e44280c668494e7ad6ae692a6370b35371e2000452c01302ef5a35490
2b20aa6734b6e1348d0306cd2b2eb1acee0f880376ae12264626c0e97b09d50dfa3ce522b4b715a0
65563b78af34c6450a863b5212366e060db26323fd9aaf5a15397f1d68af4f48e4db3d0e7bd15c9a
b27debcd06d3b4e2eeb1e9a591de89f7c5a2876f08a6bcd43f6f0ad180716fec52c67e64a0c85288
943ab7393a0e524ef9a22344d8efe4cbced56b54ee0fe5fb5343aa588490c27d97e068e71b719782
934b7b62d26900f2d91d17ec1e5a3c8cabda71ef385f40d8cf06069fa8b424c5cdfc9d41e05d233d
072e8eae87748b438dd323be592b4334daed75a9f41e66ac553a7a13c1b38fdb32d1bac3f3b13ba6
fd8dd8ece1d4def753edf39f7f863904d4dc8152a46c48f325b97e262eb34ea02aa01c64c4b2828c
700e45b29190e49f31e916cf414e82b91ec4c8a1a8f54f73fd060a9bfef65550f89b85f01f492dbc
0d1cdda41c3ffd57d7cde49b076311cec788916ce43833393acd58b15cb0ecfd332b7653f27b1703
971d73a359750c7a29118ae100391d20bf833b076142fd3e7997c130348c08b62232a4afd9b86292
29872a588b17e24b50b767b799af019d83b017468c731f4368b4e9b01b848b07b7b36eb37b27d887
aa7ee4a19a116e0afa366d9e497ebbd0a8518232d529cf3e3ce0c95fab07cf05241e56d006bdd3c1
975312e9ddfd446317c867ae025cd393f9916898e790065b7cbe7fce8135821397c54f925f68a05c
2aee9d663e1495bf728330b74d48fecb7b3dce70de3f0d4fcc73713106d8d7b16195b1f9f7c838f4
ac4711e800a76d734ddcab63193214c6ad313d619599f0611462da8a1fc30f4fa7e7278c56eb79f9
c64ccc6a522492f519ed017b676436a15bb2d3006b45d4829b4bb8f932862767eda6952563cbab60
f0445429f5176889c10ba2efa55a5fb9961872180f7512089cdb28716cf805e293ef195b860ee56a
fae1faf7a3b7f33ba7d6806ce1bc41be059fc41dfaed558267b4f41cc839bc4dcfa99bad1b8ace3a
bd48e249dad2e77d5ea5093f6c57d82325bf041f0c1033a76295460b21cae63f9de67e042fdbc0f6
90386952ea19071fd8693b04497cdea2fe3076ff567950e5070af611ae864924f11fe350c1bbaaf7
07e3bf5ca5a1405338403a329660421f3b03cd908a18831b3e7960a359e8622003dfd0ca08922335
afa8bb6c7496f69fd24120a05c1f57bd7ff53c4747366a3826060f1151b79fcb3dbb134fd3c3cc89
e38d19dbd72184d1d67e4aa252dd54558ee9a696626a385b45c19e703ae3be7111c561d367406600
ffb56915c04a7cb959be003f9e1fd6acc1ce262eb6c20ee73350a87f48e38e70469717c166e54a5d
829d175c9ee41662893dfddd31318e3086bc3877c031be09b4548351d894be768a0f0e60fcb607b2
dd0938cd505cb02690ea1b4b4eb79a4da45d10652d189b02611e212dd2a6fc7c1934ec78e534a6cb
af872f99e4e9c57f6579ea24facc19de3c973b0ecee717ca1e1f40ed693c87b1fbc96f0bfdfbe5c4
a8e33f98f1a95985537614d2427590be4589e6c5508161c04153d6828a737bc46a4f70f43a9f4d01
b0d57e0152bbc6f134f73fb89bc50c28fdedc8c50191dc5cf7f7e7dd71b250c80ec09b964af5b9ef
14ba0856b9becd2eff59ac986651324c28b64a755a672de1b2b12e5779587fc157278bdcb06cdb6b
22801a027a0de9e9945b8a6433fc222ac5ae85ccef12eccd5743f86661fa5e0d1928373362ea8ac5
e63b364f7762bb8c77e9155e425e4748a5d2e09c9ebbefe67126bd8b1babed4523d88a67baf7b039
ceb084ca375777d36156c3ff9aa1d97010b86e48e3bd7d65d7b9ae41db3c1979234f20dd55189296
3e27bf8cc53acf8bee4813b2e1597baa8429d3d4e6fd7e1d8614b9d2572c6f3d98fe8e2cd40dbb43
71c1523bc9a315cb14c03e912a4118fedb7da1dfa4186d1297215eeec45e43f54d21bae77c8983ba
8dabba1796d997f56f75ff3e4ea7986b49bf68a953a15631070d2bc6e398aabd30444f1bb8c54b6b
52b8f6e1247a98017bcec782cc5437ddfac3f60364ae914d628f924a8e3129df79c2b4e38405ef6d
310db10ff3090c0592dc7367b880c0f7defa0387d4f0e751fade537413367490a1bbe79cdf732aa7
0863d2166ea5183bf79e7c0adfe03a05ec11dce101683c16ce9c82f86c128fb17767dd7ae4d0d01e
5e8012ec6e09a5a5292bbef5f2e1c6b05671b4e3a83abacb40ac6ce82da66062a787d72fd5e13dc8
c7491d7144082f7dd7e02115fc9484358669f2922506a8041548333403bfce3d4a8ae2eacb17e7e7
65f3121ca6f9c650ab546474fce15b09f6ac650612bd5ee6c4a2e36afe3834a96b6ccbdb085b188d
8605a1e15b1bc323f45b9e850c810ddcc616deed782abd2ce3f12fd545548d2dd8e57a7f24d60390
4698e4df444b407b2847b9dd27faf14526acca37038eaee4f8cd57a1b539448fe3a2de341ad8cce8
c77c6a5364bd054e3c593b911f8426fec174ec35ddbf4e3985ca736cba666d4f418595b0477552e3
c04787ddeceacc9d217818abb99d1e55fab1daed26ab84f5d4f5f71f9e34546137cce5bbb147b70e
3f3f31aff36e4252954ef60444724ddb55283140a18adae2ab022d165c5d32f80893e380a842ca45
3204e3f302633287388a54e640ed6546f5b856a7383c8f0429d5ab86edafdb74615d2f84cb18282e
5201f81f36e7e16c0facd8892a723f752815d4b3905ef301786d52ebfaa4d71c69031a824c902f1a
4f9e0bfa6e65c8ba8d08a51c21710d93814c125bf40fbdbd419df95d9612b716bd8c818b89c5dc77
3571b06dfee809d318861ad5b94e2e7f4934bf0f256692da58991dae05f89d61b73c13cbec92527c
fd539adabd59cfbf3fefe0de283d741291cdc6785164ad02506a6224cd1be1f81ff196a1b7080c6c
4a9c80b8adc0f5726e63e3279f96219c099dd80a2e50e52279d75e60d8d18f736a940e764f043e8f
71b6f258801af785e81f6bf734b361fcf160bedb5a7f567102d96f25358587e110bde8138f0f94d5
1905037dc84f0b1c7f65843126b2b54fa1e6f314a5f1e754793fbdc40d7d48030f03ba84ee037854
f20a8184f91c0b5a385d58b81b2615c66a041778c20cea2131a6a8ebf3653e6e7fc2b74f2ea5ad5e
3b8126595cc2fa6cbd20f8cd697f6124e5f60071d4b6b367137fb148e859459f3868345b8f6dc083
b488380f41d09ac05f62fcd9c7d1eee457d92859b64b39a47fbecf7e7df285df26d2b6492e32b6fd
ce9afa0530e8ab6192ddf3186a559c17277bf600ebb2d93201f9e3f88904db4c74c918b6617ee3ac
80dd19d4b40be673a3f7b95341cf8cb7ed703329cd134a94bfc45db6ee20b0d9ddbc151ad2409014
a69113784f49640cc66a306a93978c824ba8ef03056d53efcb29043b55e08dcb87dfc781c661a94c
8b93a181790054eda2b0f434324cc240f8141ee4c85f053b03b8c3eb7b02232e03a96408e4f2971b
6c41d45da83e7c2db7bf3bd7e1afac0beffa85f429db92e8f16df8c1c4297437e1eaa3d966c03c89
84f16d521de8e1546eb0652cde1c7e4095c8ba6ff61d8b000bd3c14dea518c840f7ad5eabb02c119
904871ae28df503fc248cca2eda7e18bb159a5445375326988a82c58a4c5d7786effa7d6a7168220
83db0c68f5347ecdbe3f2f3d5ebb69a7d6944376f1cab8e724fd54015b9c788a38aeec3a42407ef8
b9d35b6d8a594c184729a97846a4d5584b6038e3a9f2dbfddc19fbdeb84446657db79f7b8e19d1a3
bbcb9acd1819da23cd3f505826902c3c37064cf4383ce27993db0f2f17ea526f51fb76cfd5ef1ed4
fc0b1db43f12eccd4abcadcf25b21091ab5717a7facf9bc3e2fac0de5597a56ed92697aa9e4c5c73
368347d9c21d63bd6ca6188c8b8b4e8f61d81d2977d8cf36fa54841d067bc309ef4b97840d6de143
0825fb0726a937ec64133af1335ff1cc6fb0a1e4486638b79fba1facf7e1b031d5b843ad7a7442fa
ab2947beea3b3ae2a066faebba6ffbdfae509396930091f8bb8917ca3ffa58f3134ce8660d088ea0
a4de7e27f9ea5751cc696abba1e35d511eae5410472abbb290af59f6ca79d0dbb720c0e06a9a35e3
411b7c37325d3badacaa391b730e122c05dd642ad97c2f755382b39cb1289abfd9f49c37aef9fd93
1c134aafc0bf695ebaf7c8c3a2d2f7156ed11efadd4925c6b9dcfeca88cd80c39588833dc11bee10
d0ff73427c762c1048998f9cfca24d21d5b4501bae5ea244b01040fa2e290d2db914f291e52482de
3f01b995cb1f0440b627248be59fa709b8a053b765655c307d5399de6995aa3cee3888c9ddb2fe1f
d0c35ee9df25bf59ee3193fe2f8961c1c91cc09138c0879b00dfc8acc09dd70644c386949bb140e2
0e89869c4018d97bb99a087c46d7c2526a0baa865c9ddc4efde1b62f4475f4a117ab0624483c5aa7
e90bd47b8f8dbab5a497b523d8b9bee0aa8588ac2cc406fbfb5785d8662e9af50c4ece2c7ef973a3
7c37bf6dff09d7e7e62d97cbd6e5406af084bffdf0aeb55bfd29784d0ecc527612dcf9ca6954570f
3651f0aff534cff79c3100d65753958c55e89af544c2c5826f667577ba7bdf230fb3e66461798dc4
4bd7a3317e1010c8d220a2a100f4e52179cd898736af1c3f3bef2ba60b0ca32e0d3405f5ed55c3f3
1706b8b556532a116ccaccd9d7d4b7d49e2ef0b4e862e1f81eb37018e41a86dba0e9040f2e397e09
7a0ff6f18892aa904b093d4bc5b8b51a046c2ad7fb41b8bf4b0997d3adb91efdb40a97847caea150
f90a0fad78dc51557d76d7d1e195541ae61dd7137105b2d612c46e0256917e2cd831ed5e5394bc19
c1060cbdd466b94b2df111d6a88d92ba0ee89c73ffbc32810766c5d4da5ef074a328352d49d72173
d658372fb2f89516851451fe40f7a73aa3c69dea4d5aa0ed1865cc065c7dc7633faac1a5f360bf13
dda6c8fbe12723797d735e3d52059e4e8226e37b38f730318b98f3631ac95e0a4ecd040dfea3c6c6
4c6f75de1b03e7f20b68c4b74dce3df5fe999ce5d22ff17cae57e5e8efbb4b7e3239d44301bc7b8d
d4512b37a19074b8702baf96766680666b2c2b585acb66d7b19097a84708a68427ab94af1e6a32e3
b942a4068b7eac603670a35fd46c6c547604a674ed4d0842a3a3f707e7e9d21dd78aed939b96a8ff
e12ba41be4f9c573f82e3c7130b90b498f4ea290d824393857a1ac4f6e9dfb4a2ccf5bfd5554a081
9d16a7186817c1b6418c8152c5a00a2cc616cc231efc6d800ae19f8354d2699082b7b53192bde22b
26c9cdfda6a1742ad331ac54cf1394cfb0045c7a5ee10943375f008877fd5e8bae69cf83486b25c0
9ed2837412a1e63390dd2de9b5626cab170a2592a80ce48f7bdfdba84542f38d20aed28c3266ef0a
fb5d8d8e31095b4a3efbbf04306440bbc7fdd2484b4b78db2400fa30bab5771a7f5b1d192c968ace
b500e31e538aa23dc33ee63c5931b0094115b9b2cd9ee2313d2a053ec21b337779aef7b17d8382e7
ddf72c723d79afcb7256079fd8355f7a2a586d150e9c61bb74d0d54b3d29024fd772bd94e26a92e9
9ceb49d013f975dcef6ceb841d1c1a770c7e254d9e1297af8044bb51b16953c6d9cbc08b0f811b0d
4d2b331c95c0dfb673c38cef53be8d4dd93540b3f58969e437dc57bece114158a504d53ca3c4ea10
f350aeb3e89f759432fa10c5775a2d6bdf439217ce2df41c40b67d393bffbff9c0a1255e2adf074d
3a2ee7ff88491edc6c43bd3113396e2144f7d08abeb247b8db7b7e6bf4986537dae5765b025603df
bbc914d29bbebc3d18a930b7b5e2a7886b5c7ff5bd65bfab45d851a5d83baa96c769ea71fa7ada53
e24ab2889e8d3ac7487efc7f2b7393ba7a551bbe5643be005cd7eb75d0413951aa9247f203478e56
34d676ccf632662012667ae3ea2bd6532b70a2385a751f18d9a1524082c201ff82ceaf3ebb142378
0a4cdaf336e81870716a02566ed85bb71fecb920842cf194d6612fa3523301c0772c5c171d21ff98
1edd96e9fb9ec94abcca6a26f8b8e36c221c9240e55b71e885fca39c6004e091f4dc5dfc704f5a23
deb35a9519087eb0e6c893441a0713b0b1e01638379b54085fb922b1a8360c964a5df1770cce9f99
944e24dbd041c8108d36dc6d2c64a3c5460beffd94909c5614160953154167a4b15a209656a388e8
00289a85b8dbe532ca3c2430219f442238f848155857415be9ab6ad5e23f62d68166883449babde4
dfe6e0e534d1622fc0c0ee7cc71de4872e54598ff2bdec40815fb699bb696b1b7ba422276be54748
3ce180e3aa2e4149881b3c0abd0d1f9dee23130882b9c8a2084bc4a5f3881b3dc73db3d5d8ef1adc
319c67407b9fc7bffef5420d56f52f76ca0f37166b12e70069e7e5437e22bea2f8411ac3e8447745
6853e223ab0cd56673b93835a887200defe55143b7cbb9cb8c066f2dfc8bc5e37d1d597293acc866
7c9c789bbfee7fb4ff5c67704702b87784f22dc4ec161163471c0affd4c3b258483af7c0cebcf274
564566bc8f93f6507fc173e7d0cb3404ca7942047566dbca255e61f47287a8bf3a674b5948efda5a
582ff23fe30a18a1f129e1d754831dac47c3962ae36f2744b37d8905fb05cc8949e360f7f4628206
23ad942c52f1042f48bb5c76b2fe1a6a3a58ef4341659c4c9da4abd9aaa898ee3b61040b7e41aef9
f7ebc56088eb8ae2dffaaf1e10570c8123684880f8a87e31b5ed3407e92149d97ff51b7ef22f4391
6570fd1abd35404545cae343cbe62251f3c5af14e2c27e9661434dcc0a5d724488c5fb026430619f
9fae8e55ad74c3ff7d42dd23c877e101bfd2e30caafd7857bc815a9441d0b3a543e8e15034004ad6
70ea2a081655555222e981f62d693c344c179523e69e321b0d3fe4c7adb119c5bb695795b908a328
ca29a1acdb7bab54d2da2629931a11aa83db50460f858b3fa2d48c039f62775b12497ef50e42433a
e376a39106013aea5ae1b29ff6fa41f117e9e5b09d89f4ed6154a67d32426b456297391d6927b9fb
696d2116cc33d4fe9779ad249068a3095bc97a5cb2869632a068e43964f0036d83c03137aebd6cd3
fd5df6c273ef75ab4ef853cb1e5f67770a41be3cfa0d4b01345112bcd615a7ff363a508c1a8c77fe
5978dcfddbea1a07a5ac0e309070a6a0516266ce18e57b490c952ab3d25c20b70da0cda01d621b7f
c12d7a150405b6041089144215af30ab20955cbeada2c60deb6b2de76fef56dd00476c76f43a3ef5
aad38bbe648afcce42563a3f289b1e203eac52e562b3223105526307e026692d22ae7506a14974c8
c63c39da5aa041f5e72e5e3671fc5211909e6220e999d015b9cd7e8d61158d88878b8b550ca516f7
e72033e1d592607a1b98
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 SSC_Copy_State <Virtual>  0
 HBW_Pick TASK  0 -1
 HBW_Copy_State <Virtual>  0
 PID_10 PID  0
 PID_11 PID  0
 hunt_exp_light PROGRAM  0 -1
 HBW_Home <Virtual>  0
 HBW_Pick_Sto <Virtual>  0
 test TASK  0 -1
 HBW_Pickup_ST PROGRAM  0 -1
 HWB_Extend_Arm <Virtual>  0
 HBW_Retract_Arm <Virtual>  0
 HWB_PickUp TASK  0 -1
 HBW_HTO1POS <Virtual>  0
 HBW_Left_1Block <Virtual>  0
 HBW_HomeTo2_Col <Virtual>  0
 HWB_HomeTo3_Col <Virtual>  0
 HWB_HomeTo2_Row <Virtual>  0
 HWB_HomeTo3_Row <Virtual>  0
 HWB_HomeTo1_Col <Virtual>  0
 HBW_move_left_1 <Virtual>  0
 HWB_Home_to_11 <Virtual>  0
 HWB_11_DropOff <Virtual>  0
 HBW_Pickup <Virtual>  0
 HBW_PickUp_R1 <Virtual>  0
 HBW_Send_VGR <Virtual>  0
 HBW_PickUp_VGR <Virtual>  0
 HBW_Return_VGR <Virtual>  0
 HBW_MotorsOff <Virtual>  0
 HBW_ConvTo11 <Virtual>  0
 HBW_Return_Top <Virtual>  0
 HBW_MV_11_12 <Virtual>  0
#END

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"VGR Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC410 C410 1 0x0 MC409 C409 1 0x0 MC412 Y28 1 0x0 MC412 MC450 1 0x0 MC411 C411 1 0x0 MC408 C408 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC413 Y29 1 0x0 MC413 MC451 1 0x0 X27 MI200 1"

// Rung VGR_Copy_State#2
// Offset 27
NOP

// Rung VGR_Copy_State#3
// Offset 28
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC800 Y41 1 0x0 Y41 MI801 1 0x0 MC802 Y43 1 0x0 Y43 MI803 1 0x0 MC804 C804 1 0x0 MC805 C805 1 0x0 MC806 Y44 1 0x0 MC807 Y20 1 0x0 MC808 C811 1 0x0 MC809 C809 1 0x0 MC810 C810 1 0x0 MC812 C812 1 0x0 MC813 C813 1 0x0 MC814 C814 1 0x0 MC816 Y45 1 0x0 MC817 Y46 1 0x0 MC818 Y21 1"

// Rung MPO_Copy_State#2
// Offset 39
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC800 C1600 1 0x0 MC801 C1601 1 0x0 MC802 C1602 1 0x0 MC803 C1603 1 0x0 MC804 C1604 1 0x0 Y31 MI800 1 0x0 MC850 C1605 1"

// Rung SLD_Copy_State#2
// Offset 19
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"SSC Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC606 C1200 1 0x0 MC607 C1201 1 0x0 MC608 C1202 1 0x0 MC609 C1203 1 0x0 MC615 C1215 1 0x0 MC616 C1216 1 0x0 MC617 C1217 1 0x0 MC618 C1218 1 0x0 MC619 C1219 1 0x0 MC620 C1220 1"

// Rung SSC_Copy_State#2
// Offset 25
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block HBW_Home
$LGCMOD HBW_Home

// Rung HBW_Home#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Home#2
// Offset 8
STRN C215
ANDN X0
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 60 60
OUT Y51

// Rung HBW_Home#3
// Offset 26
STRN C215
ANDN X3
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5

// Rung HBW_Home#4
// Offset 43
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y76

// Rung HBW_Home#5
// Offset 64
NOP

// Rung HBW_Home#6
// Offset 65
RET

// End of Code Block HBW_Home
$LGCEND HBW_Home

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 Y40 1 0x0 Y80 MHR102 1 0x0 MC101 C205 1 0x0 MC102 C206 1 0x0 MC103 C207 1 0x0 MC104 C208 1 0x0 MC105 C209 1 0x0 MC106 C210 1 0x0 MC107 C211 1 0x0 MC108 C212 1 0x0 MC109 C213 1 0x0 MC110 C214 1 0x0 MC111 C215 1 0x0 MC112 C216 1 0x0 X2 MI101 1 0x0 X10 MI102 1 0x0 X11 MI103 1 0x0 X3 MI104 1 0x0 X0 MI105 1 0x0 X6 MI106 1 0x0 X7 MI107 1 0x0 X8 MI108 1 0x0 X9 MI109 1 0x0 $HBW_Encoder_X.Acc MHR1 1 0x0 $HBW_Encoder_Z.Acc MHR2 1"

// Rung HBW_Copy_State#2
// Offset 55
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block HBW_HomeTo2_Col
$LGCMOD HBW_HomeTo2_Col

// Rung HBW_HomeTo2_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_HomeTo2_Col#2
// Offset 17
STRGE -2775 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_HomeTo2_Col#3
// Offset 22
NOP

// Rung HBW_HomeTo2_Col#4
// Offset 23
NOP

// Rung HBW_HomeTo2_Col#5
// Offset 24
NOP

// Rung HBW_HomeTo2_Col#6
// Offset 25
RET

// End of Code Block HBW_HomeTo2_Col
$LGCEND HBW_HomeTo2_Col

// Beginning of Code Block HWB_HomeTo1_Col
$LGCMOD HWB_HomeTo1_Col

// Rung HWB_HomeTo1_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HWB_HomeTo1_Col#2
// Offset 17
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_HomeTo1_Col#3
// Offset 22
NOP

// Rung HWB_HomeTo1_Col#4
// Offset 23
NOP

// Rung HWB_HomeTo1_Col#5
// Offset 24
RET

// End of Code Block HWB_HomeTo1_Col
$LGCEND HWB_HomeTo1_Col

// Beginning of Code Block HWB_Home_to_11
$LGCMOD HWB_Home_to_11

// Rung HWB_Home_to_11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HWB_Home_to_11#2
// Offset 22
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_Home_to_11#3
// Offset 27
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HWB_Home_to_11#4
// Offset 49
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_Home_to_11#5
// Offset 54
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HWB_Home_to_11#6
// Offset 73
NOP

// Rung HWB_Home_to_11#7
// Offset 74
NOP

// Rung HWB_Home_to_11#8
// Offset 75
RET

// End of Code Block HWB_Home_to_11
$LGCEND HWB_Home_to_11

// Beginning of Code Block HWB_11_DropOff
$LGCMOD HWB_11_DropOff

// Rung HWB_11_DropOff#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HWB_11_DropOff#2
// Offset 8
STRGE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_11_DropOff#3
// Offset 13
STRN C215
ANDN C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51

// Rung HWB_11_DropOff#4
// Offset 31
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y4
AND ST2
OUT Y5

// Rung HWB_11_DropOff#5
// Offset 51
STRGE 2850 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_11_DropOff#6
// Offset 56
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 60 60
OUT Y7

// Rung HWB_11_DropOff#7
// Offset 73
RET

// End of Code Block HWB_11_DropOff
$LGCEND HWB_11_DropOff

// Beginning of Code Block HBW_PickUp_R1
$LGCMOD HBW_PickUp_R1

// Rung HBW_PickUp_R1#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R1#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R1#3
// Offset 41
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R1#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R1#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_PickUp_R1#6
// Offset 69
NOP

// Rung HBW_PickUp_R1#7
// Offset 70
NOP

// Rung HBW_PickUp_R1#8
// Offset 71
NOP

// Rung HBW_PickUp_R1#9
// Offset 72
NOP

// Rung HBW_PickUp_R1#10
// Offset 73
RET

// End of Code Block HBW_PickUp_R1
$LGCEND HBW_PickUp_R1

// Beginning of Code Block HBW_Send_VGR
$LGCMOD HBW_Send_VGR

// Rung HBW_Send_VGR#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Send_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_Send_VGR#3
// Offset 37
STRN C215
AND X2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y48
AND ST2
OUT Y49

// Rung HBW_Send_VGR#4
// Offset 56
NOP

// Rung HBW_Send_VGR#5
// Offset 57
NOP

// Rung HBW_Send_VGR#6
// Offset 58
RET

// End of Code Block HBW_Send_VGR
$LGCEND HBW_Send_VGR

// Beginning of Code Block HBW_PickUp_VGR
$LGCMOD HBW_PickUp_VGR

// Rung HBW_PickUp_VGR#1
// Offset 0
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_PickUp_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_PickUp_VGR#3
// Offset 37
STRN C215
AND X11
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_PickUp_VGR#4
// Offset 56
NOP

// Rung HBW_PickUp_VGR#5
// Offset 57
NOP

// Rung HBW_PickUp_VGR#6
// Offset 58
RET

// End of Code Block HBW_PickUp_VGR
$LGCEND HBW_PickUp_VGR

// Beginning of Code Block HBW_Return_VGR
$LGCMOD HBW_Return_VGR

// Rung HBW_Return_VGR#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C253
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y6

// Rung HBW_Return_VGR#2
// Offset 22
STRN C215
AND X1
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_Return_VGR#3
// Offset 41
STRN C215
AND C251
DUPBOOL
ANDN X1
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_Return_VGR#4
// Offset 63
STRLE 2575 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_VGR#5
// Offset 68
NOP

// Rung HBW_Return_VGR#6
// Offset 69
NOP

// Rung HBW_Return_VGR#7
// Offset 70
RET

// End of Code Block HBW_Return_VGR
$LGCEND HBW_Return_VGR

// Beginning of Code Block HBW_MotorsOff
$LGCMOD HBW_MotorsOff

// Rung HBW_MotorsOff#1
// Offset 0
STRN C215
ANDN ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_MotorsOff#2
// Offset 18
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_MotorsOff#3
// Offset 36
STRN C215
AND ST2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
OUT Y48

// Rung HBW_MotorsOff#4
// Offset 54
NOP

// Rung HBW_MotorsOff#5
// Offset 55
NOP

// Rung HBW_MotorsOff#6
// Offset 56
NOP

// Rung HBW_MotorsOff#7
// Offset 57
RET

// End of Code Block HBW_MotorsOff
$LGCEND HBW_MotorsOff

// Beginning of Code Block HBW_ConvTo11
$LGCMOD HBW_ConvTo11

// Rung HBW_ConvTo11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_ConvTo11#2
// Offset 22
NOP

// Rung HBW_ConvTo11#3
// Offset 23
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_ConvTo11#4
// Offset 28
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_ConvTo11#5
// Offset 50
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_ConvTo11#6
// Offset 55
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_ConvTo11#7
// Offset 74
NOP

// Rung HBW_ConvTo11#8
// Offset 75
NOP

// Rung HBW_ConvTo11#9
// Offset 76
RET

// End of Code Block HBW_ConvTo11
$LGCEND HBW_ConvTo11

// Beginning of Code Block HBW_Return_Top
$LGCMOD HBW_Return_Top

// Rung HBW_Return_Top#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Return_Top#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HBW_Return_Top#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_Top#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_Return_Top#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return_Top#6
// Offset 69
NOP

// Rung HBW_Return_Top#7
// Offset 70
NOP

// Rung HBW_Return_Top#8
// Offset 71
RET

// End of Code Block HBW_Return_Top
$LGCEND HBW_Return_Top

// Beginning of Code Block HBW_MV_11_12
$LGCMOD HBW_MV_11_12

// Rung HBW_MV_11_12#1
// Offset 0
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_MV_11_12#2
// Offset 21
NOP

// Rung HBW_MV_11_12#3
// Offset 22
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_MV_11_12#4
// Offset 44
STRGE 5325 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_MV_11_12#5
// Offset 49
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
OUT Y4

// Rung HBW_MV_11_12#6
// Offset 67
STRGE 5325 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_MV_11_12#7
// Offset 72
NOP

// Rung HBW_MV_11_12#8
// Offset 73
NOP

// Rung HBW_MV_11_12#9
// Offset 74
RET

// End of Code Block HBW_MV_11_12
$LGCEND HBW_MV_11_12

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#2
// Offset 3
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#3
// Offset 6
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#4
// Offset 9
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#5
// Offset 12
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// Rung $Main#6
// Offset 15
#BEGIN FMT_COMMENT 
"Hunter Demo Light<br>"
#END

STR ST1
RUN hunt_exp_light

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
SG HBW_Program.S0

// Rung HBW_Program#2
// Offset 2
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#3
// Offset 10
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#4
// Offset 12
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#5
// Offset 14
STR ST1
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#6
// Offset 22
NOP

// Rung HBW_Program#7
// Offset 23
STR C213
JMP HBW_Program.S1

// Rung HBW_Program#8
// Offset 25
SG HBW_Program.S1

// Rung HBW_Program#9
// Offset 27
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#10
// Offset 35
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#11
// Offset 37
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#12
// Offset 39
STR ST1
DUPBOOL
STR C205
ANDN C206
STR C206
ANDN C205
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 500 60
POPBOOL
DUPBOOL
AND C205
OUT Y48
POPBOOL
AND C206
OUT Y49

// Rung HBW_Program#13
// Offset 68
STR ST1
DUPBOOL
STR C207
ANDN C208
STRN C207
AND C208
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
POPBOOL
DUPBOOL
AND C207
OUT Y50
POPBOOL
AND C208
OUT Y51

// Rung HBW_Program#14
// Offset 97
STR ST1
DUPBOOL
STR C209
ANDN C210
STRN C209
AND C210
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
POPBOOL
DUPBOOL
AND C209
OUT Y4
POPBOOL
AND C210
OUT Y5

// Rung HBW_Program#15
// Offset 126
STR ST1
DUPBOOL
STR C211
ANDN C212
STRN C211
AND C212
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
POPBOOL
DUPBOOL
AND C211
OUT Y6
POPBOOL
AND C212
OUT Y7

// Rung HBW_Program#16
// Offset 155
STR C213
JMP HBW_Program.S2

// Rung HBW_Program#17
// Offset 157
SG HBW_Program.S2

// Rung HBW_Program#18
// Offset 159
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#19
// Offset 167
STR X0
OUT $HBW_Encoder_X.ResetLevel

// Rung HBW_Program#20
// Offset 169
STR X3
OUT $HBW_Encoder_Z.ResetLevel

// Rung HBW_Program#21
// Offset 171
STR ST1
CALL HBW_Home 0x1 DST511 "3" "3"

// Rung HBW_Program#22
// Offset 179
STR X0
AND X11
AND X3
JMP HBW_Program.S3

// Rung HBW_Program#23
// Offset 183
STR C212
JMP HBW_Program.S3

// Rung HBW_Program#24
// Offset 185
NOP

// Rung HBW_Program#25
// Offset 186
SG HBW_Program.S3

// Rung HBW_Program#26
// Offset 188
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#27
// Offset 196
STR ST1
CALL HWB_Home_to_11 0x1 DST511 "3" "3"

// Rung HBW_Program#28
// Offset 204
STRN C250
ANDN C251
JMP HBW_Program.S4

// Rung HBW_Program#29
// Offset 207
SG HBW_Program.S4

// Rung HBW_Program#30
// Offset 209
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#31
// Offset 217
STR ST1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#32
// Offset 225
STR X10
ANDN C251
JMP HBW_Program.S5

// Rung HBW_Program#33
// Offset 228
SG HBW_Program.S5

// Rung HBW_Program#34
// Offset 230
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#35
// Offset 238
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#36
// Offset 246
STRN C251
AND C250
JMP HBW_Program.S6

// Rung HBW_Program#37
// Offset 249
SG HBW_Program.S6

// Rung HBW_Program#38
// Offset 251
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#39
// Offset 259
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#40
// Offset 267
STRN X2
JMP HBW_Program.S7

// Rung HBW_Program#41
// Offset 269
SG HBW_Program.S7

// Rung HBW_Program#42
// Offset 271
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#43
// Offset 279
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#44
// Offset 287
STR X11
JMP HBW_Program.S8
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#45
// Offset 296
SG HBW_Program.S8

// Rung HBW_Program#46
// Offset 298
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#47
// Offset 306
STR ST1
CALL HBW_ConvTo11 0x1 DST511 "3" "3"

// Rung HBW_Program#48
// Offset 314
STRN C250
ANDN C251
JMP HBW_Program.S9

// Rung HBW_Program#49
// Offset 317
SG HBW_Program.S9

// Rung HBW_Program#50
// Offset 319
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#51
// Offset 327
STR ST1
CALL HBW_Return_Top 0x1 DST511 "3" "3"

// Rung HBW_Program#52
// Offset 335
STR X10
ANDN C251
JMP HBW_Program.S10

// Rung HBW_Program#53
// Offset 338
SG HBW_Program.S10

// Rung HBW_Program#54
// Offset 340
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#55
// Offset 348
STR ST1
CALL HBW_MV_11_12 0x1 DST511 "3" "3"

// Rung HBW_Program#56
// Offset 356
STRN C250
JMP HBW_Program.S11

// Rung HBW_Program#57
// Offset 358
SG HBW_Program.S11

// Rung HBW_Program#58
// Offset 360
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#59
// Offset 368
STR ST1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#60
// Offset 376
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#61
// Offset 379
SG HBW_Program.S12

// Rung HBW_Program#62
// Offset 381
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#63
// Offset 389
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#64
// Offset 397
STRN C251
AND C250
JMP HBW_Program.S13

// Rung HBW_Program#65
// Offset 400
SG HBW_Program.S13

// Rung HBW_Program#66
// Offset 402
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#67
// Offset 410
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#68
// Offset 418
STRN X2
JMP HBW_Program.S14

// Rung HBW_Program#69
// Offset 420
SG HBW_Program.S14

// Rung HBW_Program#70
// Offset 422
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#71
// Offset 430
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#72
// Offset 438
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#73
// Offset 447
SG HBW_Program.S15

// Rung HBW_Program#74
// Offset 449
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#75
// Offset 457
STRN ST1
CALL HBW_ConvTo11 0x1 DST511 "3" "3"

// Rung HBW_Program#76
// Offset 465
STRN C250
ANDN C251
JMP HBW_Program.S16

// Rung HBW_Program#77
// Offset 468
STR C213
JMP HBW_Program.S16

// Rung HBW_Program#78
// Offset 470
SG HBW_Program.S16

// Rung HBW_Program#79
// Offset 472
NOP

// Rung HBW_Program#80
// Offset 473
STR C213
JMP HBW_Program.S1

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#2
// Offset 8
STR ST1
DUPBOOL
STR C410
ANDN C409
STRN C410
AND C409
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
POPBOOL
DUPBOOL
AND C410
OUT Y27
POPBOOL
AND C409
OUT Y26

// Rung VGR_Program#3
// Offset 37
STR ST1
DUPBOOL
STR C408
ANDN C411
STRN C408
AND C411
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
POPBOOL
DUPBOOL
AND C408
OUT Y24
POPBOOL
AND C411
OUT Y25

// Rung VGR_Program#4
// Offset 66
STR ST1
DUPBOOL
STR C406
ANDN C407
STRN C406
AND C407
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
POPBOOL
DUPBOOL
AND C406
OUT Y23
POPBOOL
AND C407
OUT Y22

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STR C813
OUT Y18

// Rung MPO_Program#4
// Offset 12
STR C810
OUT Y17

// Rung MPO_Program#5
// Offset 14
STR C811
OUT Y52

// Rung MPO_Program#6
// Offset 16
STR ST1
DUPBOOL
STR C804
ANDN C805
STR C805
ANDN C804
ORSTR
ANDSTR
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 100
POPBOOL
DUPBOOL
AND C804
OUT Y53
POPBOOL
AND C805
OUT Y15

// Rung MPO_Program#7
// Offset 45
STR C814
OUT Y19

// Rung MPO_Program#8
// Offset 47
STR C809
JMP MPO_Program.S2

// Rung MPO_Program#9
// Offset 49
SG MPO_Program.S1

// Rung MPO_Program#10
// Offset 51
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#11
// Offset 59
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#12
// Offset 61
STRN X24
SET Y17

// Rung MPO_Program#13
// Offset 63
STR Y17
OUT Y20
ANDN X17
ONDTMR T0 1000 Y44

// Rung MPO_Program#14
// Offset 69
SG MPO_Program.S2

// Rung MPO_Program#15
// Offset 71
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#16
// Offset 79
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#17
// Offset 81
STRN X19
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y53

// Rung MPO_Program#18
// Offset 97
STR X19
JMP MPO_Program.S3

// Rung MPO_Program#19
// Offset 99
SG MPO_Program.S3

// Rung MPO_Program#20
// Offset 101
STR ST1
SET Y17

// Rung MPO_Program#21
// Offset 103
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#22
// Offset 111
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#23
// Offset 113
STR X19
SET Y19

// Rung MPO_Program#24
// Offset 115
STR X19
ONDTMR T100 2000 Y18

// Rung MPO_Program#25
// Offset 119
STR T100.DN
JMP MPO_Program.S4

// Rung MPO_Program#26
// Offset 121
SG MPO_Program.S4

// Rung MPO_Program#27
// Offset 123
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#28
// Offset 131
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#29
// Offset 133
STR X19
RST Y19

// Rung MPO_Program#30
// Offset 135
STRN X16
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y15

// Rung MPO_Program#31
// Offset 151
STR X16
JMP MPO_Program.S5

// Rung MPO_Program#32
// Offset 153
SG MPO_Program.S5

// Rung MPO_Program#33
// Offset 155
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#34
// Offset 163
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#35
// Offset 165
STR X16
SET Y19

// Rung MPO_Program#36
// Offset 167
STR Y19
ONDTMR T101 2000 C815

// Rung MPO_Program#37
// Offset 171
STR C815
RST Y18

// Rung MPO_Program#38
// Offset 173
STRN Y18
JMP MPO_Program.S6

// Rung MPO_Program#39
// Offset 175
SG MPO_Program.S6

// Rung MPO_Program#40
// Offset 177
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#41
// Offset 185
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#42
// Offset 187
STR X16
RST Y19

// Rung MPO_Program#43
// Offset 189
STRN Y19
ONDTMR T102 1000 C818

// Rung MPO_Program#44
// Offset 193
STR C818
JMP MPO_Program.S7

// Rung MPO_Program#45
// Offset 195
SG MPO_Program.S7

// Rung MPO_Program#46
// Offset 197
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#47
// Offset 205
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#48
// Offset 207
STRN X15
OUT Y45

// Rung MPO_Program#49
// Offset 209
STR X15
TMRDOWN T102 1000
OUT Y43

// Rung MPO_Program#50
// Offset 213
STR T102.Done
JMP MPO_Program.S8

// Rung MPO_Program#51
// Offset 215
SG MPO_Program.S8

// Rung MPO_Program#52
// Offset 217
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#53
// Offset 225
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#54
// Offset 227
STRN X13
OUT Y45

// Rung MPO_Program#55
// Offset 229
STR X13
TMRDOWN T103 1000
OUT Y21

// Rung MPO_Program#56
// Offset 233
STR T103.Done
JMP MPO_Program.S9

// Rung MPO_Program#57
// Offset 235
SG MPO_Program.S9

// Rung MPO_Program#58
// Offset 237
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#59
// Offset 245
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#60
// Offset 247
STR ST1
OUT Y47

// Rung MPO_Program#61
// Offset 249
STRN X12
ONDTMR T104 1000 Y46

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
SG SLD_Program.S0

// Rung SLD_Program#2
// Offset 2
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#3
// Offset 10
STR C1600
OUT Y30

// Rung SLD_Program#4
// Offset 12
STR C1601
OUT Y31

// Rung SLD_Program#5
// Offset 14
STR C1602
OUT Y32

// Rung SLD_Program#6
// Offset 16
STR C1603
OUT Y33

// Rung SLD_Program#7
// Offset 18
STR C1604
OUT Y34

// Rung SLD_Program#8
// Offset 20
STR C1605
JMP SLD_Program.S1

// Rung SLD_Program#9
// Offset 22
SG SLD_Program.S1

// Rung SLD_Program#10
// Offset 24
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#11
// Offset 32
STRN C1605
JMP SLD_Program.S0

// Rung SLD_Program#12
// Offset 34
STRN X35
OFFDTMR T200 1750 C1651

// Rung SLD_Program#13
// Offset 38
STR C1651
OUT Y30

// Rung SLD_Program#14
// Offset 40
STRGE T200.Acc 1750
FLASHER 500 500 Y899

// Rung SLD_Program#15
// Offset 48
SG SLD_Program.S2

// Rung SLD_Program#16
// Offset 50
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#17
// Offset 58
STRN C1605
JMP SLD_Program.S0

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STR C1200
OUT Y39

// Rung SSC_Program#4
// Offset 12
STR C1201
OUT Y40

// Rung SSC_Program#5
// Offset 14
STR C1202
OUT Y41

// Rung SSC_Program#6
// Offset 16
STR C1215
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y35

// Rung SSC_Program#7
// Offset 32
STR C1216
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y36

// Rung SSC_Program#8
// Offset 48
STR C1217
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#9
// Offset 64
STR C1218
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#10
// Offset 80
STR ST2
ANDPD X47
ANDPDPF
STR ST2
AND CT150.Done
CNT CT150 100

// Rung SSC_Program#11
// Offset 88
STR C1203
JMP SSC_Program.S1

// Rung SSC_Program#12
// Offset 90
SG SSC_Program.S1

// Rung SSC_Program#13
// Offset 92
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#14
// Offset 100
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#15
// Offset 102
STRN X41
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// End of Code Block SSC_Program
$PGMEND SSC_Program

// Beginning of Code Block hunt_exp_light
$PRGRM hunt_exp_light

// Rung hunt_exp_light#1
// Offset 0
STR ST2
COPY 0x1 "4 0x0 MC402 Y39 1"

// End of Code Block hunt_exp_light
$PGMEND hunt_exp_light

// Beginning of Code Block HWB_PickUp
$TSK HWB_PickUp

// Rung HWB_PickUp#1
// Offset 0
NOP

// End of Code Block HWB_PickUp
$TSKEND HWB_PickUp

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"C1","copy","",""
"C11","C11_Interlock","","Used to delay logic by one scan"
"C12","C12_Interlock_2","","Used to delay logic by one scan"
"C20","HBW_Has_Pallet","","True when carrying a pallet"
"C51","X_Direction","","True: Left False: Right"
"C52","Z_Direction","","True: Down False: Up"
"C80","Conveyor_Timeout","","Bit high when Conveyor Timeout timer active"
"C90","HBW_XY_PID_EN","","Enables PID control in HBW_Move_XZ"
"C101","HBW_T1_Send","Modbus MC101","Task to deliver a pallet to conveyor"
"C102","HBW_T2_Receive","Modbus MC102","Task to pickup a pallet from conveyor"
"C103","HBW_T3_Reset","Modbus MC103","Reinitialize and home all axises"
"C104","HBW_T4_Manual","Modbus MC104","Switch to manual mode"
"C110","HBW_Move_X_L","Modbus MC110","Move Horizontal Axis towards bay"
"C111","HBW_Move_X_R","Modbus MC111","Move Horizontal Axis towards Conveyor"
"C112","HBW_Move_Y_In","Modbus MC112","Move Cantilever In"
"C113","HBW_Move_Y_Out","Modbus MC113","Move Cantilever Out"
"C114","HBW_Move_Z_Up","Modbus MC114","Move Vertical Axis Up"
"C115","HBW_Move_Z_Down","Modbus MC115","Move Vertical Axis Down"
"C116","HBW_Conveyor_In","Modbus MC116","Move Conveyor In"
"C117","HBW_Conveyor_Out","Modbus MC117","Move Conveyor Out"
"C130","HBW_Status_Ready","Modbus MC130","On when ready for a task"
"C133","HBW_Mov_Conveyor","Modbus MC133","Status Conveyor Moving"
"C134","HBW_Moving_X","Modbus MC134","Status GantryMovingX"
"C135","HBW_Moving_Y","Modbus MC135","Status GantryMovingY"
"C136","HBW_Moving_Z","Modbus MC136","Status GantryMovingZ"
"C138","HBW_Status_Y_Pos","Modbus MC138","Current Y position"
"C141","HBW_Target_Y_Pos","Modbus MC141","Target Y position"
"C150","HBW_MoveComplete","","HBW_Move_XZ completion interlock."
"C180","HBW_Fault","Modbus MC180","Status in Fault State"
"C182","Fault_X_Target","","Active when X target out of range"
"C183","Fault_Z_target","","Active when Z target out of range"
"C400","VGR_T0","",""
"C410","VGR_T1","",""
"C420","VGR_T2","",""
"C430","VGR_T3","",""
"C440","VGR_T4","",""
"C500","VGR_Man_Control","",""
"C799","VGR_RESET","",""
"V105","HBW_Task_X_slot","Modbus MHR105","Value for slot X coord"
"V106","HBW_Task_Y_slot","Modbus MHR106","Value for slot y coord"
"V118","HBW_PWM_Set_X","Modbus MHR118","Set Horizontal Axis PWM Duty Cycle %"
"V119","HBW_PWM_Set_Y","Modbus MHR119","Set Cantilever Axis PWM Duty Cycle %"
"V120","HBW_PWM_Set_Z","Modbus MHR120","Set Vertical Axis PWM Duty cycle %"
"V131","HBW_Cur_Progress","Modbus MHR131","0 to 100 percent job completion"
"V132","HBW_Cur_Stage","Modbus MHR132","Current stage number"
"V137","HBW_Status_X_Pos","Modbus MHR137","Current X encoder position"
"V139","HBW_Status_Z_Pos","Modbus MHR139","Current Z encoder position"
"V140","HBW_Target_X_Pos","Modbus MHR140","Target X encoder position"
"V142","HBW_Target_Z_Pos","Modbus MHR142","Target Z encoder position"
"V181","HBW_Fault_code","Modbus MHR181","Current Fault code"
"V801","VGR_Fault_Code","",""
"N810","VGR_Rot_Target","",""
"N811","VGR_X_Target","",""
"N812","VGR_Y_Target","",""
"D0","MC","",""
"D1","Feeder_Extend","",""
"D140","X_Start_Position","","Distance to target"
"D142","Y_Start_Position","","Distance to target"
"D143","HBW_PWM_Cur_X","","PWM value for X for XZ movement task"
"D144","HBW_PWM_Cur_Z","","PWM value for Z for XZ movement task"
"T3","T_HBW_S6","",""
"T4","T_Conveyor_Timer","","Used to detect conveyor faults"
"MPO_Program.S2","Vaccum_MO","",""
"MPO_Program.S3","Vaccum","",""
"MPO_Program.S4","Vacumm_MO","",""
"MPO_Program.S5","Vaccum_Load","",""
"US0","_CP_Strogram_A","","CP_State_Program"
"US1","_VGR_Movement","","VGR_Movement"
"US2","_SSC_Check_InOut","","SSC_Check_InOut"
"UB0","_VGR_MisScan_A","","VGR_Movement.Done ThisScan"
#END

