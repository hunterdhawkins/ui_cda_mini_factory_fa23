// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\brent\Desktop\factory\ui_cda_mini_factory_fa23\fa23_plc.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
68e4c6be87756fb9f51b1b737dddddb88deedf2819699f0d97e7a64761767985fba6f7522c876754
139fe1ee4e5f76360ff2f5a56f4149fc7de49763d05b3f5ff05cca9c6f54e30cc179ec19c7787e7a
5edba05843c9d11c47417da73a2a5c38feadd78b8386dc53320209e707e6f5dea82fe36adff2cb1a
598abc7fb26077dd0b2f3bc7ade9bd73e5f80c2df57bfca44ee8fb8da0467c75f22f5e2db204dc71
e9de15481e17bf79f9b3b15c93241d80642f190720b441b8c4d4d06431667f625ebc8f6b46d2e928
1c296da7c2d2f847d8ff356cd78c1de26e4b1ff833d68b66f1b8e4ee93409f9104258c19fbf8fd3e
8bb0d7ce0f71b4344a262de836fa5aaef31eee9f29510779ea8af05558eb4bdbcbae074735cb67d1
b87580b728d0e2f69d80df8cd5e155905a99d69d4116aead0cbf3d93be7704125d3d85c23b92d224
d9c5167f220efef0f0934c5981b63ae3a37efc6097e9564f82a84972a2973309329fc8a42da31c26
00bf95a502d4ba5b5c284b65ef70d0ba18f0970cb83ae80830bef5d7671836b6cb12e48107efcf51
d91354d16e49ba2d4602ce7b5e9029676b45e1ac1c0cce32b34900021c253190360bf5dd005555f1
4019453dcf18ca72c377e603279b135dbe1fec5e15686647637cf2c5b3e6dcf9656dea8a5c732555
f206df2427ed7ce08c2a16878ca0ba28271b95916d61f8a935f5d1767698418e96d83a1b9408bff1
5990a955400b160c2c2e368bd673c9be22191952eb7dc018c932fc1260844fbc8f7aa25884254e70
d5574e42807826ca588033b10d73d3893f086247496b0ec4eb061b793a462034a1a8e6966fbcbb96
2499f9a9995d2b33198d2bc269443cd75be2c42cc4751c3f63c63f7e469798642fcc43181da4eedd
5a8ce7e429e956c75f3f103732a80b67ba83143c617c8fb21d9a963d295e81cfbe150e7d7c513777
ae4fdfc4c6600cf07f2ad91e8cd21e2ec50b607f45a41a2d10d0f65fa68ab61bc16804cbed86b2ba
38257c33a6aac09c98df0067f1e75695fbb356032e38550cbb28b5dea789a07937cd2efc46962dcb
9fb8a9a6813339776fe50783c769e9c6103f4a654e34dc12f7a8b034f68a8cbb165b16169e566bb0
82031bae1145b20146664952491db36b9a2ae5823f2ea8e392b09f37af056121412097ca2aa594c7
a71b64a4582e4199203acb37e011c92079be890932b70a2a3373abe9d5c44950b4e9c099a6eba667
2f4f06f40645df639a2fd0660c74c56c2f94ffef8cf8cc014fb2f1654aff624c3dc58a0e285251e3
189d4b8f99e5879d97e699b4c648951bfc983b6376be90fd70c66b028bc6c218876ddfa3209235e9
4d019c133496cfbdfeaf7c3158c38dae893df6c30ea84ebd42ad5589167d5794e40a9bfdc0d515fa
7a7e30fbf77ad0719274db8c68a8fed2539799d5c55b8a725afe1b057b5349a4652f11775d4059e0
6f3f5f168da0db15230017bfbffa57c38651c7a4cc797e209b97be4682274f83be01bd5c1cd11682
e956a468f163fa6c6e44a8c7dc8f741cbeccf81efbd12ef1de3699364d1306ecfe4854626397c842
18d50a78b617d8bad9e28f992c9951f28e503588ed35c53a48fcb088fafc3d02b643eaf00b6ea7e5
300d703d8845ec5473ee367a3340b67c695f61f0368802474f4be7b2e43e52fdd25e14537f207f06
0881cc47b55a049ccd00a8dc28f70159dd7fb04c0270e3a6eb37db3dda9e2d15011c72a33601e284
239bf739cfc5092dbc725301e5d567450cd0286527279145b9d658c73a2d6ed8fbd271fc3a81041f
5b9019968433d3bd1cac4a30ee9f34a56de5465d3e14720fdc687acd2d43e555b3c91766cd5af964
1148bb1423427d16e8d06c3acd4d9207007fa42b85b9f59edc685d6c26295bfe398c13f546b05987
5dd2cccb5db3755ab5776162a7fe7de1f4fcb67eba2db2155ec60977cbced5ca6cf90be81976c532
599cd28382fa0d42634e500f5111ae8837e71546b128c15c10bdc453d9e28ebdaa6dfbceb04db1f3
c1ac645e837e3ea218efc89571bb51976dfb4a2dcd02d23e1fc09cce32d1519a080e1dbb7086ded4
946e49636422419db55a202373dedb6148ca502cd61369e689011211ed80429d176ef2bbf5917538
71356f21f592278063b9e99de24f882858dd937a0d9289659507d3c5d2acd2ce513eb83dda99f87d
33b9d927464c39cdaa5c4fe356e66c71581dc625250dea81cf948adcae5e1f8775aefc73389b0a68
876f9fb376f8128cf38fdabd572ca19d56851d6b0114e553d86c543f97c4bbc325cd7bb82c98f34c
7facd75bc8cfa924196f595f7f5406de27a17f47df85d5cfa88b0ad0b9f882175b589fcb4d24f226
bc1366d4de7a664c476094e5e39427275102e918b4e757a73da6858115dba14f1908a6d3d9026475
9aed1332f6ec67bf085d3388eeea8cad8165e6f669db58f2101b37f53811c9e44b7f8b8cc8f1b64d
7379ce0efc8a4f54ec82f4f39c4282176b1cc3489f6bca9c066f02e6826dd8f9960526c143e5dea8
1e0b1783cf4089c00b66b5018dd91ae0557fcef1ecd0f92ceee4cdd98c9b10c66ce45a2be93e6d72
09cfd45ebff2c7ed9460796f36ff604909717c8f99c02fd717cdb5edfdc5188099b44fc2de632a72
a2e604754999ef476f6a714c57b6b1b3281da04e7c29b8db107c1f950d9ccffe61f6a9013eaeb483
200f19523138744f0bf51d2e7cbd4515e0a5ee411f503b026ff6b76ba3baaa9bfa46a9b3fc19526a
b0e26a56db81f2f34bac4a39160be899686dd9e92d28f6e1338438de4905bb2ddad239a0a82b4ba5
9d6451b9f00e72f3453b4ee63ff303314f4531087b5d0e1420a7c4dd18804a99524209178b1d96e4
a5d1e6defd6e8127dff345b10a12dc814b793760da0f591813084814de529529e97037889e9b1a6b
ddb8fd405fcfcc3a5cbb718d4468c4973c4505e5009d04e55331c4433eeec4ad18638462df5c2f45
8bd37bded16e0a545b23b71863ff07a24300b32175179d6898f3cfdcc29ad6f4c3d1e40876ddf5bb
4407f24c0545e82ddc2361565962df715c82cd2a367e200afdf46a78077aa97856d0c6ffce25e6f2
45e92d6462af4846f9c4598391c1d8aa44b963d2b1d0803e409172cc6dfa88f5a83145e015e2e197
f1ddd606afa976768123f1d1138ae45411bcef8ad06f3cdeec9fed082c69f718aeb9707066002eda
b0c29790daa55f2e10445ac52882be85295bf1c4f42e227c01dd51cf2fea76ef7d7688c90ab0643f
920a059ffb705b9d33491026672e552bdc37276c6c7d06156c652c5685f41052b05cd5c3f64f5ac8
fb97acd103464f0ea0d4c0dacfba17bdff089080d090011eb09ee5ae6d1c02897fd515eb9c5e491a
e9500fdb8a5d7a3747f56a00eb528d86a6de685065533e42b8ba94f2dbf1f6b0d376b66a5c4a5fe3
1b70dec575835b04de5e00ddda9c56acdb2fc4d45bd40a9d1bd3378b827cd1877e83bb3262a6b6e4
de2b5b4ab8d33d271711a152138202581881ca190b943b33255fa199f1f05d9b33592a6b336d688f
ba4ea41d82ba0a9cd7c5986da6701434ee8ed20fe9fe6c7396652b581943cdd144e4a002312f7770
728403b3570ef5442f4374f8a0ba0c72b9c84a20a21d46b360c09772b9b88abe4d67537dfe811a08
9738c0d6a40bccfd258e263863c78ab0171e202f1e07a94fe57d531b4d52418d74d45023f329e489
d660c418aac0b3f2b2ec896e5baf853c3b31d475494861a5b82d128370a87ea3bc835d4f4f16df6d
16696a0387cf2f931e67704a0c802df57ab394bf7e894d025adac73d034bc2ed33a95e941fc71174
b0c222e0e36bc979584b0f5e01299649dd6d0427e9da2be74465dc4a8187aea2938a24da709ae7da
ff57045b3a302fe73b1b4aa943ddb2f0d4dac027b8786f32a1399a8d69c3961ebc0c510205540b23
fc2b11d2e8be039b8b356ffa1fbe424efd264387f505c7705e164057042bd373f7a47324ec81dee8
48e0ac9acca1d93424807506536739637981242974cf57f4e33ce6f6324538d4429da91c67716177
a35084757a5756146d7f7f2a793c219bd80c9c85e83a4c2ebc285924d967c6d4182b682106e48869
d6089265af24dcc5f4ed43953f98b6fea87f2ceb3db50ad4fab3059f42154431d02b53943bc2a93f
68e35543714d121b792d28026f3dc21fc5b53d6bb5506f7380f6178648bb55c561e47c724aeed616
6bfbf1021aab0cdca8538b77c2cc9a046e7d84100f0a4b668ecbbe13b084b5bcaa2c40a2a1d33323
0f3c5247fb01ba4614c97ab3671d7c39716162c66cb784d0d1816a05db5a1abe0d0735c57171f427
079160535a6b5f24a808798f1723e26d91f598b4dc8a3714ee1c3cb81345946cab9e8622be89baac
c1b59bae060dc522034160b3ccced755308031044d7325b47fb2c4d125c73e222e34c86d6c3120e9
1f7b138982ed9bf1e316df586bff3dce8f8db8fc637165dcf3c688a5dcc124b8190feeb9b63847ce
69750175969f808522c9930d1e35a4eb3392a7a5b32df096da14677885d1ae09b4fc8a7787b8320d
2cfde16720e9c2de7e76a22066a0bdd0afa219db476b086d5d06792e105fa46353d65893cd24c861
01a7c19c10ec23589ad926f7b6e9388fea5f6561911421dc1b94de92233f64739a95a9aff6084124
b164baea13b4a2797dcc8ebe7297f508701ad4ae57c97db24b7b7c10346406865070b6ba1aef8de6
28523c2e142036787ad1fc0b76a4033e2c375283b63fb334bb61d7f374710fe6b2c92652e0970014
19d32a2ebac05066b9f9903298db304908bc7f881b0fc2a9cb89b7dde43578d4b66688903e95edb4
e156e3323a8b69f58d20af81e032d0893a7c1a8a193c2d0b861838a483d4622b417a91513e444082
7f93ba5e2f7c9281ca0086264e8a56515369cf8ff54607120c11b4b3152572c5868d42e5e63c0a62
111b28068453bff12c2bc92d8270b0a768cf944e7810d3e6e82fd8385943318c548a76561b44d2b2
1e4a8b839322a8326bf1069eae12ab207177fa9df5194dd2bdc9fd605f698c17b85f060f943e0eda
283849b29d1a3fdcd5630cb7676486e652b7e2dbd4639cca9bfc28ae2450a489fe26e51c8002d987
82e9d7ad34c110cfc0ca5423b7cf74d2aa3930c9270edf76ab7737e4ba4c88a4670c12975f3437d1
d696f2aab8a060a467b7d2ae63e0229d97a4d46238b2ac0993680edf2c9e52d26a53e1ac28440fe0
c16c0f3c106be53d624b220085b5fe5162665354265afc9a61840219eb6897211d2007c11f5f4d7c
6a8680316b98628389eb8e998b04ca5f825fea222ce2bf918884fde3800246597e4b85e2cd33ecf9
2401559c3cfca9c4afd487eac03ddeb9555e93b62e881207495c06d2c27e82af2ebce3e8dff1c953
ef157c5a06c854391fcf6bc5983d853d9aeef3a3be5135b7d3057f5ed306c01e7edc32fccbdb7cb0
18a5684928e7b0603e94225c1c4f25f99671c84fc31d2aa73fe9ff64b110be553c322569369e7ef8
df0805f891ea685e91ea65fddd842901a48efd3c04eb4353a4312718a141ac110bd401f76615c49e
7ef882ae91e9967c6fec7f61af2a629c34eb202c3bb913b8fa767bb6d089f062a131fa58d44f804c
5b75762b08a88633f738f472787fa86c25064c823fdea0dd9c5b9be5ef59b214e89c0a237cb5ca14
e16f5c42ff395eb2122f2f13316f508031f526ce64f3c811a5d316202382a706bb0d9b32553869ab
ffad4efcbe3cac6a2b16c49090a370fef0681e43a83762f79fbda839bf7f701a45015cf0f3ee4382
e989cccff265374414cbf2563d7e5a7535ff4af1f1e0c9ba6e0ab20f2a30421756ce0f33e2c5a210
25cd44bb703617d72cc4749797afdb28ae77f2671dd7a476a876d8fd571bdd11dbbd366cf748eeaa
ff51bc63f6dcc8acdd4e681754f09993afea3dc36009f8dd16591abc480696767a441fc47825a6b5
1f687aab3575482628a24adbc4a5b56c9b367d0ae9153503e3a9c6d200d20523fbf71e8c61ebf65f
ad3febb25c56081412b61c7d27749773a4e5f9d83a8609175f0f313258e866554448bb7667a796a6
f90eb7ef9d7ea788d409a7f539a17ce2321feb16029584e4977aa1ec49d7a4fb3aea691cc75f45a0
e3b61e4306d654d6288646d1bf79056d459dfa15ba7a9d01a2696c4e0f01248ee6b104e481830f72
cd80272e7a6f8eb2cd4df39adf83af7b2e885c1d72ec623f535d3a474b36bcac1b4105eb56743f1a
13c30095644a2bee174b380940311313d6b310fb3d689d07d0396a525cd73fee16ecbbf28f844fd0
6ca58859b1365dcf4f3015aa2919cf1fa5c1053a1c415d0a45b5d082417792aefe224cf5e0ee4999
496254fa66f3cea21cb996f187192fb25f7f66466cf21641e2a9f5d792568a9e46896093552237d2
aa50da99e562279b89ac8627f057b71b99e6f202ceb871a41e8e65df3d0667c70d3c2afb1a936e9c
f302a65fb9c841e49fab9771ff15051e2b595c81e65040e806d33689345a88334b37a53973b1b0db
caa8dccfa3af2091000189a217acc620dbe53bc012a0456e2ed699a7ac3efd3b94bae3673f13801c
579e5ca0e09b22d1b5c416ea372a16dfc9fcf128643dd653f07602c48446f229354f42f28eb108d7
39067d778ecc41edbc87b1a3275e9bce7170f6b51b1f736eea538c9db75c171bf218511e0ac5bf42
0c1d7f1335edf6aab89d661799391874dfe737c4857ecf365feccf10890fed746398c38ef14d2030
2dbe094af81db133ccf87c1ad0f741e6cb3e804b7ca617119d394faa0d70cc054584d0796fa9b8b1
52c082fa38e59f7f83204a306a37d19951403a8e2f8200ff1db5f33314a2b5986d7b01a9627b6540
0f9d0144a6b408877771eb60889f9b3f09a7bb190d2861f4daffacc38dceeff932bd91aade65157c
22cec0cdbff4f6cf876b838970f2b7fe74715e1bd13ceff0c4909a8f62d4bf36e131d89b0e8ea6fd
b7f5602394a2445a7877c2dfc61e4b45201e87a7bc8f5fc03ded7f32b87f31e57c551b6741b05872
9a1849c1b94f2705f8188a5e0ebd0da692bddd5dfd8d80eb9e20883bf07097442353d3311aaf8eae
9b547b42305b822290f65668c6357d3f624b9174ffb46bd28bd9204aa4f8ee218e47980b9528ecaf
bf092a8b4d16a9b9a20f7e54ed5a97b213d31dce6a14e45fed3c3902fd84ad9c1de30310725b96ba
2a0de9bb994a26c9feb53154183ed3bd7a0466dd3b211de07bb8968d3ff4660541137e96d5f40a42
1ca02d87fc9851958675b88a586f198a4eed86adf8feb21cd2546e4edec9ad758a320eaf26331032
fff3617a09be5a97ffa1481a44d3b4a06fce788d3ba6635a7d0260494c5e5d95e1b253000a8b0d50
9310cf7f846f952287db48b1cd811c251c203f44eef3ad72bcd9205217bc79cb488bad9f67edf5c0
b061a987ca91d4cd87e3dd25ec085ff499302b1418dbcc0fc32da39c753486f416969fcd68f8c424
eddebe47e0a64047dcafcbef8553fae11722278e96b65ef83b88e505385edd20a575eef530e5bded
c988d74be45b9c651fadf32735480d9801a1235d8e918ec56d0af897705766535c1096b9450ea58e
303a6a4e87ada14643fcd4f31f33fef5b77288f61b5c7ea1fea730b9c047b03bb26f82ecb6e26ffa
010a0490fd951325d09e6794db229bed7e33b7633d195d786dfb47525fafa440d52e252bbfd2ba85
e351d3a44a50c652e9866ffc2324d6b93becc37a2b8adc10932bac85c2dbd30938a3e0e026b9f6ef
e345a65c1ab67a24659b0a45708281a814ebd6b40efa46475d859ab3f607c5753acbfe41ca32c07a
bda6d2ac9663e3bbe222409fd020679ad4c8008354a257018996d55529fca8ac6a71e214ce78b0fa
4dd260cc09e18a61c528ee7a233aa4ead2515e6bf4cdbc0c85d6612dd37e570a4884627e5f46679c
b2a12833770ea8e9bacec83e88202f73c6bbcfc81ddf58e6ceb696c19ea1a24cef409a683cb41460
4ea958486d294dd64ec53f75651621aa8e6980f629a8ab5167f179759ca0b0d8b2079fcbebf034ea
26175c0041816519485b4cc5e87c88577cc772cba76df8e8ab4021617308b8b60b86c0de06ca4ca6
65c4ade0f068a989d9141a304cf76675fd00fc4c592029d7f418f7fd8325cc0da067405a89daf53f
089e97ee636c71969a63a36d8aaf1de25f01a7e38e7e1372796f623436a284e16838d9d1eb856fdd
9bb8dc3460c04f9b16b509e95a30b84d57b5c0696b24ebf41fcaa9e87970692ada3a7603bc67d9a9
99b6037dc46c29b5a8cbee28a1c0ccc51c1f062ec07eb7dbb16ec0945715c40d9eec0fc8cc31d2b9
ad44ae6e06949d6783f56f6959e7ee495a88b1aac4df85541ab80a3f97786b6ecce879932d835344
86402fb0862bb6badb63916114eafc2d2a10df0206d2e9fd07366aaf9d5c79b5991a123248781225
0929c37ccfea135bb650712bc4c5226f1760ca73eccb486199a7568b75a950c4c31da3fccb518d3d
241e34d260b5ad01542106623d7f32b08935c59b941b95d27330a199855b7ae760b8e27af2c4b402
b6247706eed072bac4c158ad409af1c78cb33430fa0a38086df7bf7825efa247a502d4b0829e5c9b
cd925366dac7bac48f505b84ad68465154e3bb1609a42bd9180c21abd0f7358f0c377061a32070d1
002614786e7f37a33fd2dfb94f273fccd28bedfad24234b23c8fede12372b73e6ac6d30c629b9f1b
b0714199d093641b7cddba6af4857d4639cfec5458de1f94da16357a79633675d99b76ad84eeb179
09f5dd9585f008c094d837916ea69d44a31418a642e5670c2e6b887c92fae9e12969c8bb5e664e3d
60e22a03d23e751cbb919ae4d0ec28198daa3940e8872740a6e2ef9ad7a3ee2f2e9ec787a40ecfa3
41898a8ff4d6d54b946665c57e2ae550d591050275dbf6565607e2dad9f7f8459ca9be8a95b928d6
838b26225e386507550989d19c2ce8bd705f3890eff9ad36ed144d6c04742f1e444ec4787786b275
bd296c35989701d53444f2e9de27b5a9a9cd45e6528cd76915f039047a9e575354b0603dc4325903
3ce0adff6c4a72bd6421c3e71ca30cce68726acf0bc6f65ee5c5ac08c0e3863e65cdad7345ac1cfb
e7e9fc794e2cb118f9ce6648851c2f6bbabb85b5142ee378d833c22548120e180b48bb77e3b134ba
56844f953a0bc960ed95f7989fffed6acd900b3ce3b6dd75a7bab618eff916dfc21756f87a0a6402
fd8beca9d57625062ab9434757a8692a33161fb12a7c8ea54d670a49b2ebb33694db49ef8803f91f
107f77e40ca482c07b4d9ef808136df9c7c2c6c0e1fd44fa4d6f2da35572dd81664f16a0eac19e59
0d9b96d24a4e301d1993b9a58fc10f8936d0bdbbea9895dec5cca55d0535cba059e8cab6d82f7138
8921bb8c44a0760e585259fd6a85830d0560ec7429943b384b2ace406989bc2692ceeb89499a1998
ebb6c5c1a2f757272639a49423d21108820f87e8b9c9ed7a85ef570c8b0fefb7053898be0c3b144d
a4caaeba76380b79eba5664a29ec6397d909190c4164f16760d2266e146910d19506a4382ca156ef
332b6d4ba43fd6c89b1e394295c7b2231f68782321f57b8e59f13936defb4b7be115024008c33cac
941ee536eb0b919e476f6a9903285818e64f934fe92cdac5e5945179575638292dd4f8a06b635c5c
5861c3fe5f235bdc1b34284ebfec4f967c10edd8da3ba3c53a91de1fde3cc38e19ca3ecb6e690c2f
478395f05ea8cebe91bc4d93a47a074f6154dbf091e9ca19a7d3c949a2b328094d3c2d1743658536
766bf7806769bef7ee9451fe4b0708e8ba1f7068aec13b6da390d5e22c109712e574fc27b7d68237
e4b23ce071da8e7282049e499a7bc08d7e6d8ec2aabbeb59e28f2d11c719db056aba7228c9b96370
cf008c8809831a763d1bde00ae9a90e956a4ea0114f322aad860768483fb6126a2861d696ed9d519
a931a230c145965cc99adbf872489cb9c4b251865603423da75f05f93f0aee2b781998a5db476e9f
499905cbe069534a194ec8be5a08e4948385f95048d43b1114ffca2fe56511c92007e945d82f174f
e39d49321face492bc2d561f0d68b50aa3bf9793aa3213f92e727656eb86d6ee9fd40cd031a777df
f9f2e5af5ffe876833f94801ad1fe3767da3a9377c5ab536908b4a93209c56fba6df31bfae45dca7
be5339956e99a1fe650ee099e4c22a2cadac41f0d0137546c5c0e6ad9b3c96988c51ce8d45aa2ae2
22306749039a5941286486a179d9ed955a332f331fddbdcde7174fd08a31e1554656aefc1c1d06a0
0cdfd3e61ef9ded2a5c71b0cd8b94a931c237b3b315834a06a3e59e8b3af10eed8e204a7d8b80972
2b7ee7af22a73793eb4dd62fce632c7f4eac74b7fedab24443d79d983b0cca1cb2412a6b6e88073f
b001f4fc760b262857a88086d054500169b8704c98d0edac45492170d7e1ee09100db49bc37e8a6d
a126032cdd80b4723cf82cce9160c4363602eae4b6b5e64b19b86121c1b6501e96e07cf7d6e13ac5
4ba81e7fb1182cc5f3bc630b899ae220f786df6c8af4feff0b8d8622004281dd9dfeb5da26a30f0a
68c7890934796fe65ce5e0a056c66c62394fcc78cd7f15a570310397ecb17cc9765bcf1e68821457
d9c3e857d6400b375e42f47a9e1fe1b8cb06d05b952ba379e50127457f899c7be9ec889a0f6ae9f8
3de9aefa165bd09756e26f9705a83ecb486d3f5e5d429249f5dfed0308cef8b2885aecd7a5ba6b2b
af97544437f17536d07864fe890e9928a69a0ba810586f1d4a94eb333e7992109c30ead36058eba3
cab52ed2e3c558778dc9f63027ca05a99eed6c25fd4101dfb73013906b38c5ed473aa7ba953a3417
286d7f00c034e3ac755cedb81b459380b17df5b2ce6c6347ef4364ae3c87ea64fd66c6f9fd43cdb7
c915947c898018be0bbdf9c7211186b7fba30e75089ad218b3b3e01f628a8be0f9d6b9c5a7dd693f
03d5037e6f4044850bfffc62cc5615b374f56661964882c5bed7cb709a91ab2f0d603ba234669274
6405bbdbf4a60b6509bb21d7ec16f0a2fef8a6ca0c9332cc2fd29a221f51de64e95c644c1624fc6e
5b5f0277657027383b159ce0a8658710b4c4313ee6423e285df0c9fa62d3eedcf5c100e0dd88d8f9
03ac1e70267480ad3e2ec288babd438daec590bb6a5ea4f0da561216873a09f886b4c41014f1ab58
6adb6bd12d590f3bdf308aef9919c03181bd77e9e030a9fbedc0c88c0d020c85667b2d3aea92d5e1
f69e9b24ebcb7a1118b3c9917f4a8d08b7ba0222586862fb7290866f1e520a764d42bc6ea9250488
9f5ca4f85ae70de4b8809151096ba97db9c5d5f8b9039c1835240ac2b9dcff350f198f267b0ceda6
1e2012076ba984aa608657f2591ffd1f4c1dcfd5ae6b8891bad288fa2ef39c4666c3982db2083b8b
56b92ace4a09ac547e2616c251932fe0eb555facf78e7bab89860f462231d05c5ec8848c25a3dd9a
d50ee6cf8f6de1bbda9e20c91187a81fc9cb0f0a1685fa66ed02e2cc9aba130eaa146994afa63c6b
82621b6e295151cc7a5e7e438b0c59e824df722b80eb2e112a5aee2ce80236b3ff3aae047eb1cf99
e83fca5de42b00021f5ba59255638f9822ac3d3ddd168a5f1406813e18a15b8d9bd7068d73d3bee3
052081ed004ae1551894f8efc4b2fb3dda10ca8be5e01212d3b27ce43d9ff835f81ba2edd154479a
fcb31b82242ca30800b40b65e694752c2adfbb445f66b58d250f765a2f1176d8c74092fd3edb2ebe
24a8c8f216d3779a29ef0e35e9b5a641181df821a5474c9585ab0e09f8e92a7a87b71b268103bcfa
834f04006f4d76e8132f32dbb823fd2801eab3fe53b4c92aef1d33a5e92d459a07a5decc22d05d66
ac2f0d1a9a3c4726eee5892aaea6db2ac9b504074b1cf98fff3a5e5848654e2073dcae8152d422fc
7df611c51a5d004f735148912938bf3eb1d8477fdcdca8c4ec17106337c6db6b7381bd9370393dd2
1a0d7120c5ab2672f6600d85e99ecc3b53db6fc624e9c951faee610a550c7335e788c183ba425b1c
48fd3fa2c630099051a0807426460b8de553068aabd64c76b1317f92a291e18b9719cc1b472d42c4
63b589c0161d796195158ba825727c0f08d6511978247470c7f58c01cc718944adadb892fd997de4
b857e651aa7c84226e20f7f021fc6441dbf2a9a077352bfb04e1b4f0c6cab73a8e073dc4fde4843b
f127ec7bf745de78888be5ccc11fdfa6e7a51281da921e0324cf522f86d085c9a60bb97f3550fedb
1abb4f0b35ce491b63a6cac454a43e124e0b97d93f5389582a1058eef2543595c4bccf0852179308
0e75d5bc56c626944355c012086228b4a779771fa94da3aaecc2f4eeda18998a5f69d70207b14afc
3b927de6b2bf17ce7c4d8093846f4daa87a2a9297b25e48676d807ad0979d0355f9c046ba49ddcd9
02fd250bd30bc1d8de22c436c4365b1720169d610aef3099f284356d27dc48c5eedb0a1b8cf6f9af
f3383358b2f7ec14a3c67bb550d5a2ee742cd65245a125abc4287c48d5dc0e4504b195dfba59dcac
064e8bfc98b2a196692f06b044dc8a8534dd90c033aa0d2a56c6407750131b8d67c166c36a77bab7
71146f60156172560b37f806dc7143b24dd89209c5698daced0a7d9a6ab2bc7bfa1e3b88810de7ad
c49ac35c2a73899a53619e5334f7e4a744b4d98feefaf86f195c2a9e091b60802804db2f6d5bfc8e
1f31c6384821dac362388446cbd1985ca876b4524aadcf349f041a8ccea9434be7f3ae5642fa04ea
affbc0b8946e11546069739d289112134b1d7b44756d23878eceefa6dbe14b5d1ce03801518f4779
12dd5689f8f63e2c048bfea466548c4772d899ccd197b17d47ae9385d56ddeabd6a9e1c180c5c8d0
f303ca3fc1b1d02bfe63f65bcb7a83f6e5c544c9ae46315db7e849c2ed0bfb8ce33878c1782d5394
1fceae8039cfaac0ea824dca8a7cac011606769586787cfe77bfcd71d3a5fb3990b1c5b4a9bb29d1
6ecb8d7a6849ae177ef24df39d4cbe41137860ba67a363ba3ae50f7b99ac578cf89589d9502c24a7
8eb14534e874ba28d41af667746bf78bf9115c8a67d89c79eb2fc38f9d598f29f1d21c5f43ae8009
92ae64c6ceea7a597799ffe60049e7de0ae5531757e5af2b58915c26f421a060ebd07fca29abf4e5
3b968adc83c74d877eb693fbd114a3a82424e6db0029c27c7b63bf70bf02a90a368371493f8c5013
5ea36033629ee19d267c216da592c9306d5569de399bf8a2376b5cf3c369486f96053b6833043715
828efbcf24d0ea40920daa95f8a9a3db9743beddf42fcb4389509c74d2218fd4064528b25c316f21
6662dfb890666103c9184458290eddf23ce2a451da4c5530d34c4dc971173365fb1257326fe96b46
4cbd7ac8472145832d04d5c07975f5de0e4589dea95ad4e41bbc9cf5ea014a1914f91401f889a23b
43e36ddb529a2d9c5e3ed99666ec521be9dbb0059db758934d26a180be1fb9356d04483f81488673
5b98bde20ab89393b4a2d95e865beca207c810194faa3d56824c12d7bf3914dcc6acb3436b357014
533e49f92a47f378a05a94b1d56e07b441ac7b1a25d96193894070
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 SSC_Copy_State <Virtual>  0
 HBW_Pick TASK  0 -1
 HBW_Copy_State <Virtual>  0
 PID_10 PID  0
 PID_11 PID  0
 hunt_exp_light PROGRAM  0 -1
 HBW_Home <Virtual>  0
 HBW_Pick_Sto <Virtual>  0
 test TASK  0 -1
 HBW_Pickup_ST PROGRAM  0 -1
 HWB_Extend_Arm <Virtual>  0
 HBW_Retract_Arm <Virtual>  0
 HWB_PickUp TASK  0 -1
 HBW_HTO1POS <Virtual>  0
 HBW_Left_1Block <Virtual>  0
 HBW_HomeTo2_Col <Virtual>  0
 HWB_HomeTo3_Col <Virtual>  0
 HWB_HomeTo2_Row <Virtual>  0
 HWB_HomeTo3_Row <Virtual>  0
 HWB_HomeTo1_Col <Virtual>  0
 HBW_move_left_1 <Virtual>  0
 HWB_Home_to_11 <Virtual>  0
 HWB_11_DropOff <Virtual>  0
 HBW_Pickup <Virtual>  0
 HBW_PickUp_R1 <Virtual>  0
 HBW_Send_VGR <Virtual>  0
 HBW_PickUp_VGR <Virtual>  0
 HBW_Return_VGR <Virtual>  0
 HBW_MotorsOff <Virtual>  0
 HBW_ConvTo11 <Virtual>  0
 HBW_Return_Top <Virtual>  0
 HBW_MV_11_12 <Virtual>  0
 HBW_Conv_12 <Virtual>  0
 HBW_Conv_12_Lat <Virtual>  0
 HBW_RETRACT_13 <Virtual>  0
 HBW_Retract_23 <Virtual>  0
 HBW_Conv13_Lat <Virtual>  0
 HBW_Conv_2Row <Virtual>  0
 HBW_PickUp_R2 <Virtual>  0
 HBW_Conv11_Lat <Virtual>  0
 HBW_Retract_12 <Virtual>  0
 HBW_Shift_C1C2 <Virtual>  0
 HBW_Move_R1_R2 <Virtual>  0
 HBW_Retract_22 <Virtual>  0
 HBW_Retract_21 <Virtual>  0
 HBW_Retract_31 <Virtual>  0
 HBW_Move_R2_R3 <Virtual>  0
 HBW_PickUp_R3 <Virtual>  0
 HBW_Conv_3Row <Virtual>  0
 HBW_Retract_32 <Virtual>  0
 HBW_Retract_33 <Virtual>  0
 HBW_Retract_Done PROGRAM  0 -1
 HBW_Retract_DN <Virtual>  0
#END

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"VGR Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC410 C410 1 0x0 MC409 C409 1 0x0 MC412 Y28 1 0x0 MC412 MC450 1 0x0 MC411 C411 1 0x0 MC408 C408 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC413 Y29 1 0x0 MC413 MC451 1 0x0 X27 MI200 1"

// Rung VGR_Copy_State#2
// Offset 27
NOP

// Rung VGR_Copy_State#3
// Offset 28
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC800 Y41 1 0x0 Y41 MI801 1 0x0 MC802 Y43 1 0x0 Y43 MI803 1 0x0 MC804 C804 1 0x0 MC805 C805 1 0x0 MC806 Y44 1 0x0 MC807 Y20 1 0x0 MC808 C811 1 0x0 MC809 C809 1 0x0 MC810 C810 1 0x0 MC812 C812 1 0x0 MC813 C813 1 0x0 MC814 C814 1 0x0 MC816 Y45 1 0x0 MC817 Y46 1 0x0 MC818 Y21 1 0x0 MC819 Y20 1 0x0 MC820 Y44 1 0x0 MC822 Y52 1"

// Rung MPO_Copy_State#2
// Offset 45
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC800 C1600 1 0x0 MC801 C1601 1 0x0 MC802 C1602 1 0x0 MC803 C1603 1 0x0 MC804 C1604 1 0x0 Y31 MI800 1 0x0 MC850 C1605 1"

// Rung SLD_Copy_State#2
// Offset 19
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"SSC Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC606 C1200 1 0x0 MC607 C1201 1 0x0 MC608 C1202 1 0x0 MC609 C1203 1 0x0 MC615 C1215 1 0x0 MC616 C1216 1 0x0 MC617 C1217 1 0x0 MC618 C1218 1 0x0 MC619 C1219 1 0x0 MC620 C1220 1"

// Rung SSC_Copy_State#2
// Offset 25
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block HBW_Home
$LGCMOD HBW_Home

// Rung HBW_Home#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Home#2
// Offset 8
STRN C215
ANDN X0
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 60 60
OUT Y51

// Rung HBW_Home#3
// Offset 26
STRN C215
ANDN X3
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5

// Rung HBW_Home#4
// Offset 43
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y76

// Rung HBW_Home#5
// Offset 64
NOP

// Rung HBW_Home#6
// Offset 65
RET

// End of Code Block HBW_Home
$LGCEND HBW_Home

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 Y40 1 0x0 Y80 MHR102 1 0x0 MC101 C205 1 0x0 MC102 C206 1 0x0 MC103 C207 1 0x0 MC104 C208 1 0x0 MC105 C209 1 0x0 MC106 C210 1 0x0 MC107 C211 1 0x0 MC108 C212 1 0x0 MC109 C213 1 0x0 MC110 C214 1 0x0 MC111 C215 1 0x0 MC112 C216 1 0x0 MC113 C300 1 0x0 X2 MI101 1 0x0 X10 MI102 1 0x0 X11 MI103 1 0x0 X3 MI104 1 0x0 X0 MI105 1 0x0 X6 MI106 1 0x0 X7 MI107 1 0x0 X8 MI108 1 0x0 X9 MI109 1 0x0 $HBW_Encoder_X.Acc MHR1 1 0x0 $HBW_Encoder_Z.Acc MHR2 1"

// Rung HBW_Copy_State#2
// Offset 57
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block HBW_HomeTo2_Col
$LGCMOD HBW_HomeTo2_Col

// Rung HBW_HomeTo2_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_HomeTo2_Col#2
// Offset 17
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_HomeTo2_Col#3
// Offset 22
NOP

// Rung HBW_HomeTo2_Col#4
// Offset 23
NOP

// Rung HBW_HomeTo2_Col#5
// Offset 24
NOP

// Rung HBW_HomeTo2_Col#6
// Offset 25
RET

// End of Code Block HBW_HomeTo2_Col
$LGCEND HBW_HomeTo2_Col

// Beginning of Code Block HWB_HomeTo1_Col
$LGCMOD HWB_HomeTo1_Col

// Rung HWB_HomeTo1_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HWB_HomeTo1_Col#2
// Offset 17
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_HomeTo1_Col#3
// Offset 22
NOP

// Rung HWB_HomeTo1_Col#4
// Offset 23
NOP

// Rung HWB_HomeTo1_Col#5
// Offset 24
RET

// End of Code Block HWB_HomeTo1_Col
$LGCEND HWB_HomeTo1_Col

// Beginning of Code Block HWB_Home_to_11
$LGCMOD HWB_Home_to_11

// Rung HWB_Home_to_11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HWB_Home_to_11#2
// Offset 22
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_Home_to_11#3
// Offset 27
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HWB_Home_to_11#4
// Offset 49
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_Home_to_11#5
// Offset 54
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HWB_Home_to_11#6
// Offset 73
NOP

// Rung HWB_Home_to_11#7
// Offset 74
NOP

// Rung HWB_Home_to_11#8
// Offset 75
RET

// End of Code Block HWB_Home_to_11
$LGCEND HWB_Home_to_11

// Beginning of Code Block HWB_11_DropOff
$LGCMOD HWB_11_DropOff

// Rung HWB_11_DropOff#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HWB_11_DropOff#2
// Offset 8
STRGE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_11_DropOff#3
// Offset 13
STRN C215
ANDN C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51

// Rung HWB_11_DropOff#4
// Offset 31
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y4
AND ST2
OUT Y5

// Rung HWB_11_DropOff#5
// Offset 51
STRGE 2730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_11_DropOff#6
// Offset 56
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 60 60
OUT Y7

// Rung HWB_11_DropOff#7
// Offset 73
RET

// End of Code Block HWB_11_DropOff
$LGCEND HWB_11_DropOff

// Beginning of Code Block HBW_PickUp_R1
$LGCMOD HBW_PickUp_R1

// Rung HBW_PickUp_R1#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R1#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R1#3
// Offset 41
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R1#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R1#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_PickUp_R1#6
// Offset 69
NOP

// Rung HBW_PickUp_R1#7
// Offset 70
NOP

// Rung HBW_PickUp_R1#8
// Offset 71
NOP

// Rung HBW_PickUp_R1#9
// Offset 72
NOP

// Rung HBW_PickUp_R1#10
// Offset 73
RET

// End of Code Block HBW_PickUp_R1
$LGCEND HBW_PickUp_R1

// Beginning of Code Block HBW_Send_VGR
$LGCMOD HBW_Send_VGR

// Rung HBW_Send_VGR#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Send_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_Send_VGR#3
// Offset 37
STRN C215
AND X2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y48
AND ST2
OUT Y49

// Rung HBW_Send_VGR#4
// Offset 56
NOP

// Rung HBW_Send_VGR#5
// Offset 57
NOP

// Rung HBW_Send_VGR#6
// Offset 58
RET

// End of Code Block HBW_Send_VGR
$LGCEND HBW_Send_VGR

// Beginning of Code Block HBW_PickUp_VGR
$LGCMOD HBW_PickUp_VGR

// Rung HBW_PickUp_VGR#1
// Offset 0
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_PickUp_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_PickUp_VGR#3
// Offset 37
STRN C215
AND X11
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_PickUp_VGR#4
// Offset 56
NOP

// Rung HBW_PickUp_VGR#5
// Offset 57
NOP

// Rung HBW_PickUp_VGR#6
// Offset 58
RET

// End of Code Block HBW_PickUp_VGR
$LGCEND HBW_PickUp_VGR

// Beginning of Code Block HBW_Return_VGR
$LGCMOD HBW_Return_VGR

// Rung HBW_Return_VGR#1
// Offset 0
STRN C215
ANDN C251
DUPBOOL
AND C299
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y6

// Rung HBW_Return_VGR#2
// Offset 22
STRN C215
AND X1
DUPBOOL
AND C299
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
POPBOOL
AND ST2
OUT Y48

// Rung HBW_Return_VGR#3
// Offset 44
STRN C215
DUPBOOL
AND C299
ANDN X1
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_Return_VGR#4
// Offset 67
STRLE 2550 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_VGR#5
// Offset 72
NOP

// Rung HBW_Return_VGR#6
// Offset 73
NOP

// Rung HBW_Return_VGR#7
// Offset 74
RET

// End of Code Block HBW_Return_VGR
$LGCEND HBW_Return_VGR

// Beginning of Code Block HBW_MotorsOff
$LGCMOD HBW_MotorsOff

// Rung HBW_MotorsOff#1
// Offset 0
STRN C215
ANDN ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_MotorsOff#2
// Offset 18
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_MotorsOff#3
// Offset 36
STRN C215
AND ST2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
OUT Y48

// Rung HBW_MotorsOff#4
// Offset 54
NOP

// Rung HBW_MotorsOff#5
// Offset 55
NOP

// Rung HBW_MotorsOff#6
// Offset 56
NOP

// Rung HBW_MotorsOff#7
// Offset 57
RET

// End of Code Block HBW_MotorsOff
$LGCEND HBW_MotorsOff

// Beginning of Code Block HBW_ConvTo11
$LGCMOD HBW_ConvTo11

// Rung HBW_ConvTo11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_ConvTo11#2
// Offset 22
NOP

// Rung HBW_ConvTo11#3
// Offset 23
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_ConvTo11#4
// Offset 28
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_ConvTo11#5
// Offset 50
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_ConvTo11#6
// Offset 55
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_ConvTo11#7
// Offset 74
NOP

// Rung HBW_ConvTo11#8
// Offset 75
NOP

// Rung HBW_ConvTo11#9
// Offset 76
RET

// End of Code Block HBW_ConvTo11
$LGCEND HBW_ConvTo11

// Beginning of Code Block HBW_Return_Top
$LGCMOD HBW_Return_Top

// Rung HBW_Return_Top#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Return_Top#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HBW_Return_Top#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_Top#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_Return_Top#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return_Top#6
// Offset 69
NOP

// Rung HBW_Return_Top#7
// Offset 70
NOP

// Rung HBW_Return_Top#8
// Offset 71
RET

// End of Code Block HBW_Return_Top
$LGCEND HBW_Return_Top

// Beginning of Code Block HBW_MV_11_12
$LGCMOD HBW_MV_11_12

// Rung HBW_MV_11_12#1
// Offset 0
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_MV_11_12#2
// Offset 21
NOP

// Rung HBW_MV_11_12#3
// Offset 22
NOP

// Rung HBW_MV_11_12#4
// Offset 23
NOP

// Rung HBW_MV_11_12#5
// Offset 24
RET

// End of Code Block HBW_MV_11_12
$LGCEND HBW_MV_11_12

// Beginning of Code Block HBW_Conv_12
$LGCMOD HBW_Conv_12

// Rung HBW_Conv_12#1
// Offset 0
NOP

// Rung HBW_Conv_12#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_12#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Conv_12#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 80
OUT C251

// Rung HBW_Conv_12#5
// Offset 45
NOP

// Rung HBW_Conv_12#6
// Offset 46
RET

// End of Code Block HBW_Conv_12
$LGCEND HBW_Conv_12

// Beginning of Code Block HBW_Conv_12_Lat
$LGCMOD HBW_Conv_12_Lat

// Rung HBW_Conv_12_Lat#1
// Offset 0
NOP

// Rung HBW_Conv_12_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv_12_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv_12_Lat#4
// Offset 42
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv_12_Lat#5
// Offset 47
NOP

// Rung HBW_Conv_12_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv_12_Lat
$LGCEND HBW_Conv_12_Lat

// Beginning of Code Block HBW_RETRACT_13
$LGCMOD HBW_RETRACT_13

// Rung HBW_RETRACT_13#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_RETRACT_13#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_RETRACT_13#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_RETRACT_13#4
// Offset 46
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_RETRACT_13#5
// Offset 68
STRGE 7650 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_RETRACT_13#6
// Offset 73
RET

// End of Code Block HBW_RETRACT_13
$LGCEND HBW_RETRACT_13

// Beginning of Code Block HBW_Retract_23
$LGCMOD HBW_Retract_23

// Rung HBW_Retract_23#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_23#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_23#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_23#4
// Offset 46
STRN C215
AND ST2
OUT Y51
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_Retract_23#5
// Offset 65
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_23#6
// Offset 70
RET

// End of Code Block HBW_Retract_23
$LGCEND HBW_Retract_23

// Beginning of Code Block HBW_Conv13_Lat
$LGCMOD HBW_Conv13_Lat

// Rung HBW_Conv13_Lat#1
// Offset 0
NOP

// Rung HBW_Conv13_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv13_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv13_Lat#4
// Offset 42
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv13_Lat#5
// Offset 47
NOP

// Rung HBW_Conv13_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv13_Lat
$LGCEND HBW_Conv13_Lat

// Beginning of Code Block HBW_Conv_2Row
$LGCMOD HBW_Conv_2Row

// Rung HBW_Conv_2Row#1
// Offset 0
NOP

// Rung HBW_Conv_2Row#2
// Offset 1
NOP

// Rung HBW_Conv_2Row#3
// Offset 2
NOP

// Rung HBW_Conv_2Row#4
// Offset 3
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_2Row#5
// Offset 22
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Conv_2Row#6
// Offset 42
STRGE $HBW_Encoder_Z.Acc 1380
OUT C251

// Rung HBW_Conv_2Row#7
// Offset 47
NOP

// Rung HBW_Conv_2Row#8
// Offset 48
RET

// End of Code Block HBW_Conv_2Row
$LGCEND HBW_Conv_2Row

// Beginning of Code Block HBW_PickUp_R2
$LGCMOD HBW_PickUp_R2

// Rung HBW_PickUp_R2#1
// Offset 0
NOP

// Rung HBW_PickUp_R2#2
// Offset 1
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R2#3
// Offset 20
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R2#4
// Offset 38
NOP

// Rung HBW_PickUp_R2#5
// Offset 39
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R2#6
// Offset 61
STRLE 1400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R2#7
// Offset 66
NOP

// Rung HBW_PickUp_R2#8
// Offset 67
NOP

// Rung HBW_PickUp_R2#9
// Offset 68
NOP

// Rung HBW_PickUp_R2#10
// Offset 69
RET

// End of Code Block HBW_PickUp_R2
$LGCEND HBW_PickUp_R2

// Beginning of Code Block HBW_Conv11_Lat
$LGCMOD HBW_Conv11_Lat

// Rung HBW_Conv11_Lat#1
// Offset 0
NOP

// Rung HBW_Conv11_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv11_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv11_Lat#4
// Offset 42
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv11_Lat#5
// Offset 47
NOP

// Rung HBW_Conv11_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv11_Lat
$LGCEND HBW_Conv11_Lat

// Beginning of Code Block HBW_Retract_12
$LGCMOD HBW_Retract_12

// Rung HBW_Retract_12#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_12#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_12#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_12#4
// Offset 46
RET

// End of Code Block HBW_Retract_12
$LGCEND HBW_Retract_12

// Beginning of Code Block HBW_Shift_C1C2
$LGCMOD HBW_Shift_C1C2

// Rung HBW_Shift_C1C2#1
// Offset 0
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Shift_C1C2#2
// Offset 5
NOP

// Rung HBW_Shift_C1C2#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Shift_C1C2#4
// Offset 25
NOP

// Rung HBW_Shift_C1C2#5
// Offset 26
STRN C215
AND ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_Shift_C1C2#6
// Offset 44
NOP

// Rung HBW_Shift_C1C2#7
// Offset 45
RET

// End of Code Block HBW_Shift_C1C2
$LGCEND HBW_Shift_C1C2

// Beginning of Code Block HBW_Move_R1_R2
$LGCMOD HBW_Move_R1_R2

// Rung HBW_Move_R1_R2#1
// Offset 0
STRGE 1760 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Move_R1_R2#2
// Offset 5
NOP

// Rung HBW_Move_R1_R2#3
// Offset 6
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Move_R1_R2#4
// Offset 25
NOP

// Rung HBW_Move_R1_R2#5
// Offset 26
NOP

// Rung HBW_Move_R1_R2#6
// Offset 27
RET

// End of Code Block HBW_Move_R1_R2
$LGCEND HBW_Move_R1_R2

// Beginning of Code Block HBW_Retract_22
$LGCMOD HBW_Retract_22

// Rung HBW_Retract_22#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_22#2
// Offset 22
STRGE 1730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_22#3
// Offset 27
NOP

// Rung HBW_Retract_22#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_22#5
// Offset 47
STRLE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_22#6
// Offset 52
STRN C215
AND C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
AND ST2
OUT Y50

// Rung HBW_Retract_22#7
// Offset 72
NOP

// Rung HBW_Retract_22#8
// Offset 73
RET

// End of Code Block HBW_Retract_22
$LGCEND HBW_Retract_22

// Beginning of Code Block HBW_Retract_21
$LGCMOD HBW_Retract_21

// Rung HBW_Retract_21#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_21#2
// Offset 22
STRGE 1730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_21#3
// Offset 27
NOP

// Rung HBW_Retract_21#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_21#5
// Offset 47
STRLE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_21#6
// Offset 52
STRN C215
AND C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
AND ST2
OUT Y50

// Rung HBW_Retract_21#7
// Offset 72
NOP

// Rung HBW_Retract_21#8
// Offset 73
RET

// End of Code Block HBW_Retract_21
$LGCEND HBW_Retract_21

// Beginning of Code Block HBW_Retract_31
$LGCMOD HBW_Retract_31

// Rung HBW_Retract_31#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_31#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_31#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_31#4
// Offset 46
STRN C215
AND ST2
OUT Y51
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_Retract_31#5
// Offset 65
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_31#6
// Offset 70
RET

// End of Code Block HBW_Retract_31
$LGCEND HBW_Retract_31

// Beginning of Code Block HBW_Move_R2_R3
$LGCMOD HBW_Move_R2_R3

// Rung HBW_Move_R2_R3#1
// Offset 0
STRGE 3600 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Move_R2_R3#2
// Offset 5
NOP

// Rung HBW_Move_R2_R3#3
// Offset 6
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Move_R2_R3#4
// Offset 25
NOP

// Rung HBW_Move_R2_R3#5
// Offset 26
NOP

// Rung HBW_Move_R2_R3#6
// Offset 27
RET

// End of Code Block HBW_Move_R2_R3
$LGCEND HBW_Move_R2_R3

// Beginning of Code Block HBW_PickUp_R3
$LGCMOD HBW_PickUp_R3

// Rung HBW_PickUp_R3#1
// Offset 0
NOP

// Rung HBW_PickUp_R3#2
// Offset 1
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R3#3
// Offset 20
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R3#4
// Offset 38
NOP

// Rung HBW_PickUp_R3#5
// Offset 39
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R3#6
// Offset 61
STRLE 2800 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R3#7
// Offset 66
NOP

// Rung HBW_PickUp_R3#8
// Offset 67
NOP

// Rung HBW_PickUp_R3#9
// Offset 68
NOP

// Rung HBW_PickUp_R3#10
// Offset 69
RET

// End of Code Block HBW_PickUp_R3
$LGCEND HBW_PickUp_R3

// Beginning of Code Block HBW_Conv_3Row
$LGCMOD HBW_Conv_3Row

// Rung HBW_Conv_3Row#1
// Offset 0
NOP

// Rung HBW_Conv_3Row#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_3Row#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Conv_3Row#4
// Offset 40
STRLE $HBW_Encoder_Z.Acc 2950
OUT C251

// Rung HBW_Conv_3Row#5
// Offset 45
NOP

// Rung HBW_Conv_3Row#6
// Offset 46
RET

// End of Code Block HBW_Conv_3Row
$LGCEND HBW_Conv_3Row

// Beginning of Code Block HBW_Retract_32
$LGCMOD HBW_Retract_32

// Rung HBW_Retract_32#1
// Offset 0
STRGE 3300 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_32#2
// Offset 5
NOP

// Rung HBW_Retract_32#3
// Offset 6
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_32#4
// Offset 28
NOP

// Rung HBW_Retract_32#5
// Offset 29
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_32#6
// Offset 48
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_32#7
// Offset 53
NOP

// Rung HBW_Retract_32#8
// Offset 54
STRN C215
AND C250
DUPBOOL
ANDN C251
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_Retract_32#9
// Offset 77
NOP

// Rung HBW_Retract_32#10
// Offset 78
RET

// End of Code Block HBW_Retract_32
$LGCEND HBW_Retract_32

// Beginning of Code Block HBW_Retract_33
$LGCMOD HBW_Retract_33

// Rung HBW_Retract_33#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_33#2
// Offset 22
STRGE 3300 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_33#3
// Offset 27
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_33#4
// Offset 46
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_33#5
// Offset 51
NOP

// Rung HBW_Retract_33#6
// Offset 52
STRN C215
AND C250
DUPBOOL
ANDN C251
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_Retract_33#7
// Offset 75
NOP

// Rung HBW_Retract_33#8
// Offset 76
RET

// End of Code Block HBW_Retract_33
$LGCEND HBW_Retract_33

// Beginning of Code Block HBW_Retract_DN
$LGCMOD HBW_Retract_DN

// Rung HBW_Retract_DN#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_DN#2
// Offset 22
STRGE 3200 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_DN#3
// Offset 27
NOP

// Rung HBW_Retract_DN#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_DN#5
// Offset 47
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_DN#6
// Offset 52
STRN C215
AND C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
AND ST2
OUT Y50

// Rung HBW_Retract_DN#7
// Offset 72
NOP

// Rung HBW_Retract_DN#8
// Offset 73
RET

// End of Code Block HBW_Retract_DN
$LGCEND HBW_Retract_DN

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#2
// Offset 3
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#3
// Offset 6
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#4
// Offset 9
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#5
// Offset 12
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// Rung $Main#6
// Offset 15
#BEGIN FMT_COMMENT 
"Hunter Demo Light<br>"
#END

STR ST1
RUN hunt_exp_light

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
SG HBW_Program.S0

// Rung HBW_Program#2
// Offset 2
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#3
// Offset 10
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#4
// Offset 12
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#5
// Offset 14
STR ST1
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#6
// Offset 22
NOP

// Rung HBW_Program#7
// Offset 23
STR C213
JMP HBW_Program.S1

// Rung HBW_Program#8
// Offset 25
SG HBW_Program.S1

// Rung HBW_Program#9
// Offset 27
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#10
// Offset 35
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#11
// Offset 37
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#12
// Offset 39
STR ST1
MOVE 0 N1

// Rung HBW_Program#13
// Offset 42
STR ST1
MOVE 0 C299

// Rung HBW_Program#14
// Offset 45
NOP

// Rung HBW_Program#15
// Offset 46
STR ST1
DUPBOOL
STR C205
ANDN C206
STR C206
ANDN C205
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 500 60
POPBOOL
DUPBOOL
AND C205
OUT Y48
POPBOOL
AND C206
OUT Y49

// Rung HBW_Program#16
// Offset 75
STR ST1
DUPBOOL
STR C207
ANDN C208
STRN C207
AND C208
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
POPBOOL
DUPBOOL
AND C207
OUT Y50
POPBOOL
AND C208
OUT Y51

// Rung HBW_Program#17
// Offset 104
STR ST1
DUPBOOL
STR C209
ANDN C210
STRN C209
AND C210
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
POPBOOL
DUPBOOL
AND C209
OUT Y4
POPBOOL
AND C210
OUT Y5

// Rung HBW_Program#18
// Offset 133
STR ST1
DUPBOOL
STR C211
ANDN C212
STRN C211
AND C212
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
POPBOOL
DUPBOOL
AND C211
OUT Y6
POPBOOL
AND C212
OUT Y7

// Rung HBW_Program#19
// Offset 162
STR C213
JMP HBW_Program.S2

// Rung HBW_Program#20
// Offset 164
SG HBW_Program.S2

// Rung HBW_Program#21
// Offset 166
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#22
// Offset 174
STR X0
OUT $HBW_Encoder_X.ResetLevel

// Rung HBW_Program#23
// Offset 176
STR X3
OUT $HBW_Encoder_Z.ResetLevel

// Rung HBW_Program#24
// Offset 178
STR ST1
CALL HBW_Home 0x1 DST511 "3" "3"

// Rung HBW_Program#25
// Offset 186
STR X0
AND X11
AND X3
JMP HBW_Program.S3

// Rung HBW_Program#26
// Offset 190
STR C212
JMP HBW_Program.S3

// Rung HBW_Program#27
// Offset 192
STR C215
JMP HBW_Program.S1

// Rung HBW_Program#28
// Offset 194
SG HBW_Program.S3

// Rung HBW_Program#29
// Offset 196
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#30
// Offset 204
STR ST1
CALL HWB_Home_to_11 0x1 DST511 "3" "3"

// Rung HBW_Program#31
// Offset 212
STRN C250
ANDN C251
JMP HBW_Program.S4

// Rung HBW_Program#32
// Offset 215
SG HBW_Program.S4

// Rung HBW_Program#33
// Offset 217
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#34
// Offset 225
STR ST1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#35
// Offset 233
STR X10
ANDN C251
JMP HBW_Program.S5

// Rung HBW_Program#36
// Offset 236
SG HBW_Program.S5

// Rung HBW_Program#37
// Offset 238
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#38
// Offset 246
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#39
// Offset 254
STRN C251
AND C250
JMP HBW_Program.S6

// Rung HBW_Program#40
// Offset 257
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#41
// Offset 259
SG HBW_Program.S6

// Rung HBW_Program#42
// Offset 261
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#43
// Offset 269
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#44
// Offset 277
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#45
// Offset 279
STRN X2
JMP HBW_Program.S7
INC N1

// Rung HBW_Program#46
// Offset 282
SG HBW_Program.S7

// Rung HBW_Program#47
// Offset 284
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#48
// Offset 292
STR C300
MOVE 1 C299

// Rung HBW_Program#49
// Offset 295
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#50
// Offset 303
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#51
// Offset 312
SG HBW_Program.S8

// Rung HBW_Program#52
// Offset 314
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#53
// Offset 322
STR ST1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#54
// Offset 330
STR ST1
MOVE 0 C299

// Rung HBW_Program#55
// Offset 333
STRN C250
JMP HBW_Program.S9

// Rung HBW_Program#56
// Offset 335
SG HBW_Program.S9

// Rung HBW_Program#57
// Offset 337
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#58
// Offset 345
STR ST1
CALL HBW_Return_Top 0x1 DST511 "3" "3"

// Rung HBW_Program#59
// Offset 353
STR X10
ANDN C251
JMP HBW_Program.S10
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#60
// Offset 363
SG HBW_Program.S10

// Rung HBW_Program#61
// Offset 365
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#62
// Offset 373
STR ST1
CALL HBW_MV_11_12 0x1 DST511 "3" "3"

// Rung HBW_Program#63
// Offset 381
STRN C250
JMP HBW_Program.S11

// Rung HBW_Program#64
// Offset 383
SG HBW_Program.S11

// Rung HBW_Program#65
// Offset 385
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#66
// Offset 393
STRE N1 1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#67
// Offset 404
STRE N1 2
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#68
// Offset 415
STRE N1 3
CALL HBW_Move_R1_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#69
// Offset 426
STRE N1 3
ANDLE 1650 $HBW_Encoder_Z.Acc
JMP HBW_Program.S51

// Rung HBW_Program#70
// Offset 435
STRE N1 4
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#71
// Offset 446
STRE N1 5
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#72
// Offset 457
STRE N1 6
CALL HBW_Move_R2_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#73
// Offset 468
STRE N1 6
ANDLE 3200 $HBW_Encoder_Z.Acc
JMP HBW_Program.S51

// Rung HBW_Program#74
// Offset 477
STRE N1 7
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#75
// Offset 488
STRE N1 8
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#76
// Offset 499
STRE N1 9
JMP HBW_Program.S18

// Rung HBW_Program#77
// Offset 504
NOP

// Rung HBW_Program#78
// Offset 505
NOP

// Rung HBW_Program#79
// Offset 506
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#80
// Offset 509
STR C215
JMP HBW_Program.S1

// Rung HBW_Program#81
// Offset 511
SG HBW_Program.S51

// Rung HBW_Program#82
// Offset 513
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#83
// Offset 521
STRE N1 3
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#84
// Offset 532
STRE N1 6
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#85
// Offset 543
NOP

// Rung HBW_Program#86
// Offset 544
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#87
// Offset 547
SG HBW_Program.S12

// Rung HBW_Program#88
// Offset 549
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#89
// Offset 557
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#90
// Offset 565
STRN C251
AND C250
JMP HBW_Program.S13

// Rung HBW_Program#91
// Offset 568
SG HBW_Program.S13

// Rung HBW_Program#92
// Offset 570
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#93
// Offset 578
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#94
// Offset 586
STR C300
MOVE 1 C299

// Rung HBW_Program#95
// Offset 589
STRN X2
AND C299
JMP HBW_Program.S14
INC N1

// Rung HBW_Program#96
// Offset 593
SG HBW_Program.S14

// Rung HBW_Program#97
// Offset 595
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#98
// Offset 603
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#99
// Offset 611
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#100
// Offset 620
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#101
// Offset 622
SG HBW_Program.S15

// Rung HBW_Program#102
// Offset 624
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#103
// Offset 632
STR ST1
MOVE 0 C299

// Rung HBW_Program#104
// Offset 635
STRE N1 1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#105
// Offset 646
STRE N1 2
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#106
// Offset 657
STRE N1 3
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#107
// Offset 668
STRE N1 4
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#108
// Offset 679
STRE N1 5
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#109
// Offset 690
STRE N1 6
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#110
// Offset 701
STRE N1 7
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#111
// Offset 712
STRE N1 8
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#112
// Offset 723
STRE N1 9
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#113
// Offset 734
NOP

// Rung HBW_Program#114
// Offset 735
STRN C251
JMP HBW_Program.S16
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#115
// Offset 744
SG HBW_Program.S16

// Rung HBW_Program#116
// Offset 746
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#117
// Offset 754
STRE N1 1
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#118
// Offset 765
STRE N1 2
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#119
// Offset 776
STRE N1 3
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#120
// Offset 787
STRE N1 4
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#121
// Offset 798
STRE N1 5
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#122
// Offset 809
STRE N1 6
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#123
// Offset 820
STRE N1 7
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#124
// Offset 831
STRE N1 8
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#125
// Offset 842
STRE N1 9
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#126
// Offset 853
NOP

// Rung HBW_Program#127
// Offset 854
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#128
// Offset 856
STRN C250
AND X10
JMP HBW_Program.S17

// Rung HBW_Program#129
// Offset 859
SG HBW_Program.S17

// Rung HBW_Program#130
// Offset 861
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#131
// Offset 869
STRE N1 1
CALL HBW_Retract_12 0x1 DST511 "3" "3"

// Rung HBW_Program#132
// Offset 880
STRE N1 2
CALL HBW_RETRACT_13 0x1 DST511 "3" "3"

// Rung HBW_Program#133
// Offset 891
STRE N1 3
CALL HBW_Retract_23 0x1 DST511 "3" "3"

// Rung HBW_Program#134
// Offset 902
STRE N1 4
CALL HBW_Retract_22 0x1 DST511 "3" "3"

// Rung HBW_Program#135
// Offset 913
STRE N1 5
CALL HBW_Retract_21 0x1 DST511 "3" "3"

// Rung HBW_Program#136
// Offset 924
STRE N1 6
CALL HBW_Retract_21 0x1 DST511 "3" "3"

// Rung HBW_Program#137
// Offset 935
STRE N1 7
CALL HBW_Retract_32 0x1 DST511 "3" "3"

// Rung HBW_Program#138
// Offset 946
STRE N1 8
CALL HBW_Retract_33 0x1 DST511 "3" "3"

// Rung HBW_Program#139
// Offset 957
STRE N1 9
CALL HBW_Retract_33 0x1 DST511 "3" "3"

// Rung HBW_Program#140
// Offset 968
NOP

// Rung HBW_Program#141
// Offset 969
STR C215
JMP HBW_Program.S1

// Rung HBW_Program#142
// Offset 971
STR X11
ANDN C251
ANDN C250
JMP HBW_Program.S11

// Rung HBW_Program#143
// Offset 975
STR X11
ANDE N1 1
JMP HBW_Program.S50

// Rung HBW_Program#144
// Offset 981
SG HBW_Program.S18

// Rung HBW_Program#145
// Offset 983
STR ST1
JMP HBW_Program.S0

// Rung HBW_Program#146
// Offset 985
SG HBW_Program.S50

// Rung HBW_Program#147
// Offset 987
STR ST1
CALL HBW_Shift_C1C2 0x1 DST511 "3" "3"

// Rung HBW_Program#148
// Offset 995
STRN Y50
ANDN C250
JMP HBW_Program.S11

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#2
// Offset 8
STR ST1
DUPBOOL
STR C410
ANDN C409
STRN C410
AND C409
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
POPBOOL
DUPBOOL
AND C410
OUT Y27
POPBOOL
AND C409
OUT Y26

// Rung VGR_Program#3
// Offset 37
STR ST1
DUPBOOL
STR C408
ANDN C411
STRN C408
AND C411
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
POPBOOL
DUPBOOL
AND C408
OUT Y24
POPBOOL
AND C411
OUT Y25

// Rung VGR_Program#4
// Offset 66
STR ST1
DUPBOOL
STR C406
ANDN C407
STRN C406
AND C407
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
POPBOOL
DUPBOOL
AND C406
OUT Y23
POPBOOL
AND C407
OUT Y22

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STR C813
OUT Y18

// Rung MPO_Program#4
// Offset 12
STR C810
OUT Y17

// Rung MPO_Program#5
// Offset 14
STR C811
OUT Y52

// Rung MPO_Program#6
// Offset 16
STR ST1
DUPBOOL
STR C804
ANDN C805
STR C805
ANDN C804
ORSTR
ANDSTR
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 100
POPBOOL
DUPBOOL
AND C804
OUT Y53
POPBOOL
AND C805
OUT Y15

// Rung MPO_Program#7
// Offset 45
STR C814
OUT Y19

// Rung MPO_Program#8
// Offset 47
STR C809
JMP MPO_Program.S1

// Rung MPO_Program#9
// Offset 49
SG MPO_Program.S1

// Rung MPO_Program#10
// Offset 51
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#11
// Offset 59
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#12
// Offset 61
STRN X24
SET Y17

// Rung MPO_Program#13
// Offset 63
STR Y17
OUT Y20
ANDN X17
ONDTMR T0 1000 Y44

// Rung MPO_Program#14
// Offset 69
SG MPO_Program.S2

// Rung MPO_Program#15
// Offset 71
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#16
// Offset 79
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#17
// Offset 81
STRN X19
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y53

// Rung MPO_Program#18
// Offset 97
STR X19
JMP MPO_Program.S3

// Rung MPO_Program#19
// Offset 99
SG MPO_Program.S3

// Rung MPO_Program#20
// Offset 101
STR ST1
SET Y17

// Rung MPO_Program#21
// Offset 103
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#22
// Offset 111
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#23
// Offset 113
STR X19
SET Y19

// Rung MPO_Program#24
// Offset 115
STR X19
ONDTMR T100 2000 Y18

// Rung MPO_Program#25
// Offset 119
STR T100.DN
JMP MPO_Program.S4

// Rung MPO_Program#26
// Offset 121
SG MPO_Program.S4

// Rung MPO_Program#27
// Offset 123
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#28
// Offset 131
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#29
// Offset 133
STR X19
RST Y19

// Rung MPO_Program#30
// Offset 135
STRN X16
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y15

// Rung MPO_Program#31
// Offset 151
STR X16
JMP MPO_Program.S5

// Rung MPO_Program#32
// Offset 153
SG MPO_Program.S5

// Rung MPO_Program#33
// Offset 155
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#34
// Offset 163
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#35
// Offset 165
STR X16
SET Y19

// Rung MPO_Program#36
// Offset 167
STR Y19
ONDTMR T101 2000 C815

// Rung MPO_Program#37
// Offset 171
STR C815
RST Y18

// Rung MPO_Program#38
// Offset 173
STRN Y18
JMP MPO_Program.S6

// Rung MPO_Program#39
// Offset 175
SG MPO_Program.S6

// Rung MPO_Program#40
// Offset 177
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#41
// Offset 185
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#42
// Offset 187
STR X16
RST Y19

// Rung MPO_Program#43
// Offset 189
STRN Y19
ONDTMR T102 1000 C818

// Rung MPO_Program#44
// Offset 193
STR C818
JMP MPO_Program.S7

// Rung MPO_Program#45
// Offset 195
SG MPO_Program.S7

// Rung MPO_Program#46
// Offset 197
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#47
// Offset 205
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#48
// Offset 207
STRN X15
OUT Y45

// Rung MPO_Program#49
// Offset 209
STR X15
TMRDOWN T102 1000
OUT Y43

// Rung MPO_Program#50
// Offset 213
STR T102.Done
JMP MPO_Program.S8

// Rung MPO_Program#51
// Offset 215
SG MPO_Program.S8

// Rung MPO_Program#52
// Offset 217
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#53
// Offset 225
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#54
// Offset 227
STRN X13
OUT Y45

// Rung MPO_Program#55
// Offset 229
STR X13
TMRDOWN T103 1000
OUT Y21

// Rung MPO_Program#56
// Offset 233
STR T103.Done
JMP MPO_Program.S9

// Rung MPO_Program#57
// Offset 235
SG MPO_Program.S9

// Rung MPO_Program#58
// Offset 237
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#59
// Offset 245
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#60
// Offset 247
STR ST1
OUT Y47

// Rung MPO_Program#61
// Offset 249
STRN X12
ONDTMR T104 1000 Y46

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
SG SLD_Program.S0

// Rung SLD_Program#2
// Offset 2
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#3
// Offset 10
STR C1600
OUT Y30

// Rung SLD_Program#4
// Offset 12
STR C1601
OUT Y31

// Rung SLD_Program#5
// Offset 14
STR C1602
OUT Y32

// Rung SLD_Program#6
// Offset 16
STR C1603
OUT Y33

// Rung SLD_Program#7
// Offset 18
STR C1604
OUT Y34

// Rung SLD_Program#8
// Offset 20
STR C1605
JMP SLD_Program.S1

// Rung SLD_Program#9
// Offset 22
SG SLD_Program.S1

// Rung SLD_Program#10
// Offset 24
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#11
// Offset 32
STRN C1605
JMP SLD_Program.S0

// Rung SLD_Program#12
// Offset 34
STRN X35
OFFDTMR T200 1750 C1651

// Rung SLD_Program#13
// Offset 38
STR C1651
OUT Y30

// Rung SLD_Program#14
// Offset 40
STRGE T200.Acc 1750
FLASHER 500 500 Y899

// Rung SLD_Program#15
// Offset 48
SG SLD_Program.S2

// Rung SLD_Program#16
// Offset 50
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#17
// Offset 58
STRN C1605
JMP SLD_Program.S0

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STR C1200
OUT Y39

// Rung SSC_Program#4
// Offset 12
STR C1201
OUT Y40

// Rung SSC_Program#5
// Offset 14
STR C1202
OUT Y41

// Rung SSC_Program#6
// Offset 16
STR C1215
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y35

// Rung SSC_Program#7
// Offset 32
STR C1216
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y36

// Rung SSC_Program#8
// Offset 48
STR C1217
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#9
// Offset 64
STR C1218
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#10
// Offset 80
STR ST2
ANDPD X47
ANDPDPF
STR ST2
AND CT150.Done
CNT CT150 100

// Rung SSC_Program#11
// Offset 88
STR C1203
JMP SSC_Program.S1

// Rung SSC_Program#12
// Offset 90
SG SSC_Program.S1

// Rung SSC_Program#13
// Offset 92
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#14
// Offset 100
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#15
// Offset 102
STRN X41
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#16
// Offset 118
STRN X40
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y36

// Rung SSC_Program#17
// Offset 134
STR X40
AND X41
JMP SSC_Program.S2

// Rung SSC_Program#18
// Offset 137
SG SSC_Program.S2

// Rung SSC_Program#19
// Offset 139
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#20
// Offset 147
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#21
// Offset 149
STR X44
ANDPDPF
STR ST2
CNT CT150 300

// Rung SSC_Program#22
// Offset 154
STRN CT150.Done
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y35

// Rung SSC_Program#23
// Offset 170
STR X46
STR ST2
CNT CT151 1300

// Rung SSC_Program#24
// Offset 174
STRN CT151.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#25
// Offset 190
STR CT150.Done
AND CT151.Done
JMP SSC_Program.S3

// Rung SSC_Program#26
// Offset 193
SG SSC_Program.S3

// Rung SSC_Program#27
// Offset 195
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#28
// Offset 203
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#29
// Offset 205
STR X46
STR ST2
CNT CT152 300

// Rung SSC_Program#30
// Offset 209
STRN CT152.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#31
// Offset 225
STR CT152.Done
JMP SSC_Program.S4

// Rung SSC_Program#32
// Offset 227
SG SSC_Program.S4

// Rung SSC_Program#33
// Offset 229
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#34
// Offset 237
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#35
// Offset 239
STR X46
STR ST2
CNT CT153 135

// Rung SSC_Program#36
// Offset 243
STRN CT153.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#37
// Offset 259
STR X44
STR ST2
CNT CT154 210

// Rung SSC_Program#38
// Offset 263
STRN CT154.Done
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y36

// End of Code Block SSC_Program
$PGMEND SSC_Program

// Beginning of Code Block hunt_exp_light
$PRGRM hunt_exp_light

// Rung hunt_exp_light#1
// Offset 0
STR ST2
COPY 0x1 "4 0x0 MC402 Y39 1"

// End of Code Block hunt_exp_light
$PGMEND hunt_exp_light

// Beginning of Code Block HWB_PickUp
$TSK HWB_PickUp

// Rung HWB_PickUp#1
// Offset 0
NOP

// End of Code Block HWB_PickUp
$TSKEND HWB_PickUp

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"C1","copy","",""
"C11","C11_Interlock","","Used to delay logic by one scan"
"C12","C12_Interlock_2","","Used to delay logic by one scan"
"C20","HBW_Has_Pallet","","True when carrying a pallet"
"C51","X_Direction","","True: Left False: Right"
"C52","Z_Direction","","True: Down False: Up"
"C80","Conveyor_Timeout","","Bit high when Conveyor Timeout timer active"
"C90","HBW_XY_PID_EN","","Enables PID control in HBW_Move_XZ"
"C101","HBW_T1_Send","Modbus MC101","Task to deliver a pallet to conveyor"
"C102","HBW_T2_Receive","Modbus MC102","Task to pickup a pallet from conveyor"
"C103","HBW_T3_Reset","Modbus MC103","Reinitialize and home all axises"
"C104","HBW_T4_Manual","Modbus MC104","Switch to manual mode"
"C110","HBW_Move_X_L","Modbus MC110","Move Horizontal Axis towards bay"
"C111","HBW_Move_X_R","Modbus MC111","Move Horizontal Axis towards Conveyor"
"C112","HBW_Move_Y_In","Modbus MC112","Move Cantilever In"
"C113","HBW_Move_Y_Out","Modbus MC113","Move Cantilever Out"
"C114","HBW_Move_Z_Up","Modbus MC114","Move Vertical Axis Up"
"C115","HBW_Move_Z_Down","Modbus MC115","Move Vertical Axis Down"
"C116","HBW_Conveyor_In","Modbus MC116","Move Conveyor In"
"C117","HBW_Conveyor_Out","Modbus MC117","Move Conveyor Out"
"C130","HBW_Status_Ready","Modbus MC130","On when ready for a task"
"C133","HBW_Mov_Conveyor","Modbus MC133","Status Conveyor Moving"
"C134","HBW_Moving_X","Modbus MC134","Status GantryMovingX"
"C135","HBW_Moving_Y","Modbus MC135","Status GantryMovingY"
"C136","HBW_Moving_Z","Modbus MC136","Status GantryMovingZ"
"C138","HBW_Status_Y_Pos","Modbus MC138","Current Y position"
"C141","HBW_Target_Y_Pos","Modbus MC141","Target Y position"
"C150","HBW_MoveComplete","","HBW_Move_XZ completion interlock."
"C180","HBW_Fault","Modbus MC180","Status in Fault State"
"C182","Fault_X_Target","","Active when X target out of range"
"C183","Fault_Z_target","","Active when Z target out of range"
"C400","VGR_T0","",""
"C410","VGR_T1","",""
"C420","VGR_T2","",""
"C430","VGR_T3","",""
"C440","VGR_T4","",""
"C500","VGR_Man_Control","",""
"C799","VGR_RESET","",""
"V105","HBW_Task_X_slot","Modbus MHR105","Value for slot X coord"
"V106","HBW_Task_Y_slot","Modbus MHR106","Value for slot y coord"
"V118","HBW_PWM_Set_X","Modbus MHR118","Set Horizontal Axis PWM Duty Cycle %"
"V119","HBW_PWM_Set_Y","Modbus MHR119","Set Cantilever Axis PWM Duty Cycle %"
"V120","HBW_PWM_Set_Z","Modbus MHR120","Set Vertical Axis PWM Duty cycle %"
"V131","HBW_Cur_Progress","Modbus MHR131","0 to 100 percent job completion"
"V132","HBW_Cur_Stage","Modbus MHR132","Current stage number"
"V137","HBW_Status_X_Pos","Modbus MHR137","Current X encoder position"
"V139","HBW_Status_Z_Pos","Modbus MHR139","Current Z encoder position"
"V140","HBW_Target_X_Pos","Modbus MHR140","Target X encoder position"
"V142","HBW_Target_Z_Pos","Modbus MHR142","Target Z encoder position"
"V181","HBW_Fault_code","Modbus MHR181","Current Fault code"
"V801","VGR_Fault_Code","",""
"N810","VGR_Rot_Target","",""
"N811","VGR_X_Target","",""
"N812","VGR_Y_Target","",""
"D0","MC","",""
"D1","Feeder_Extend","",""
"D140","X_Start_Position","","Distance to target"
"D142","Y_Start_Position","","Distance to target"
"D143","HBW_PWM_Cur_X","","PWM value for X for XZ movement task"
"D144","HBW_PWM_Cur_Z","","PWM value for Z for XZ movement task"
"T3","T_HBW_S6","",""
"T4","T_Conveyor_Timer","","Used to detect conveyor faults"
"MPO_Program.S2","Vaccum_MO","",""
"MPO_Program.S3","Vaccum","",""
"MPO_Program.S4","Vacumm_MO","",""
"MPO_Program.S5","Vaccum_Load","",""
"US0","_CP_Strogram_A","","CP_State_Program"
"US1","_VGR_Movement","","VGR_Movement"
"US2","_SSC_Check_InOut","","SSC_Check_InOut"
"UB0","_VGR_MisScan_A","","VGR_Movement.Done ThisScan"
#END

