// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\brent\Desktop\factory\ui_cda_mini_factory_fa23\fa23_plc.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
4cc0e29aa3514b9dd13f3f5759fbfb9ebbd8d15205f9920a7b0ef732e819add39c90b19db0b50f5f
2d25c9891e19b8ca31c1a799b43230e97af8a5eab9de58b075a5d0e88fc7af7051f68784575bef8f
4be19a5ba5877aaaa6e6853f4a82e998790542fb1e242e458c0f48492d841f2828cf2f32d3cbfa88
4444b357419abe41e5a92feb816d2a63ada4705d8d1886637c202d8ccf5851e08da98ac092ad79ef
e9c1a85e2b96deb07832551041b273a09abd1ead6ae021efd84dcfbb97b3f23d38c166eceda63e53
f61033ed1d08bd58656b5ae75ae14c400dedd79761e739efadafc9dca5a9ec83b146027b45396aee
98edb4a51d3a47c63c7d226a1a2de4d6977d5a02f905eda0a66ea0e1e7481fda32b77848f3006c2b
1cfb95a073ca58fcaa5e75e9c01d4cb07ca63ca33d122b8b74fbad216f29223e6e07c45b9d35e8f3
48cc048894ccb923510c55170c76ac1062e31b63f4a4cf91a65fa3f76e09eb1203f22704c1f42e0a
93f7579781fc5e9b6bc1108034eaa71cfe7ccea4e05fb2089a4c46ea760a9861d9487332bb9fb79a
0188bea63f3443f4d9727c7ea358bb0277fc01dbfafdddf74c7913b6bc42c88edf6423396cec40cd
cff692a8b282ea35cbfe6576c3b2af9b97d0c0e285f1d8969d815b7205ea7d33e592149eab207b64
1b0dff1a92bd751324adaae96c0b71c1b08b48a7ea3770de89e10adc3cdf0cf733c60a5d90a9f079
30cebaff1f4c990802b99d6135e445918824140609d5db78e9d4d682ce5933ef26cc703321318a43
98b36744912211a7dfd7adfbf75da9d0c3bee182b77815e751d6f715b107caaa920c4928b9134698
b4792f4aae64a777ab471fb09a76524bf2206c0d078ff98e633d12d8f7dc5b359bd923d462fe0693
4f0ea2da7f13c3d2822b5fc31f3d02921f3b516d6a1415b0eb400d0bc0fbe9d16ee9288741e4b891
c71538e91cd542c270ba0ac3e91f0b0873c10da4f2e35eb7f3fd2e92ada9898679a59f457cc214a6
d5f45a0a3c2cd13dfa29a9730cde7cfdd33d1b514e0d060083b293196d49e2b452817fba2e1bd01b
15867393f54ce8af99dd654d8c0bfce3afb754b1bcc06c9d7bd8831666aa05e92d4f803685c25d5b
f70666e2f7fb7415569264d7f306e81cbcc72675a5af87cc137ee4225291c74808294067c969ce72
42e9bd0d57095a17fe32241e67fa8083244050a6281af5a816c7a750e96ddb4f5fcfad5ada44a9e4
f4fcb2033fbac0178e0ab6db2f74170d75dea9585a95af6462e19e51f874890f645cf1b5d381391f
a3a478bd3d5c88bdea7ed46e5daf3ccccec9c0a720144f1cc01d13228426ccbdf5eb443d724b0979
9a0d0446882bd6eba16a9b44faa374380aa9a9347133d2b9eeddd49d41442ddb58f3193eeeb432c4
7fe2a92d9b85fd1203ed19d666c39f209c951b1db5c9117139fd3932ad2394d6454718e6475b61ca
7a9a158988849d4a5cd972c17fae708f03dc81c2ea6da3f4c001247296fa0a626f2955cc3940e90e
870b8e98b12f3757cbbed719d54a2e14852e63b5be7b38c5a6f5b63f07ea0a7edb8a3bf436c38bae
8eecc54b9c7a2ed35051036f8b0573889899d4f279948e251fb301ff72c4612ae859473fe8328387
4d64e1a690b15298405c6a9710ed9438d1652d0e1d5f25c8fb3af039d77e7ef6241401e5bb79e4eb
c77fabd5318b439e8a566b1d08915df6593c1ea00964e9c00d113ea74e044b2b88c991d9743311d8
e7d485b97ee65cbe65399231ee300c169a8d89855a3e44720adfa3baa3ee95ea512da89108d91138
1a24a7bd0327f6132f4f8faa3a79b414c9db6ab845e3dcd58242fdd9086d7e1edefb6b28e575f64f
4e8af5834d27112ef7ac665eeb09005cc3e95400e85995c036653ad04c50ea11787b895832752921
c484a991583f2bd8b889a3214a0a10a639d3d60d8a8acfb5117d5d14960c71593a6f5faa5505d7c2
bc7df67f0722fe7db05e1808ff69586fc447be96cc054737b84dfb280f6433e135aaf3be6d6d41f6
8edbff705be97e696644399fd9f8d7cb7d466601e12efe1031b6eab844a727ec7e485bfd36c09892
8e7453797e385b7f57b8c2c1913c49f2db59c3bf4580f976199182817d15d70882fb67226c08eca1
e82c7739bda22bdc3fe5a3e4936088cfcae25c26da4fbf015c9ee3d5f4d2a36bfe343fd8a4120b23
1dd6a13cf17c63123670935d8996097a26a1c1a71ae40eb56512e0031f6cdb2bb8cceb6b94b030a4
583be61a4188ba2fed9817ab494965e28991c0dea85aa8599d6fb4e7795a06b43acebf6e947be863
582f1d496371cb63711a268fdbf39703059907cf3608a173a2aa5fb9b4b4b321a8d26def6d5660d6
474d31276d04c269447d79b696fa640e9ac8cc5e9f8023dc3ebaf21a14a2180d030208f4f99e2b3d
d967035a5ebf6cc495d3a93432a893cb5b67fadd65c3576792426db2df87326779706ae09a8ba743
a049203e109cb1b4fbe3d6a1ed956f6a2e11db706294055994b4d4ded9eb98e5b7f21b7a756a2bb0
0386173accdf932b6db928ff5893677be44b20a5d83e8f719b20dbba8c359eacb0ae9d551591d95d
d14ffe3aeeceaf544e1cef1eca2dc92c38cc1f075680f604f657ca7e5f34dc8fd0a96f8432f96dfd
f1b3411bcec4e404f56c592a654f3dc4e38e7658f909987ef89e7aa642537ed006b84af59d2a9861
f0d3f5cad9e355956b67cb81da80354cff8cfa95d5c400b51755ead92a42223d82eb919fb2e4f581
6c7eda07046dc19cf51d40b6e2ca536ef1e732786b8fed100b6ae853cefaf84f39b66e297dcab44d
9f78e3c802a3865f2f77aa30e9b481eb17cf79cacaee4661618033fcdf598afd8eb05d1b470f2dcd
1294edba07a1322b69c8d1f7b4106a7fc27cb33788094e17545e5daadeab804fa0c77b18fa5c084f
806ac255ff8ed05444bb386d91f8dbd24e59d4276febb160fb629b543125c78ad3d9e2a2b5ca8781
bb41ce988942ebfd29078fba9df157f0fa825deb1a718c8d677800bfd96b4abe15da8a0e98e32945
873b75426498b754e2a8082e6e628a90d5104059fb0de965e2d239b4f8a94317eda3cc4929d8f502
334d22ae63ac79e077e7ed8eba7e7fda1b0deec912aef9ea296ab440a3392fb0279116c51398ab33
70530e510e5cccffe72e0407d0ebb83629f0218e6a0aafb0239323665553da2e230fb5171160991c
f1be3ce86e3a3cacf3dd233090d64fea200c9982b8ac21029bca2753daf9901e2f95ca8bbb0605d0
e301ba77b4346f19a15a7647108dea83b07f29003c44a5862cc697c50511cb60820c154fcadaca82
efaa3f11402d6084122b1a39ac41701fab58985ae8d32b3d01217a27d9c2b63ffb531c99e52e712b
e4b2c033c2b4835a5d1bd3fa270e0a24aacd930d4cd3b9393476392b6b46bd34176bdfeadb31d1fd
78fb67723aa75e7a7297d7faa866c2a6cffc578e68b855b514e150a6c4f656085d35df6c4f1387c9
e8dc04f81bd41d3558a8fc2a565a33d3b42280faa4940687d80d95d75018f34fc27b6be59e419932
8ce52308c93e3a7cfeee5a1a9d84ddf4672812353e60b27ed05de4e5835432a053a907018b112cf6
7cc87804bad7eb69eb917cb9ceb38794e0da2f69f823835b3211df6a7af88201a1648b3b2328e80f
0e4ca166191a830663b46eb8ecabef636348abe26e1b8efb79c61de58e52a3ac81e2916e30e57d3f
b9c14d5bb86f760ccfb9dbc96ca528d56bcaa8e71209e1cba38b08619d478e5e862da2d3bdeef7a1
ccd8f60b9c3c786a501990defb020e539df0cc4e78e2d9b63eef4fd217585071459ab62f3781ffc4
b0ff02292c4e89e2607b4b4d1dee82c410970bd82b01a5523b57c887725bb8f17d0e1ba6701215e0
5b9dca2fe46998b943f540c8fc23bdf289b719c48f5710597e5c29fc260d086ab209f7eddddb93e1
26b7376d2da4ef77ed3789283af7948f39477c0c432daf10cb01ba6e9f90bdd6e43866b32b49cd28
beff15c97e68e28517e43e94cfe627d094d9014b0225c7ac259ee69687b33921a2683a80c36fd7e5
990ae662c55974b77e86dc825a1bc4d67e876b51e1775c5625960eadba7903da875abc2bbfe0a0a8
89bd624ebf94773eb2cb9ee664db00fa418378bdded65a41c1a9516b9002dd2b4a7c9e4dd903b9b4
d674b494040f3a61efcafee5bdc64fe4cf770ef898f2875de9f2c6f3e54f28666fa38a6fde69ff76
ba69480bedfeef6e9f698e03995124afb6742d651eb0e0d65fba935b5368c29d7bea34038fb033db
8c66e236cc0a9972f98efc29aa71d35c421ffa5c3430cac8e68076f849ad46e9c1bbc5b66d9ac0ca
24bd72da46a96be4c747ed5b1e66db7d9f492f6881fc3794fea08fcd247025bd0703ed1454ae7266
0033fb688c8839f9e71039035db449edbf1ad1ccbed957979e98a6113934498b52aacf4101068c53
4a72763d2a6a3f80076f5e4ef15e9680f232a14541e42452a8d4da33d003a137ad31da2690d3ac94
55235eae4689f45530a602429b94a222b25727dca9dc274d51fa9cbbd55d5cb71f035b427563dd58
4c3aa6d441b2caa9e8f79d174bf47c8d96170ce90e852c8667fd20087e5cd229440657aba7c57a20
bf1b8aed5da831462bf7391cb5ced7a149f05dcb6b9fbdb294f20e88bc7a3883434ca3cfcf1a5849
578a3f48142f9ca92a7fc41b42fbcf06fcc2dc830fc87e19aa9d97a489b4e4e114c3b9ba022f4b7d
9723e2a380ec661f80b54dda01d1e8802c9459e6fa8b1e9261fb9e1575935c772c6311afdd54fb99
529966462ca72faf53236a391c984327e5501a923d2f0c610f052b4a53dbcc82e2793d67150b20d5
522bca9cac64bd6689050b243cae9f8aeec9a8b8de1fe1bed3ef92bdd63ed82db63b6716e99114d5
2b55039ab9e2ccbfb46036a8ed31f5c2e0235235ac024e7d15b98f7a5d693d1824520fc602351722
347436f409e5cc28598a0def7708d34d08d7132406c5b4d34c663d4083320c9808a183ed1164d9cc
f9d09ec726f145618e924cbde4dc96eb0d7c47ad016905b879a4e0a1b0fbe5209ca8f8e40233ef76
6d64aacf601764de9f74e4a98ea3a0c96d4686ea88d9e704d16bf1b34854ca94a768318be43b9c92
58dbd5b2fe964865309ffaa9bb983f45e76d668d1798e2cddd25326ecbd16c2316a9256d14c59433
0b042ea2e8db85fa15b7280e6bf727ae4dc5e3725a64cc31a7e12a9972a80d920219a58e4efafcb2
c1707f60b85840028f809edede8cb5a61d62bac578b3123d7632d1b12c0dba6da0f4376685685f8c
6deca5399ea1d8fac1f2d963d12ce586b9c85908102af1c58a778484e3d8a9a42d21964478fda2a4
d4e796bf394d29186d3a97a6d7e3165b47e18806ac96020e350e0545f571f6de72777355d5fcbc6d
38568c40203897cc860a3198637e13d404e5e9ea9f83f2c6c63413e0640bd93479dd36fa94e482d2
afe85f03d94a1104aeac2dcdd4f89e264f051761c6a12463293534d18f4fe25a706162f455bd5bbb
095ed6ca42f55005698a138b44ecaff366c885d90889399a2d930689fc5da4ebdc1041c48d6935b4
5865ce7b6804b152d3f0d54649835e867a002eeb2a1886e875da9ae7a843eb0fa820cdb5db09b318
306459cb8dfcabc557377c90abd5684f1246e5e27aac516ed1210c2eb356d68c6087de23d30b72ed
055c83a88f7f55e3b31933f60a581dce397ab755cfba4216a61398c11b1c1c7e3c42a438659823fa
2ccfc43071a69fbdf516eccfd5b99df71505763cfb770337a69aa4a68fb191d4bd90a1bf6432c501
bab13bf6a52770a51c92975cbabf203d7f9e1992e73f83b7d7b75178ea98449c6bad74b325268431
f4c7aae93ea557d49b17aac383a7ff979c23f2b26c0b3ecb84a8ee8cf93eded9754aac9fea40cd0b
23ec7a5c974225737f207834004f1866543316fe99372d45aefe9b4011e0fe7dc357eff53159c319
05ab26a8ab9fc3df6833b2d5497e755a5f44fac57f9e746ac2d23bc9150153ec0671f9768ae00613
02daeaf343f89163488c867d8fcbad1d3a4be07ea9ced1495e97970e3925b5545c6d0cd071ccb2ac
96bf1f3f16e51ad21c42b22fc8bad2a54b7ce438658ff73dc4abeb8250221e4aa3402b526220aa37
6c1c497d70454f66c27c620eee17a895454d10c335fdd962b428efb7bf22df31bb318df55523131d
e19fd4230001750ea078875ed0df13288f5559303964dee26c979b0a6f67c4c1690a14618ed8bc2d
9c8d4c358dae6cc6465c750a96f2805f561900fd75a9a2a8ab5cc920cd217d6ca2bae7c263ea8692
068ce232c8e49debb8801b7091a88cb12e12aa96f0d36cafe80650a1a51d9927b3a3353e4829f303
b816bbc91a8673dac126f626083e900c122186d71de28ed2f92578218a151a962622ff22eab64916
3bef75300b80ff9b6ba7fc0fd8ef2a4139c013a344b85eafad7158ce3a965e94b58fc741972c4250
06c283784c6cd5f28659f63f93cd42026800f909760197caed2fee5f10a413820654de03cef931cd
bb7f0cf7af85042ee312a126dcd96f5aeaac5fe14fae9cde5de2e0a097494620f00420686659a965
3dd680799136fce2dc4d3af288a385573ca0acf0040861f085f34b1b8e529ede3676b61dc77ae868
57dd5dfbc3b50364887c90eaf6f5a730ca234291fad445130ada2968a317b6f67c3704b4f25a3af1
61d5c5b86486f918509a337e34cbce280789e3899ee483990d4ab9e0fd699473027e88ca179f74fb
6b706b66322662aa364711fd702dd02f940e558c6b7cc413f625658d59a82ddc5e380a3c8a1b5fab
2cd973d84b4376eccf3498aefdc649b2b42e958e9d81a236f304d79ab05b77ae0c77ef95be4a5167
01a9f8c37b88968e49f8aa95d8ed4f336fa1e76ec7e8c174969b67803f17d8b5608e72c1502a3b66
96722ecd3430d1c2a9d1aba307f1d38eaa925c011b89128aafe8f132c879f3b1924e415b9903b2a4
3e392afde507670e43d0b131cd8ec62cee64add6d6a7fba9b7979e80c0260e5aac2a82de42525d18
721c884a46b0154047efdb33c34cc5c41f783707f3fba9cad4500fe1ab722fe08054f042f6d1f791
6e24f88451dbed28c82f91ae0f8e473d505fb7bf27539f76a2c139eed9721fe1d7068650f774dbcc
130c86cd0f7587f318ac6c4ca0a01fa1172da9e651a02f9825c512c049052fe71b9e9ff16d279623
4c98a95cc1cd21b7017b8adadf260bdc35cc81f4bc890a93f08fb0bc43376ded88a57de974a5375a
3e16be08757854eef4e87bb56b5d884fad06aa9f5f76865b8f8ed17cf8ad16206a58fe9a6c6a7455
3972ae096038c814c2e78543d3e4012fd4187754c110f051d0c247131be2ea55fbdee165ab0edc90
2144ef90c32a5760a566ae290a549db96c7c595490004dcd6666764ce023c1599f510a07db64287e
852b99c7282f5cbf6ec83d09f7c0a3ddb927dbe4cbf6bc702320bfc6e8c9ee50c6b61a4d21fd4afa
b3118b93eb9c787805ca1bf5a26db3bb543f145d7e837d5cc6d269f7f06bcf9c88b9a6a2f37b1b54
77aaa7dee6f32a1de67884cfd3cfd6d93443710d0f2a7e77e0b72c1a8a3a7cd4b2491bf62b6621a8
5f21155ba6c6e642f0c7526e0b3048e18129ffd9722cecf446283fd04aad88e8b2deb14cc4890307
afb62e1d54ab5e1a7fd9822370c8ea3b15b84245776cef8c17852843c6bdfeac096f1fbd459c2ad2
e050c3aa5832845a8551af00bbd0896f4aec304e3589fc8306b0cf7f55cfd264dcb02b76ed18122b
1c3a2b8607480664fee46eafdf3609fad82ef938c230c7a0969cba5772093b2ca1d5de8a2954dafa
c3296770b5eb0990ea5f56135dc5a64c6b526792f53f00dcf31e03db1fa0b84ee853257215947efc
a09c209e62989d94034de2f6291151664f6b9216456176c06b4fc2e582a7e501302a760d4ee2bb36
99f24387ff3489aa660fed9b4e71ab947d804d7090f9ad875f0d1369fd831e20e6f64ceb7541418f
cf11837dff983434b8ba2f6463705721c7e0257239ab2b5ad13dfd79bc37f1f3361646be4470ac59
56d88ce0d599beec4671b0846d0515a417f86303b497399584d9a2a5922e5facdb1b737b5a867676
f462838d376857c13ac5f5e56d70ca98673df497832ccf77553372fb6fa9a538fafd5a4a99ca891c
17943070ca8a52b265ca0f149d109c4d57874f7ce9bb2cbd7260be44d4c51cbc4974ebeeb5479201
d709754ed5dad1eab9d6284cb66b60d4b73d5ba6921f3f75695cc63024a8d51e72334fa58b495d79
56edfbc2f52c94dfadc8aa008e15b76f50e57da44c2edfa8145be2fd2bf7fcded0140421d6e4c372
51d6164c7d7b5d0cb0e9893a280c8fc46b204b7cb73a15644564668e0fa5c5f0a65d742a20d6269f
aeaea03e62ffd3c304df6795d5e3dc4ac4b9a0d1301b4b733a93bc87cdcca3699902721139d35bd4
a395726293f2a316a91bc577d17cf4d76429c736a9ad1e95b8443a177c3e4ae5f0ccbe155a89b9bf
c390698ea77670fd9e3d4918bbe3aee4b984452201cf6290e9fcc37a6b35468df8928b13dd01be8b
de0f9a6bfff4592b1c99348db0e09c0210dd83ca659e2c2cd00c68cc078326872c1d101a18544de6
a4e021fc6f79984289178b4428dfbfeed8a52e9eb4f7034bc9088c3f94690cf026ad825a7d03c3ed
6cc20b4b2cc85e2eae7e714fb9ace583005c57e9c0f53c93c1fbf3b55c8a70698e60073026999dfd
db0d11293c5164e3fff272b60e07b00d980c499bbfc174b3e846cff149401ee2fb059fe7de95af1e
e02763c9118b6614798efa66a522f06d60f12f4acbeec7e09348feb4a4141670812c79821e9e0544
889492ec59de9a8deef415a0b72324de30776285346076c5e8ae2c559cecd9929e922b157f92e9c5
639b1015688d9acba9ccc9298ab78457fb9586e9539d7bb0a037397a62f4afffee5326debf343ccf
aa10b7c8cd536bfd2cb1695cf8eef0b5746791e0452722f682ee20d979c8d40ea9f9a5ca1efc5112
2519a99ed0410b51cef36d4856407f75c648b9c827daa835ee2f5eefec63144eb74327d8bfa3276c
5f0b6b94a1793af0034c6289fbc40d86b6ea67917a2348a39068726918954adde5588927f0ef723d
114c8845259a77e2326628c2d05e1d267ce1a2b85c82db052e55cc277fb121484c2d848b43d10185
370082e9ded8f59d57fba1fb02061d13da397e9294fcc27e5ab895aac4711c5a164e561057f038dd
1a023010e891c57c332165a5a3dd53d169858f7559ce94aa9229527aea93b2bf9238f5997563068a
fdd045cc39afedbc262eaa46703e3d9a7e6b1465b84a037960fc695055b8e5a6707b3248f751ad18
1560fcc38c7970c5ff21f4bd4f8defd104592bfe678c1a919a4250dc7bc01d159eeb447b2a935088
01d9e03fb94ec1ae53d95d337c36701a20c834d5c2e4a3f81939bdc9355446e9ff6e3647368713b1
124a9df964a5ef5c2faebeaccf2af8364705d2e7605b2976b56cc590ca0de91ba93f7dabd3d1ef69
2842cafc1bc8dd89d6b838e9d73544c9daf1a97238634a6c4d886a4f29d5d7f4ec260eea1f884032
2a5a0b5c89884bb25caec1c9b701bdada697dd65a9ad73e8024a9ebe867bc3fec06ae75e447e8f45
6d9a8c25ae837d5cdb2d3c5eb42381003ac686366b5e0a52736b514fc40634ff48b7063b0fddcde2
a712d648538cf22cfd37891d1a1adf1ef0498cb8e6495ea76bc5158c97ea52987eda06159cfc70d2
99b46a96b738a67df582ab60a2ce605dfe213075d9f7a9260e2b8e3d667021a04429d23cebe5d36b
3ab8d62f7baaab7331f76b7a2bfe6a4e3fc10207029100692a18865bae6bc96282dd79f79c991f31
354fefb6687bc6c05df8fb2a3072ccc08f3fc581d6bb2a23013ec8675be8414a26b15171fb0ba472
d08aeda6a3ccaa3c3d3ba88ae29f83bd944cf5bb48edbee4c213220d20b90b2e48650da63f686c02
8d82db3e512ef8cf2b66595233436684ff408f6b4cd8b457284d6f5b195c1152041912ac508a7f81
416ee2d3ede7bd81d9081e0d6d33dcb04425c18a3fcf33d52181d16bbfb89cbc2885630074b5134f
ae9028045a8e95d127b6b51a740e36982931c226f4f4cda1ecc2084ff8043bad7fa919584c236f8e
4152cf784eb42ec87fa0026fbe18f050588d5100a951160a914e593d510c4697d55217050a20d173
9f18170dd18948ea280b99edd74653c3fb9a3b17cd0c4ddf6c7027bed5e46530863a97b5d9adcb36
789a45ea1e1c2b24350624b249282f713b14193dbd55976a6ac61449f7bf0b649ddf5fbdef68e232
eda62efc6e98467677bc065a4774d1fb61152e6c613f24ca6cb8e9dc9f5dc3e7834d685bf8c5c69e
a7c0613e64a55e660da09147c6c2041dc4790b64d5535413fef7e4e62bea4eb29e2277f5f0e81c55
da4632a0ef81815943b13330916574b0e85c1816a73e8daeaa7eba379a9d32bf9ca594647cc45262
86972924c7c2bb80fd5b5d48464526450fbf612579f370698f22e189758b174a3178959ebfa8ef98
eb9e676019033b01da98acda5429248b95fdbb466ad0292eda9806423c288f6c259b0615ed3f30c1
689b9e3ce94dc0c4ece746407004c58b778c4682e09423478355ff93c700efbd49a07ccfc2052d88
50979d2c45f728dabc608047391c032b9f790de26e2da31096f754454bcf61e532b9a4bcd846b0e2
47c9a6be236904871485c06fd16636ab32570c7bdccb317c89f45d97cdec56f2ae3b503462f12e82
4c37596a70b6b2e8ece2cfacc3940fdf13b772eaa966a1a01a0962f28b58cf9bdf5c959c6f325757
ddfee44f8a9276639af95526dc5fac646f080d7443be60ed3fc674797e2adaefa3a845d2902dea1c
45c0baa63001e529e1ba3e07e7f711f7fabdbac9cb5af74620010639d6993715b63a053e8ffba372
28d335971aef3df1a7e132ce45fdfdc5e79537e57cdc99d3323266967678438c461b7c020a07396e
70ba358a756854e269bfade0a1289ad81edf330149b5a8a9c6303ddeff0c6adbbd5eca6cc4c53110
0c873689f9865027d01d10c354319bbd57875db28f6dfc119b700e12c543f801132624a0032c73ba
b7585c6c3730e5bb42a03dc55e82055e2195cdebcf7098d2a6ce9119e66ccf1a3ff85e12d9fab451
0f4312e5833077a2014cbc7824f3fd3a869bb403399d751eea4e4a39d4d3621cb13f431da3f77e9b
6acc1c1fa098cadbaf6a2e95a1f5d12a566c43d9dadae94ab5916ba12b24e68beeca8c88bd071b5f
2491728fc21b33ac52af77adc8a02198d08428235c0f73a0acbb94af538aa2e6e83f6620ec121376
4c66bde3ace83e5ae3c7960e49a4ceebbbc9fc849f0df02ae54144daacb893de46e32c0573fb0378
0d7ad8418268e44d7efd7a158c8d8be69defb4dc0f83063e11d52ac020f8c257485a511a9e108a9c
dcbaa28d04514e27e2521d7ec22f1cdc48a4d1226418f875a64dc62f5f80d0c9349544ad32557b81
62c13f22790ee405a36b8154e6cbbcfa4ed203865fbc658dd127eca8aa6e2e685130b4cfbb4e96dc
abbf766e19d88f4dfdd22ca082a8ffb0d566411b2f23d6294aeaeffa6509f4a64b74e7ca93c7924e
2a5885430a2f2dac8938a12624733619facdee642cf42e3ad449c03449aa3b0756f87be06beb4bc2
73db23190f1cab56d9ef6deebae2022bebc48a2fc7d22f91cd467ae441d0a8c03b03d66392d61fc7
a547e75d67a3f7b183f7eb727bba47c2bae133a9cbe48e894830c3d11353906e135f3eaf2a85b2e9
9bdd4b62a77989e1e0fb93c7ff49ca268e7d28b115bd600547f0be32c3a29051e6bdcd868cb06e09
8f4c07786a0f58db2d5bfbb7692972fdb38d03d174cae079146d320df1957100654dcc6de1decbb2
4f22cb048899ef21775902d58b968221207187a9a60ac599ce28b32039a79d07dbcc60e69d5f0e08
05dfb54a41d059811ca74dfcbdf53254d79a7e6c05010dc7858798c284d0f63520cbb107c7321979
91b90b14294a74a35badb5a1b00ed5b3a969d984c9c6d0ca783afb4473aef34710f719a5d82b2c75
4e777174a540f3be51517fed568c7516bfc5c81e632c7dd110ce27082af8fa8aea35b3b6fa74d6d9
ad7011723bbfd0d8198aad9b2c9c8e0c7fb282991328593399da553462198aac56ac2244497e8b4d
a00df6d1ea0e562e6f64d39cc764bee75b9ea687fa837691f87674d2efb32f3369d08b5279d5e6d4
f9c273b23a9d44f7e228a9a43916b19c7e74c0d2265a285a1d97febc6d1a5472ec8cc8e3023d59f7
ed0de90a2e7fee256ecdf6e1d69329e61563bc557d8780f2d68d9b6e455223c9d9ab66515f2d63e5
c7d4f72d1e0267c1ee50e276415aa5955be8d395e4f74a5bb4cff065e316392eabf6dac8d97e4bcb
c9be63ae729b893060b87046c5128c3dd65207bb72feb6d522ec18946a945d18d872f16665f31397
b23c05bdc36095bed92acde7236f8bfbabc97ed2d0f40ddd0c353a483b39097faaf0959aefd03f68
667a54f1197a1b734e6b3e8f81c69d10b2f9d9116939efa0247ca59678b0d848ee648aef63bed200
f4e16c8b2ca4d1d4d45b72d25a77b3c062543e857353ef07f0d2dc5d9bcce3d519546a93f5a1f00e
0e3f1fc43ce5526eecd34cb259e670902e43729d3b6ce9c62d10cb05d0412234d27970c1a591db47
e17bbb9987c4c4c3b3781067bcf8ada5dd8604b2770fa38a9cae75563c2088542af8c604289932b9
5bb8303d4aea3ac5434bb7b8028b803b124ac1d79e141aae33451d920ef3e6ca83d8ef649fd3d2ab
72e732009790ab7bcb70230e676bd060867874210c18657cf0c537eca3d3fad4f306a88cf8b6286a
f8fcb0875da2456f06e83cb501f93298ca58ebcd231707a331f975a8f56192fc1251a0a63f2cfd42
6ccc6753e27ee43adf69c25a8fcef6e69bd02fad6b9cda90a5c0832d4784366ea7abc11d8b1de66f
c8e94d6c4a7b8b96343d9fa101e13731c0f3f75f8974ead89d04bb2243cdb1269c315c318cf38aee
50bceb8495942795811885d3843ea13ab104cd2f3c33579c7afabc76fe7ec74c91d6fde765abaf64
3b421a2ff51b6d5fd3c7abaeb90a8fb1af3dc374f322b3a094c3f29671b7f8bcb33fe49730d8e559
57ada84bcb31d06476bfcfa7e06dc380010ff3b178084184285cef1cf0841c19161a1ac49d348766
76b1a2704403f1eb8a09
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 SSC_Copy_State <Virtual>  0
 HBW_Pick TASK  0 -1
 HBW_Copy_State <Virtual>  0
 PID_10 PID  0
 PID_11 PID  0
 hunt_exp_light PROGRAM  0 -1
 HBW_Home <Virtual>  0
 HBW_Pick_Sto <Virtual>  0
 test TASK  0 -1
 HBW_Pickup_ST PROGRAM  0 -1
 HWB_Extend_Arm <Virtual>  0
 HBW_Retract_Arm <Virtual>  0
 HWB_PickUp TASK  0 -1
 HBW_HTO1POS <Virtual>  0
 HBW_Left_1Block <Virtual>  0
 HBW_HomeTo2_Col <Virtual>  0
 HWB_HomeTo3_Col <Virtual>  0
 HWB_HomeTo2_Row <Virtual>  0
 HWB_HomeTo3_Row <Virtual>  0
 HWB_HomeTo1_Col <Virtual>  0
 HBW_move_left_1 <Virtual>  0
 HWB_Home_to_11 <Virtual>  0
 HWB_11_DropOff <Virtual>  0
 HBW_Pickup <Virtual>  0
 HBW_PickUp_R1 <Virtual>  0
 HBW_Send_VGR <Virtual>  0
 HBW_PickUp_VGR <Virtual>  0
 HBW_Return_VGR <Virtual>  0
 HBW_MotorsOff <Virtual>  0
 HBW_ConvTo11 <Virtual>  0
 HBW_Return_Top <Virtual>  0
 HBW_MV_11_12 <Virtual>  0
#END

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"VGR Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC410 C410 1 0x0 MC409 C409 1 0x0 MC412 Y28 1 0x0 MC412 MC450 1 0x0 MC411 C411 1 0x0 MC408 C408 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC413 Y29 1 0x0 MC413 MC451 1 0x0 X27 MI200 1"

// Rung VGR_Copy_State#2
// Offset 27
NOP

// Rung VGR_Copy_State#3
// Offset 28
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC800 Y41 1 0x0 Y41 MI801 1 0x0 MC802 Y43 1 0x0 Y43 MI803 1 0x0 MC804 C804 1 0x0 MC805 C805 1 0x0 MC806 Y44 1 0x0 MC807 Y20 1 0x0 MC808 C811 1 0x0 MC809 C809 1 0x0 MC810 C810 1 0x0 MC812 C812 1 0x0 MC813 C813 1 0x0 MC814 C814 1 0x0 MC816 Y45 1 0x0 MC817 Y46 1 0x0 MC818 Y21 1"

// Rung MPO_Copy_State#2
// Offset 39
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
NOP

// Rung SLD_Copy_State#2
// Offset 1
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"SSC Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC606 C1200 1 0x0 MC607 C1201 1 0x0 MC608 C1202 1 0x0 MC609 C1203 1 0x0 MC615 C1215 1 0x0 MC616 C1216 1 0x0 MC617 C1217 1 0x0 MC618 C1218 1 0x0 MC619 C1219 1 0x0 MC620 C1220 1"

// Rung SSC_Copy_State#2
// Offset 25
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block HBW_Home
$LGCMOD HBW_Home

// Rung HBW_Home#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Home#2
// Offset 8
STRN C215
ANDN X0
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 60 60
OUT Y51

// Rung HBW_Home#3
// Offset 26
STRN C215
ANDN X3
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5

// Rung HBW_Home#4
// Offset 43
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y76

// Rung HBW_Home#5
// Offset 64
NOP

// Rung HBW_Home#6
// Offset 65
RET

// End of Code Block HBW_Home
$LGCEND HBW_Home

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 Y40 1 0x0 Y80 MHR102 1 0x0 MC101 C205 1 0x0 MC102 C206 1 0x0 MC103 C207 1 0x0 MC104 C208 1 0x0 MC105 C209 1 0x0 MC106 C210 1 0x0 MC107 C211 1 0x0 MC108 C212 1 0x0 MC109 C213 1 0x0 MC110 C214 1 0x0 MC111 C215 1 0x0 MC112 C216 1 0x0 X2 MI101 1 0x0 X10 MI102 1 0x0 X11 MI103 1 0x0 X3 MI104 1 0x0 X0 MI105 1 0x0 X6 MI106 1 0x0 X7 MI107 1 0x0 X8 MI108 1 0x0 X9 MI109 1 0x0 $HBW_Encoder_X.Acc MHR1 1 0x0 $HBW_Encoder_Z.Acc MHR2 1"

// Rung HBW_Copy_State#2
// Offset 55
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block HBW_HomeTo2_Col
$LGCMOD HBW_HomeTo2_Col

// Rung HBW_HomeTo2_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_HomeTo2_Col#2
// Offset 17
STRGE -2775 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_HomeTo2_Col#3
// Offset 22
NOP

// Rung HBW_HomeTo2_Col#4
// Offset 23
NOP

// Rung HBW_HomeTo2_Col#5
// Offset 24
NOP

// Rung HBW_HomeTo2_Col#6
// Offset 25
RET

// End of Code Block HBW_HomeTo2_Col
$LGCEND HBW_HomeTo2_Col

// Beginning of Code Block HWB_HomeTo1_Col
$LGCMOD HWB_HomeTo1_Col

// Rung HWB_HomeTo1_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HWB_HomeTo1_Col#2
// Offset 17
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_HomeTo1_Col#3
// Offset 22
NOP

// Rung HWB_HomeTo1_Col#4
// Offset 23
NOP

// Rung HWB_HomeTo1_Col#5
// Offset 24
RET

// End of Code Block HWB_HomeTo1_Col
$LGCEND HWB_HomeTo1_Col

// Beginning of Code Block HWB_Home_to_11
$LGCMOD HWB_Home_to_11

// Rung HWB_Home_to_11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HWB_Home_to_11#2
// Offset 22
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_Home_to_11#3
// Offset 27
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HWB_Home_to_11#4
// Offset 49
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_Home_to_11#5
// Offset 54
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HWB_Home_to_11#6
// Offset 73
NOP

// Rung HWB_Home_to_11#7
// Offset 74
NOP

// Rung HWB_Home_to_11#8
// Offset 75
RET

// End of Code Block HWB_Home_to_11
$LGCEND HWB_Home_to_11

// Beginning of Code Block HWB_11_DropOff
$LGCMOD HWB_11_DropOff

// Rung HWB_11_DropOff#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HWB_11_DropOff#2
// Offset 8
STRGE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_11_DropOff#3
// Offset 13
STRN C215
ANDN C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51

// Rung HWB_11_DropOff#4
// Offset 31
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y4
AND ST2
OUT Y5

// Rung HWB_11_DropOff#5
// Offset 51
STRGE 2850 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_11_DropOff#6
// Offset 56
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 60 60
OUT Y7

// Rung HWB_11_DropOff#7
// Offset 73
RET

// End of Code Block HWB_11_DropOff
$LGCEND HWB_11_DropOff

// Beginning of Code Block HBW_PickUp_R1
$LGCMOD HBW_PickUp_R1

// Rung HBW_PickUp_R1#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R1#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R1#3
// Offset 41
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R1#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R1#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_PickUp_R1#6
// Offset 69
NOP

// Rung HBW_PickUp_R1#7
// Offset 70
NOP

// Rung HBW_PickUp_R1#8
// Offset 71
NOP

// Rung HBW_PickUp_R1#9
// Offset 72
NOP

// Rung HBW_PickUp_R1#10
// Offset 73
RET

// End of Code Block HBW_PickUp_R1
$LGCEND HBW_PickUp_R1

// Beginning of Code Block HBW_Send_VGR
$LGCMOD HBW_Send_VGR

// Rung HBW_Send_VGR#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Send_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_Send_VGR#3
// Offset 37
STRN C215
AND X2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y48
AND ST2
OUT Y49

// Rung HBW_Send_VGR#4
// Offset 56
NOP

// Rung HBW_Send_VGR#5
// Offset 57
NOP

// Rung HBW_Send_VGR#6
// Offset 58
RET

// Rung HBW_Send_VGR#7
// Offset 59
NOP

// End of Code Block HBW_Send_VGR
$LGCEND HBW_Send_VGR

// Beginning of Code Block HBW_PickUp_VGR
$LGCMOD HBW_PickUp_VGR

// Rung HBW_PickUp_VGR#1
// Offset 0
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_PickUp_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_PickUp_VGR#3
// Offset 37
STRN C215
AND X11
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_PickUp_VGR#4
// Offset 56
NOP

// Rung HBW_PickUp_VGR#5
// Offset 57
NOP

// Rung HBW_PickUp_VGR#6
// Offset 58
RET

// Rung HBW_PickUp_VGR#7
// Offset 59
NOP

// End of Code Block HBW_PickUp_VGR
$LGCEND HBW_PickUp_VGR

// Beginning of Code Block HBW_Return_VGR
$LGCMOD HBW_Return_VGR

// Rung HBW_Return_VGR#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C253
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y6

// Rung HBW_Return_VGR#2
// Offset 22
STRN C215
AND X1
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_Return_VGR#3
// Offset 41
STRN C215
AND C251
DUPBOOL
ANDN X1
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_Return_VGR#4
// Offset 63
STRLE 2575 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_VGR#5
// Offset 68
NOP

// Rung HBW_Return_VGR#6
// Offset 69
NOP

// Rung HBW_Return_VGR#7
// Offset 70
RET

// Rung HBW_Return_VGR#8
// Offset 71
NOP

// End of Code Block HBW_Return_VGR
$LGCEND HBW_Return_VGR

// Beginning of Code Block HBW_MotorsOff
$LGCMOD HBW_MotorsOff

// Rung HBW_MotorsOff#1
// Offset 0
STRN C215
ANDN ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_MotorsOff#2
// Offset 18
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_MotorsOff#3
// Offset 36
STRN C215
AND ST2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
OUT Y48

// Rung HBW_MotorsOff#4
// Offset 54
NOP

// Rung HBW_MotorsOff#5
// Offset 55
NOP

// Rung HBW_MotorsOff#6
// Offset 56
NOP

// Rung HBW_MotorsOff#7
// Offset 57
RET

// End of Code Block HBW_MotorsOff
$LGCEND HBW_MotorsOff

// Beginning of Code Block HBW_ConvTo11
$LGCMOD HBW_ConvTo11

// Rung HBW_ConvTo11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_ConvTo11#2
// Offset 22
NOP

// Rung HBW_ConvTo11#3
// Offset 23
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_ConvTo11#4
// Offset 28
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_ConvTo11#5
// Offset 50
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_ConvTo11#6
// Offset 55
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_ConvTo11#7
// Offset 74
NOP

// Rung HBW_ConvTo11#8
// Offset 75
NOP

// Rung HBW_ConvTo11#9
// Offset 76
RET

// Rung HBW_ConvTo11#10
// Offset 77
NOP

// End of Code Block HBW_ConvTo11
$LGCEND HBW_ConvTo11

// Beginning of Code Block HBW_Return_Top
$LGCMOD HBW_Return_Top

// Rung HBW_Return_Top#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Return_Top#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HBW_Return_Top#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_Top#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_Return_Top#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return_Top#6
// Offset 69
NOP

// Rung HBW_Return_Top#7
// Offset 70
NOP

// Rung HBW_Return_Top#8
// Offset 71
RET

// End of Code Block HBW_Return_Top
$LGCEND HBW_Return_Top

// Beginning of Code Block HBW_MV_11_12
$LGCMOD HBW_MV_11_12

// Rung HBW_MV_11_12#1
// Offset 0
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_MV_11_12#2
// Offset 21
NOP

// Rung HBW_MV_11_12#3
// Offset 22
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_MV_11_12#4
// Offset 44
STRGE 5325 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_MV_11_12#5
// Offset 49
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
OUT Y4

// Rung HBW_MV_11_12#6
// Offset 67
STRGE 5325 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_MV_11_12#7
// Offset 72
NOP

// Rung HBW_MV_11_12#8
// Offset 73
NOP

// Rung HBW_MV_11_12#9
// Offset 74
RET

// Rung HBW_MV_11_12#10
// Offset 75
NOP

// Rung HBW_MV_11_12#11
// Offset 76
NOP

// End of Code Block HBW_MV_11_12
$LGCEND HBW_MV_11_12

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#2
// Offset 3
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#3
// Offset 6
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#4
// Offset 9
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#5
// Offset 12
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// Rung $Main#6
// Offset 15
#BEGIN FMT_COMMENT 
"Hunter Demo Light<br>"
#END

STR ST1
RUN hunt_exp_light

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
SG HBW_Program.S0

// Rung HBW_Program#2
// Offset 2
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#3
// Offset 10
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#4
// Offset 12
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#5
// Offset 14
STR ST1
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#6
// Offset 22
NOP

// Rung HBW_Program#7
// Offset 23
STR C213
JMP HBW_Program.S1

// Rung HBW_Program#8
// Offset 25
SG HBW_Program.S1

// Rung HBW_Program#9
// Offset 27
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#10
// Offset 35
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#11
// Offset 37
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#12
// Offset 39
STR ST1
DUPBOOL
STR C205
ANDN C206
STR C206
ANDN C205
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 500 60
POPBOOL
DUPBOOL
AND C205
OUT Y48
POPBOOL
AND C206
OUT Y49

// Rung HBW_Program#13
// Offset 68
STR ST1
DUPBOOL
STR C207
ANDN C208
STRN C207
AND C208
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
POPBOOL
DUPBOOL
AND C207
OUT Y50
POPBOOL
AND C208
OUT Y51

// Rung HBW_Program#14
// Offset 97
STR ST1
DUPBOOL
STR C209
ANDN C210
STRN C209
AND C210
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
POPBOOL
DUPBOOL
AND C209
OUT Y4
POPBOOL
AND C210
OUT Y5

// Rung HBW_Program#15
// Offset 126
STR ST1
DUPBOOL
STR C211
ANDN C212
STRN C211
AND C212
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
POPBOOL
DUPBOOL
AND C211
OUT Y6
POPBOOL
AND C212
OUT Y7

// Rung HBW_Program#16
// Offset 155
STR C213
JMP HBW_Program.S2

// Rung HBW_Program#17
// Offset 157
SG HBW_Program.S2

// Rung HBW_Program#18
// Offset 159
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#19
// Offset 167
STR X0
OUT $HBW_Encoder_X.ResetLevel

// Rung HBW_Program#20
// Offset 169
STR X3
OUT $HBW_Encoder_Z.ResetLevel

// Rung HBW_Program#21
// Offset 171
STR ST1
CALL HBW_Home 0x1 DST511 "3" "3"

// Rung HBW_Program#22
// Offset 179
STR X0
AND X11
AND X3
JMP HBW_Program.S3

// Rung HBW_Program#23
// Offset 183
STR C212
JMP HBW_Program.S3

// Rung HBW_Program#24
// Offset 185
NOP

// Rung HBW_Program#25
// Offset 186
SG HBW_Program.S3

// Rung HBW_Program#26
// Offset 188
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#27
// Offset 196
STR ST1
CALL HWB_Home_to_11 0x1 DST511 "3" "3"

// Rung HBW_Program#28
// Offset 204
STRN C250
ANDN C251
JMP HBW_Program.S4

// Rung HBW_Program#29
// Offset 207
SG HBW_Program.S4

// Rung HBW_Program#30
// Offset 209
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#31
// Offset 217
STR ST1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#32
// Offset 225
STR X10
ANDN C251
JMP HBW_Program.S5

// Rung HBW_Program#33
// Offset 228
SG HBW_Program.S5

// Rung HBW_Program#34
// Offset 230
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#35
// Offset 238
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#36
// Offset 246
STRN C251
AND C250
JMP HBW_Program.S6

// Rung HBW_Program#37
// Offset 249
SG HBW_Program.S6

// Rung HBW_Program#38
// Offset 251
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#39
// Offset 259
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#40
// Offset 267
STRN X2
JMP HBW_Program.S7

// Rung HBW_Program#41
// Offset 269
SG HBW_Program.S7

// Rung HBW_Program#42
// Offset 271
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#43
// Offset 279
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#44
// Offset 287
STR X11
JMP HBW_Program.S8
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#45
// Offset 296
SG HBW_Program.S8

// Rung HBW_Program#46
// Offset 298
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#47
// Offset 306
STR ST1
CALL HBW_ConvTo11 0x1 DST511 "3" "3"

// Rung HBW_Program#48
// Offset 314
STRN C250
ANDN C251
JMP HBW_Program.S9

// Rung HBW_Program#49
// Offset 317
SG HBW_Program.S9

// Rung HBW_Program#50
// Offset 319
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#51
// Offset 327
STR ST1
CALL HBW_Return_Top 0x1 DST511 "3" "3"

// Rung HBW_Program#52
// Offset 335
STR X10
ANDN C251
JMP HBW_Program.S10

// Rung HBW_Program#53
// Offset 338
SG HBW_Program.S10

// Rung HBW_Program#54
// Offset 340
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#55
// Offset 348
STR ST1
CALL HBW_MV_11_12 0x1 DST511 "3" "3"

// Rung HBW_Program#56
// Offset 356
STRN C250
JMP HBW_Program.S11

// Rung HBW_Program#57
// Offset 358
SG HBW_Program.S11

// Rung HBW_Program#58
// Offset 360
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#59
// Offset 368
STR ST1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#60
// Offset 376
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#61
// Offset 379
SG HBW_Program.S12

// Rung HBW_Program#62
// Offset 381
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#63
// Offset 389
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#64
// Offset 397
STRN C251
AND C250
JMP HBW_Program.S13

// Rung HBW_Program#65
// Offset 400
SG HBW_Program.S13

// Rung HBW_Program#66
// Offset 402
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#67
// Offset 410
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#68
// Offset 418
STRN X2
JMP HBW_Program.S14

// Rung HBW_Program#69
// Offset 420
SG HBW_Program.S14

// Rung HBW_Program#70
// Offset 422
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#71
// Offset 430
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#72
// Offset 438
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#73
// Offset 447
SG HBW_Program.S15

// Rung HBW_Program#74
// Offset 449
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#75
// Offset 457
STRN ST1
CALL HBW_ConvTo11 0x1 DST511 "3" "3"

// Rung HBW_Program#76
// Offset 465
STRN C250
ANDN C251
JMP HBW_Program.S16

// Rung HBW_Program#77
// Offset 468
STR C213
JMP HBW_Program.S16

// Rung HBW_Program#78
// Offset 470
SG HBW_Program.S16

// Rung HBW_Program#79
// Offset 472
NOP

// Rung HBW_Program#80
// Offset 473
STR C213
JMP HBW_Program.S1

// Rung HBW_Program#81
// Offset 475
NOP

// Rung HBW_Program#82
// Offset 476
NOP

// Rung HBW_Program#83
// Offset 477
NOP

// Rung HBW_Program#84
// Offset 478
NOP

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#2
// Offset 8
STR ST1
DUPBOOL
STR C410
ANDN C409
STRN C410
AND C409
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
POPBOOL
DUPBOOL
AND C410
OUT Y27
POPBOOL
AND C409
OUT Y26

// Rung VGR_Program#3
// Offset 37
STR ST1
DUPBOOL
STR C408
ANDN C411
STRN C408
AND C411
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
POPBOOL
DUPBOOL
AND C408
OUT Y24
POPBOOL
AND C411
OUT Y25

// Rung VGR_Program#4
// Offset 66
STR ST1
DUPBOOL
STR C406
ANDN C407
STRN C406
AND C407
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
POPBOOL
DUPBOOL
AND C406
OUT Y23
POPBOOL
AND C407
OUT Y22

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STR C813
OUT Y18

// Rung MPO_Program#4
// Offset 12
STR C810
OUT Y17

// Rung MPO_Program#5
// Offset 14
STR C811
OUT Y52

// Rung MPO_Program#6
// Offset 16
STR ST1
DUPBOOL
STR C804
ANDN C805
STR C805
ANDN C804
ORSTR
ANDSTR
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 100
POPBOOL
DUPBOOL
AND C804
OUT Y53
POPBOOL
AND C805
OUT Y15

// Rung MPO_Program#7
// Offset 45
STR C814
OUT Y19

// Rung MPO_Program#8
// Offset 47
STR C809
JMP MPO_Program.S2

// Rung MPO_Program#9
// Offset 49
SG MPO_Program.S1

// Rung MPO_Program#10
// Offset 51
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#11
// Offset 59
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#12
// Offset 61
STRN X24
SET Y17

// Rung MPO_Program#13
// Offset 63
STR Y17
OUT Y20
ANDN X17
ONDTMR T0 1000 Y44

// Rung MPO_Program#14
// Offset 69
SG MPO_Program.S2

// Rung MPO_Program#15
// Offset 71
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#16
// Offset 79
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#17
// Offset 81
STRN X19
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y53

// Rung MPO_Program#18
// Offset 97
STR X19
JMP MPO_Program.S3

// Rung MPO_Program#19
// Offset 99
SG MPO_Program.S3

// Rung MPO_Program#20
// Offset 101
STR ST1
SET Y17

// Rung MPO_Program#21
// Offset 103
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#22
// Offset 111
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#23
// Offset 113
STR X19
SET Y19

// Rung MPO_Program#24
// Offset 115
STR X19
ONDTMR T100 2000 Y18

// Rung MPO_Program#25
// Offset 119
STR T100.DN
JMP MPO_Program.S4

// Rung MPO_Program#26
// Offset 121
SG MPO_Program.S4

// Rung MPO_Program#27
// Offset 123
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#28
// Offset 131
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#29
// Offset 133
STR X19
RST Y19

// Rung MPO_Program#30
// Offset 135
STRN X16
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y15

// Rung MPO_Program#31
// Offset 151
STR X16
JMP MPO_Program.S5

// Rung MPO_Program#32
// Offset 153
SG MPO_Program.S5

// Rung MPO_Program#33
// Offset 155
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#34
// Offset 163
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#35
// Offset 165
STR X16
SET Y19

// Rung MPO_Program#36
// Offset 167
STR Y19
ONDTMR T101 2000 C815

// Rung MPO_Program#37
// Offset 171
STR C815
RST Y18

// Rung MPO_Program#38
// Offset 173
STRN Y18
JMP MPO_Program.S6

// Rung MPO_Program#39
// Offset 175
SG MPO_Program.S6

// Rung MPO_Program#40
// Offset 177
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#41
// Offset 185
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#42
// Offset 187
STR X16
RST Y19

// Rung MPO_Program#43
// Offset 189
STRN Y19
ONDTMR T102 1000 C818

// Rung MPO_Program#44
// Offset 193
STR C818
JMP MPO_Program.S7

// Rung MPO_Program#45
// Offset 195
SG MPO_Program.S7

// Rung MPO_Program#46
// Offset 197
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#47
// Offset 205
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#48
// Offset 207
STRN X15
OUT Y45

// Rung MPO_Program#49
// Offset 209
STR X15
TMRDOWN T102 1000
OUT Y43

// Rung MPO_Program#50
// Offset 213
STR T102.Done
JMP MPO_Program.S8

// Rung MPO_Program#51
// Offset 215
SG MPO_Program.S8

// Rung MPO_Program#52
// Offset 217
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#53
// Offset 225
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#54
// Offset 227
STRN X13
OUT Y45

// Rung MPO_Program#55
// Offset 229
STR X13
TMRDOWN T103 1000
OUT Y21

// Rung MPO_Program#56
// Offset 233
STR T103.Done
JMP MPO_Program.S9

// Rung MPO_Program#57
// Offset 235
SG MPO_Program.S9

// Rung MPO_Program#58
// Offset 237
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#59
// Offset 245
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#60
// Offset 247
STR ST1
OUT Y47

// Rung MPO_Program#61
// Offset 249
STRN X12
ONDTMR T104 1000 Y46

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"SLD Program"
#END

STR ST2
COPY 0x1 "4 0x0 MC404 Y40 1"

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STR C1200
OUT Y39

// Rung SSC_Program#4
// Offset 12
STR C1201
OUT Y40

// Rung SSC_Program#5
// Offset 14
STR C1202
OUT Y41

// Rung SSC_Program#6
// Offset 16
STR C1215
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y35

// Rung SSC_Program#7
// Offset 32
STR C1203
JMP SSC_Program.S1

// Rung SSC_Program#8
// Offset 34
STR C1216
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y36

// Rung SSC_Program#9
// Offset 50
STR C1217
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 R0
OUT Y37

// Rung SSC_Program#10
// Offset 66
STR C1218
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 R0
OUT Y38

// Rung SSC_Program#11
// Offset 82
STRPD C1219
SET C1221

// Rung SSC_Program#12
// Offset 85
STRPD X47
ANDPDPF
STR CT150.Done
CNT CT150 100

// Rung SSC_Program#13
// Offset 91
STRN C1220
ANDN CT150.Done
OUT Y38
RST C1221

// Rung SSC_Program#14
// Offset 95
SG SSC_Program.S1

// Rung SSC_Program#15
// Offset 97
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#16
// Offset 105
STRN C1203
JMP SSC_Program.S0

// End of Code Block SSC_Program
$PGMEND SSC_Program

// Beginning of Code Block hunt_exp_light
$PRGRM hunt_exp_light

// Rung hunt_exp_light#1
// Offset 0
STR ST2
COPY 0x1 "4 0x0 MC402 Y39 1"

// End of Code Block hunt_exp_light
$PGMEND hunt_exp_light

// Beginning of Code Block HWB_PickUp
$TSK HWB_PickUp

// Rung HWB_PickUp#1
// Offset 0
NOP

// End of Code Block HWB_PickUp
$TSKEND HWB_PickUp

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"C1","copy","",""
"C11","C11_Interlock","","Used to delay logic by one scan"
"C12","C12_Interlock_2","","Used to delay logic by one scan"
"C20","HBW_Has_Pallet","","True when carrying a pallet"
"C51","X_Direction","","True: Left False: Right"
"C52","Z_Direction","","True: Down False: Up"
"C80","Conveyor_Timeout","","Bit high when Conveyor Timeout timer active"
"C90","HBW_XY_PID_EN","","Enables PID control in HBW_Move_XZ"
"C101","HBW_T1_Send","Modbus MC101","Task to deliver a pallet to conveyor"
"C102","HBW_T2_Receive","Modbus MC102","Task to pickup a pallet from conveyor"
"C103","HBW_T3_Reset","Modbus MC103","Reinitialize and home all axises"
"C104","HBW_T4_Manual","Modbus MC104","Switch to manual mode"
"C110","HBW_Move_X_L","Modbus MC110","Move Horizontal Axis towards bay"
"C111","HBW_Move_X_R","Modbus MC111","Move Horizontal Axis towards Conveyor"
"C112","HBW_Move_Y_In","Modbus MC112","Move Cantilever In"
"C113","HBW_Move_Y_Out","Modbus MC113","Move Cantilever Out"
"C114","HBW_Move_Z_Up","Modbus MC114","Move Vertical Axis Up"
"C115","HBW_Move_Z_Down","Modbus MC115","Move Vertical Axis Down"
"C116","HBW_Conveyor_In","Modbus MC116","Move Conveyor In"
"C117","HBW_Conveyor_Out","Modbus MC117","Move Conveyor Out"
"C130","HBW_Status_Ready","Modbus MC130","On when ready for a task"
"C133","HBW_Mov_Conveyor","Modbus MC133","Status Conveyor Moving"
"C134","HBW_Moving_X","Modbus MC134","Status GantryMovingX"
"C135","HBW_Moving_Y","Modbus MC135","Status GantryMovingY"
"C136","HBW_Moving_Z","Modbus MC136","Status GantryMovingZ"
"C138","HBW_Status_Y_Pos","Modbus MC138","Current Y position"
"C141","HBW_Target_Y_Pos","Modbus MC141","Target Y position"
"C150","HBW_MoveComplete","","HBW_Move_XZ completion interlock."
"C180","HBW_Fault","Modbus MC180","Status in Fault State"
"C182","Fault_X_Target","","Active when X target out of range"
"C183","Fault_Z_target","","Active when Z target out of range"
"C400","VGR_T0","",""
"C410","VGR_T1","",""
"C420","VGR_T2","",""
"C430","VGR_T3","",""
"C440","VGR_T4","",""
"C500","VGR_Man_Control","",""
"C799","VGR_RESET","",""
"V105","HBW_Task_X_slot","Modbus MHR105","Value for slot X coord"
"V106","HBW_Task_Y_slot","Modbus MHR106","Value for slot y coord"
"V118","HBW_PWM_Set_X","Modbus MHR118","Set Horizontal Axis PWM Duty Cycle %"
"V119","HBW_PWM_Set_Y","Modbus MHR119","Set Cantilever Axis PWM Duty Cycle %"
"V120","HBW_PWM_Set_Z","Modbus MHR120","Set Vertical Axis PWM Duty cycle %"
"V131","HBW_Cur_Progress","Modbus MHR131","0 to 100 percent job completion"
"V132","HBW_Cur_Stage","Modbus MHR132","Current stage number"
"V137","HBW_Status_X_Pos","Modbus MHR137","Current X encoder position"
"V139","HBW_Status_Z_Pos","Modbus MHR139","Current Z encoder position"
"V140","HBW_Target_X_Pos","Modbus MHR140","Target X encoder position"
"V142","HBW_Target_Z_Pos","Modbus MHR142","Target Z encoder position"
"V181","HBW_Fault_code","Modbus MHR181","Current Fault code"
"V801","VGR_Fault_Code","",""
"N810","VGR_Rot_Target","",""
"N811","VGR_X_Target","",""
"N812","VGR_Y_Target","",""
"D0","MC","",""
"D1","Feeder_Extend","",""
"D140","X_Start_Position","","Distance to target"
"D142","Y_Start_Position","","Distance to target"
"D143","HBW_PWM_Cur_X","","PWM value for X for XZ movement task"
"D144","HBW_PWM_Cur_Z","","PWM value for Z for XZ movement task"
"T3","T_HBW_S6","",""
"T4","T_Conveyor_Timer","","Used to detect conveyor faults"
"MPO_Program.S2","Vaccum_MO","",""
"MPO_Program.S3","Vaccum","",""
"MPO_Program.S4","Vacumm_MO","",""
"MPO_Program.S5","Vaccum_Load","",""
"US0","_CP_Strogram_A","","CP_State_Program"
"US1","_VGR_Movement","","VGR_Movement"
"US2","_SSC_Check_InOut","","SSC_Check_InOut"
"UB0","_VGR_MisScan_A","","VGR_Movement.Done ThisScan"
#END

