// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\brent\Desktop\factory\ui_cda_mini_factory_fa23\fa23_plc.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
4660190bdd917f74f162c05df90268e269fe122c60b2b1894852fca371bb7dfc2088738d99dd8344
de9b983560dba9835516e5686b3892d239abb7fb34f896cadb171c98811616c835917f5b1ee3b0d1
817d24ad05f81cc8d401aeed929450854b6eecb2f09133f780c75efe272c741c5987ac5e1fcb9fcb
e1f599c10dc00b262f0a7006c9afaa4b23d1845086970f09de0dd1b9033aee08f2edf4af5aa385e6
c932743e893f9b3edd2e9a8f08702cd2c223cebb7059587fc8a55b1ae5e99d67e5f30d207046b7dc
adf2592dbc7192506dbfdfdd0cb8e79ced01246f511fe066dd298156da7409f2cdb7740e52a57d77
bf26b4079d89a39db1cec400c2613e7636480139f21ffcbee23d68d966a832b4890ce01be1bc1ed7
aceda1d2a3ec731d2d5aea07aa433e86ee58bd2d6e8fa650ac4963907460ffd63b3e01c29dede1e8
66420db32b5f0708a053752c02695294ac0533b2e46a4f6581fe9bf0baa160455aef2233c9da992a
f532d38e7a170eae59ec4cd35995aceb17de23a2dbfacc756f9f9b66100aebbeefe3910ecee0fafe
a35cc7f5eff07685635fce6061725ffa378c1eba4f2315f1d68fca076c67d64473650954cfabf93a
f91268c2488684b994a2020466117435c97c950ff6e8b0525834b93fe784b659350da53b4bdc3ac2
4eb020e60eb283c7527be790594756ce5b5faa0df96f828f47bf1d800890b1f57bc67246dde51251
aaeb6ac3c7a515f6a5ff5685fdf18a5161791e74724d863315f7ade6820d4db989fb2986130be6a2
48fd96a1db5b70bc7d5601348ab7d00d79efbda6903882ddb49dd1abfc3ee3ffacf7bf54cafc1e49
bd3d57897079eccb7b18a8c607903fd7426aabcb798bc47fde02f747855c8871a91abdf35e74be1f
a778f1e3c7339b9ec4be512e524120fa33adff2084d794227fdbf61726eb543353ea6a03c54efda1
9a715ddd81e997c7d56b7e547edb1bec69e66ada86e1b3878d788c60b0257841fa3e3d5ac5bd26cb
ff0ddec02bfde3793208bbf3f3972bd3cf5c0a8162a8b526e2e6849ae9f6dbe0d28dbb8bce13266e
d6fd730638dd0e303dc90d4f5a36cb601916107f3966142be5140a248ff9ca1bb82215d57f5b45c9
1704cc5553f345a42071c8b2fb0bb98206bc582f90b2022b412a935f2c436a5f753b6247347ece42
07d2391e8dac1bf21220d82f8833ea34c6b64fe6e1d2eda00588a16d8df2934b35d8011b9044327d
743d0ee16f6338e94128189455176fd5f130ec8b4742e5a5f470ff1ea897a26f595def2817df26ed
ff9d376c611d81fd9bbb2a332ec8ef3171d5ba4283724b1878730ce7c65fdb5f52767b901a59a708
e5ed91a10de4e9f13156abe4a9d0c352c16267c03a6d3db84aafc05912f0d45b0ebefdd8a3997cde
c7ec59242914af0739340cc953f50ca15db097d9fbbba50e7fe838c649bb4addfa88d839cd65e7c6
ae40d150ec61943e97138e5a305dddec742afa0a743b24b16b5a1ce6de8f6b041c596504cf8ebe7f
f43f8e521403a9db873879c6f166a484c8f6787fdbf9bee683717f7221519515afb0cbc3b2891e4e
85179b8ea5a145a6757a20a4c712eb690da254f210d438eea4811a892156a5d10166dc6121a44163
5b98f35d569a2fa7684ee802383b3763a6fd4a556e66bd64fd704c0cd8039e8c65e147fc2198cfd9
709cdf89bf15f42e5e61e24d68151614410b0736e4945b1f71a81aec634842a314ce6ca094a49ee0
0e78833627ba8749f0a3ef3e4ac5a3078062a324105b29c4d063fcdfe0a0593691dd3e9f6a36a993
225c7959b727b3e51f9f0dbe9fd10decaf022343aa58bda88aaa44d480d62cac3e8dac228ec243b4
9dbf95ea8e66df028164560ad6b11e49a9263558ed5d52ee84ff3157627e72f8d746161c7f3ce867
746f9d96092d171747aa7e843b99f3b3de0bcfb9c443eb1ad3d01d863a84cfb4932feb279327f587
0263c7b39e9883fe794e580e6e3eae7bdf93a0dcc3a26c4d0f15840db80ca8669a743b1be07dcd59
8d961d3a7878a4a798c44dc8d322a6259ffe86b8597195338314c334a7a3381242596f9a584ec704
8f0914e65799a198987ff02e59fffa6674cb58ba4a2aaf60e9b9e05d3c181ea7a7606a1ba5c0ab0e
aa3c3d4c1328a0cecc66a2105326017572dd600656a4cfd9e9a9fbfd213d5d4d1825e4a31a6e69f6
3d4abb2e136d6b203c5233fbc1f05265e8ad8e2db035103b3765251b7da4aefee8def72a014d8275
56b904dbb0cfdf4b79b56bf80c2ba35c58d84c7f5741375c38b0f55a46e2e05740d6b91f9da802d8
56f4f51559ac9927e4e3dd39901dd21965dacea1a6187fe533e4578fd52a9f75bf1f116581c6706c
105e93d55c837d5c9882295f15f6f84ef4e1ef9589f938d1b87ed4f9c0c48b131d61cf4409b71c51
15864b9214f1cd4dcf3f0ce7cb1e91cb55fae75add7254a38cdfd61c621a9c75638fe7e2b3d733a9
e4bd988be235323846c5950a43f4f0fda3c3bbc03211060d57614b7d61f5b906cf62bf72fbf47824
cb7171e1511a0c296ce58b75600ce99f25da1e8331ecbe39f244cd3badfe48f9f3c7d1e7ce537e72
bb4c6f803df398feee7a4824f94abd9a126dc25355245b0d9c5aad4f6cf3e3a1d732e87292f5dfcf
8545c5e5d669d8a544ac034fe33e881d84b9abd6603e26dc427a124f86156f763fad4b9203dcf33a
ae10fde294767b4e4eb357ff7fd77e3cbd6b56f156f50a76b57c8e4e17ed641461d97317aacbc8d3
904405c514f8ce3ffb5d3bede65b3097c678aa9592601f2762b635efb02ab1243b61057594d26cd5
aa1dd58facaa5771118b7a3b4a9c6618e36d88b0d310af8381a2efef4dd09fabfe8be15ea606c53e
eeadbd6b55ea10c2e1dbd9cc566b1732a0889c2180e3acd79af28df563e6ab6724ce9530fd315a76
0c26921c3b5d9ee5822d9bf71c1c31fbd41e8656fe47061fa580192477feeb9f06ad6f5b001b2558
c9dea4560d2613e39b2b590df993d74db74bd97e2c96fcae9d0629cd5dd87a39310a16ac346e8061
39222d4cdb6ca3f62c0e0b6f35e5b49ac7b84288fc3b13426125e77b7bf83bac59b4c744343e5494
3fe3e81bca1869d4ac35506f8d9dbf0e5ad805ea171b6a8612de05bbcc7314bf712964d9a5f0b97c
a84b716c9fd5a1f999aaf6daf4d66901d9695ea51d173ac420e33f332c568deff5100f703697f63e
c9ff2f60bbe149595ad4e0c8773c353232fc886be9e0cece148cf7bc7f0ea3a5ce19a9b0881dee0d
6a4abb2f460396a4e1e1070a67c2030d61b4a44ee7a14d4ef1418d3f6f995cc059c92a4a78309231
f94145631ad7754b50003f571e045e9525ce58551099f61c05372e8dd02b51eac21f87273529ca3e
800cd842ed11fa715e99a009350f2a7429cc94b4dd627102b4d3b5a7a4d66676641f1c4ce162a97a
f8621ee4cd562d47cfdcdfffc09e3dfcf2965cd3e062477890c822568126ec811c097bcb24478219
ee38f3a020ba270cfd5106d255c9745773c7b2fbc593b27e134cfa5a464c8f46bedb5503429d8f4b
725b0319e14464516f023ebcea71caa52dfc5ccc0942ee65ac54755bfe5baedd082c0689fd2cf2e1
0f713a1d35f40317dad9f21158344609cee5e0825ae10f1424226a185fc2421858d19a46f287ce10
477610836f6bc6063091f617b6cac5369800a3b46f151e963484b52644262c33fb2747ee2918c073
5b6dae679fca44f2b36c7eba829ba21284cfd90428e95266529a1169e0c3b2bb64f50c88c34e6551
9f183d0fe7b752535d1c36714fe48d938e1ada2963e1e551119697ce47d49ba1060d33291801af79
d39e5b2c519d0f7d4abff9a875899a559cb4a9dbf9abc7cf379283de6df55641aad07f51194f1003
b7e7b8902fe470df055fd6f3e6656f54e00ab98abf0dc61074aad08144334e7a681c2edb9d0cd979
c1a88b458e3e892b2e9f09c2c72e25140da355ff8a02a010b1a387e7edf27aaed470b7865efc3cde
a42787a24974b7e8f5ceed47dc92b7cec9fc1ed503674fd54e12cf297ee3a64e6f8e8dd72eb54f29
7e9b50198bb6e83da51f1a14998f6c5b47e7904f973ca1b8f34229451a57029a877d430b82cb5916
2c8b80fe65fd5e49f288cd45e7577665112c761f8daaedb39aaeb5ed961fbe60941edf14372cc03c
5a287fba7d8b3fba5a7a4ffa57cdd6128d2d69a27017b1666a8dbf506daf10db576c326c96b8aaa3
ca47df01eb14cd062a33321199b601b8dfc0c584a9410471dd7e4a7b7264026e8c8ffd1d0d61523c
29956fd45406db68a1453f1e5b130300248f54643031618ae53bbbfb5fece6d4d46060e536168879
5a5362566de14131c75f6baa1dc1a5cce088de6340da28088c2771a05b9ca9b11589b18294f98da3
963932fa1d3c7e63b0cfcdd45633ab1a2f66580e3f8d0a68f6e4b008c7f9b79ae3fcc91f770b89cf
d5f830be33eb220a47523843027a2460ef1a6b3e041a530752caa82e4b8b3a0f46e83d1a1196a6c7
d2d9faae49fc5e3c81d657e97e60ee1e4d5b3efb385705863f4855248c973521b7a97be5ce357e31
f7c8eadfaa602b5546b65e52e5f9d4da2e7b305d553584a4bc599b1289c42edf458a2dd0d93efcc8
0c7c0fa9374976bc43247eba739f48e91fca3e46ef3a170a790cfaef202147a373e669433cb7738f
77c64487508fba3a15e578c5f2d3daedf4d4a4e7a900a715b75f8c1cad4443948d264c29522a37ed
76131e7c5d0f0aa8f8026844a998de9e2976468230d552ae4e8edd86cc469932bac214883e7fa5f9
714452484c8de0ec428d9de26a019c3ce3eb5d1cfed68df0f3cb3aaf583120fb0f40370828fc836d
a3c5c524ad0be0383f3d0779a655e639003691638654b9996c6b91ee9cc07b0368b41a0e4be4ceb7
27cd84386fee3c8087e62fa28becda39ce1d17362ba31560b305757001126d3984e57f83f3ba172d
8e5c1ac40c73af99213ef08b643588e97c80f0b9e2bf3b349ee6bf2aa3da25ad29e816683ea7e4e9
87a263ae9abe18d4ec64adb3e03263668f36ff774f1be04a0f67c564ad9c7d979b8cfb1d003f36a7
8d6754c3d5cdef828a8a45414815c428683070f130cc0cfd11b3b625a112af0c413ba59c7b9bfe93
3cd126e8a45e2548a0ae655b9bac54d57b26f528cc2e2ddeb6235c1d50d5dd83a404af461567e48a
bdd029e4fb46e944c47f0f52893223ec8731222933cd08d9f4a738307a5de155189cf0bb97b914f7
c4e8d35d85daf36644b929abdac7820139866df4dced402e4ef8a07a301fe4ca0e4f3dfa414eda50
492c5364d98385e8e38f4e64b59f6cd18336f1d1ec5cf0938dee6c28371025eb8ca35d82974a6f3b
5e1779947830dc39ec6277505ceec8bc36bca28a9323797a0666be224552f87756041add9f877acc
b2eb04400e99b5948097ddb02f6182043d751df0d04266e73635d06c44fd88e9aed799881f6d40d3
024f0a5efa1d11eb2bee334d4d15005936495dcff916477491a8b7d234cdd0c07506dbe02dd3e837
b3b63dd47db9f8f76b6da76ffa66e5dd125f48dd57b2ecf6ac4bfe52e9ac6637d7d053f2ad7127ba
9d24b4abb2295db053d775cb43670ddca0b27defe1454be8f55243a5552cace94689d8a5caa4b0e1
7d114e8687c1bcf3ec88fbcb06ce36a166fdf81bb1ca7855bbc6ee4d7533b10670f1fd931411338d
2767b325701712518d755d2523c0ac7aa9d8c2b6e1d7fb8c175756c9dcb73f733a4f2ea1da0a15e8
72ce59b35eedbd9cc04f482ea1dea1d6f189a99baf837283f0a52299c7d25d5b2b586e6e8ff2bf23
a3cb5f60cad85f4584a995e34cf1e9236ab43b07c4db44591bfe01f0a400eb3f9df4ba0314aecd42
91212f8561b506379afda4ceda59acac5e4472f6fc0bbb9a234175e2f395a0ef40243465992cadee
b9f3366d3a7e0c56312e09a5c6721cade968d7e801507eb90affa6d40149f20bf4c2f4d32b334a72
aa1fd6be12629dba63c18248470b4f2a1c42edd517d9910156d0ba4ab97b460f5c82358e8ff1c83a
72c0fa6e83d2672874524a28eeab3f4e07eb1e511aded643a98d424d16ed94b06293cd4fd6fed8a5
675f5399fa876c868e46fc6f0e1dfbdd31aac6968952471c1e211b6256bacddf68fba2dee86620b1
6e1c7b779f0b12fc99d39c03c38a4438a76ee3677418ea9752742bb67fb793885db17443a15ce8a5
60ca27554fbae1603e7da7a20b0b1b99d4918d95adf93512cf0359e87fcbe1fdce89c24feb640676
0b336834841388753fbcf6bf1164a4bd1e4b407d2fb2a292b2980028ab277c63b6fa536bf07cb2e2
3793f5a8233b5faf50a33d47be0b4915db87c86e523fd06fca255509fda983c0f2b69104a4823ac9
777af54c1dc4ee9b3f40bfa1476022efbb8c6d6bcd908b8a585fc5762fa7af51e12861dd9e9cfd6f
8dded48514d45aaa661bf118ff9784d801d12243b20e7f4c001bfe123e2cf895984ad420d3ed9f59
c229edfdff1f0965787089c316ba43d5973c5905bcfa5274c23819e8d833b3ed2225f65f499bf044
480cae7532583fdc7d88deaf073c3d4eab7f7b64350909ac84eb787ef096182a9a57642f3bc839be
11fe9e16dddbb1a79611b33f2bf4095ac18f5da1d0306bc2bc95b039d724b60ebd44517654f5577f
01133675e0ce53d3bec4663421edc945d4857a29d6a265448c59a37f849e9b2cec80f31674cc18ab
9b326b842bc76d8e63727bb6cc644f6d653087fda36633df7c8f77329d65ddac658037ff22141ba6
d69d1f573a960a471ef7b891c080479640932828475818a8516af718624b12294c9b640a74583597
7f4bd544788b55e3737c1b691b1706034c145222eedfb1382797be302aa1794b184732af90e11e30
a9d382df2f4b1cff264b000ce5f1bef1577ca6de4456ba0c87ca6b0b995af3818c476c2a7f188570
866aeb7a30cf9c456accf809fb77c08fb9046b55b01b066dcf1b6e4300dc2c43d57aed66ae4f0d91
2d599425e424f570877cb3d6251236f0dd0b8be58ab5a6b8cdf3d2953c25e9ac57929b04f75e3184
e927c46e5f9c4409608258819328e8b17d7386f6f63d78e63101f249f66fc43d995bb79dcb507a2c
7b320abe9c320021a6005bb0274a055d6584275e5f38589b6306f64dc362104db1c0a55cdbf92926
14c57512b1f313d32a42b31e988c0ccecaacb74c9107527033ed2ab5965c43c8f0cdd41a13ff2927
8210853b132503ca9903f94d524b58e88f18ec904b8df64070e608010601fc290a8baab6ceceeee0
c6bc5b75612e52804c8435792cf37bb48589b292ffb5ca7fefeadc198753154f23e052b92320beba
6d8400d2f4094bd36dc0600d59f3554f7809ca7bed26d9ef3e27cfb2afd5d6b22ebdd3c2d65c55cd
633643b246b5dbc05c28d914150f85b69621bb5bd387762da86eee00c3a789187930064972d8f18e
510fbe610d7f3c91075d3b914e85ee5c591f266c2669e0921fcb69aba3d65e677df30d60d933302b
f3eb1219f673881c6249bed25463708137beaf57e113bdb5c8a2758d0aad48d0dfa867a9abba5dd3
43695a70462e3b558a128a372514daea5ff1733c97f4ea9a7a3d7f35c9171fc14a211ab5334b3037
e16ea3edc65bcd0cdf84c96d2576e09ccc964bbc007f84936261e201170631b9c7f73d5fe5304abb
b189795d648aeaa359bc85dc475c9644edb3abdf285904f9f6aad77a0189f5ce2001de86578492c6
1755f699eab62c3dae74801251ed24b5e0380d6ae55b52c9302c5bc95258308cfffc3054ac35d0ef
902f152319cc076fa1196d0dbad14521ef4acf17977dec9e825908d584eb4f3401b45d192c6b0e19
67b55407dea23bc0664d57364d95f766d9f79dc1507f5558bfda9090c06fc51c056db57d6dc9931e
40f80491dac4260728a3463cf54b218f788a55f3f6d62d50a7ff0c7caf1e5b852fd2dac52ecd8224
5081f525692a568d5e8998840e3b600f5d012d0615810b7a3aa15ec52d5823dfdc77ceb14ca600c5
2f75dfc0a2f58f3d8bacc4ab9dccbf27b00f5f04876c66eb7563a006087fedca0ae8f56a77ce4452
423cf1ecb99a7bd12d08d30f68aaa81c00938b45c0a3192fb322a495f0a16bff09a8ef753b549870
ee9d4d255a5007c462adc9f387682db63932748f300415ea9f0012a64a8bc7bcbf5cac40859ecfa3
840760a39c1f16ca93b4f0dfd1a2878f212de5ce747b121042a8a77905aa0d389d142b1ae4a64589
d274f6e040dbe94fa5287f0de2489239f9ab9a93c883e86b9144a4c0357e9fbb88737d9acbbde0d9
7aeab91fb91face6fc3d55974afabaa77909b7c7258d193ac3f8fdeb83ac68b4471e67b86d4a9223
3354bc1afe411e62e663e692d04151ef3afe4c6a8937a5bfafd7bffb4d0fbca0288e428dffaae890
f4a193e966075460f9f1491d663ae895b0b70135abb73b9c5deab9714b5ba8a44e80b73ea94ce853
3e9b9ccc58ea2fe7ec06e9b5b4a155f572705672138a969ca90037171c51143b66f94d995c0067f7
75f94160da06798c3cff33ba44549f3d0273952447a553372eb30c0ab0f138f1793c9678d50e32c8
c14dab615b788cff51f0463f75f17df6d9fd9b0a3e23d8b43ae63474b35bbf8c390dffc97a6c45b2
67f0f3618b663a31de49e8436f3a5cdaffdb68998bc5a0c2cac433b736d89cfb48f209972029f151
6056bc2a6b226f4d7be78f91b12cf879a911add4f65033c589c11bba68e38b25771d99cc4f38c939
8eadc267b3b5a0c7c0337b740ca620dea61bcda3daed3ed927a794c670b4fb749a1b2b1d383b2054
ed840547cf3fef58fe75a9c5faa4ae002509cacae2d6e041ce407bfd91e558db84b0d09439995753
18a4574e36bf2840113fb741f8c267b88513fa6992dc7b10f673d0a9f8a359a1c317f9160551a685
35a9cf29bbfb800e057d4a4dd4e91451a5e2cd50a7e4757daf624dcc17aafaf64265462e60a9fadb
9a32c36c7960f8f56adcf7c22df0477eb02237704b4e95e6a32833334d09650276ba296a2f3fea23
46a2df0c87658fa9a6176687ebbf6d779da62a9e1bb385896e43c76d0efc24e93628b6fb3890f09f
33873a1c443e88e84065a4f177959563f1594ee362d4015ef0c1a61f9b8c08d1393a1f6c72102f95
43ca8a26a39f99706c6aff7ad5b0dbf3bd1391f8a6fa256c5a2dd4420eca667e4e0e7cd9770b80ba
c0b76641aa8fbb4616a1e8e6fe506fd8998a6320c0942f1d236006bfaabab97b3eb3db5445e6a4fc
556c96e6b7ef6907d07ff9576fa38466de84b33e0ee701fe588888ea650ba5e352767ddd907e1ce5
4b917025bf77ec8f7f123315569a6fd06d13c254d432deebd2064afa85edb9f034ece8e30d12aefa
9a9804ea4376305204adaa3250e622b53c900aa1c030d36e82d95531a221abd0423198517304172b
ee4dbf49287ae6401d85b26bb3187dd9c392066fb7a6b1bf77978b00166550a63b5957fbe0b851f8
859b06127ec4447ea74428b5b634fabf4dd9912b0b72e7faeba1d727bf3f2af4cdaa39a2b85467fb
7802ef0cc2040d137619c7723fcda322e61b642168691a9379b15027b3ee66637f16eb29670e3201
7c63f59201bc4760e12ef40966c8f04caf44f2c6fb7836773ea03b86a42c1aabff10e2333bd2e05b
f0b35cb152a14d9f9f8ce011b453e2511ae63c87d198d8ecbcd8b6d81dd43bd98498e154507f886d
990a9481bcb21c4a7ab3b8cdc07b4b20db657f58eb5f4a9a3f9be66cf5253985a88902558cf3323a
813ecc40308301f00a6552e0a77bfc493babfed80bc1229c04172a5180adcb4921fe23dce36141aa
f9ab14a22c515e6f2c08aeffc92b460e770079cac0d5846a4f4b299ad7c98a721244768b13848c44
398e31cd41601650b9cab16939c9cf47fc21e682cba64bed3d7f40fd8479ce300150b7ddd84ab64f
c898d83191925b4f9a1a891fcf032a2fa27a822cffd10a46463fc1cfd670167aa9f2216d3f5334e7
b1e2a1a5ace0f491e644dd9f6d6b65defeb629102a72dab1c9c46fb7accc1607c51d6ae9aa2471e5
e65bf64fc72ce735968284a5e56cd8fcf098c9681d7da28cf5bbdb360a6000032ae3c8898e2beb25
dad799ce047706350d2c042327c3ec24e9f4277132724611f580cacb200631e9e1efe440c6c353c2
542ace39d6690f3ff69184bee8e2cbe3f963c0479e76da4631d772458499dd095800782f9702f6e1
b5474f0231d2c6b454fdf0a2e33b8230ead2acec780af2b53fa2f11f7304f6971442fa57c8f5f342
37ab8634613028c657fda43a9ef254521607a99854636408c60752e7d5c9f0c2fcf529abbe94cb22
d318d99787414d13e58a8b140fa41d9301456aed4a83e19186096917acadb5a9d4931a364ea013c2
a0e38ffda8acd15e9098c19576666d7eef98c8fc05c27454f3244ebc14b270307eb582e708c39747
a486f35c6d6843c1b5675e024c387faf082e89dacb2610fcacef02e5b6d7dce58b733d1b14c2d287
003bca285b2231dd4b42979a3120bfe0641fb22f3656fc6da65335ddb63db952b26195f4770937ca
a426e628134c181b65d391ae6b89e6bf62d12c9a5fce2c9ada8bbb333b7c81af071fe1525ff80998
68f2cf1b4fa25d4dc6cede4ba508eb7ea28fc6aa9be58064c744e9171aee03e45aa63c66e16cf45b
bb380b19f25855d9d613e81bbb1e4a811b87dfe827758150b88d2b45d4022e6b77da836c6c002179
3bf108e5a44dfea9bbeac421ebd1b1745463948bb4c907f0fead79313e0d478185d9dd9b9d18f841
0f6aea90375eddb30e63ddb54d95aedcea69bae3e24d4affc4b0bee58ca98031ce6d9a2f564f3d1b
f672b83a2e5390de947fb8818d8f364bae3df7c92a66af5e57832afc175622d81cf80fad64b73164
4a9e1a5cd1d07344e2de77bbbd8a65aa4211c8015ba90949b7440c48c77c709903549599e5ada6a0
bd90faa3f7825ddbd89f9dcc02d4f9c63ca2f8ec738210b86efb8146a5e951b5ad5f43f96e700e36
384cab661cee4d2323ffd097d6379ab7e0c4012b0587a201246cdec357ae34e8df078f39cc6754b0
b4ed1015f6a9feb6f2b20ebcdca1bfec99c3d2a5c5a798d07ad70421240f55362e4c6ff9935d7588
8c9402914b7cae9507d877a6cd3a76ae792e28c70325b6194dffcf6c66a90d1eaf8be0bd5ca131ed
428692577e282c3dc04cb8bffefa13360dd11248bc6b78bca118201240c4ef47dbf6b7fad76dfcef
9b4e2a831b8ed2739100b6086c1601855fe287cc46c35c664e5ad68af51328190dc7c9f2a0123773
46a0aad8b86be2d846e69142e6c35bfe6a11a6efa2bd40c67da8471d8766a1c6ab2b79e450f849ff
905c47688da1bdaf32678ae411d5a1111559e8bf95feb37c3ff8367d21f50a88c3d38959d53c4dc6
961e216de7286c9a8cb329122494a6941ad8d9601ea964d5df85fc33c7b0e3847eb3cc566cd0def9
adecbe86e7e32aa73695dc05cc893ebb4347baeff4f29676756aa6d22fdec1896587dfa83fa37fcf
b74fc8e5f2e797fc6a5c9571ba8b7b56fd3c7eedc7feb3aeb917149fa501a7edbef06eec0a8a3129
70a4d306f06b502eb9df14a3944fa5b0a34aa39f6665354f93a4988a895c9d0e88f336d3017aa9bd
59c4694160d1726c6cb0f9e84ca18c7a276f356a458f24ac8b14af95c993f800d85aef239039a317
683679f6c344a9f54234908b6ee05b163793ab212be7013334583fa20a8dd4df8ee3c6109966155f
bedd4795fc0b1cea90d95acc77ced2c47a72ac87e3463690c9a993ff8c452c899e3d62871ff9b34a
cd21bc8963a9fd19cea051d102377112089c37e812af14535cbe89aab964feeb955e288633658c6d
8cb8bff86abd30dcb3af164e199f7cad6f6f0a23e59f2bd417f01b97ef573a95b400703ac3644d05
fe42ad19b93717c60c3eb3dbf71da37f0e4650eabab8f979ffce1139f5a51e77f2b22d76de0400fd
b40648603932833382c0830fa1eeaf654ec78edba64342092377869b2b33c19df30841451cee588c
bd46b6aa7efa9cf2e142019765db78ef296fed8bcf4d56540c661e7134f9379c84c72b17d48a9d4b
05e951b5201bd2760457fcfb2a15dceddf4831a6f02cf1accf4079cfb7ea2765880741baa1f6ad5f
65327d1ae18e5752553828cf017f7af0b1cfd86286805fdeda9c953a14be00fc704c19a4085aee35
1ff6d8803476d4905ea8e9b2f4688e447c4d3b3edc87ffbf8f4b77f20ce4ec38d1711ce81a22eed4
a59d7c51da6ffdcf36baf4e62f2934aff58358aeb38343ba90bdc0bbc5087281eb9990fbcda6b9f7
e7516b65b2d7ab8388afaf51bd82351bc025911b4eb985eafa761606ef9aae52b3d137726b2e45b3
9fe7a40a6d7f217cb1f47d5d0f99f97eba67ff8360c24b351683a7f96dc3e809f2492cc8043cf755
da1c9514957243f3a0e3bdd193f202f8db5ad0038133c3f4fc99f366d3a852b3d264cbbbbfc30a94
f109bf9514d850557dc63537ce1fd6cf8883eac57adb2365418597f9bbafcfcc799cfeb629eaf8f7
1d673707c9e283e97cb6ca0b6b9764112c0bde618f1a58186cdd6efad0cf734350c72c26b0adebb7
f2b74ccdcfe74be8a558c4e9c2f0ffb7192ab4c2ecceacd42a3372c3f90ce61bf5b7068360f4f50e
f7f2bfc516adfa18dc32167e12b6d9bcede729340340a03256f82df6b2b7cc100b72b411feadcbd7
19e4b754d96582a9b6ead5dd7ec9c0f1191b1f3963bbf4b05ead383771579bc5f4999d1e9083fc80
cf0b31b03d5ad280add63e7457481d6cc0cacd74252e5cee45a566416b51b30f7d337b54329a6631
8d9f09f65da91e397120f9aaefd2afeab6aa91a00fbce6b6c84e86df6cf0eb14f5ab74a52dc34879
23012392f5826ec9f3ce89d829c59a2d994d3b6f3ab6ada2745d2ac97fe6f369e8f319f8d33026e6
9ffcf51b2d511807df8f63522eba105e867dd15c64645598a1241ff1b70e7eaf36664b05c117d818
b9395782e79d39d43301f2297e8e22269ca4c16e5bb14e1808a87cf1a7e6a228e21bfff44e942c0a
87e46f99b83fb249d188795f9df13850eb6db94731776d2d33fee2cd9cc15a326eec0d50dfcefcbf
88fb034f8ee833a64136f470275cb551af1f270b00c044dc238ae51795336d7cc37efde32f587b37
b949e30918b6777d733403c352a3ee318f544053665354202c2820ab454c9dab7d93444cdaec388b
b7282837560fb5e67ae676f5f8e1b6a3d56d021a2747d9d1e2ec03fdce8f3247721824e46fca2a15
12afd9dd8b7a711c4c1c25ac8e46e9b1ff5ca14176e0415a51379a156ba8db584bc3e5ec4426a9e0
1d9a785055acfc60042371ede08b4a43e0be95c242137610a247642ad4a861bae44cf754c1ee3fdc
145c1b5e3342f1c6d8a88482a634fa73333c44d460525460d107105c7c5b45997d87e403f939d7f6
45a9cb7a39eb6721d3c90cff
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 SSC_Copy_State <Virtual>  0
 HBW_Pick TASK  0 -1
 HBW_Copy_State <Virtual>  0
 PID_10 PID  0
 PID_11 PID  0
 hunt_exp_light PROGRAM  0 -1
 HBW_Home <Virtual>  0
 HBW_Pick_Sto <Virtual>  0
 test TASK  0 -1
 HBW_Pickup_ST PROGRAM  0 -1
 HWB_Extend_Arm <Virtual>  0
 HBW_Retract_Arm <Virtual>  0
 HWB_PickUp TASK  0 -1
 HBW_HTO1POS <Virtual>  0
 HBW_Left_1Block <Virtual>  0
 HBW_HomeTo2_Col <Virtual>  0
 HWB_HomeTo3_Col <Virtual>  0
 HWB_HomeTo2_Row <Virtual>  0
 HWB_HomeTo3_Row <Virtual>  0
 HWB_HomeTo1_Col <Virtual>  0
 HBW_move_left_1 <Virtual>  0
 HWB_Home_to_11 <Virtual>  0
 HWB_11_DropOff <Virtual>  0
 HBW_Pickup <Virtual>  0
 HBW_PickUp_R1 <Virtual>  0
 HBW_Send_VGR <Virtual>  0
 HBW_PickUp_VGR <Virtual>  0
 HBW_Return_VGR <Virtual>  0
 HBW_MotorsOff <Virtual>  0
 HBW_ConvTo11 <Virtual>  0
 HBW_Return_Top <Virtual>  0
 HBW_MV_11_12 <Virtual>  0
 HBW_Conv_12 <Virtual>  0
 HBW_Conv_12_Lat <Virtual>  0
 HBW_RETRACT_13 <Virtual>  0
 HBW_Retract_23 <Virtual>  0
 HBW_Conv13_Lat <Virtual>  0
 HBW_Conv_2Row <Virtual>  0
 HBW_PickUp_R2 <Virtual>  0
 HBW_Conv11_Lat <Virtual>  0
 HBW_Retract_12 <Virtual>  0
 HBW_Shift_C1C2 <Virtual>  0
 HBW_Move_R1_R2 <Virtual>  0
#END

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"VGR Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC410 C410 1 0x0 MC409 C409 1 0x0 MC412 Y28 1 0x0 MC412 MC450 1 0x0 MC411 C411 1 0x0 MC408 C408 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC413 Y29 1 0x0 MC413 MC451 1 0x0 X27 MI200 1"

// Rung VGR_Copy_State#2
// Offset 27
NOP

// Rung VGR_Copy_State#3
// Offset 28
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC800 Y41 1 0x0 Y41 MI801 1 0x0 MC802 Y43 1 0x0 Y43 MI803 1 0x0 MC804 C804 1 0x0 MC805 C805 1 0x0 MC806 Y44 1 0x0 MC807 Y20 1 0x0 MC808 C811 1 0x0 MC809 C809 1 0x0 MC810 C810 1 0x0 MC812 C812 1 0x0 MC813 C813 1 0x0 MC814 C814 1 0x0 MC816 Y45 1 0x0 MC817 Y46 1 0x0 MC818 Y21 1"

// Rung MPO_Copy_State#2
// Offset 39
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC800 C1600 1 0x0 MC801 C1601 1 0x0 MC802 C1602 1 0x0 MC803 C1603 1 0x0 MC804 C1604 1 0x0 Y31 MI800 1 0x0 MC850 C1605 1"

// Rung SLD_Copy_State#2
// Offset 19
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"SSC Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC606 C1200 1 0x0 MC607 C1201 1 0x0 MC608 C1202 1 0x0 MC609 C1203 1 0x0 MC615 C1215 1 0x0 MC616 C1216 1 0x0 MC617 C1217 1 0x0 MC618 C1218 1 0x0 MC619 C1219 1 0x0 MC620 C1220 1"

// Rung SSC_Copy_State#2
// Offset 25
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block HBW_Home
$LGCMOD HBW_Home

// Rung HBW_Home#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Home#2
// Offset 8
STRN C215
ANDN X0
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 60 60
OUT Y51

// Rung HBW_Home#3
// Offset 26
STRN C215
ANDN X3
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5

// Rung HBW_Home#4
// Offset 43
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y76

// Rung HBW_Home#5
// Offset 64
NOP

// Rung HBW_Home#6
// Offset 65
RET

// End of Code Block HBW_Home
$LGCEND HBW_Home

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 Y40 1 0x0 Y80 MHR102 1 0x0 MC101 C205 1 0x0 MC102 C206 1 0x0 MC103 C207 1 0x0 MC104 C208 1 0x0 MC105 C209 1 0x0 MC106 C210 1 0x0 MC107 C211 1 0x0 MC108 C212 1 0x0 MC109 C213 1 0x0 MC110 C214 1 0x0 MC111 C215 1 0x0 MC112 C216 1 0x0 X2 MI101 1 0x0 X10 MI102 1 0x0 X11 MI103 1 0x0 X3 MI104 1 0x0 X0 MI105 1 0x0 X6 MI106 1 0x0 X7 MI107 1 0x0 X8 MI108 1 0x0 X9 MI109 1 0x0 $HBW_Encoder_X.Acc MHR1 1 0x0 $HBW_Encoder_Z.Acc MHR2 1"

// Rung HBW_Copy_State#2
// Offset 55
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block HBW_HomeTo2_Col
$LGCMOD HBW_HomeTo2_Col

// Rung HBW_HomeTo2_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_HomeTo2_Col#2
// Offset 17
STRGE -2775 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_HomeTo2_Col#3
// Offset 22
NOP

// Rung HBW_HomeTo2_Col#4
// Offset 23
NOP

// Rung HBW_HomeTo2_Col#5
// Offset 24
NOP

// Rung HBW_HomeTo2_Col#6
// Offset 25
RET

// End of Code Block HBW_HomeTo2_Col
$LGCEND HBW_HomeTo2_Col

// Beginning of Code Block HWB_HomeTo1_Col
$LGCMOD HWB_HomeTo1_Col

// Rung HWB_HomeTo1_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HWB_HomeTo1_Col#2
// Offset 17
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_HomeTo1_Col#3
// Offset 22
NOP

// Rung HWB_HomeTo1_Col#4
// Offset 23
NOP

// Rung HWB_HomeTo1_Col#5
// Offset 24
RET

// End of Code Block HWB_HomeTo1_Col
$LGCEND HWB_HomeTo1_Col

// Beginning of Code Block HWB_Home_to_11
$LGCMOD HWB_Home_to_11

// Rung HWB_Home_to_11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HWB_Home_to_11#2
// Offset 22
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_Home_to_11#3
// Offset 27
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HWB_Home_to_11#4
// Offset 49
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_Home_to_11#5
// Offset 54
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HWB_Home_to_11#6
// Offset 73
NOP

// Rung HWB_Home_to_11#7
// Offset 74
NOP

// Rung HWB_Home_to_11#8
// Offset 75
RET

// End of Code Block HWB_Home_to_11
$LGCEND HWB_Home_to_11

// Beginning of Code Block HWB_11_DropOff
$LGCMOD HWB_11_DropOff

// Rung HWB_11_DropOff#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HWB_11_DropOff#2
// Offset 8
STRGE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_11_DropOff#3
// Offset 13
STRN C215
ANDN C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51

// Rung HWB_11_DropOff#4
// Offset 31
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y4
AND ST2
OUT Y5

// Rung HWB_11_DropOff#5
// Offset 51
STRGE 2850 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_11_DropOff#6
// Offset 56
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 60 60
OUT Y7

// Rung HWB_11_DropOff#7
// Offset 73
RET

// End of Code Block HWB_11_DropOff
$LGCEND HWB_11_DropOff

// Beginning of Code Block HBW_PickUp_R1
$LGCMOD HBW_PickUp_R1

// Rung HBW_PickUp_R1#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R1#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R1#3
// Offset 41
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R1#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R1#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_PickUp_R1#6
// Offset 69
NOP

// Rung HBW_PickUp_R1#7
// Offset 70
NOP

// Rung HBW_PickUp_R1#8
// Offset 71
NOP

// Rung HBW_PickUp_R1#9
// Offset 72
NOP

// Rung HBW_PickUp_R1#10
// Offset 73
RET

// End of Code Block HBW_PickUp_R1
$LGCEND HBW_PickUp_R1

// Beginning of Code Block HBW_Send_VGR
$LGCMOD HBW_Send_VGR

// Rung HBW_Send_VGR#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Send_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_Send_VGR#3
// Offset 37
STRN C215
AND X2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y48
AND ST2
OUT Y49

// Rung HBW_Send_VGR#4
// Offset 56
NOP

// Rung HBW_Send_VGR#5
// Offset 57
NOP

// Rung HBW_Send_VGR#6
// Offset 58
RET

// End of Code Block HBW_Send_VGR
$LGCEND HBW_Send_VGR

// Beginning of Code Block HBW_PickUp_VGR
$LGCMOD HBW_PickUp_VGR

// Rung HBW_PickUp_VGR#1
// Offset 0
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_PickUp_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_PickUp_VGR#3
// Offset 37
STRN C215
AND X11
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_PickUp_VGR#4
// Offset 56
NOP

// Rung HBW_PickUp_VGR#5
// Offset 57
NOP

// Rung HBW_PickUp_VGR#6
// Offset 58
RET

// End of Code Block HBW_PickUp_VGR
$LGCEND HBW_PickUp_VGR

// Beginning of Code Block HBW_Return_VGR
$LGCMOD HBW_Return_VGR

// Rung HBW_Return_VGR#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C253
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y6

// Rung HBW_Return_VGR#2
// Offset 22
STRN C215
AND X1
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_Return_VGR#3
// Offset 41
STRN C215
AND C251
DUPBOOL
ANDN X1
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_Return_VGR#4
// Offset 63
STRLE 2575 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_VGR#5
// Offset 68
NOP

// Rung HBW_Return_VGR#6
// Offset 69
NOP

// Rung HBW_Return_VGR#7
// Offset 70
RET

// End of Code Block HBW_Return_VGR
$LGCEND HBW_Return_VGR

// Beginning of Code Block HBW_MotorsOff
$LGCMOD HBW_MotorsOff

// Rung HBW_MotorsOff#1
// Offset 0
STRN C215
ANDN ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_MotorsOff#2
// Offset 18
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_MotorsOff#3
// Offset 36
STRN C215
AND ST2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
OUT Y48

// Rung HBW_MotorsOff#4
// Offset 54
NOP

// Rung HBW_MotorsOff#5
// Offset 55
NOP

// Rung HBW_MotorsOff#6
// Offset 56
NOP

// Rung HBW_MotorsOff#7
// Offset 57
RET

// End of Code Block HBW_MotorsOff
$LGCEND HBW_MotorsOff

// Beginning of Code Block HBW_ConvTo11
$LGCMOD HBW_ConvTo11

// Rung HBW_ConvTo11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_ConvTo11#2
// Offset 22
NOP

// Rung HBW_ConvTo11#3
// Offset 23
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_ConvTo11#4
// Offset 28
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_ConvTo11#5
// Offset 50
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_ConvTo11#6
// Offset 55
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_ConvTo11#7
// Offset 74
NOP

// Rung HBW_ConvTo11#8
// Offset 75
NOP

// Rung HBW_ConvTo11#9
// Offset 76
RET

// End of Code Block HBW_ConvTo11
$LGCEND HBW_ConvTo11

// Beginning of Code Block HBW_Return_Top
$LGCMOD HBW_Return_Top

// Rung HBW_Return_Top#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Return_Top#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HBW_Return_Top#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_Top#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_Return_Top#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return_Top#6
// Offset 69
NOP

// Rung HBW_Return_Top#7
// Offset 70
NOP

// Rung HBW_Return_Top#8
// Offset 71
RET

// End of Code Block HBW_Return_Top
$LGCEND HBW_Return_Top

// Beginning of Code Block HBW_MV_11_12
$LGCMOD HBW_MV_11_12

// Rung HBW_MV_11_12#1
// Offset 0
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_MV_11_12#2
// Offset 21
NOP

// Rung HBW_MV_11_12#3
// Offset 22
NOP

// Rung HBW_MV_11_12#4
// Offset 23
NOP

// Rung HBW_MV_11_12#5
// Offset 24
RET

// End of Code Block HBW_MV_11_12
$LGCEND HBW_MV_11_12

// Beginning of Code Block HBW_Conv_12
$LGCMOD HBW_Conv_12

// Rung HBW_Conv_12#1
// Offset 0
NOP

// Rung HBW_Conv_12#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_12#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Conv_12#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 80
OUT C251

// Rung HBW_Conv_12#5
// Offset 45
NOP

// Rung HBW_Conv_12#6
// Offset 46
RET

// End of Code Block HBW_Conv_12
$LGCEND HBW_Conv_12

// Beginning of Code Block HBW_Conv_12_Lat
$LGCMOD HBW_Conv_12_Lat

// Rung HBW_Conv_12_Lat#1
// Offset 0
NOP

// Rung HBW_Conv_12_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv_12_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv_12_Lat#4
// Offset 42
STRGE 5325 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv_12_Lat#5
// Offset 47
NOP

// Rung HBW_Conv_12_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv_12_Lat
$LGCEND HBW_Conv_12_Lat

// Beginning of Code Block HBW_RETRACT_13
$LGCMOD HBW_RETRACT_13

// Rung HBW_RETRACT_13#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_RETRACT_13#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_RETRACT_13#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_RETRACT_13#4
// Offset 46
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_RETRACT_13#5
// Offset 68
STRGE 7685 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_RETRACT_13#6
// Offset 73
RET

// End of Code Block HBW_RETRACT_13
$LGCEND HBW_RETRACT_13

// Beginning of Code Block HBW_Retract_23
$LGCMOD HBW_Retract_23

// Rung HBW_Retract_23#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_23#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_23#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_23#4
// Offset 46
STRN C215
AND ST2
OUT Y51
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_Retract_23#5
// Offset 65
STRGE 7685 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_23#6
// Offset 70
RET

// End of Code Block HBW_Retract_23
$LGCEND HBW_Retract_23

// Beginning of Code Block HBW_Conv13_Lat
$LGCMOD HBW_Conv13_Lat

// Rung HBW_Conv13_Lat#1
// Offset 0
NOP

// Rung HBW_Conv13_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv13_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv13_Lat#4
// Offset 42
STRGE 7685 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv13_Lat#5
// Offset 47
NOP

// Rung HBW_Conv13_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv13_Lat
$LGCEND HBW_Conv13_Lat

// Beginning of Code Block HBW_Conv_2Row
$LGCMOD HBW_Conv_2Row

// Rung HBW_Conv_2Row#1
// Offset 0
NOP

// Rung HBW_Conv_2Row#2
// Offset 1
NOP

// Rung HBW_Conv_2Row#3
// Offset 2
NOP

// Rung HBW_Conv_2Row#4
// Offset 3
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_2Row#5
// Offset 22
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Conv_2Row#6
// Offset 42
STRGE $HBW_Encoder_Z.Acc 1380
OUT C251

// Rung HBW_Conv_2Row#7
// Offset 47
NOP

// Rung HBW_Conv_2Row#8
// Offset 48
RET

// End of Code Block HBW_Conv_2Row
$LGCEND HBW_Conv_2Row

// Beginning of Code Block HBW_PickUp_R2
$LGCMOD HBW_PickUp_R2

// Rung HBW_PickUp_R2#1
// Offset 0
NOP

// Rung HBW_PickUp_R2#2
// Offset 1
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R2#3
// Offset 20
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R2#4
// Offset 38
NOP

// Rung HBW_PickUp_R2#5
// Offset 39
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R2#6
// Offset 61
STRLE 1400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R2#7
// Offset 66
NOP

// Rung HBW_PickUp_R2#8
// Offset 67
NOP

// Rung HBW_PickUp_R2#9
// Offset 68
NOP

// Rung HBW_PickUp_R2#10
// Offset 69
RET

// End of Code Block HBW_PickUp_R2
$LGCEND HBW_PickUp_R2

// Beginning of Code Block HBW_Conv11_Lat
$LGCMOD HBW_Conv11_Lat

// Rung HBW_Conv11_Lat#1
// Offset 0
NOP

// Rung HBW_Conv11_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv11_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv11_Lat#4
// Offset 42
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv11_Lat#5
// Offset 47
NOP

// Rung HBW_Conv11_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv11_Lat
$LGCEND HBW_Conv11_Lat

// Beginning of Code Block HBW_Retract_12
$LGCMOD HBW_Retract_12

// Rung HBW_Retract_12#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_12#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_12#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_12#4
// Offset 46
RET

// End of Code Block HBW_Retract_12
$LGCEND HBW_Retract_12

// Beginning of Code Block HBW_Shift_C1C2
$LGCMOD HBW_Shift_C1C2

// Rung HBW_Shift_C1C2#1
// Offset 0
STRGE 5320 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Shift_C1C2#2
// Offset 5
NOP

// Rung HBW_Shift_C1C2#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Shift_C1C2#4
// Offset 25
NOP

// Rung HBW_Shift_C1C2#5
// Offset 26
STRN C215
AND ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_Shift_C1C2#6
// Offset 44
NOP

// Rung HBW_Shift_C1C2#7
// Offset 45
RET

// Rung HBW_Shift_C1C2#8
// Offset 46
NOP

// End of Code Block HBW_Shift_C1C2
$LGCEND HBW_Shift_C1C2

// Beginning of Code Block HBW_Move_R1_R2
$LGCMOD HBW_Move_R1_R2

// Rung HBW_Move_R1_R2#1
// Offset 0
STRGE 1700 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Move_R1_R2#2
// Offset 5
NOP

// Rung HBW_Move_R1_R2#3
// Offset 6
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Move_R1_R2#4
// Offset 25
NOP

// Rung HBW_Move_R1_R2#5
// Offset 26
NOP

// Rung HBW_Move_R1_R2#6
// Offset 27
RET

// End of Code Block HBW_Move_R1_R2
$LGCEND HBW_Move_R1_R2

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#2
// Offset 3
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#3
// Offset 6
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#4
// Offset 9
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#5
// Offset 12
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// Rung $Main#6
// Offset 15
#BEGIN FMT_COMMENT 
"Hunter Demo Light<br>"
#END

STR ST1
RUN hunt_exp_light

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
SG HBW_Program.S0

// Rung HBW_Program#2
// Offset 2
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#3
// Offset 10
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#4
// Offset 12
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#5
// Offset 14
STR ST1
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#6
// Offset 22
NOP

// Rung HBW_Program#7
// Offset 23
STR C213
JMP HBW_Program.S1

// Rung HBW_Program#8
// Offset 25
SG HBW_Program.S1

// Rung HBW_Program#9
// Offset 27
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#10
// Offset 35
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#11
// Offset 37
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#12
// Offset 39
STR ST1
MOVE 0 N1

// Rung HBW_Program#13
// Offset 42
STR ST1
DUPBOOL
STR C205
ANDN C206
STR C206
ANDN C205
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 500 60
POPBOOL
DUPBOOL
AND C205
OUT Y48
POPBOOL
AND C206
OUT Y49

// Rung HBW_Program#14
// Offset 71
STR ST1
DUPBOOL
STR C207
ANDN C208
STRN C207
AND C208
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
POPBOOL
DUPBOOL
AND C207
OUT Y50
POPBOOL
AND C208
OUT Y51

// Rung HBW_Program#15
// Offset 100
STR ST1
DUPBOOL
STR C209
ANDN C210
STRN C209
AND C210
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
POPBOOL
DUPBOOL
AND C209
OUT Y4
POPBOOL
AND C210
OUT Y5

// Rung HBW_Program#16
// Offset 129
STR ST1
DUPBOOL
STR C211
ANDN C212
STRN C211
AND C212
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
POPBOOL
DUPBOOL
AND C211
OUT Y6
POPBOOL
AND C212
OUT Y7

// Rung HBW_Program#17
// Offset 158
STR C213
JMP HBW_Program.S2

// Rung HBW_Program#18
// Offset 160
SG HBW_Program.S2

// Rung HBW_Program#19
// Offset 162
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#20
// Offset 170
STR X0
OUT $HBW_Encoder_X.ResetLevel

// Rung HBW_Program#21
// Offset 172
STR X3
OUT $HBW_Encoder_Z.ResetLevel

// Rung HBW_Program#22
// Offset 174
STR ST1
CALL HBW_Home 0x1 DST511 "3" "3"

// Rung HBW_Program#23
// Offset 182
STR X0
AND X11
AND X3
JMP HBW_Program.S3

// Rung HBW_Program#24
// Offset 186
STR C212
JMP HBW_Program.S3

// Rung HBW_Program#25
// Offset 188
NOP

// Rung HBW_Program#26
// Offset 189
SG HBW_Program.S3

// Rung HBW_Program#27
// Offset 191
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#28
// Offset 199
STR ST1
CALL HWB_Home_to_11 0x1 DST511 "3" "3"

// Rung HBW_Program#29
// Offset 207
STRN C250
ANDN C251
JMP HBW_Program.S4

// Rung HBW_Program#30
// Offset 210
SG HBW_Program.S4

// Rung HBW_Program#31
// Offset 212
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#32
// Offset 220
STR ST1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#33
// Offset 228
STR X10
ANDN C251
JMP HBW_Program.S5

// Rung HBW_Program#34
// Offset 231
SG HBW_Program.S5

// Rung HBW_Program#35
// Offset 233
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#36
// Offset 241
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#37
// Offset 249
STRN C251
AND C250
JMP HBW_Program.S6

// Rung HBW_Program#38
// Offset 252
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#39
// Offset 254
SG HBW_Program.S6

// Rung HBW_Program#40
// Offset 256
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#41
// Offset 264
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#42
// Offset 272
STRN X2
INC N1

// Rung HBW_Program#43
// Offset 274
STRN X2
JMP HBW_Program.S7

// Rung HBW_Program#44
// Offset 276
SG HBW_Program.S7

// Rung HBW_Program#45
// Offset 278
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#46
// Offset 286
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#47
// Offset 294
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#48
// Offset 303
SG HBW_Program.S8

// Rung HBW_Program#49
// Offset 305
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#50
// Offset 313
STR ST1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#51
// Offset 321
STRN C250
JMP HBW_Program.S9

// Rung HBW_Program#52
// Offset 323
SG HBW_Program.S9

// Rung HBW_Program#53
// Offset 325
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#54
// Offset 333
STR ST1
CALL HBW_Return_Top 0x1 DST511 "3" "3"

// Rung HBW_Program#55
// Offset 341
STR X10
ANDN C251
JMP HBW_Program.S10
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#56
// Offset 351
SG HBW_Program.S10

// Rung HBW_Program#57
// Offset 353
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#58
// Offset 361
STR ST1
CALL HBW_MV_11_12 0x1 DST511 "3" "3"

// Rung HBW_Program#59
// Offset 369
STRN C250
JMP HBW_Program.S11

// Rung HBW_Program#60
// Offset 371
SG HBW_Program.S11

// Rung HBW_Program#61
// Offset 373
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#62
// Offset 381
STRE N1 1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#63
// Offset 392
STRE N1 2
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#64
// Offset 403
STRE N1 3
CALL HBW_Move_R1_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#65
// Offset 414
STRE N1 3
ANDLE 1650 $HBW_Encoder_Z.Acc
JMP HBW_Program.S51

// Rung HBW_Program#66
// Offset 423
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#67
// Offset 426
NOP

// Rung HBW_Program#68
// Offset 427
SG HBW_Program.S51

// Rung HBW_Program#69
// Offset 429
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#70
// Offset 437
STR ST1
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#71
// Offset 445
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#72
// Offset 448
SG HBW_Program.S12

// Rung HBW_Program#73
// Offset 450
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#74
// Offset 458
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#75
// Offset 466
STRN C251
AND C250
JMP HBW_Program.S13

// Rung HBW_Program#76
// Offset 469
SG HBW_Program.S13

// Rung HBW_Program#77
// Offset 471
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#78
// Offset 479
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#79
// Offset 487
STRN X2
INC N1

// Rung HBW_Program#80
// Offset 489
STRN X2
JMP HBW_Program.S14

// Rung HBW_Program#81
// Offset 491
SG HBW_Program.S14

// Rung HBW_Program#82
// Offset 493
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#83
// Offset 501
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#84
// Offset 509
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#85
// Offset 518
SG HBW_Program.S15

// Rung HBW_Program#86
// Offset 520
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#87
// Offset 528
STRE N1 1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#88
// Offset 539
STRE N1 2
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#89
// Offset 550
STRE N1 3
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#90
// Offset 561
STRE N1 4
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#91
// Offset 572
STRE N1 5
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#92
// Offset 583
STRE N1 6
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#93
// Offset 594
STRE N1 7
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#94
// Offset 605
STRE N1 8
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#95
// Offset 616
STRE N1 9
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#96
// Offset 627
NOP

// Rung HBW_Program#97
// Offset 628
STRN C251
JMP HBW_Program.S16
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#98
// Offset 637
SG HBW_Program.S16

// Rung HBW_Program#99
// Offset 639
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#100
// Offset 647
STRE N1 1
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#101
// Offset 658
STRE N1 2
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#102
// Offset 669
STRE N1 3
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#103
// Offset 680
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#104
// Offset 682
STRN C250
AND X10
JMP HBW_Program.S17

// Rung HBW_Program#105
// Offset 685
SG HBW_Program.S17

// Rung HBW_Program#106
// Offset 687
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#107
// Offset 695
STRE N1 1
CALL HBW_Retract_12 0x1 DST511 "3" "3"

// Rung HBW_Program#108
// Offset 706
STRE N1 2
CALL HBW_RETRACT_13 0x1 DST511 "3" "3"

// Rung HBW_Program#109
// Offset 717
STRE N1 3
CALL HBW_Retract_23 0x1 DST511 "3" "3"

// Rung HBW_Program#110
// Offset 728
NOP

// Rung HBW_Program#111
// Offset 729
STR X11
ANDN C251
ANDN C250
JMP HBW_Program.S11

// Rung HBW_Program#112
// Offset 733
STR X11
ANDE N1 1
JMP HBW_Program.S50

// Rung HBW_Program#113
// Offset 739
SG HBW_Program.S50

// Rung HBW_Program#114
// Offset 741
STR ST1
CALL HBW_Shift_C1C2 0x1 DST511 "3" "3"

// Rung HBW_Program#115
// Offset 749
STRN Y50
ANDN C250
JMP HBW_Program.S11

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#2
// Offset 8
STR ST1
DUPBOOL
STR C410
ANDN C409
STRN C410
AND C409
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
POPBOOL
DUPBOOL
AND C410
OUT Y27
POPBOOL
AND C409
OUT Y26

// Rung VGR_Program#3
// Offset 37
STR ST1
DUPBOOL
STR C408
ANDN C411
STRN C408
AND C411
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
POPBOOL
DUPBOOL
AND C408
OUT Y24
POPBOOL
AND C411
OUT Y25

// Rung VGR_Program#4
// Offset 66
STR ST1
DUPBOOL
STR C406
ANDN C407
STRN C406
AND C407
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
POPBOOL
DUPBOOL
AND C406
OUT Y23
POPBOOL
AND C407
OUT Y22

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STR C813
OUT Y18

// Rung MPO_Program#4
// Offset 12
STR C810
OUT Y17

// Rung MPO_Program#5
// Offset 14
STR C811
OUT Y52

// Rung MPO_Program#6
// Offset 16
STR ST1
DUPBOOL
STR C804
ANDN C805
STR C805
ANDN C804
ORSTR
ANDSTR
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 100
POPBOOL
DUPBOOL
AND C804
OUT Y53
POPBOOL
AND C805
OUT Y15

// Rung MPO_Program#7
// Offset 45
STR C814
OUT Y19

// Rung MPO_Program#8
// Offset 47
STR C809
JMP MPO_Program.S2

// Rung MPO_Program#9
// Offset 49
SG MPO_Program.S1

// Rung MPO_Program#10
// Offset 51
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#11
// Offset 59
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#12
// Offset 61
STRN X24
SET Y17

// Rung MPO_Program#13
// Offset 63
STR Y17
OUT Y20
ANDN X17
ONDTMR T0 1000 Y44

// Rung MPO_Program#14
// Offset 69
SG MPO_Program.S2

// Rung MPO_Program#15
// Offset 71
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#16
// Offset 79
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#17
// Offset 81
STRN X19
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y53

// Rung MPO_Program#18
// Offset 97
STR X19
JMP MPO_Program.S3

// Rung MPO_Program#19
// Offset 99
SG MPO_Program.S3

// Rung MPO_Program#20
// Offset 101
STR ST1
SET Y17

// Rung MPO_Program#21
// Offset 103
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#22
// Offset 111
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#23
// Offset 113
STR X19
SET Y19

// Rung MPO_Program#24
// Offset 115
STR X19
ONDTMR T100 2000 Y18

// Rung MPO_Program#25
// Offset 119
STR T100.DN
JMP MPO_Program.S4

// Rung MPO_Program#26
// Offset 121
SG MPO_Program.S4

// Rung MPO_Program#27
// Offset 123
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#28
// Offset 131
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#29
// Offset 133
STR X19
RST Y19

// Rung MPO_Program#30
// Offset 135
STRN X16
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y15

// Rung MPO_Program#31
// Offset 151
STR X16
JMP MPO_Program.S5

// Rung MPO_Program#32
// Offset 153
SG MPO_Program.S5

// Rung MPO_Program#33
// Offset 155
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#34
// Offset 163
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#35
// Offset 165
STR X16
SET Y19

// Rung MPO_Program#36
// Offset 167
STR Y19
ONDTMR T101 2000 C815

// Rung MPO_Program#37
// Offset 171
STR C815
RST Y18

// Rung MPO_Program#38
// Offset 173
STRN Y18
JMP MPO_Program.S6

// Rung MPO_Program#39
// Offset 175
SG MPO_Program.S6

// Rung MPO_Program#40
// Offset 177
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#41
// Offset 185
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#42
// Offset 187
STR X16
RST Y19

// Rung MPO_Program#43
// Offset 189
STRN Y19
ONDTMR T102 1000 C818

// Rung MPO_Program#44
// Offset 193
STR C818
JMP MPO_Program.S7

// Rung MPO_Program#45
// Offset 195
SG MPO_Program.S7

// Rung MPO_Program#46
// Offset 197
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#47
// Offset 205
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#48
// Offset 207
STRN X15
OUT Y45

// Rung MPO_Program#49
// Offset 209
STR X15
TMRDOWN T102 1000
OUT Y43

// Rung MPO_Program#50
// Offset 213
STR T102.Done
JMP MPO_Program.S8

// Rung MPO_Program#51
// Offset 215
SG MPO_Program.S8

// Rung MPO_Program#52
// Offset 217
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#53
// Offset 225
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#54
// Offset 227
STRN X13
OUT Y45

// Rung MPO_Program#55
// Offset 229
STR X13
TMRDOWN T103 1000
OUT Y21

// Rung MPO_Program#56
// Offset 233
STR T103.Done
JMP MPO_Program.S9

// Rung MPO_Program#57
// Offset 235
SG MPO_Program.S9

// Rung MPO_Program#58
// Offset 237
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#59
// Offset 245
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#60
// Offset 247
STR ST1
OUT Y47

// Rung MPO_Program#61
// Offset 249
STRN X12
ONDTMR T104 1000 Y46

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
SG SLD_Program.S0

// Rung SLD_Program#2
// Offset 2
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#3
// Offset 10
STR C1600
OUT Y30

// Rung SLD_Program#4
// Offset 12
STR C1601
OUT Y31

// Rung SLD_Program#5
// Offset 14
STR C1602
OUT Y32

// Rung SLD_Program#6
// Offset 16
STR C1603
OUT Y33

// Rung SLD_Program#7
// Offset 18
STR C1604
OUT Y34

// Rung SLD_Program#8
// Offset 20
STR C1605
JMP SLD_Program.S1

// Rung SLD_Program#9
// Offset 22
SG SLD_Program.S1

// Rung SLD_Program#10
// Offset 24
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#11
// Offset 32
STRN C1605
JMP SLD_Program.S0

// Rung SLD_Program#12
// Offset 34
STRN X35
OFFDTMR T200 1750 C1651

// Rung SLD_Program#13
// Offset 38
STR C1651
OUT Y30

// Rung SLD_Program#14
// Offset 40
STRGE T200.Acc 1750
FLASHER 500 500 Y899

// Rung SLD_Program#15
// Offset 48
SG SLD_Program.S2

// Rung SLD_Program#16
// Offset 50
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#17
// Offset 58
STRN C1605
JMP SLD_Program.S0

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STR C1200
OUT Y39

// Rung SSC_Program#4
// Offset 12
STR C1201
OUT Y40

// Rung SSC_Program#5
// Offset 14
STR C1202
OUT Y41

// Rung SSC_Program#6
// Offset 16
STR C1215
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y35

// Rung SSC_Program#7
// Offset 32
STR C1216
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y36

// Rung SSC_Program#8
// Offset 48
STR C1217
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#9
// Offset 64
STR C1218
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#10
// Offset 80
STR ST2
ANDPD X47
ANDPDPF
STR ST2
AND CT150.Done
CNT CT150 100

// Rung SSC_Program#11
// Offset 88
STR C1203
JMP SSC_Program.S1

// Rung SSC_Program#12
// Offset 90
SG SSC_Program.S1

// Rung SSC_Program#13
// Offset 92
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#14
// Offset 100
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#15
// Offset 102
STRN X41
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#16
// Offset 118
STRN X40
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y36

// Rung SSC_Program#17
// Offset 134
STR X40
AND X41
JMP SSC_Program.S2

// Rung SSC_Program#18
// Offset 137
SG SSC_Program.S2

// Rung SSC_Program#19
// Offset 139
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#20
// Offset 147
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#21
// Offset 149
STR X44
ANDPDPF
STR ST2
CNT CT150 300

// Rung SSC_Program#22
// Offset 154
STRN CT150.Done
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y35

// Rung SSC_Program#23
// Offset 170
STR X46
STR ST2
CNT CT151 1300

// Rung SSC_Program#24
// Offset 174
STRN CT151.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#25
// Offset 190
STR CT150.Done
AND CT151.Done
JMP SSC_Program.S3

// Rung SSC_Program#26
// Offset 193
SG SSC_Program.S3

// Rung SSC_Program#27
// Offset 195
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#28
// Offset 203
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#29
// Offset 205
STR X46
STR ST2
CNT CT152 300

// Rung SSC_Program#30
// Offset 209
STRN CT152.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// End of Code Block SSC_Program
$PGMEND SSC_Program

// Beginning of Code Block hunt_exp_light
$PRGRM hunt_exp_light

// Rung hunt_exp_light#1
// Offset 0
STR ST2
COPY 0x1 "4 0x0 MC402 Y39 1"

// End of Code Block hunt_exp_light
$PGMEND hunt_exp_light

// Beginning of Code Block HWB_PickUp
$TSK HWB_PickUp

// Rung HWB_PickUp#1
// Offset 0
NOP

// End of Code Block HWB_PickUp
$TSKEND HWB_PickUp

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"C1","copy","",""
"C11","C11_Interlock","","Used to delay logic by one scan"
"C12","C12_Interlock_2","","Used to delay logic by one scan"
"C20","HBW_Has_Pallet","","True when carrying a pallet"
"C51","X_Direction","","True: Left False: Right"
"C52","Z_Direction","","True: Down False: Up"
"C80","Conveyor_Timeout","","Bit high when Conveyor Timeout timer active"
"C90","HBW_XY_PID_EN","","Enables PID control in HBW_Move_XZ"
"C101","HBW_T1_Send","Modbus MC101","Task to deliver a pallet to conveyor"
"C102","HBW_T2_Receive","Modbus MC102","Task to pickup a pallet from conveyor"
"C103","HBW_T3_Reset","Modbus MC103","Reinitialize and home all axises"
"C104","HBW_T4_Manual","Modbus MC104","Switch to manual mode"
"C110","HBW_Move_X_L","Modbus MC110","Move Horizontal Axis towards bay"
"C111","HBW_Move_X_R","Modbus MC111","Move Horizontal Axis towards Conveyor"
"C112","HBW_Move_Y_In","Modbus MC112","Move Cantilever In"
"C113","HBW_Move_Y_Out","Modbus MC113","Move Cantilever Out"
"C114","HBW_Move_Z_Up","Modbus MC114","Move Vertical Axis Up"
"C115","HBW_Move_Z_Down","Modbus MC115","Move Vertical Axis Down"
"C116","HBW_Conveyor_In","Modbus MC116","Move Conveyor In"
"C117","HBW_Conveyor_Out","Modbus MC117","Move Conveyor Out"
"C130","HBW_Status_Ready","Modbus MC130","On when ready for a task"
"C133","HBW_Mov_Conveyor","Modbus MC133","Status Conveyor Moving"
"C134","HBW_Moving_X","Modbus MC134","Status GantryMovingX"
"C135","HBW_Moving_Y","Modbus MC135","Status GantryMovingY"
"C136","HBW_Moving_Z","Modbus MC136","Status GantryMovingZ"
"C138","HBW_Status_Y_Pos","Modbus MC138","Current Y position"
"C141","HBW_Target_Y_Pos","Modbus MC141","Target Y position"
"C150","HBW_MoveComplete","","HBW_Move_XZ completion interlock."
"C180","HBW_Fault","Modbus MC180","Status in Fault State"
"C182","Fault_X_Target","","Active when X target out of range"
"C183","Fault_Z_target","","Active when Z target out of range"
"C400","VGR_T0","",""
"C410","VGR_T1","",""
"C420","VGR_T2","",""
"C430","VGR_T3","",""
"C440","VGR_T4","",""
"C500","VGR_Man_Control","",""
"C799","VGR_RESET","",""
"V105","HBW_Task_X_slot","Modbus MHR105","Value for slot X coord"
"V106","HBW_Task_Y_slot","Modbus MHR106","Value for slot y coord"
"V118","HBW_PWM_Set_X","Modbus MHR118","Set Horizontal Axis PWM Duty Cycle %"
"V119","HBW_PWM_Set_Y","Modbus MHR119","Set Cantilever Axis PWM Duty Cycle %"
"V120","HBW_PWM_Set_Z","Modbus MHR120","Set Vertical Axis PWM Duty cycle %"
"V131","HBW_Cur_Progress","Modbus MHR131","0 to 100 percent job completion"
"V132","HBW_Cur_Stage","Modbus MHR132","Current stage number"
"V137","HBW_Status_X_Pos","Modbus MHR137","Current X encoder position"
"V139","HBW_Status_Z_Pos","Modbus MHR139","Current Z encoder position"
"V140","HBW_Target_X_Pos","Modbus MHR140","Target X encoder position"
"V142","HBW_Target_Z_Pos","Modbus MHR142","Target Z encoder position"
"V181","HBW_Fault_code","Modbus MHR181","Current Fault code"
"V801","VGR_Fault_Code","",""
"N810","VGR_Rot_Target","",""
"N811","VGR_X_Target","",""
"N812","VGR_Y_Target","",""
"D0","MC","",""
"D1","Feeder_Extend","",""
"D140","X_Start_Position","","Distance to target"
"D142","Y_Start_Position","","Distance to target"
"D143","HBW_PWM_Cur_X","","PWM value for X for XZ movement task"
"D144","HBW_PWM_Cur_Z","","PWM value for Z for XZ movement task"
"T3","T_HBW_S6","",""
"T4","T_Conveyor_Timer","","Used to detect conveyor faults"
"MPO_Program.S2","Vaccum_MO","",""
"MPO_Program.S3","Vaccum","",""
"MPO_Program.S4","Vacumm_MO","",""
"MPO_Program.S5","Vaccum_Load","",""
"US0","_CP_Strogram_A","","CP_State_Program"
"US1","_VGR_Movement","","VGR_Movement"
"US2","_SSC_Check_InOut","","SSC_Check_InOut"
"UB0","_VGR_MisScan_A","","VGR_Movement.Done ThisScan"
#END

