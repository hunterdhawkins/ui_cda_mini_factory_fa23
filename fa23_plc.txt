// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Code\Mini Factory FA23\fa23_plc.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
ff12835d11fff471e24b30e48b983a2a13613b4793104fbec21428e152554dc0dad0130acca46f2e
891b22564a3aa046eaa26c39ba6b1b6492ee988d4b1201bf7efd66cc6795f6520ba567256165aec5
0e9b18714d6fddf4f44bdf941ea54201271430ce77bf4a8d713f97d057947277b09103303d2acc17
29cc848249057181ffb36df2307cddd463937b725044c33a0750b9abd7be963a4bfbfaf4f948fcf3
940a7a3d26e33ddb700a16d454df8097c530f39e6103f731362e21047c573f62f90a5c92935112ff
2b62a3fd8c9dac3cbc4edd3c61b894db8f07c55e59fa156f9b8e489d3182d2fd6ecda1dcb102be06
01f9261623a248dd66b73a20838f3f385e14bc34ea1e663652e3ea9abd96e8458c2927dbab096248
c2f61d61654f0e785b65b94fbab5951d4244d353d75d6e5080d9db3d8ac89ace205fe1e37b012faf
703dc65df5cb399e1bab2a1bc704d5621ebad783ca43ac1560365b6ccc46b0d99b67259c797f6db9
0b1773758e789477c57ccb9229a5e55bee0819df9af7a80086bdffc4bd13e4cac91d34d942cb1d84
9ca6d166cb6d63e13cc427a6d358a53f1e193a10c46f15b0b947dd9b4a7de4fe2efb9097e5e22194
c728f9ea6fefd91a13da1d616b06de2902f6ca2f2d3a98aade7bee06e0b37b664459301056b09d77
2c7fcdcb13695f285681b6974376735da8454b9849fcae16d5cca768b31e5688d2ca8d3d69b703f9
78b051b4d8e61c7656ffae0e47038d2628f4132eb5a169f578fb0ce10d618bb5a2a28f9d1ca1e834
33b416b8f6699d39db1fd4ca98f62693810055588e7dee702a5d405b99846c72b8b194ce813016ad
256558795a1ac449d47d4d283066b65aa97804a6059fc127bd0a0525380de49548a6428c2b43ae99
e703b99dcab14d943856156163a515b01fe34ee58dd803a426686ca2529db41186916edc28b5d118
0470381fbfa34ed2297bcd979deecfe6310e60d6f2a48ec509a2bcb265ef2b4c2fe2339871a6f755
5b61847830bdfdda1a409e61d2e88287c6ed64a5bc17799c62ffda153fff10c8a5d41f44d20d957c
af79095f241451bcf45fa3e9844c696394bd4e77f8dc7d2dc8f17861fc1bacc89e002aa37109043e
06aec66965c2edeb9067492026cf33dca64b8c71818f995a9114e71550fa2fb5b84fff1a52c074c6
d3a89adfeed5d0419f877d17a00c1f52f9ae85e096d309f94243b4406a291b93d7f6ce1791447893
5d2d3cdcf21d23cce8a9befd88698aa5087844c39587031fb08c5964e727b7f57028f5b0b01ea1f1
e603e507d1a8d83df279896291f67538070e625dda2d38dd2a4a0e6cef27ff5346f84e0578cd20ce
a44b9742fa784f49c06c81c2e46f9788158c50beb12e9a9bc8c829a6d7ec81c598058c53c571827a
bad8beab9afd54b4041f3d6f824fb2ca57fbe3d528eafa7407ff8198f0c2b305c403246671c3269c
0464e3583df9c78df6e23809ed962cc4158070726f967f47e40aa5897e220936792e023b23833b39
d064e8267ccc0174eb4d4ece5e9062f4fe1b694adf79a8c7d15a97192749a27b8e4f5a48490ae2b3
7ac70ecfb21f9b8974e10e38d3c0b62af7714c5e910d5ed58f0fb142f4f7a8c1671f20cd993ef5da
57b9ac12db250f3ed274dfc08959d8eedb7e9438695dec19d405f2512511d517259b01e4a66bf763
a186e2aeb536674b24488619bca5c332ca8d0ce0675e404774264a70fd33a947f4c379038a9c3755
535d275b02a46f417b87ecaa9ef553d4596e7dbfdf87f96bd7e089d59480b809bf1a70210c68c7ff
1f3c2b112ef2f514ea3bcc164da8636b83e09d0abd10cfec45be7436a823c844d1b134e2fc02bd3a
c8608d4d9a51a691d4c0653a81245e67eec98f5cc27bbae33dc748f6249f4f2a685de03b22052f08
4e2db0d3970a677709eb35399dbc952a79597e1477351b0dc7fd29cea155fcace2d947158f862a3b
11e1429eaf25c81c9bdeff42bdaa51279aca6c33f17200f2ab1b4db821b8216dc06db2918c68a278
d95793d288a14290737bff4ec5b1c79a1b630ad60619bce3bcfefeeef254d8b22975271127328e85
d6859e6e984099334914494e08cc072e34a0a3f3103c85461982fe98e798833a138c03d0a61491a2
d5c7f3f000e2b7beb15d1411efc852140ad8b42171e7a4e964169c2e9cde1e3e40b718673b7e60b2
18a3c1a3d4b0e5ff758c0151f7a88af6d1646e3e20765e031a37f70d40c2e894d11e277e07992021
071712ac13dd51fbc2a4cde15dce16be958608791e66386501c9ebae963f03a98ed1bc590129c079
6156549e65aed10dd0ef43f762e2fad278d9e76aa577363bf7c8e692bc07937860cf9830cbbcb49d
83d6c842b812f15940711dcf8142ede3a75627a9490478a4063c78fcd6c40d3bdeaa923defb944a0
0b99609e90cd3d598b6d1518bcb8e570383f8d3e3f0818de29c260dfca3d8a526b315c59153fce46
a21e0b056c40a457bed78995986f9076fbabec4e29661b186ebe670c68c9a5d56951752109f6414e
9386d3c4ce2b69299910a805268103a59ae0860bde1ce6436112f046a2c7d23e6dff95f3e5950786
d566c407998a4e2fe8a9eb1ee2a1689217f58406b85a436dea81930b5d74e11ad8389544c474e4f6
44b83bf94be680394298c4822dab1ebc1b7a3ecaa57a1feba840d13b011c92fab1d955d0e6fe3529
f14741ba14377a45fb39e27d2b358a672b4eb7be6d7890cbe5925ad1956f7925eda3556a9f3a983b
c6547a092db911a16124af9719718eee4cd6256e1632c358415c1bff7d53f582e093727f645c3c7b
8932c8d44f226043f996c85032659d5cfe2af5e24f484a8f8c358ec44e0f120aecacd35e55bfda3d
e30d6db04d9101a5bcaf169182edb0a378436a9d61600371111f7369a99f3b370f518c9cadb16fec
a03e519bc593a867db3a809b8cd6310d3241472fbe9a2b30af181db6e0d61c340109aec907d9fcf4
30494f6214dd893983d811eaff7d2614f44b41be7b77722231d778071e99ba5597b97bb18b66bbbc
37e11c843951f4d963b52aa2ecd839a772b2d7bf8dbc5794245ce185ba8401f0d563f410ae02c6cc
7a710207f2e5078588bef83cd4029b4cc0f3116a6a8f7dd17aa63fb77ef090a0a0fb314c52abcaa5
e27476c699a22c714e267152aaa7f4aeecf03e933f1951b77a4d4e8b8af08d86ef673ae6f8d8c333
d5c105eb8c830bac408b238c6b449d31b5fb8707d82fdacd14062f95d94bee3d90f3d41e86cab1b4
fd2131b7409bbcd311b0c07d5ec794fb8f06c5f5550fbcdc9c0b3b7b2cabe348d13d372189695638
167a37f395ad89d3f2d00d118cd16163c15f53805a96267bc46b17c937948ff5909876c7f55c49ba
0c4363eb53f2d16ea4ead3f993dee8df3be7c580bbd2879de30145c109e05c57a9fc293e985fe877
b1c34c36b4075363648d2fb70c056b4426bbc9e3f1d376c5c587382a4a671c9e55d79664a6805474
8371290c2e5500cbe0ed8f305bf5ee9e9828db9a0585dd9d044fccde51fef6e0fa07bfd7d67bdda2
9c30ade2bc82c33c2e6a51f8a9b349ecedb019d21470508a8a95e25e3677da4643d37ff4224ddb71
389863ebdff35b16c919b23d4c3a612562a8847d64522c97e6a94a616c0ece757b611117a757f6a4
70f36ff2d133ca2aae3de85fa17f8dc5423b628b18172d8a836dd916bd21d290c014970bc83bcbd9
56f9b1a7d1b765964ce67d60f43546033518ffda2ec47cfb680898143363b66c9affaadd1c5edcdc
ec0a15381d8fce91049c1e9bb3967e2acfc2cc654f2816c1e9f4ee7abb48020001e6c337a55c003e
8e19d2d8b108c3056101dbbbe4b95f089b5e2921083c67ebbf1d05216587bc98c1db21849548f46c
c7d06fb5154b16f0a738fd1acb566171ef6c1ba90b792702a8ad4add1d182d83eef270c65cd7d6f4
4947df9af0abefa8dc5048118b7f0d586739bcf2d3aa99ac422f33b167fd267a27c1d641dee61357
06d32faa28749151252a9c4a2a2dc99a919a5eb9b4f68d39c370e1e49a1402e0b7b4baf7280532b9
7b61bb4eddd2e8e72ca7253fa2798baa30b0e8a82962be0a5f16b4a24089e4ba0caf330c9c30bb95
bbde7f8af8ad9a845d4f6f3a15100eb774a0c0de7e2142244b54a2528ef53af506e8d81f2047cff3
d9eb8cfaf7eb0efe9309bc118b24aca82ff5e6c2397128f77946b327824789053ea028a67768685d
ccd49e44a1db3afd62f41893d4a6a47cfe4115e5eb58eedfc6e70b12f293e5871a97391f320c22f8
fb1535b94cff091764b36d47b33e8c1f0d3831103a500dbbe95c1c85c9f5ab93ddf80e9b18dd6172
11281c870b8f06da3fff89c6f87df02446f8c9ab592ca6b86037669f586f77dd41fc6ee26907294c
da859e655749702431a92bac847030c21e3583d02becdb03b61ee0d6b4bc42e7eeb33d163f70cbd3
9ec7e55c92021b506c2ddbdf9b99bcf84755813817206e473e0134dc71b267475963715e7947e04a
518cf2ddf9ebeaf9305876baf263dc2f456521a0e741441b34bb952e270d1b8f8125e9b229e60583
2e72033546b790cc5dacc8b5bc26a97da6e86b04ef85e2d935429e10be9cac75e0185c0d3b13ad2f
57a8def924f24cf2c80c5bf0fc2474675158278eb55dc3af5050b1d479f84562e9db443588e5fe38
9b2588e70908744eb07e6709e052579cd5a6e68c83175227443dbfc0d9a20acc4b2d14fcb79433f9
5c151a8e2b8c3eb68a6f18ba2a0d7e637397439a9fcd0c0e5dad3681a9b0eff9cf6c7185d20120d6
408c109308c75cfc653ebae0d9f92d42107c2a9f5ea05e88147777f44cb9a82fe0f3fa1f8976a727
3a4b582703423cfc1cdf085eacc0487d7b9db457c78d6d00899e0891f217735feddc5cf210601f05
bdc5f6110dbd54f4d88011b16e62ab75b352484cce895c5b3108280316e2e46885abcad8c4ceb99b
e5fbd00101a20656d406ba4b759b7d6fc57ef55541e453790090baf24e098b59e5dd7cb5389dfbcd
2ed9161c3de0f7b4da19f8ddf8277077cc8f5ef3caef550b6ab6542045226098152cb6aaebc7d258
a14cdf56a2baf27b8930c298f1d919066435c32223472dcd3abe5467b3c132a4f159b30727a53d12
3698dacef6122ecc8515459cff7513d4738f529664de910a3777bdbf249fc40e7e778ee63cdcddf1
cc3d86759283c7c48c9615adce0ac5ae489638614d7bb654bf1211e20374f6d22790ac6d894a7334
1d6cffd2b7ff0c3e287099a929584fae83ccbfbd21bea20f355e5e3a1a5df70eca3679624626d356
52eca85ea3f650585456e26b731b1b3244558729489ce77feaa3f7ee2d75e5767b8507e561ca2487
be9edc80a6b655cecdc1d2441179f9f6626e6dabaceb7081236ac0d6e1fe93b0eacedb02212cb2b6
a4277e2562e56f6ae99ca8a8e47a39aa142aed6900ad70ede150ac62dcaf4baed12867c848379396
7dfb0cccaa81fe0ea5bc4d88793919bc0a2b40cc3471d88276f2b1629d92e5bc75481936aea0c7fc
2de39319193bde754d931c7e790d25423b55b53ba942515b379a7634c4acead23645a11f69590b4a
bb06a1c50384a12472d97715498ac7d6142361a8c7aad3d84b50a663ea5b17c53a569b65b959becb
9f12d0df58d856199912a84d51ad16076849d7a2b97c0444d3c924f990b309b61eb20bd154b782fc
7ede47a5fb0823661b2cc5011a634ee7a21feaad4abcdc80f1dfaad31675b6a9196f11eb260c74de
15c11a5ed36ce8d1ef1e6b8cc34c09b6aa798d53af6a910f8c08c97e1b55789ff0594605505e21a3
c4d575ad6b5b4468ea217a3178fc565d8be8bbe718ce4bb51cd5efe7007ddab4b49da8f67d936966
cc20636c2323ddfce669a297f130f63c800b04375b07e5cde621adb6960fb1136a46b71260672465
86173ebaebef3bad1e07bb44c62bfb70e45cf5174abbda411ad6549dece8b6def1d294ed4f7801aa
4331a19e059125adb2b80ab7412c0c391e8b234785a58c36cf3d9ef54f6df86509d8986d01d195fb
b9a8e814e7be0b9637031214d91850475db5ade5de4f5ab47ebcc5d1e79237397ebcbaa6a5ee7fed
e75bd868ae6dd5c681da8ef66e803e84591816a63a4de34969c7def81a726e7f2a6962a176023841
b4f3aa9a542491acc11f0bf11c4f8d488faa8190a304769bc81a2e5ba5b8ac128017f8ffcd7d577e
6023718d17f381691f8d56fc50f3cdd4f7a0c8f9ec9e7240b8378ca08ba1356f7a28a581bf181ddb
45af36993c04012494b22c7944c44383f1c2918ba971a601e7b45b9769ea6da4d580307b2705503c
6470d8b4c985a7d6243cea3d07d3b82089abdb9942387379edf79cb306c6b20666706285d6c4c671
b1df2e828d8968bba7b47031daab68587f9040af9836aa6664a0d3fed48635485d3cb7c915e16d5d
5a864389d52649e470eaa59f146b2fcf839b68bf88412e30570afa7e9777ee3eb4fb5805a6a6688d
f61ccd5239db0b5d34fcecaa90374abeb75c353dc40c9b3570b04d3d67b18782109bcdf403f9ee21
64ff5558ce60eca0aaf4056873aa3a7f36860fc046c31d2ee89f152158c4f86c4d68dedf9de3fd03
9720b155e7d53a69b461fb0db47fd126cc4e159f24bab7bd73e7e2cf20be8ad274a2e400af9b2a57
6e1dc5d169058ead923274bc2dfb2cd5246eb5b35a585900297c7b71af2c7fc0b14c8e9a0697da25
76c93cfb3af24fe2c22b7e927d778eeab8915826ff795ca12b5dccc77190acd847573ff872cc2cb5
9a44dd282dcf40908b901d7063cfed79bc69bef3d4c77a0645af020ccf364eab3f75187cc35b5ed6
c05642245e6d19bda50c27bdb4e1916a04dc00f39f909b542e132b3af8899a9e39fd28e1340e7e9b
212b5c6e198c17d46740bfba74bd3503d06fbe9ef3192330dc2c48d230c9e53bf8defe974d8b7ba7
f0e163903ae543ebf7836672caa44e75d8fc5b2b59f0aeb813948ca7b5c98aa5da704b0b6dcff190
fa403c7371b2b376fa715c1aeea6ab78c99f0c8ef07378f6d07642e601772f24151a01d82a73be81
5225ce72642e0fae8a73344f0411470a7ced8ec36eb3bd177ca6761542e76505bfff9f80758e8a1d
b50ff30bcb2608340a8a9bb2f34165d40911dd994eb271c144ca61072a27e5f1496fd9baff98b637
911f5dea95bda7458b0d686bddd61652108d9aade1c05b35bc99b7b7dad719046c7fc9ca5d7bcdee
680f1906a8eba46ce9d8d9db70e00f8eded467c1af00649c60e00a4ab748859d9564879dc1aba8ec
cd042b870d6431a56e212640b1bb4582bed832f8ea7caf5d881b680098a8249dcd820d11f5f5870c
e2ebe37ca90fdeb7e4e9bda18fd3414bf077cfc2e886450e4bf87452e0319522334826159a21b2f3
adbe0deaca388acbd0c2e14e606576ee124d442cde0b64641d30c4a6ef4be5d3d2f8da78ac7356cb
f1e9746090967f5a570b9e8c98367a78b286143650a9b30a501366912b61ad02019e8bf8c0db90a1
3fd0fbb241b8f61feed1c0bfe5d343f27af6564de342ec879e518818cc4b9d9bae29a057f0f64770
415e4a1b93f3bd9e434ee9e19c3d28120704e9c4c15ae04b7df28d56b9cb6a2e92e292c315727e30
8509741370d518d2aaeab00613f0d310adb4d19456fc6fb5f371b636b955ea3a1da23714f4c5b83e
fa8bc52e247b64db8d287df382ddae152d0c61bc196ed002939c032c0c25987b93d48e303d2ac5f9
e77dee2d826025da2844e129863fef4c6a3f9a7c60859baa33886912decfa0e1994953c7e9da39fc
dc1bb6e107a23984d1fa192ba144f7f1154297714715eedfd9bcba0df04b203ef82dadf479fe3a6a
2a28bdbbb352347462bb8d86cf239c02e8460db21620fc93e4ed2e03d689c65fe795860efede9b5e
d8be5d4ddae4be5c49595fd9c38a90b49443e5f8cd3de46027443d5252d304185726c9db0d56e3b5
027d22f3786fda1be20380be9c39cac016119d0bcf2e03a2e7ec26d7fef006c21bbf58b99f901b8d
b906bc575853d906476d196da431a64bcef387e09457b4d9129542c79136ff0d74f8be538e525276
5180b0a866afc66cb8fbb48afb8e57ba2d90635cabebca5a10bbe4415c035afce250f295e8136366
5d6c3898dbccd418003430b01c395e41574b88a7ab5904a02bade7a076cfe8ee7c228b49cd2c08ae
6d88d93c36c86cd15bee3f6cb93d416958358609fd1cad941a04b14e8c4c0a56fb2a67488d2776b4
0ee27414ddd5b9f7bcd597bae9c6fa137be4eb8cf096cf62c8d1886986e2cbb9ad209e5a25417e45
0dc9cf9a5628030f32e41b4a1857ab15cf3f7937cb7da1682a396f6730fb7dda956e4a6f5c6925ac
9bb1a386e47852b580adb0595e450bf50ef2f5626e58784c8c94911ef8cd615fae843448da4b4702
cb48f42fa6916e1bc43ee284a06c29643a01d803f54a560fc5c6fb7764b185fdad3a9c77d2501efe
f01b336df35c2330f121df75210135c6a80f6bbee95d44c7d93be7603837da0891a22e2e8951ae79
5111b9393f2f4208b8b45ae7006b9a40560f34aa8425d04f972caa5ce86aa6ffa6a73c4f7b68d293
529b1356fc1b3a58137a16a59290aefe39a42e5e294964f874d1fedabc2d59344f3484226d5125ec
74f4705a1156d49e1afbedd742bf21edbf944a24e30bf7c4199d553b2a77f54bcb968b82b22a9728
aff7b9da0dffdbbd7c973f0571883bb630f168bba2896a07eedd564c6a90ef8531bbe6e8fd896873
070bdf0284d15222d32394b7de7b6f667314f3074f4640ea6c92ea17802d043fec0bf575481aac48
078876f7c7f1ece7f68e375ec7850b3beb5cba31f599b9d9d3fd1f32f1f1deeadc3db03e058de197
29caa589692e832315e12b9747805f08f215ab60c8df3d035fcfce0f0d6201e7154786ca1b20a1e7
61899551d65a86eb4ebfa7d965a8b6c3d9ef93a452db1f106887f8587dda07b9a7cff29306fad45d
05028868b4e2af0244ff3c0da0ce96a0fb8a489b8e02c8a29e0056af5d1c9a5bba2acaf7c97e8b68
9c90786e67e93c32d606f18793254ed3829e7ba787830157368fde68231b608538bc71ecae31ca8b
d18bd82337aea6844c511861d850aeb9ff00a05c33b70949e35c2e9e11e727c9ce2fe9c9ffd1018f
cd1c7ccb7fb2ac938da9eec30e0a0d7550b6fe5508d6e9152841ecca7231273ab5f027e0f69f2342
1da7dc7184663b70cda05e52e3fd8f79b916e3b0c825c79f0fbf2c8069ed8040225ec07b1b49f627
8891553ebae5d821e79ccb7e7a592a390f20250b2a47f49b6d5a55d14da9303e7681f7bfe04560a7
61c29df0148d690d6497db767381a9223afa45627374e24121e9570c7fb2ccd459ef008c3f14b357
0c9cc005d775143adff20b34ecbe39d4959628957bbb6d799fc4270367024ea7f64f0cd45e978c8d
3eeb5984be4a4b85aa571953a1bec11ae3dd5a94ab10038c6cc0b64aff4e4aa15a6f36008ffc8857
6cb8e613f28200fbb83aa5f37fa6157a2bdf665671014eb1ffd3da811ea34cb7b0fa8c6575bdea93
4212c218bdfd535d361dc2bd630ca412edc8e2d8ebbc21ff2af4794006d8db58f8d7dd8e90d54839
f574f3b46b4f21d97e7a16c87d300e4f556e2b90021ffd6839c95fcee7251d33e0a7dec5320cfc7e
88cfcab6779b07e665ee0f1e0900ca798c1289ffa7354e7b5b878cd93749dd8a6c94bbf58fe10698
9b5faf177977ca16ead735c00c645c4d4f4b442015e7e76a9e9a1eab0585718a4b43efbece7defe8
08ac94feaa7ebde88431fec5cc767841aac45d506b63af2dd4cfd674165974aa4267e8f956941937
708f5234062c8580314daa253b45aa68cc6400d167a9575be542dd4ea18112fce0e81097ffdf68bb
aaea56f4388f6c0754f5c30445a366281c088e09b366e9eb3c8a3195cd80a5e14bc25689d10f1c5a
b34c587a5d34949508b6a9c045707f4a19bd6bf7f68fabaac58cd859331d77a7778daa8aa9d42e84
fa8fe7b82d9a5d48a075a1f305802d86a37f16dd89fd3f16b4b8dcf8302b1b42fc60867027c33772
735e59f09c891b3bf550a98c9875c154b3e751f36fd4dde012cf32f7823583b7be44c2030ad29445
2897b5ea40d1b0f200a2e1a36029184b2922c2d96f1b4ed34a3fbe2c4aabc584930d001b2fbc2de5
a3c0b88b87638a34194541cc02a2089bc4c830589a399279c98a40321565daacd6d70faed796b3a0
45711117acb47483120a8cc75ce727c447237c8312465d566620ccd3ae1a35ab074f715f2bce26ea
e44af9dbe406972297bc94071acb2345cee00cfa740205da180a98b1c7bf54ef9a167bb4b6f39b4d
e6b0de8942e417d6ac6dd2c855f8445a95554a51537238d81cf665a5e7bd795a68becef32f60bf15
96587ba32b6e67f0a2e69dd8a29d9132d360f80cd24dd3d8049584752819cbeb650ac2a9e9213630
a0fc5edad72c25f15b8dbd3dcc524431d0ee696a78e51fd9767b6b26ccf100b44c0076f9cc4b282c
0dd0aeb2613fbb9df112ed4bcbe1b93f306e4c56b200b1abff2840ab6173cc8b1af623e3f9d4248a
5cfb31c844d7083478b332cacb74cc3b05dbef2328aa4bb6fddcb087e96b9b8b46c2c53377055f6e
c6fa84f92de715293938447f9ec64b20053c9ea7bbc7f0953cd977faa39cbed2ad5bf5a90b4f494c
25d4324c362461c3dfc0087bccc1cd3753e66fb5683a5bd2e8661d361cb335caa54c20134e981c4f
dc2912d73efaae3a2e136dc975793b168a03ce1a7edd440bd3b7ba179ec5a8e1d74c2a5dfde38b8f
f22e0722fd3f2742c8513e8f0f384a5787c7635bebce8bb98b4c21f1f9cf448fce3e4164520c75da
07b57d3ed729eac4a160f21789ba72c97f06b19c503df18765007fad95865ac9e0a60939cdb36db7
6914db72dcd9b0253410f83699dfd6dae61c63c61c32c532a1e80d286f8e264df48f1278ff7804a6
8d5fa52925a488938f1912f17d8d013bd49091304ed97ecf0bcdc36e909a2938aa0553c9b3b491dd
759109f9ed37b0aed0e8e69077bac03291cff8bbd595cc2b92bbec28ecc6e86a0f5a3ed46d1e7249
52414c05ca0642fbfa8664869bdf00673ae22b12a2056b260053267c6d7a9a89b6ce2588539692bc
d6b5ad0f2dbbd11e37cade3ae82f85c4d01a1242ec3df6014d959bced3c499fbbf35ae36f80ae5ea
ceffb28142c83743d6955b99e683afd7d3728f03c760a2a6b793a87eb9e357c007c2bff55433034f
118fa09e79641ba65d4d095816b9f36d722ebbc07adba48d0b45011cd16e9e36c4faa0c6e9162eeb
282b186dee083ed12c283727e39e20c7214c0700c1e96abec86f6c45171076787b79c827d5278b86
ad3d43d7c1e5a6f76aec2608a0bcd9b1de46f8c9856d7cfab63eda56af733d91c922b40fc83fd27f
0b0e00e218cfcaae02ae9b384696cd66d8eb61e9e0d1891f362e2122ed7f13f0ccbab3683e98c773
ada1635d2b16194b82f73227184a485d01ebfe64487d21815910580063551b8f8938a9a1b14a0bf4
23e7f482dabb1139b9aa9adde417faac35891d8ee588386523d682b90b59eeb5be789f4734e2d4d8
78a6fe5f0691f1aa431153a2fd613b4263c371ac049e87f72084039e9b35e571443736c763c6cbd0
0c63a60898163ded911c5b4a1ffffac9664911fa3bb87fb5fe5a4f02c1b81b915dbb7c392abf4785
449a59caf3417e4c4f5f6f437bb12b3b1f6f6841f6e2584bd2ab2e4d7956e94b55542a41d1b5eb84
de8a747eb1c69bd7f6aeef6a08f7e406c780a7bf5b6c6c206a051c078b67e144cf7f6cb0aaaebd5f
b2ad28e7b296d58dc9de9b5183731b1c076f2c10a645d959a2c2dc83120891d265531ef083f08854
6abc4916a8ffead62b57b2db9eb8b7c8d0008c7ad6f405194cc96700e665eb7726880c903df1dc3f
0f3e82de4e6730129e388c52adbb0a18743f973b9bd60b9dcc2591f20036c6eb19fae9f989a50d02
d7e5b446c05b48b1838b871976bb7ca90df185bb7130be69054c459bcf2790de3751dce1340f1337
d55987299a5fc77dd06ca1358a37eb2cece726c9b9e34ba9426fd11de6211e936215cfb621f31d1c
aaa8192292b8d43fa5f29764d4a208b175df0b82b4b0e0ebe09b6c8cb6691d9e1bdf1411b7612344
9f7ad69e3774c7d372236d65b11330f833a037c7f736a8739560e365c151a88aa8d4f6b8eda880ea
0f5406ef74398a96623e00f18d0d7bd74d91336fdd41784eb1dbca6e8a15d74ee8b8543c417db7f5
0b8cf605f6aaf2b63d38f6ee4e9673f60158f1bdb3b5e915cc5a9f7d4fef798067bcd39a0605d276
08dd6e64c9ea162f5e01783d35bc6825407770d4a6dadde5aaeaa726cf5d89af5f3b8bc1612cc3fe
e47477876b810ce37eec44231dc7a308008b59bcd07b6bdb3f69005cc4e2575f33869fda93483cb1
04350adaf0a2db606f9ee602576f742d6a9a523ee9be3a19a0ef6296101f702001ebc9777544ec0f
8c95c817f58f9315b13101765dc6d89ba963fc0bd9ef176f5577b9eb50152ff8423b3153875083c4
c5aa976110a06679d39b4e82f483668cb265e89cc7266c81fc1ee5890b506e39cde805e5159fb9ac
00eb214e31a93a702298c4438805e40dd5c0b36e2aaa27d9c82d1ef3e2c434189402dcf40f917c49
356d8dee66b5f03f9f840195ef89a3ec6bcc3c949fa20068154b0dcaf1ae2a91d0ef37232823a7ed
1250c85b0151a7dbdf1917367fef29575da6357094c9ed6a7fb9c7fdc585216cc1e649a55e202259
65fd953d18309b08f3297547902cfa1d74471f02d4d2e411055950ee38c8118d735ad6fd23cbbd3f
8b14e56b41942fe50fcaf94f232ff8c14aca618b8c321ecbd1b7fc07e4694a7faebb2c525d0fb37b
703bc18c976ff89d20ee7bf390cc76f2090d04981c92f519f9cc4156849bdbeee3a9ac41cbbb1553
c3d68794a425613959358d0257d0d4714444b7eec8ec9060e6c9eeada535db7dda7fd68b46db8919
838d7f7d50f1371a1cd63ef66b87c9331609e66f8ca53e17ed615646cf4f72d1c87b0a1e25d8642f
99de744fc55d74ae8ab9547204797bc71f62a62522cc52fe530322c40d1d638b45407f5745f0d23c
716fabcffea3d7b23ce1f20966c59e9be219786bec6290435211fbac32935a631f30f8fdfd78345d
f710eb6e3cd81f800c3cd7fb2651c72801569493e5a8099c93810ca0b71c2b164e60c1522fd246b0
db5bc0d5862104fd68c51adff09c7366bde2823778898fb1bec0a943424106326d74acc3a749ba3d
36706ea2a6977a7b79f79ae599eef2d8991b7c94ed876d2e0f9eb151a7d0bf6c2c95cc946a2ca657
2b053ccadf836ebabafe696aa52bbeda6f3f7f359dd1d0cb773861714db907c859fb9c5c79a58e7d
e7d65717715266b4f5d769de25cf250b1b8e22cff12aaa3f539b6146d21197fd975d52157e1a2a39
99d17b773c00851f2f0bb900f727ca1b33c54cd0af874397a1f4aad40ec748ee119f0f8fc643fba4
57433a41734356f4e3f4405d5a4a7153d884f7c7ba1e35efa0e114015343c3223801b8121475817e
79179836fadce6bda75e03f5c87f68391fbff6fdc7be23efb3e967b27eed38bfd5db989f1bd5b976
df8040edf10513534d6579562f75eec6e36180d758496dc75a986eb3e31081b53d8e27010bb5b0db
fdf49cb773f00ee779ca9db62ecc4690d6c62926355f9b9aebeb99edfbdb917993b7e6e04185690b
802b4ebf00cb41a7ec12eb1425ccd63071ad8ccec3b311319eba65d707cdc1b6be1cffb126678752
f44a5332bc80f546cba64bf68980e55bb7eb8495944715f52058b4451d9a72fc36ef9404cd380789
0137942b8938c2a247083cb34d6496641bae73ad845993fefa3a042594645d244b06bc23d39410d8
dcb49ab2efc855cbcbe20f6f708ba609c04fe7a081ac48489d02fa1c81f547687e8865d547b95f0a
0a05eee1450bcaf7a80651a29b28c72ae0337a56eb19037194
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 SSC_Copy_State <Virtual>  0
 HBW_Pick TASK  0 -1
 HBW_Copy_State <Virtual>  0
 PID_10 PID  0
 PID_11 PID  0
 hunt_exp_light PROGRAM  0 -1
 HBW_Home <Virtual>  0
 HBW_Pick_Sto <Virtual>  0
 test TASK  0 -1
 HBW_Pickup_ST PROGRAM  0 -1
 HWB_Extend_Arm <Virtual>  0
 HBW_Retract_Arm <Virtual>  0
 HWB_PickUp TASK  0 -1
 HBW_HTO1POS <Virtual>  0
 HBW_Left_1Block <Virtual>  0
 HBW_HomeTo2_Col <Virtual>  0
 HWB_HomeTo3_Col <Virtual>  0
 HWB_HomeTo2_Row <Virtual>  0
 HWB_HomeTo3_Row <Virtual>  0
 HWB_HomeTo1_Col <Virtual>  0
 HBW_move_left_1 <Virtual>  0
 HWB_Home_to_11 <Virtual>  0
 HWB_11_DropOff <Virtual>  0
 HBW_Pickup <Virtual>  0
 HBW_PickUp_R1 <Virtual>  0
 HBW_Send_VGR <Virtual>  0
 HBW_PickUp_VGR <Virtual>  0
 HBW_Return_VGR <Virtual>  0
 HBW_MotorsOff <Virtual>  0
 HBW_ConvTo11 <Virtual>  0
 HBW_Return_Top <Virtual>  0
 HBW_MV_11_12 <Virtual>  0
 HBW_Conv_12 <Virtual>  0
 HBW_Conv_12_Lat <Virtual>  0
 HBW_RETRACT_13 <Virtual>  0
 HBW_Retract_23 <Virtual>  0
 HBW_Conv13_Lat <Virtual>  0
 HBW_Conv_2Row <Virtual>  0
 HBW_PickUp_R2 <Virtual>  0
 HBW_Conv11_Lat <Virtual>  0
 HBW_Retract_12 <Virtual>  0
 HBW_Shift_C1C2 <Virtual>  0
 HBW_Move_R1_R2 <Virtual>  0
 HBW_Retract_22 <Virtual>  0
 HBW_Retract_21 <Virtual>  0
 HBW_Retract_31 <Virtual>  0
 HBW_Move_R2_R3 <Virtual>  0
 HBW_PickUp_R3 <Virtual>  0
 HBW_Conv_3Row <Virtual>  0
 HBW_Retract_32 <Virtual>  0
 HBW_Retract_33 <Virtual>  0
 HBW_Retract_Done PROGRAM  0 -1
 HBW_Retract_DN <Virtual>  0
 oneOperation <Virtual>  0
 HBW_Check1Puck <Virtual>  0
 HBW_OneTime_R1 <Virtual>  0
 HBW_OneTime_R2 <Virtual>  0
 HBW_OneTime_R3 <Virtual>  0
 HBW_OneTime_C1 <Virtual>  0
 HBW_OneTime_C2 <Virtual>  0
 HBW_OneTime_C3 <Virtual>  0
 HBW_OneDropR3 <Virtual>  0
 HBW_OneDropR2 <Virtual>  0
 HBW_OneDropR1 <Virtual>  0
 VGR_Done <Virtual>  0
 HBW_Return11 <Virtual>  0
 HBW_Return12 <Virtual>  0
 HBW_Return13 <Virtual>  0
 HBW_Return21 <Virtual>  0
 HBW_Return22 <Virtual>  0
 HBW_Return23 <Virtual>  0
#END

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"VGR Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC410 C410 1 0x0 MC409 C409 1 0x0 MC412 Y28 1 0x0 MC412 MC450 1 0x0 MC411 C411 1 0x0 MC408 C408 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC413 Y29 1 0x0 MC413 MC451 1 0x0 X27 MI200 1 0x0 X26 MI454 1 0x0 X25 MI453 1 0x0 MC452 C452 1"

// Rung VGR_Copy_State#2
// Offset 33
NOP

// Rung VGR_Copy_State#3
// Offset 34
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
STR ST1
OUT Y29

// Rung VGR_Suction#2
// Offset 2
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC800 Y41 1 0x0 Y41 MI801 1 0x0 MC802 Y43 1 0x0 Y43 MI803 1 0x0 MC804 C804 1 0x0 MC805 C805 1 0x0 MC806 Y44 1 0x0 MC807 Y20 1 0x0 MC808 C811 1 0x0 MC809 C809 1 0x0 MC810 C810 1 0x0 MC812 C812 1 0x0 MC813 C813 1 0x0 MC814 C814 1 0x0 MC816 Y45 1 0x0 MC817 Y46 1 0x0 MC818 Y21 1 0x0 MC819 Y20 1 0x0 MC820 Y44 1 0x0 MC822 Y52 1"

// Rung MPO_Copy_State#2
// Offset 45
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC800 C1616 1 0x0 MC801 C1617 1 0x0 MC802 C1618 1 0x0 MC803 C1619 1 0x0 MC804 C1620 1 0x0 Y31 MI800 1 0x0 MC850 C1621 1"

// Rung SLD_Copy_State#2
// Offset 19
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"SSC Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC606 C1200 1 0x0 MC607 C1201 1 0x0 MC608 C1202 1 0x0 MC609 C1203 1 0x0 MC615 C1215 1 0x0 MC616 C1216 1 0x0 MC617 C1217 1 0x0 MC618 C1218 1 0x0 MC619 C1219 1 0x0 MC620 C1220 1"

// Rung SSC_Copy_State#2
// Offset 25
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block HBW_Home
$LGCMOD HBW_Home

// Rung HBW_Home#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Home#2
// Offset 8
STRN C215
ANDN X0
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 60 60
OUT Y51

// Rung HBW_Home#3
// Offset 26
STRN C215
ANDN X3
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5

// Rung HBW_Home#4
// Offset 43
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y76

// Rung HBW_Home#5
// Offset 64
NOP

// Rung HBW_Home#6
// Offset 65
RET

// End of Code Block HBW_Home
$LGCEND HBW_Home

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 Y40 1 0x0 Y80 MHR102 1 0x0 MC101 C205 1 0x0 MC102 C206 1 0x0 MC103 C207 1 0x0 MC104 C208 1 0x0 MC105 C209 1 0x0 MC106 C210 1 0x0 MC107 C211 1 0x0 MC108 C212 1 0x0 MC109 C213 1 0x0 MC110 C214 1 0x0 MC111 C215 1 0x0 MC112 C216 1 0x0 MC113 C300 1 0x0 MC114 C217 1 0x0 MC115 C218 1 0x0 MC116 C219 1 0x0 MC117 C220 1 0x0 MC118 C221 1 0x0 MC119 C222 1 0x0 MC120 C223 1 0x0 MC121 C224 1 0x0 MC122 C225 1 0x0 MC123 C226 1 0x0 X2 MI101 1 0x0 X10 MI102 1 0x0 X11 MI103 1 0x0 X3 MI104 1 0x0 X0 MI105 1 0x0 X6 MI106 1 0x0 X7 MI107 1 0x0 X8 MI108 1 0x0 X9 MI109 1 0x0 $HBW_Encoder_X.Acc MHR1 1 0x0 $HBW_Encoder_Z.Acc MHR2 1"

// Rung HBW_Copy_State#2
// Offset 77
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block HBW_HomeTo2_Col
$LGCMOD HBW_HomeTo2_Col

// Rung HBW_HomeTo2_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_HomeTo2_Col#2
// Offset 17
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_HomeTo2_Col#3
// Offset 22
NOP

// Rung HBW_HomeTo2_Col#4
// Offset 23
NOP

// Rung HBW_HomeTo2_Col#5
// Offset 24
NOP

// Rung HBW_HomeTo2_Col#6
// Offset 25
RET

// End of Code Block HBW_HomeTo2_Col
$LGCEND HBW_HomeTo2_Col

// Beginning of Code Block HWB_HomeTo1_Col
$LGCMOD HWB_HomeTo1_Col

// Rung HWB_HomeTo1_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HWB_HomeTo1_Col#2
// Offset 17
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_HomeTo1_Col#3
// Offset 22
NOP

// Rung HWB_HomeTo1_Col#4
// Offset 23
NOP

// Rung HWB_HomeTo1_Col#5
// Offset 24
RET

// End of Code Block HWB_HomeTo1_Col
$LGCEND HWB_HomeTo1_Col

// Beginning of Code Block HWB_Home_to_11
$LGCMOD HWB_Home_to_11

// Rung HWB_Home_to_11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HWB_Home_to_11#2
// Offset 22
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_Home_to_11#3
// Offset 27
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HWB_Home_to_11#4
// Offset 49
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_Home_to_11#5
// Offset 54
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HWB_Home_to_11#6
// Offset 73
NOP

// Rung HWB_Home_to_11#7
// Offset 74
NOP

// Rung HWB_Home_to_11#8
// Offset 75
RET

// End of Code Block HWB_Home_to_11
$LGCEND HWB_Home_to_11

// Beginning of Code Block HWB_11_DropOff
$LGCMOD HWB_11_DropOff

// Rung HWB_11_DropOff#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HWB_11_DropOff#2
// Offset 8
STRGE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_11_DropOff#3
// Offset 13
STRN C215
ANDN C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51

// Rung HWB_11_DropOff#4
// Offset 31
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y4
AND ST2
OUT Y5

// Rung HWB_11_DropOff#5
// Offset 51
STRGE 2730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_11_DropOff#6
// Offset 56
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 60 60
OUT Y7

// Rung HWB_11_DropOff#7
// Offset 73
RET

// End of Code Block HWB_11_DropOff
$LGCEND HWB_11_DropOff

// Beginning of Code Block HBW_PickUp_R1
$LGCMOD HBW_PickUp_R1

// Rung HBW_PickUp_R1#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R1#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R1#3
// Offset 41
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R1#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R1#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_PickUp_R1#6
// Offset 69
NOP

// Rung HBW_PickUp_R1#7
// Offset 70
NOP

// Rung HBW_PickUp_R1#8
// Offset 71
NOP

// Rung HBW_PickUp_R1#9
// Offset 72
NOP

// Rung HBW_PickUp_R1#10
// Offset 73
RET

// End of Code Block HBW_PickUp_R1
$LGCEND HBW_PickUp_R1

// Beginning of Code Block HBW_Send_VGR
$LGCMOD HBW_Send_VGR

// Rung HBW_Send_VGR#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Send_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_Send_VGR#3
// Offset 37
STRN C215
AND X2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y48
AND ST2
OUT Y49

// Rung HBW_Send_VGR#4
// Offset 56
NOP

// Rung HBW_Send_VGR#5
// Offset 57
NOP

// Rung HBW_Send_VGR#6
// Offset 58
RET

// End of Code Block HBW_Send_VGR
$LGCEND HBW_Send_VGR

// Beginning of Code Block HBW_PickUp_VGR
$LGCMOD HBW_PickUp_VGR

// Rung HBW_PickUp_VGR#1
// Offset 0
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_PickUp_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_PickUp_VGR#3
// Offset 37
STRN C215
AND X11
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_PickUp_VGR#4
// Offset 56
NOP

// Rung HBW_PickUp_VGR#5
// Offset 57
NOP

// Rung HBW_PickUp_VGR#6
// Offset 58
RET

// End of Code Block HBW_PickUp_VGR
$LGCEND HBW_PickUp_VGR

// Beginning of Code Block HBW_Return_VGR
$LGCMOD HBW_Return_VGR

// Rung HBW_Return_VGR#1
// Offset 0
STRN C215
ANDN C251
DUPBOOL
AND C299
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y6

// Rung HBW_Return_VGR#2
// Offset 22
STRN C215
AND X1
DUPBOOL
AND C299
AND C251
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
POPBOOL
AND ST2
OUT Y48

// Rung HBW_Return_VGR#3
// Offset 45
STRN C215
DUPBOOL
AND C299
ANDN X1
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_Return_VGR#4
// Offset 68
STRLE 2550 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_VGR#5
// Offset 73
NOP

// Rung HBW_Return_VGR#6
// Offset 74
NOP

// Rung HBW_Return_VGR#7
// Offset 75
RET

// End of Code Block HBW_Return_VGR
$LGCEND HBW_Return_VGR

// Beginning of Code Block HBW_MotorsOff
$LGCMOD HBW_MotorsOff

// Rung HBW_MotorsOff#1
// Offset 0
STRN C215
ANDN ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_MotorsOff#2
// Offset 18
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_MotorsOff#3
// Offset 36
STRN C215
AND ST2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
OUT Y48

// Rung HBW_MotorsOff#4
// Offset 54
NOP

// Rung HBW_MotorsOff#5
// Offset 55
NOP

// Rung HBW_MotorsOff#6
// Offset 56
NOP

// Rung HBW_MotorsOff#7
// Offset 57
RET

// End of Code Block HBW_MotorsOff
$LGCEND HBW_MotorsOff

// Beginning of Code Block HBW_ConvTo11
$LGCMOD HBW_ConvTo11

// Rung HBW_ConvTo11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_ConvTo11#2
// Offset 22
NOP

// Rung HBW_ConvTo11#3
// Offset 23
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_ConvTo11#4
// Offset 28
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_ConvTo11#5
// Offset 50
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_ConvTo11#6
// Offset 55
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_ConvTo11#7
// Offset 74
NOP

// Rung HBW_ConvTo11#8
// Offset 75
NOP

// Rung HBW_ConvTo11#9
// Offset 76
RET

// End of Code Block HBW_ConvTo11
$LGCEND HBW_ConvTo11

// Beginning of Code Block HBW_Return_Top
$LGCMOD HBW_Return_Top

// Rung HBW_Return_Top#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Return_Top#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HBW_Return_Top#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_Top#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_Return_Top#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return_Top#6
// Offset 69
NOP

// Rung HBW_Return_Top#7
// Offset 70
NOP

// Rung HBW_Return_Top#8
// Offset 71
RET

// End of Code Block HBW_Return_Top
$LGCEND HBW_Return_Top

// Beginning of Code Block HBW_MV_11_12
$LGCMOD HBW_MV_11_12

// Rung HBW_MV_11_12#1
// Offset 0
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_MV_11_12#2
// Offset 21
NOP

// Rung HBW_MV_11_12#3
// Offset 22
NOP

// Rung HBW_MV_11_12#4
// Offset 23
NOP

// Rung HBW_MV_11_12#5
// Offset 24
RET

// End of Code Block HBW_MV_11_12
$LGCEND HBW_MV_11_12

// Beginning of Code Block HBW_Conv_12
$LGCMOD HBW_Conv_12

// Rung HBW_Conv_12#1
// Offset 0
NOP

// Rung HBW_Conv_12#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_12#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Conv_12#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 80
OUT C251

// Rung HBW_Conv_12#5
// Offset 45
NOP

// Rung HBW_Conv_12#6
// Offset 46
RET

// End of Code Block HBW_Conv_12
$LGCEND HBW_Conv_12

// Beginning of Code Block HBW_Conv_12_Lat
$LGCMOD HBW_Conv_12_Lat

// Rung HBW_Conv_12_Lat#1
// Offset 0
NOP

// Rung HBW_Conv_12_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv_12_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv_12_Lat#4
// Offset 42
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv_12_Lat#5
// Offset 47
NOP

// Rung HBW_Conv_12_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv_12_Lat
$LGCEND HBW_Conv_12_Lat

// Beginning of Code Block HBW_RETRACT_13
$LGCMOD HBW_RETRACT_13

// Rung HBW_RETRACT_13#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_RETRACT_13#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_RETRACT_13#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_RETRACT_13#4
// Offset 46
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_RETRACT_13#5
// Offset 68
STRGE 7650 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_RETRACT_13#6
// Offset 73
RET

// End of Code Block HBW_RETRACT_13
$LGCEND HBW_RETRACT_13

// Beginning of Code Block HBW_Retract_23
$LGCMOD HBW_Retract_23

// Rung HBW_Retract_23#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_23#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_23#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_23#4
// Offset 46
STRN C215
AND ST2
OUT Y51
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_Retract_23#5
// Offset 65
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_23#6
// Offset 70
RET

// End of Code Block HBW_Retract_23
$LGCEND HBW_Retract_23

// Beginning of Code Block HBW_Conv13_Lat
$LGCMOD HBW_Conv13_Lat

// Rung HBW_Conv13_Lat#1
// Offset 0
NOP

// Rung HBW_Conv13_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv13_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv13_Lat#4
// Offset 42
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv13_Lat#5
// Offset 47
NOP

// Rung HBW_Conv13_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv13_Lat
$LGCEND HBW_Conv13_Lat

// Beginning of Code Block HBW_Conv_2Row
$LGCMOD HBW_Conv_2Row

// Rung HBW_Conv_2Row#1
// Offset 0
NOP

// Rung HBW_Conv_2Row#2
// Offset 1
NOP

// Rung HBW_Conv_2Row#3
// Offset 2
NOP

// Rung HBW_Conv_2Row#4
// Offset 3
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_2Row#5
// Offset 22
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Conv_2Row#6
// Offset 42
STRGE $HBW_Encoder_Z.Acc 1380
OUT C251

// Rung HBW_Conv_2Row#7
// Offset 47
NOP

// Rung HBW_Conv_2Row#8
// Offset 48
RET

// End of Code Block HBW_Conv_2Row
$LGCEND HBW_Conv_2Row

// Beginning of Code Block HBW_PickUp_R2
$LGCMOD HBW_PickUp_R2

// Rung HBW_PickUp_R2#1
// Offset 0
NOP

// Rung HBW_PickUp_R2#2
// Offset 1
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R2#3
// Offset 20
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R2#4
// Offset 38
NOP

// Rung HBW_PickUp_R2#5
// Offset 39
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R2#6
// Offset 61
STRLE 1400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R2#7
// Offset 66
NOP

// Rung HBW_PickUp_R2#8
// Offset 67
NOP

// Rung HBW_PickUp_R2#9
// Offset 68
NOP

// Rung HBW_PickUp_R2#10
// Offset 69
RET

// End of Code Block HBW_PickUp_R2
$LGCEND HBW_PickUp_R2

// Beginning of Code Block HBW_Conv11_Lat
$LGCMOD HBW_Conv11_Lat

// Rung HBW_Conv11_Lat#1
// Offset 0
NOP

// Rung HBW_Conv11_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv11_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv11_Lat#4
// Offset 42
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv11_Lat#5
// Offset 47
NOP

// Rung HBW_Conv11_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv11_Lat
$LGCEND HBW_Conv11_Lat

// Beginning of Code Block HBW_Retract_12
$LGCMOD HBW_Retract_12

// Rung HBW_Retract_12#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_12#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_12#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_12#4
// Offset 46
RET

// End of Code Block HBW_Retract_12
$LGCEND HBW_Retract_12

// Beginning of Code Block HBW_Shift_C1C2
$LGCMOD HBW_Shift_C1C2

// Rung HBW_Shift_C1C2#1
// Offset 0
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Shift_C1C2#2
// Offset 5
NOP

// Rung HBW_Shift_C1C2#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Shift_C1C2#4
// Offset 25
NOP

// Rung HBW_Shift_C1C2#5
// Offset 26
STRN C215
AND ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_Shift_C1C2#6
// Offset 44
NOP

// Rung HBW_Shift_C1C2#7
// Offset 45
RET

// End of Code Block HBW_Shift_C1C2
$LGCEND HBW_Shift_C1C2

// Beginning of Code Block HBW_Move_R1_R2
$LGCMOD HBW_Move_R1_R2

// Rung HBW_Move_R1_R2#1
// Offset 0
STRGE 1760 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Move_R1_R2#2
// Offset 5
NOP

// Rung HBW_Move_R1_R2#3
// Offset 6
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Move_R1_R2#4
// Offset 25
NOP

// Rung HBW_Move_R1_R2#5
// Offset 26
NOP

// Rung HBW_Move_R1_R2#6
// Offset 27
RET

// End of Code Block HBW_Move_R1_R2
$LGCEND HBW_Move_R1_R2

// Beginning of Code Block HBW_Retract_22
$LGCMOD HBW_Retract_22

// Rung HBW_Retract_22#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_22#2
// Offset 22
STRGE 1730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_22#3
// Offset 27
NOP

// Rung HBW_Retract_22#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_22#5
// Offset 47
STRLE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_22#6
// Offset 52
STRN C215
AND C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
AND ST2
OUT Y50

// Rung HBW_Retract_22#7
// Offset 72
NOP

// Rung HBW_Retract_22#8
// Offset 73
RET

// End of Code Block HBW_Retract_22
$LGCEND HBW_Retract_22

// Beginning of Code Block HBW_Retract_21
$LGCMOD HBW_Retract_21

// Rung HBW_Retract_21#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_21#2
// Offset 22
STRGE 1730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_21#3
// Offset 27
NOP

// Rung HBW_Retract_21#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_21#5
// Offset 47
STRLE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_21#6
// Offset 52
STRN C215
AND C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
AND ST2
OUT Y50

// Rung HBW_Retract_21#7
// Offset 72
NOP

// Rung HBW_Retract_21#8
// Offset 73
RET

// End of Code Block HBW_Retract_21
$LGCEND HBW_Retract_21

// Beginning of Code Block HBW_Retract_31
$LGCMOD HBW_Retract_31

// Rung HBW_Retract_31#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_31#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_31#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_31#4
// Offset 46
STRN C215
AND ST2
OUT Y51
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_Retract_31#5
// Offset 65
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_31#6
// Offset 70
RET

// End of Code Block HBW_Retract_31
$LGCEND HBW_Retract_31

// Beginning of Code Block HBW_Move_R2_R3
$LGCMOD HBW_Move_R2_R3

// Rung HBW_Move_R2_R3#1
// Offset 0
STRGE 3600 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Move_R2_R3#2
// Offset 5
NOP

// Rung HBW_Move_R2_R3#3
// Offset 6
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Move_R2_R3#4
// Offset 25
NOP

// Rung HBW_Move_R2_R3#5
// Offset 26
NOP

// Rung HBW_Move_R2_R3#6
// Offset 27
RET

// End of Code Block HBW_Move_R2_R3
$LGCEND HBW_Move_R2_R3

// Beginning of Code Block HBW_PickUp_R3
$LGCMOD HBW_PickUp_R3

// Rung HBW_PickUp_R3#1
// Offset 0
NOP

// Rung HBW_PickUp_R3#2
// Offset 1
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R3#3
// Offset 20
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R3#4
// Offset 38
STRLE 2800 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R3#5
// Offset 43
NOP

// Rung HBW_PickUp_R3#6
// Offset 44
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R3#7
// Offset 66
NOP

// Rung HBW_PickUp_R3#8
// Offset 67
NOP

// Rung HBW_PickUp_R3#9
// Offset 68
NOP

// Rung HBW_PickUp_R3#10
// Offset 69
RET

// End of Code Block HBW_PickUp_R3
$LGCEND HBW_PickUp_R3

// Beginning of Code Block HBW_Conv_3Row
$LGCMOD HBW_Conv_3Row

// Rung HBW_Conv_3Row#1
// Offset 0
NOP

// Rung HBW_Conv_3Row#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_3Row#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Conv_3Row#4
// Offset 40
STRLE $HBW_Encoder_Z.Acc 2730
OUT C251

// Rung HBW_Conv_3Row#5
// Offset 45
NOP

// Rung HBW_Conv_3Row#6
// Offset 46
RET

// End of Code Block HBW_Conv_3Row
$LGCEND HBW_Conv_3Row

// Beginning of Code Block HBW_Retract_32
$LGCMOD HBW_Retract_32

// Rung HBW_Retract_32#1
// Offset 0
STRGE 3300 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_32#2
// Offset 5
NOP

// Rung HBW_Retract_32#3
// Offset 6
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_32#4
// Offset 28
NOP

// Rung HBW_Retract_32#5
// Offset 29
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_32#6
// Offset 48
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_32#7
// Offset 53
NOP

// Rung HBW_Retract_32#8
// Offset 54
STRN C215
AND C250
DUPBOOL
ANDN C251
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_Retract_32#9
// Offset 77
NOP

// Rung HBW_Retract_32#10
// Offset 78
RET

// End of Code Block HBW_Retract_32
$LGCEND HBW_Retract_32

// Beginning of Code Block HBW_Retract_33
$LGCMOD HBW_Retract_33

// Rung HBW_Retract_33#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_33#2
// Offset 22
STRGE 3300 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_33#3
// Offset 27
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_33#4
// Offset 46
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_33#5
// Offset 51
NOP

// Rung HBW_Retract_33#6
// Offset 52
STRN C215
AND C250
DUPBOOL
ANDN C251
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_Retract_33#7
// Offset 75
NOP

// Rung HBW_Retract_33#8
// Offset 76
RET

// End of Code Block HBW_Retract_33
$LGCEND HBW_Retract_33

// Beginning of Code Block HBW_Retract_DN
$LGCMOD HBW_Retract_DN

// Rung HBW_Retract_DN#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_DN#2
// Offset 22
STRGE 3200 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_DN#3
// Offset 27
NOP

// Rung HBW_Retract_DN#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_DN#5
// Offset 47
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_DN#6
// Offset 52
STRN C215
AND C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
AND ST2
OUT Y50

// Rung HBW_Retract_DN#7
// Offset 72
NOP

// Rung HBW_Retract_DN#8
// Offset 73
RET

// End of Code Block HBW_Retract_DN
$LGCEND HBW_Retract_DN

// Beginning of Code Block oneOperation
$LGCMOD oneOperation

// Rung oneOperation#1
// Offset 0
NOP

// Rung oneOperation#2
// Offset 1
NOP

// Rung oneOperation#3
// Offset 2
RET

// End of Code Block oneOperation
$LGCEND oneOperation

// Beginning of Code Block HBW_Check1Puck
$LGCMOD HBW_Check1Puck

// Rung HBW_Check1Puck#1
// Offset 0
STR ST1
MOVE 0 C301

// Rung HBW_Check1Puck#2
// Offset 3
STR C217
MOVE 1 C301
MOVE 1 N2

// Rung HBW_Check1Puck#3
// Offset 8
STR C218
MOVE 1 C301
MOVE 2 N2

// Rung HBW_Check1Puck#4
// Offset 13
STR C219
MOVE 1 C301
MOVE 3 N2

// Rung HBW_Check1Puck#5
// Offset 18
STR C220
MOVE 1 C301
MOVE 4 N2

// Rung HBW_Check1Puck#6
// Offset 23
STR C221
MOVE 1 C301
MOVE 5 N2

// Rung HBW_Check1Puck#7
// Offset 28
STR C222
MOVE 1 C301
MOVE 6 N2

// Rung HBW_Check1Puck#8
// Offset 33
STR C223
MOVE 1 C301
MOVE 7 N2

// Rung HBW_Check1Puck#9
// Offset 38
STR C224
MOVE 1 C301
MOVE 8 N2

// Rung HBW_Check1Puck#10
// Offset 43
STR C225
MOVE 1 C301
MOVE 9 N2

// Rung HBW_Check1Puck#11
// Offset 48
RET

// End of Code Block HBW_Check1Puck
$LGCEND HBW_Check1Puck

// Beginning of Code Block HBW_OneTime_R1
$LGCMOD HBW_OneTime_R1

// Rung HBW_OneTime_R1#1
// Offset 0
STRGE 375 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneTime_R1#2
// Offset 5
NOP

// Rung HBW_OneTime_R1#3
// Offset 6
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_OneTime_R1#4
// Offset 25
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneTime_R1#5
// Offset 45
NOP

// Rung HBW_OneTime_R1#6
// Offset 46
RET

// End of Code Block HBW_OneTime_R1
$LGCEND HBW_OneTime_R1

// Beginning of Code Block HBW_OneTime_R2
$LGCMOD HBW_OneTime_R2

// Rung HBW_OneTime_R2#1
// Offset 0
STRGE 1650 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneTime_R2#2
// Offset 5
NOP

// Rung HBW_OneTime_R2#3
// Offset 6
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_OneTime_R2#4
// Offset 25
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneTime_R2#5
// Offset 45
NOP

// Rung HBW_OneTime_R2#6
// Offset 46
RET

// End of Code Block HBW_OneTime_R2
$LGCEND HBW_OneTime_R2

// Beginning of Code Block HBW_OneTime_R3
$LGCMOD HBW_OneTime_R3

// Rung HBW_OneTime_R3#1
// Offset 0
STRGE 3200 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneTime_R3#2
// Offset 5
NOP

// Rung HBW_OneTime_R3#3
// Offset 6
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_OneTime_R3#4
// Offset 25
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneTime_R3#5
// Offset 45
NOP

// Rung HBW_OneTime_R3#6
// Offset 46
RET

// End of Code Block HBW_OneTime_R3
$LGCEND HBW_OneTime_R3

// Beginning of Code Block HBW_OneTime_C1
$LGCMOD HBW_OneTime_C1

// Rung HBW_OneTime_C1#1
// Offset 0
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_OneTime_C1#2
// Offset 5
NOP

// Rung HBW_OneTime_C1#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_OneTime_C1#4
// Offset 25
NOP

// Rung HBW_OneTime_C1#5
// Offset 26
RET

// End of Code Block HBW_OneTime_C1
$LGCEND HBW_OneTime_C1

// Beginning of Code Block HBW_OneTime_C2
$LGCMOD HBW_OneTime_C2

// Rung HBW_OneTime_C2#1
// Offset 0
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_OneTime_C2#2
// Offset 5
NOP

// Rung HBW_OneTime_C2#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_OneTime_C2#4
// Offset 25
NOP

// Rung HBW_OneTime_C2#5
// Offset 26
RET

// End of Code Block HBW_OneTime_C2
$LGCEND HBW_OneTime_C2

// Beginning of Code Block HBW_OneTime_C3
$LGCMOD HBW_OneTime_C3

// Rung HBW_OneTime_C3#1
// Offset 0
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_OneTime_C3#2
// Offset 5
NOP

// Rung HBW_OneTime_C3#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_OneTime_C3#4
// Offset 25
NOP

// Rung HBW_OneTime_C3#5
// Offset 26
RET

// End of Code Block HBW_OneTime_C3
$LGCEND HBW_OneTime_C3

// Beginning of Code Block HBW_OneDropR3
$LGCMOD HBW_OneDropR3

// Rung HBW_OneDropR3#1
// Offset 0
NOP

// Rung HBW_OneDropR3#2
// Offset 1
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_OneDropR3#3
// Offset 23
STRGE 3300 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneDropR3#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneDropR3#5
// Offset 47
NOP

// Rung HBW_OneDropR3#6
// Offset 48
NOP

// Rung HBW_OneDropR3#7
// Offset 49
RET

// End of Code Block HBW_OneDropR3
$LGCEND HBW_OneDropR3

// Beginning of Code Block HBW_OneDropR2
$LGCMOD HBW_OneDropR2

// Rung HBW_OneDropR2#1
// Offset 0
NOP

// Rung HBW_OneDropR2#2
// Offset 1
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_OneDropR2#3
// Offset 23
STRGE 1730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneDropR2#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneDropR2#5
// Offset 47
NOP

// Rung HBW_OneDropR2#6
// Offset 48
NOP

// Rung HBW_OneDropR2#7
// Offset 49
RET

// End of Code Block HBW_OneDropR2
$LGCEND HBW_OneDropR2

// Beginning of Code Block HBW_OneDropR1
$LGCMOD HBW_OneDropR1

// Rung HBW_OneDropR1#1
// Offset 0
NOP

// Rung HBW_OneDropR1#2
// Offset 1
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_OneDropR1#3
// Offset 23
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneDropR1#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneDropR1#5
// Offset 47
NOP

// Rung HBW_OneDropR1#6
// Offset 48
NOP

// Rung HBW_OneDropR1#7
// Offset 49
RET

// End of Code Block HBW_OneDropR1
$LGCEND HBW_OneDropR1

// Beginning of Code Block VGR_Done
$LGCMOD VGR_Done

// Rung VGR_Done#1
// Offset 0
STR ST1
MOVE 0 C700

// Rung VGR_Done#2
// Offset 3
NOP

// Rung VGR_Done#3
// Offset 4
RET

// End of Code Block VGR_Done
$LGCEND VGR_Done

// Beginning of Code Block HBW_Return11
$LGCMOD HBW_Return11

// Rung HBW_Return11#1
// Offset 0
NOP

// Rung HBW_Return11#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Return11#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Return11#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 80
OUT C251

// Rung HBW_Return11#5
// Offset 45
NOP

// Rung HBW_Return11#6
// Offset 46
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Return11#7
// Offset 68
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return11#8
// Offset 73
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Return11#9
// Offset 92
NOP

// Rung HBW_Return11#10
// Offset 93
RET

// End of Code Block HBW_Return11
$LGCEND HBW_Return11

// Beginning of Code Block HBW_Return12
$LGCMOD HBW_Return12

// Rung HBW_Return12#1
// Offset 0
NOP

// Rung HBW_Return12#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Return12#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Return12#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 80
OUT C251

// Rung HBW_Return12#5
// Offset 45
NOP

// Rung HBW_Return12#6
// Offset 46
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Return12#7
// Offset 68
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return12#8
// Offset 73
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Return12#9
// Offset 92
NOP

// Rung HBW_Return12#10
// Offset 93
RET

// End of Code Block HBW_Return12
$LGCEND HBW_Return12

// Beginning of Code Block HBW_Return13
$LGCMOD HBW_Return13

// Rung HBW_Return13#1
// Offset 0
NOP

// Rung HBW_Return13#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Return13#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Return13#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 80
OUT C251

// Rung HBW_Return13#5
// Offset 45
NOP

// Rung HBW_Return13#6
// Offset 46
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Return13#7
// Offset 68
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return13#8
// Offset 73
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Return13#9
// Offset 92
NOP

// Rung HBW_Return13#10
// Offset 93
RET

// End of Code Block HBW_Return13
$LGCEND HBW_Return13

// Beginning of Code Block HBW_Return21
$LGCMOD HBW_Return21

// Rung HBW_Return21#1
// Offset 0
NOP

// Rung HBW_Return21#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Return21#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Return21#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 1380
OUT C251

// Rung HBW_Return21#5
// Offset 45
NOP

// Rung HBW_Return21#6
// Offset 46
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Return21#7
// Offset 68
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return21#8
// Offset 73
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Return21#9
// Offset 92
NOP

// Rung HBW_Return21#10
// Offset 93
RET

// End of Code Block HBW_Return21
$LGCEND HBW_Return21

// Beginning of Code Block HBW_Return22
$LGCMOD HBW_Return22

// Rung HBW_Return22#1
// Offset 0
NOP

// Rung HBW_Return22#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Return22#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Return22#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 1380
OUT C251

// Rung HBW_Return22#5
// Offset 45
NOP

// Rung HBW_Return22#6
// Offset 46
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Return22#7
// Offset 68
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return22#8
// Offset 73
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Return22#9
// Offset 92
NOP

// Rung HBW_Return22#10
// Offset 93
RET

// End of Code Block HBW_Return22
$LGCEND HBW_Return22

// Beginning of Code Block HBW_Return23
$LGCMOD HBW_Return23

// Rung HBW_Return23#1
// Offset 0
NOP

// Rung HBW_Return23#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Return23#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Return23#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 1380
OUT C251

// Rung HBW_Return23#5
// Offset 45
NOP

// Rung HBW_Return23#6
// Offset 46
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Return23#7
// Offset 68
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return23#8
// Offset 73
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Return23#9
// Offset 92
NOP

// Rung HBW_Return23#10
// Offset 93
RET

// End of Code Block HBW_Return23
$LGCEND HBW_Return23

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#2
// Offset 3
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#3
// Offset 6
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#4
// Offset 9
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#5
// Offset 12
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// Rung $Main#6
// Offset 15
#BEGIN FMT_COMMENT 
"Hunter Demo Light<br>"
#END

STR ST1
RUN hunt_exp_light

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
SG HBW_Program.S0

// Rung HBW_Program#2
// Offset 2
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#3
// Offset 10
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#4
// Offset 12
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#5
// Offset 14
STR ST1
MOVE 0 C298

// Rung HBW_Program#6
// Offset 17
STR ST1
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#7
// Offset 25
STR ST1
CALL HBW_Check1Puck 0x1 DST511 "3" "3"

// Rung HBW_Program#8
// Offset 33
STR C301
JMP HBW_Program.S19

// Rung HBW_Program#9
// Offset 35
NOP

// Rung HBW_Program#10
// Offset 36
STR C216
JMP HBW_Program.S1

// Rung HBW_Program#11
// Offset 38
STR C213
JMP HBW_Program.S1

// Rung HBW_Program#12
// Offset 40
SG HBW_Program.S1

// Rung HBW_Program#13
// Offset 42
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#14
// Offset 50
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#15
// Offset 52
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#16
// Offset 54
STR ST1
MOVE 0 N1

// Rung HBW_Program#17
// Offset 57
STR ST1
MOVE 0 C299

// Rung HBW_Program#18
// Offset 60
NOP

// Rung HBW_Program#19
// Offset 61
STR ST1
DUPBOOL
STR C205
ANDN C206
STR C206
ANDN C205
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 500 60
POPBOOL
DUPBOOL
AND C205
OUT Y48
POPBOOL
AND C206
OUT Y49

// Rung HBW_Program#20
// Offset 90
STR ST1
DUPBOOL
STR C207
ANDN C208
STRN C207
AND C208
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
POPBOOL
DUPBOOL
AND C207
OUT Y50
POPBOOL
AND C208
OUT Y51

// Rung HBW_Program#21
// Offset 119
STR ST1
DUPBOOL
STR C209
ANDN C210
STRN C209
AND C210
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
POPBOOL
DUPBOOL
AND C209
OUT Y4
POPBOOL
AND C210
OUT Y5

// Rung HBW_Program#22
// Offset 148
STR ST1
DUPBOOL
STR C211
ANDN C212
STRN C211
AND C212
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
POPBOOL
DUPBOOL
AND C211
OUT Y6
POPBOOL
AND C212
OUT Y7

// Rung HBW_Program#23
// Offset 177
STR C226
JMP HBW_Program.S0

// Rung HBW_Program#24
// Offset 179
STR C213
JMP HBW_Program.S2

// Rung HBW_Program#25
// Offset 181
SG HBW_Program.S2

// Rung HBW_Program#26
// Offset 183
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#27
// Offset 191
STR X0
OUT $HBW_Encoder_X.ResetLevel

// Rung HBW_Program#28
// Offset 193
STR X3
OUT $HBW_Encoder_Z.ResetLevel

// Rung HBW_Program#29
// Offset 195
STR ST1
CALL HBW_Home 0x1 DST511 "3" "3"

// Rung HBW_Program#30
// Offset 203
STR X0
AND X11
AND X3
JMP HBW_Program.S3

// Rung HBW_Program#31
// Offset 207
STR C212
JMP HBW_Program.S3

// Rung HBW_Program#32
// Offset 209
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#33
// Offset 211
SG HBW_Program.S3

// Rung HBW_Program#34
// Offset 213
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#35
// Offset 221
STR ST1
CALL HWB_Home_to_11 0x1 DST511 "3" "3"

// Rung HBW_Program#36
// Offset 229
STRN C250
ANDN C251
JMP HBW_Program.S4

// Rung HBW_Program#37
// Offset 232
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#38
// Offset 234
SG HBW_Program.S4

// Rung HBW_Program#39
// Offset 236
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#40
// Offset 244
STR ST1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#41
// Offset 252
STR X10
ANDN C251
JMP HBW_Program.S5

// Rung HBW_Program#42
// Offset 255
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#43
// Offset 257
NOP

// Rung HBW_Program#44
// Offset 258
SG HBW_Program.S5

// Rung HBW_Program#45
// Offset 260
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#46
// Offset 268
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#47
// Offset 276
STRN C251
AND C250
JMP HBW_Program.S6

// Rung HBW_Program#48
// Offset 279
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#49
// Offset 281
SG HBW_Program.S6

// Rung HBW_Program#50
// Offset 283
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#51
// Offset 291
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#52
// Offset 299
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#53
// Offset 301
STRN X2
MOVE 1 C298

// Rung HBW_Program#54
// Offset 304
STRN X2
JMP HBW_Program.S7
INC N1

// Rung HBW_Program#55
// Offset 307
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#56
// Offset 309
NOP

// Rung HBW_Program#57
// Offset 310
SG HBW_Program.S7

// Rung HBW_Program#58
// Offset 312
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#59
// Offset 320
STR C300
MOVE 1 C299

// Rung HBW_Program#60
// Offset 323
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#61
// Offset 331
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#62
// Offset 340
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#63
// Offset 342
NOP

// Rung HBW_Program#64
// Offset 343
SG HBW_Program.S8

// Rung HBW_Program#65
// Offset 345
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#66
// Offset 353
STR ST1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#67
// Offset 361
STR ST1
MOVE 0 C299
MOVE 0 C298

// Rung HBW_Program#68
// Offset 366
STRN C250
JMP HBW_Program.S9

// Rung HBW_Program#69
// Offset 368
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#70
// Offset 370
NOP

// Rung HBW_Program#71
// Offset 371
SG HBW_Program.S9

// Rung HBW_Program#72
// Offset 373
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#73
// Offset 381
STR ST1
CALL HBW_Return_Top 0x1 DST511 "3" "3"

// Rung HBW_Program#74
// Offset 389
STR X10
ANDN C251
JMP HBW_Program.S10
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#75
// Offset 399
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#76
// Offset 401
NOP

// Rung HBW_Program#77
// Offset 402
SG HBW_Program.S10

// Rung HBW_Program#78
// Offset 404
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#79
// Offset 412
STR ST1
CALL HBW_MV_11_12 0x1 DST511 "3" "3"

// Rung HBW_Program#80
// Offset 420
STRN C250
JMP HBW_Program.S11

// Rung HBW_Program#81
// Offset 422
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#82
// Offset 424
NOP

// Rung HBW_Program#83
// Offset 425
SG HBW_Program.S11

// Rung HBW_Program#84
// Offset 427
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#85
// Offset 435
STRE N1 1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#86
// Offset 446
STRE N1 2
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#87
// Offset 457
STRE N1 3
CALL HBW_Move_R1_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#88
// Offset 468
STRE N1 3
ANDLE 1650 $HBW_Encoder_Z.Acc
JMP HBW_Program.S51

// Rung HBW_Program#89
// Offset 477
STRE N1 4
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#90
// Offset 488
STRE N1 5
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#91
// Offset 499
STRE N1 6
CALL HBW_Move_R2_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#92
// Offset 510
STRE N1 6
ANDLE 3200 $HBW_Encoder_Z.Acc
JMP HBW_Program.S51

// Rung HBW_Program#93
// Offset 519
STRE N1 7
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#94
// Offset 530
STRE N1 8
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#95
// Offset 541
STRE N1 9
JMP HBW_Program.S18

// Rung HBW_Program#96
// Offset 546
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#97
// Offset 548
NOP

// Rung HBW_Program#98
// Offset 549
NOP

// Rung HBW_Program#99
// Offset 550
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#100
// Offset 553
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#101
// Offset 555
SG HBW_Program.S51

// Rung HBW_Program#102
// Offset 557
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#103
// Offset 565
STRE N1 3
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#104
// Offset 576
STRE N1 6
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#105
// Offset 587
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#106
// Offset 589
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#107
// Offset 592
SG HBW_Program.S12

// Rung HBW_Program#108
// Offset 594
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#109
// Offset 602
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#110
// Offset 610
STRN C251
AND C250
JMP HBW_Program.S13

// Rung HBW_Program#111
// Offset 613
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#112
// Offset 615
SG HBW_Program.S13

// Rung HBW_Program#113
// Offset 617
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#114
// Offset 625
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#115
// Offset 633
STRN X2
MOVE 1 C298

// Rung HBW_Program#116
// Offset 636
STR C300
MOVE 1 C299

// Rung HBW_Program#117
// Offset 639
STRN X2
AND C299
JMP HBW_Program.S14
INC N1

// Rung HBW_Program#118
// Offset 643
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#119
// Offset 645
SG HBW_Program.S14

// Rung HBW_Program#120
// Offset 647
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#121
// Offset 655
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#122
// Offset 663
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#123
// Offset 672
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#124
// Offset 674
SG HBW_Program.S15

// Rung HBW_Program#125
// Offset 676
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#126
// Offset 684
STR ST1
MOVE 0 C299
MOVE 0 C298

// Rung HBW_Program#127
// Offset 689
STRE N1 1
CALL HBW_Return11 0x1 DST511 "3" "3"

// Rung HBW_Program#128
// Offset 700
STRE N1 2
CALL HBW_Return12 0x1 DST511 "3" "3"

// Rung HBW_Program#129
// Offset 711
STRE N1 3
CALL HBW_Return13 0x1 DST511 "3" "3"

// Rung HBW_Program#130
// Offset 722
STRE N1 4
CALL HBW_Return21 0x1 DST511 "3" "3"

// Rung HBW_Program#131
// Offset 733
STRE N1 5
CALL HBW_Return22 0x1 DST511 "3" "3"

// Rung HBW_Program#132
// Offset 744
STRE N1 6
CALL HBW_Return23 0x1 DST511 "3" "3"

// Rung HBW_Program#133
// Offset 755
STRE N1 7
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#134
// Offset 766
STRE N1 8
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#135
// Offset 777
STRE N1 9
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#136
// Offset 788
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#137
// Offset 790
STRN C251
JMP HBW_Program.S16
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#138
// Offset 799
SG HBW_Program.S16

// Rung HBW_Program#139
// Offset 801
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#140
// Offset 809
STRE N1 1
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#141
// Offset 820
STRE N1 2
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#142
// Offset 831
STRE N1 3
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#143
// Offset 842
STRE N1 4
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#144
// Offset 853
STRE N1 5
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#145
// Offset 864
STRE N1 6
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#146
// Offset 875
STRE N1 7
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#147
// Offset 886
STRE N1 8
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#148
// Offset 897
STRE N1 9
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#149
// Offset 908
NOP

// Rung HBW_Program#150
// Offset 909
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#151
// Offset 911
STRN C250
AND X10
JMP HBW_Program.S17

// Rung HBW_Program#152
// Offset 914
SG HBW_Program.S17

// Rung HBW_Program#153
// Offset 916
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#154
// Offset 924
STRE N1 1
CALL HBW_Retract_12 0x1 DST511 "3" "3"

// Rung HBW_Program#155
// Offset 935
STRE N1 2
CALL HBW_RETRACT_13 0x1 DST511 "3" "3"

// Rung HBW_Program#156
// Offset 946
STRE N1 3
CALL HBW_Retract_23 0x1 DST511 "3" "3"

// Rung HBW_Program#157
// Offset 957
STRE N1 4
CALL HBW_Retract_22 0x1 DST511 "3" "3"

// Rung HBW_Program#158
// Offset 968
STRE N1 5
CALL HBW_Retract_21 0x1 DST511 "3" "3"

// Rung HBW_Program#159
// Offset 979
STRE N1 6
CALL HBW_Retract_21 0x1 DST511 "3" "3"

// Rung HBW_Program#160
// Offset 990
STRE N1 7
CALL HBW_Retract_32 0x1 DST511 "3" "3"

// Rung HBW_Program#161
// Offset 1001
STRE N1 8
CALL HBW_Retract_33 0x1 DST511 "3" "3"

// Rung HBW_Program#162
// Offset 1012
STRE N1 9
CALL HBW_Retract_33 0x1 DST511 "3" "3"

// Rung HBW_Program#163
// Offset 1023
NOP

// Rung HBW_Program#164
// Offset 1024
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#165
// Offset 1026
STR X11
ANDN C251
ANDN C250
JMP HBW_Program.S11

// Rung HBW_Program#166
// Offset 1030
STR X11
ANDE N1 1
JMP HBW_Program.S50

// Rung HBW_Program#167
// Offset 1036
SG HBW_Program.S18

// Rung HBW_Program#168
// Offset 1038
STR ST1
JMP HBW_Program.S0

// Rung HBW_Program#169
// Offset 1040
SG HBW_Program.S50

// Rung HBW_Program#170
// Offset 1042
STR ST1
CALL HBW_Shift_C1C2 0x1 DST511 "3" "3"

// Rung HBW_Program#171
// Offset 1050
STRN Y50
ANDN C250
JMP HBW_Program.S11

// Rung HBW_Program#172
// Offset 1053
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#173
// Offset 1055
NOP

// Rung HBW_Program#174
// Offset 1056
SG HBW_Program.S19

// Rung HBW_Program#175
// Offset 1058
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#176
// Offset 1066
STR X0
OUT $HBW_Encoder_X.ResetLevel

// Rung HBW_Program#177
// Offset 1068
STR X3
OUT $HBW_Encoder_Z.ResetLevel

// Rung HBW_Program#178
// Offset 1070
NOP

// Rung HBW_Program#179
// Offset 1071
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#180
// Offset 1073
STR ST1
CALL HBW_Home 0x1 DST511 "3" "3"

// Rung HBW_Program#181
// Offset 1081
STR X0
AND X11
AND X3
JMP HBW_Program.S20

// Rung HBW_Program#182
// Offset 1085
SG HBW_Program.S20

// Rung HBW_Program#183
// Offset 1087
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#184
// Offset 1095
NOP

// Rung HBW_Program#185
// Offset 1096
STRE N2 1
CALL HBW_OneTime_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#186
// Offset 1107
STRE N2 2
CALL HBW_OneTime_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#187
// Offset 1118
STRE N2 3
CALL HBW_OneTime_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#188
// Offset 1129
STRE N2 4
CALL HBW_OneTime_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#189
// Offset 1140
STRE N2 5
CALL HBW_OneTime_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#190
// Offset 1151
STRE N2 6
CALL HBW_OneTime_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#191
// Offset 1162
STRE N2 7
CALL HBW_OneTime_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#192
// Offset 1173
STRE N2 8
CALL HBW_OneTime_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#193
// Offset 1184
STRE N2 9
CALL HBW_OneTime_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#194
// Offset 1195
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#195
// Offset 1197
STRN C251
JMP HBW_Program.S21

// Rung HBW_Program#196
// Offset 1199
SG HBW_Program.S21

// Rung HBW_Program#197
// Offset 1201
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#198
// Offset 1209
NOP

// Rung HBW_Program#199
// Offset 1210
STRE N2 1
CALL HBW_OneTime_C1 0x1 DST511 "3" "3"

// Rung HBW_Program#200
// Offset 1221
STRE N2 2
CALL HBW_OneTime_C2 0x1 DST511 "3" "3"

// Rung HBW_Program#201
// Offset 1232
STRE N2 3
CALL HBW_OneTime_C3 0x1 DST511 "3" "3"

// Rung HBW_Program#202
// Offset 1243
STRE N2 4
CALL HBW_OneTime_C1 0x1 DST511 "3" "3"

// Rung HBW_Program#203
// Offset 1254
STRE N2 5
CALL HBW_OneTime_C2 0x1 DST511 "3" "3"

// Rung HBW_Program#204
// Offset 1265
STRE N2 6
CALL HBW_OneTime_C3 0x1 DST511 "3" "3"

// Rung HBW_Program#205
// Offset 1276
STRE N2 7
CALL HBW_OneTime_C1 0x1 DST511 "3" "3"

// Rung HBW_Program#206
// Offset 1287
STRE N2 8
CALL HBW_OneTime_C2 0x1 DST511 "3" "3"

// Rung HBW_Program#207
// Offset 1298
STRE N2 9
CALL HBW_OneTime_C3 0x1 DST511 "3" "3"

// Rung HBW_Program#208
// Offset 1309
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#209
// Offset 1311
STRN C250
JMP HBW_Program.S22

// Rung HBW_Program#210
// Offset 1313
SG HBW_Program.S22

// Rung HBW_Program#211
// Offset 1315
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#212
// Offset 1323
STRE N2 1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#213
// Offset 1334
STRE N2 2
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#214
// Offset 1345
STRE N2 3
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#215
// Offset 1356
STRE N2 4
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#216
// Offset 1367
STRE N2 5
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#217
// Offset 1378
STRE N2 6
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#218
// Offset 1389
STRE N2 7
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#219
// Offset 1400
STRE N2 8
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#220
// Offset 1411
STRE N2 9
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#221
// Offset 1422
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#222
// Offset 1424
STRN C251
JMP HBW_Program.S23

// Rung HBW_Program#223
// Offset 1426
SG HBW_Program.S23

// Rung HBW_Program#224
// Offset 1428
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#225
// Offset 1436
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#226
// Offset 1444
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#227
// Offset 1446
STRN C251
AND C250
JMP HBW_Program.S24

// Rung HBW_Program#228
// Offset 1449
SG HBW_Program.S24

// Rung HBW_Program#229
// Offset 1451
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#230
// Offset 1459
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#231
// Offset 1467
STRN X2
MOVE 1 C298

// Rung HBW_Program#232
// Offset 1470
STRN X2
AND C299
JMP HBW_Program.S25

// Rung HBW_Program#233
// Offset 1473
STR C300
MOVE 1 C299

// Rung HBW_Program#234
// Offset 1476
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#235
// Offset 1478
SG HBW_Program.S25

// Rung HBW_Program#236
// Offset 1480
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#237
// Offset 1488
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#238
// Offset 1496
STR X11
JMP HBW_Program.S26
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#239
// Offset 1505
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#240
// Offset 1507
NOP

// Rung HBW_Program#241
// Offset 1508
SG HBW_Program.S26

// Rung HBW_Program#242
// Offset 1510
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#243
// Offset 1518
STR ST1
MOVE 0 C299
MOVE 0 C298

// Rung HBW_Program#244
// Offset 1523
STRE N2 1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#245
// Offset 1534
STRE N2 2
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#246
// Offset 1545
STRE N2 3
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#247
// Offset 1556
STRE N2 4
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#248
// Offset 1567
STRE N2 5
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#249
// Offset 1578
STRE N2 6
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#250
// Offset 1589
STRE N2 7
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#251
// Offset 1600
STRE N2 8
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#252
// Offset 1611
STRE N2 9
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#253
// Offset 1622
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#254
// Offset 1624
STRN C251
JMP HBW_Program.S27
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#255
// Offset 1633
SG HBW_Program.S27

// Rung HBW_Program#256
// Offset 1635
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#257
// Offset 1643
STRE N2 1
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#258
// Offset 1654
STRE N2 2
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#259
// Offset 1665
STRE N2 3
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#260
// Offset 1676
STRE N2 4
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#261
// Offset 1687
STRE N2 5
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#262
// Offset 1698
STRE N2 6
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#263
// Offset 1709
STRE N2 7
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#264
// Offset 1720
STRE N2 8
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#265
// Offset 1731
STRE N2 9
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#266
// Offset 1742
NOP

// Rung HBW_Program#267
// Offset 1743
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#268
// Offset 1745
STRN C250
AND X10
JMP HBW_Program.S28

// Rung HBW_Program#269
// Offset 1748
SG HBW_Program.S28

// Rung HBW_Program#270
// Offset 1750
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#271
// Offset 1758
STRE N2 1
CALL HBW_OneDropR1 0x1 DST511 "3" "3"

// Rung HBW_Program#272
// Offset 1769
STRE N2 2
CALL HBW_OneDropR1 0x1 DST511 "3" "3"

// Rung HBW_Program#273
// Offset 1780
STRE N2 3
CALL HBW_OneDropR1 0x1 DST511 "3" "3"

// Rung HBW_Program#274
// Offset 1791
STRE N2 4
CALL HBW_OneDropR2 0x1 DST511 "3" "3"

// Rung HBW_Program#275
// Offset 1802
STRE N2 5
CALL HBW_OneDropR2 0x1 DST511 "3" "3"

// Rung HBW_Program#276
// Offset 1813
STRE N2 6
CALL HBW_OneDropR2 0x1 DST511 "3" "3"

// Rung HBW_Program#277
// Offset 1824
STRE N2 7
CALL HBW_OneDropR3 0x1 DST511 "3" "3"

// Rung HBW_Program#278
// Offset 1835
STRE N2 8
CALL HBW_OneDropR3 0x1 DST511 "3" "3"

// Rung HBW_Program#279
// Offset 1846
STRE N2 9
CALL HBW_OneDropR3 0x1 DST511 "3" "3"

// Rung HBW_Program#280
// Offset 1857
STR X11
JMP HBW_Program.S0

// Rung HBW_Program#281
// Offset 1859
STR C215
JMP HBW_Program.S0

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
SG VGR_Program.S0

// Rung VGR_Program#2
// Offset 2
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#3
// Offset 10
STR ST1
DUPBOOL
STR C410
ANDN C409
STRN C410
AND C409
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
POPBOOL
DUPBOOL
AND C410
OUT Y27
POPBOOL
AND C409
OUT Y26

// Rung VGR_Program#4
// Offset 39
STR ST1
DUPBOOL
STR C408
ANDN C411
STRN C408
AND C411
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
POPBOOL
DUPBOOL
AND C408
OUT Y24
POPBOOL
AND C411
OUT Y25

// Rung VGR_Program#5
// Offset 68
STR ST1
DUPBOOL
STR C406
ANDN C407
STRN C406
AND C407
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
POPBOOL
DUPBOOL
AND C406
OUT Y23
POPBOOL
AND C407
OUT Y22

// Rung VGR_Program#6
// Offset 97
STR C452
JMP VGR_Program.S1

// Rung VGR_Program#7
// Offset 99
SG VGR_Program.S1

// Rung VGR_Program#8
// Offset 101
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#9
// Offset 103
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#10
// Offset 111
STRN X25
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
OUT Y22

// Rung VGR_Program#11
// Offset 127
STRN X26
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
OUT Y24

// Rung VGR_Program#12
// Offset 143
STRN X27
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
OUT Y26

// Rung VGR_Program#13
// Offset 159
STR X27
OUT $VGR_Encoder_Rot.ResetLevel

// Rung VGR_Program#14
// Offset 161
STR X26
OUT $VGR_Encoder_X.ResetLevel

// Rung VGR_Program#15
// Offset 163
STR X25
OUT $VGR_Encoder_Y.ResetLevel

// Rung VGR_Program#16
// Offset 165
STR X25
AND X26
AND X27
JMP VGR_Program.S2

// Rung VGR_Program#17
// Offset 169
SG VGR_Program.S2

// Rung VGR_Program#18
// Offset 171
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#19
// Offset 179
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#20
// Offset 181
STR ST1
OUT $VGR_Encoder_Rot.EnableCapture

// Rung VGR_Program#21
// Offset 183
STR ST1
OUT $VGR_Encoder_X.EnableCapture

// Rung VGR_Program#22
// Offset 185
STR ST1
OUT $VGR_Encoder_Y.EnableCapture

// Rung VGR_Program#23
// Offset 187
STR ST1
OUT $VGR_Encoder_Rot.EnableCapture

// Rung VGR_Program#24
// Offset 189
STR ST1
OUT $VGR_Encoder_X.EnableCapture

// Rung VGR_Program#25
// Offset 191
STR ST1
OUT $VGR_Encoder_Y.EnableCapture

// Rung VGR_Program#26
// Offset 193
STRGE 5340 $VGR_Encoder_Rot.Acc
ANDGE 5360 $VGR_Encoder_Rot.Acc
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
OUT Y27

// Rung VGR_Program#27
// Offset 216
STRGE 725 $VGR_Encoder_X.Acc
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
OUT Y25

// Rung VGR_Program#28
// Offset 235
STRN X2
JMP VGR_Program.S3

// Rung VGR_Program#29
// Offset 237
SG VGR_Program.S3

// Rung VGR_Program#30
// Offset 239
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#31
// Offset 247
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#32
// Offset 249
STRGE 600 $VGR_Encoder_Y.Acc
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
OUT Y23

// Rung VGR_Program#33
// Offset 268
STRGE $VGR_Encoder_Y.Acc 600
JMP VGR_Program.S4

// Rung VGR_Program#34
// Offset 273
SG VGR_Program.S4

// Rung VGR_Program#35
// Offset 275
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#36
// Offset 283
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#37
// Offset 285
STR ST1
OUT Y28

// Rung VGR_Program#38
// Offset 287
STR Y28
JMP VGR_Program.S5

// Rung VGR_Program#39
// Offset 289
SG VGR_Program.S5

// Rung VGR_Program#40
// Offset 291
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#41
// Offset 299
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#42
// Offset 301
STR ST1
OUT Y28

// Rung VGR_Program#43
// Offset 303
STR ST1
OUT Y29

// Rung VGR_Program#44
// Offset 305
STR Y29
JMP VGR_Program.S6

// Rung VGR_Program#45
// Offset 307
SG VGR_Program.S6

// Rung VGR_Program#46
// Offset 309
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#47
// Offset 317
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#48
// Offset 319
STR ST1
OUT Y28
OUT Y29

// Rung VGR_Program#49
// Offset 322
STRN X25
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
OUT Y22

// Rung VGR_Program#50
// Offset 338
STR X25
JMP VGR_Program.S7

// Rung VGR_Program#51
// Offset 340
SG VGR_Program.S7

// Rung VGR_Program#52
// Offset 342
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#53
// Offset 350
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#54
// Offset 352
STR ST1
OUT Y28
OUT Y29

// Rung VGR_Program#55
// Offset 355
STR ST1
MOVE 1 C299

// Rung VGR_Program#56
// Offset 358
STRN X26
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
OUT Y24

// Rung VGR_Program#57
// Offset 374
STR X26
JMP VGR_Program.S8

// Rung VGR_Program#58
// Offset 376
SG VGR_Program.S8

// Rung VGR_Program#59
// Offset 378
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#60
// Offset 386
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#61
// Offset 388
STR ST1
OUT Y28
OUT Y29

// Rung VGR_Program#62
// Offset 391
STRN X27
ANDGE $VGR_Encoder_Rot.Acc 3567
ANDGE $VGR_Encoder_Rot.Acc 3557
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
OUT Y26

// Rung VGR_Program#63
// Offset 415
STRGE 3404 $VGR_Encoder_X.Acc
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
OUT Y25

// Rung VGR_Program#64
// Offset 434
STRGE $VGR_Encoder_X.Acc 3404
JMP VGR_Program.S9

// Rung VGR_Program#65
// Offset 439
SG VGR_Program.S9

// Rung VGR_Program#66
// Offset 441
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#67
// Offset 449
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#68
// Offset 451
STR ST1
OUT Y28
OUT Y29

// Rung VGR_Program#69
// Offset 454
STRGE 2026 $VGR_Encoder_Y.Acc
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
OUT Y23

// Rung VGR_Program#70
// Offset 473
STRGE $VGR_Encoder_Y.Acc 2026
JMP VGR_Program.S10

// Rung VGR_Program#71
// Offset 478
SG VGR_Program.S10

// Rung VGR_Program#72
// Offset 480
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#73
// Offset 488
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#74
// Offset 490
STR ST2
OUT Y29

// Rung VGR_Program#75
// Offset 492
STRN X25
ANDN Y29
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
OUT Y22

// Rung VGR_Program#76
// Offset 509
STRN X26
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
OUT Y24

// Rung VGR_Program#77
// Offset 525
STR ST2
JMP VGR_Program.S11

// Rung VGR_Program#78
// Offset 527
STR X25
AND X26
JMP VGR_Program.S2

// Rung VGR_Program#79
// Offset 530
SG VGR_Program.S11

// Rung VGR_Program#80
// Offset 532
STRN X25
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
OUT Y22

// Rung VGR_Program#81
// Offset 548
STRN X26
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
OUT Y24

// Rung VGR_Program#82
// Offset 564
STRN X27
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
OUT Y26

// Rung VGR_Program#83
// Offset 580
STR X27
OUT $VGR_Encoder_Rot.ResetLevel

// Rung VGR_Program#84
// Offset 582
STR X26
OUT $VGR_Encoder_X.ResetLevel

// Rung VGR_Program#85
// Offset 584
STR X25
OUT $VGR_Encoder_Y.ResetLevel

// Rung VGR_Program#86
// Offset 586
STR ST1
MOVE 1 C700

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STR C813
OUT Y18

// Rung MPO_Program#4
// Offset 12
STR C810
OUT Y17

// Rung MPO_Program#5
// Offset 14
STR C811
OUT Y52

// Rung MPO_Program#6
// Offset 16
STR ST1
DUPBOOL
STR C804
ANDN C805
STR C805
ANDN C804
ORSTR
ANDSTR
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 100
POPBOOL
DUPBOOL
AND C804
OUT Y53
POPBOOL
AND C805
OUT Y15

// Rung MPO_Program#7
// Offset 45
STR C814
OUT Y19

// Rung MPO_Program#8
// Offset 47
STR C809
JMP MPO_Program.S1

// Rung MPO_Program#9
// Offset 49
SG MPO_Program.S1

// Rung MPO_Program#10
// Offset 51
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#11
// Offset 59
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#12
// Offset 61
STR X24
RST C1199

// Rung MPO_Program#13
// Offset 63
STRN X24
SET Y17

// Rung MPO_Program#14
// Offset 65
STR Y17
OUT Y20
ANDN X17
ONDTMR T105 3000 Y44

// Rung MPO_Program#15
// Offset 71
STR X17
JMP MPO_Program.S10

// Rung MPO_Program#16
// Offset 73
SG MPO_Program.S10

// Rung MPO_Program#17
// Offset 75
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#18
// Offset 83
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#19
// Offset 85
STR X17
RST Y20

// Rung MPO_Program#20
// Offset 87
STR X17
ONDTMR T106 2000 Y16

// Rung MPO_Program#21
// Offset 91
STR T106.Done
JMP MPO_Program.S11

// Rung MPO_Program#22
// Offset 93
SG MPO_Program.S11

// Rung MPO_Program#23
// Offset 95
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#24
// Offset 103
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#25
// Offset 105
STRN X18
OUT Y52

// Rung MPO_Program#26
// Offset 107
STR X18
RST Y20

// Rung MPO_Program#27
// Offset 109
STR X18
RST Y16

// Rung MPO_Program#28
// Offset 111
STRN Y16
ONDTMR T107 1000 C819

// Rung MPO_Program#29
// Offset 115
STR C819
JMP MPO_Program.S2

// Rung MPO_Program#30
// Offset 117
SG MPO_Program.S2

// Rung MPO_Program#31
// Offset 119
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#32
// Offset 127
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#33
// Offset 129
NOP

// Rung MPO_Program#34
// Offset 130
STRN X19
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y53

// Rung MPO_Program#35
// Offset 146
STR X19
JMP MPO_Program.S3

// Rung MPO_Program#36
// Offset 148
SG MPO_Program.S3

// Rung MPO_Program#37
// Offset 150
STR ST1
SET Y17

// Rung MPO_Program#38
// Offset 152
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#39
// Offset 160
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#40
// Offset 162
STR X19
SET Y19

// Rung MPO_Program#41
// Offset 164
STR X19
ONDTMR T100 1000 Y18

// Rung MPO_Program#42
// Offset 168
STR T100.DN
JMP MPO_Program.S4

// Rung MPO_Program#43
// Offset 170
SG MPO_Program.S4

// Rung MPO_Program#44
// Offset 172
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#45
// Offset 180
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#46
// Offset 182
STR X19
RST Y19

// Rung MPO_Program#47
// Offset 184
STRN X16
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y15

// Rung MPO_Program#48
// Offset 200
STR X16
JMP MPO_Program.S5

// Rung MPO_Program#49
// Offset 202
SG MPO_Program.S5

// Rung MPO_Program#50
// Offset 204
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#51
// Offset 212
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#52
// Offset 214
STR X16
SET Y19

// Rung MPO_Program#53
// Offset 216
STR Y19
ONDTMR T101 1000 C815

// Rung MPO_Program#54
// Offset 220
STR C815
RST Y18

// Rung MPO_Program#55
// Offset 222
STRN Y18
ONDTMR T110 1000 C830

// Rung MPO_Program#56
// Offset 226
STR C830
JMP MPO_Program.S6

// Rung MPO_Program#57
// Offset 228
SG MPO_Program.S6

// Rung MPO_Program#58
// Offset 230
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#59
// Offset 238
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#60
// Offset 240
STR X16
RST Y19

// Rung MPO_Program#61
// Offset 242
STRN Y19
ONDTMR T102 1000 C818

// Rung MPO_Program#62
// Offset 246
STR C818
JMP MPO_Program.S7

// Rung MPO_Program#63
// Offset 248
SG MPO_Program.S7

// Rung MPO_Program#64
// Offset 250
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#65
// Offset 258
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#66
// Offset 260
STRN X15
OUT Y45

// Rung MPO_Program#67
// Offset 262
STR X15
TMRDOWN T102 1000
OUT Y43

// Rung MPO_Program#68
// Offset 266
STR T102.Done
JMP MPO_Program.S8

// Rung MPO_Program#69
// Offset 268
SG MPO_Program.S8

// Rung MPO_Program#70
// Offset 270
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#71
// Offset 278
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#72
// Offset 280
STRN X13
OUT Y45

// Rung MPO_Program#73
// Offset 282
STR X13
TMRDOWN T103 1000
OUT Y21

// Rung MPO_Program#74
// Offset 286
STR T103.Done
JMP MPO_Program.S9

// Rung MPO_Program#75
// Offset 288
SG MPO_Program.S9

// Rung MPO_Program#76
// Offset 290
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#77
// Offset 298
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#78
// Offset 300
STRN X12
ONDTMR T104 1000 Y46

// Rung MPO_Program#79
// Offset 304
STR ST1
OUT Y47

// Rung MPO_Program#80
// Offset 306
STR X12
JMP MPO_Program.S12

// Rung MPO_Program#81
// Offset 308
SG MPO_Program.S12

// Rung MPO_Program#82
// Offset 310
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#83
// Offset 318
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#84
// Offset 320
STR X12
RST Y17

// Rung MPO_Program#85
// Offset 322
STRN Y17
JMP MPO_Program.S1

// Rung MPO_Program#86
// Offset 324
STRN X14
SET C1199

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
SG SLD_Program.S0

// Rung SLD_Program#2
// Offset 2
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#3
// Offset 10
STR C1616
OUT Y30

// Rung SLD_Program#4
// Offset 12
STR C1617
OUT Y31

// Rung SLD_Program#5
// Offset 14
STR C1618
OUT Y32

// Rung SLD_Program#6
// Offset 16
STR C1619
OUT Y33

// Rung SLD_Program#7
// Offset 18
STR C1620
OUT Y34

// Rung SLD_Program#8
// Offset 20
STR C1621
JMP SLD_Program.S1

// Rung SLD_Program#9
// Offset 22
SG SLD_Program.S1

// Rung SLD_Program#10
// Offset 24
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#11
// Offset 32
STRN C1621
JMP SLD_Program.S0

// Rung SLD_Program#12
// Offset 34
STRN X35
OFFDTMR T200 1750 C1622

// Rung SLD_Program#13
// Offset 38
STR C1622
OUT Y30

// Rung SLD_Program#14
// Offset 40
STRND Y30
JMP SLD_Program.S2

// Rung SLD_Program#15
// Offset 43
SG SLD_Program.S2

// Rung SLD_Program#16
// Offset 45
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#17
// Offset 53
STRN C1621
JMP SLD_Program.S0

// Rung SLD_Program#18
// Offset 55
STR ST1
MOVE WX0 V3216

// Rung SLD_Program#19
// Offset 58
STRLE WX0 13333
JMP SLD_Program.S3

// Rung SLD_Program#20
// Offset 63
STRGE WX0 1600
ANDLE WX0 20000
JMP SLD_Program.S4

// Rung SLD_Program#21
// Offset 72
SG SLD_Program.S3

// Rung SLD_Program#22
// Offset 74
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#23
// Offset 82
STR ST1
OUT Y31

// Rung SLD_Program#24
// Offset 84
STR Y31
TMR T216 1900

// Rung SLD_Program#25
// Offset 87
STR T216.Timing
ANDN T216.Done
OUT Y30

// Rung SLD_Program#26
// Offset 90
STR T216.Done
OUT Y32

// Rung SLD_Program#27
// Offset 92
STRN C1621
JMP SLD_Program.S0

// Rung SLD_Program#28
// Offset 94
STR Y32
ONDTMR T217 500 C1623

// Rung SLD_Program#29
// Offset 98
STR C1623
JMP SLD_Program.S1

// Rung SLD_Program#30
// Offset 100
SG SLD_Program.S4

// Rung SLD_Program#31
// Offset 102
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#32
// Offset 110
STR ST1
OUT Y31

// Rung SLD_Program#33
// Offset 112
STR Y31
TMR T218 2500

// Rung SLD_Program#34
// Offset 115
STR T218.Timing
ANDN T218.Done
OUT Y30

// Rung SLD_Program#35
// Offset 118
STR T218.Done
OUT Y33

// Rung SLD_Program#36
// Offset 120
STR Y33
ONDTMR T219 500 C1624

// Rung SLD_Program#37
// Offset 124
STR C1624
JMP SLD_Program.S1

// Rung SLD_Program#38
// Offset 126
STRN C1621
JMP SLD_Program.S0

// Rung SLD_Program#39
// Offset 128
SG SLD_Program.S5

// Rung SLD_Program#40
// Offset 130
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#41
// Offset 138
STR ST1
OUT Y31

// Rung SLD_Program#42
// Offset 140
STR Y31
TMR T220 3500

// Rung SLD_Program#43
// Offset 143
STR T220.Timing
AND T220.Done
OUT Y30

// Rung SLD_Program#44
// Offset 146
STR T220.Done
OUT Y34

// Rung SLD_Program#45
// Offset 148
STR Y34
ONDTMR T221 500 C1625

// Rung SLD_Program#46
// Offset 152
STR C1625
JMP SLD_Program.S1

// Rung SLD_Program#47
// Offset 154
STRN C1621
JMP SLD_Program.S0

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STR C1200
OUT Y39

// Rung SSC_Program#4
// Offset 12
STR C1201
OUT Y40

// Rung SSC_Program#5
// Offset 14
STR C1202
OUT Y41

// Rung SSC_Program#6
// Offset 16
STR C1215
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y35

// Rung SSC_Program#7
// Offset 32
STR C1216
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y36

// Rung SSC_Program#8
// Offset 48
STR C1217
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#9
// Offset 64
STR C1218
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#10
// Offset 80
STR ST2
ANDPD X47
ANDPDPF
STR ST2
AND CT150.Done
CNT CT150 100

// Rung SSC_Program#11
// Offset 88
STR C1203
JMP SSC_Program.S1

// Rung SSC_Program#12
// Offset 90
SG SSC_Program.S1

// Rung SSC_Program#13
// Offset 92
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#14
// Offset 100
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#15
// Offset 102
STRN X41
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#16
// Offset 118
STRN X40
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y36

// Rung SSC_Program#17
// Offset 134
STR X40
AND X41
JMP SSC_Program.S2

// Rung SSC_Program#18
// Offset 137
SG SSC_Program.S2

// Rung SSC_Program#19
// Offset 139
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#20
// Offset 147
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#21
// Offset 149
STR X44
ANDPDPF
STR ST2
CNT CT150 300

// Rung SSC_Program#22
// Offset 154
STRN CT150.Done
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y35

// Rung SSC_Program#23
// Offset 170
STR X46
STR ST2
CNT CT151 1300

// Rung SSC_Program#24
// Offset 174
STRN CT151.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#25
// Offset 190
STR CT150.Done
AND CT151.Done
JMP SSC_Program.S3

// Rung SSC_Program#26
// Offset 193
SG SSC_Program.S3

// Rung SSC_Program#27
// Offset 195
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#28
// Offset 203
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#29
// Offset 205
STR X46
STR ST2
CNT CT152 300

// Rung SSC_Program#30
// Offset 209
STRN CT152.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#31
// Offset 225
STR CT152.Done
JMP SSC_Program.S4

// Rung SSC_Program#32
// Offset 227
SG SSC_Program.S4

// Rung SSC_Program#33
// Offset 229
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#34
// Offset 237
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#35
// Offset 239
STR X46
STR ST2
CNT CT153 135

// Rung SSC_Program#36
// Offset 243
STRN CT153.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#37
// Offset 259
STR X44
STR ST2
CNT CT154 210

// Rung SSC_Program#38
// Offset 263
STRN CT154.Done
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y36

// Rung SSC_Program#39
// Offset 279
STR CT153.Done
AND CT154.Done
JMP SSC_Program.S5

// Rung SSC_Program#40
// Offset 282
SG SSC_Program.S5

// Rung SSC_Program#41
// Offset 284
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#42
// Offset 292
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#43
// Offset 294
STR X46
STR ST2
CNT CT155 1100

// Rung SSC_Program#44
// Offset 298
STRN CT155.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// End of Code Block SSC_Program
$PGMEND SSC_Program

// Beginning of Code Block hunt_exp_light
$PRGRM hunt_exp_light

// Rung hunt_exp_light#1
// Offset 0
STR ST2
COPY 0x1 "4 0x0 MC402 Y39 1"

// End of Code Block hunt_exp_light
$PGMEND hunt_exp_light

// Beginning of Code Block HWB_PickUp
$TSK HWB_PickUp

// Rung HWB_PickUp#1
// Offset 0
NOP

// End of Code Block HWB_PickUp
$TSKEND HWB_PickUp

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"C1","copy","",""
"C11","C11_Interlock","","Used to delay logic by one scan"
"C12","C12_Interlock_2","","Used to delay logic by one scan"
"C20","HBW_Has_Pallet","","True when carrying a pallet"
"C51","X_Direction","","True: Left False: Right"
"C52","Z_Direction","","True: Down False: Up"
"C80","Conveyor_Timeout","","Bit high when Conveyor Timeout timer active"
"C90","HBW_XY_PID_EN","","Enables PID control in HBW_Move_XZ"
"C101","HBW_T1_Send","Modbus MC101","Task to deliver a pallet to conveyor"
"C102","HBW_T2_Receive","Modbus MC102","Task to pickup a pallet from conveyor"
"C103","HBW_T3_Reset","Modbus MC103","Reinitialize and home all axises"
"C104","HBW_T4_Manual","Modbus MC104","Switch to manual mode"
"C110","HBW_Move_X_L","Modbus MC110","Move Horizontal Axis towards bay"
"C111","HBW_Move_X_R","Modbus MC111","Move Horizontal Axis towards Conveyor"
"C112","HBW_Move_Y_In","Modbus MC112","Move Cantilever In"
"C113","HBW_Move_Y_Out","Modbus MC113","Move Cantilever Out"
"C114","HBW_Move_Z_Up","Modbus MC114","Move Vertical Axis Up"
"C115","HBW_Move_Z_Down","Modbus MC115","Move Vertical Axis Down"
"C116","HBW_Conveyor_In","Modbus MC116","Move Conveyor In"
"C117","HBW_Conveyor_Out","Modbus MC117","Move Conveyor Out"
"C130","HBW_Status_Ready","Modbus MC130","On when ready for a task"
"C133","HBW_Mov_Conveyor","Modbus MC133","Status Conveyor Moving"
"C134","HBW_Moving_X","Modbus MC134","Status GantryMovingX"
"C135","HBW_Moving_Y","Modbus MC135","Status GantryMovingY"
"C136","HBW_Moving_Z","Modbus MC136","Status GantryMovingZ"
"C138","HBW_Status_Y_Pos","Modbus MC138","Current Y position"
"C141","HBW_Target_Y_Pos","Modbus MC141","Target Y position"
"C150","HBW_MoveComplete","","HBW_Move_XZ completion interlock."
"C180","HBW_Fault","Modbus MC180","Status in Fault State"
"C182","Fault_X_Target","","Active when X target out of range"
"C183","Fault_Z_target","","Active when Z target out of range"
"C400","VGR_T0","",""
"C410","VGR_T1","",""
"C420","VGR_T2","",""
"C430","VGR_T3","",""
"C440","VGR_T4","",""
"C500","VGR_Man_Control","",""
"C799","VGR_RESET","",""
"V105","HBW_Task_X_slot","Modbus MHR105","Value for slot X coord"
"V106","HBW_Task_Y_slot","Modbus MHR106","Value for slot y coord"
"V118","HBW_PWM_Set_X","Modbus MHR118","Set Horizontal Axis PWM Duty Cycle %"
"V119","HBW_PWM_Set_Y","Modbus MHR119","Set Cantilever Axis PWM Duty Cycle %"
"V120","HBW_PWM_Set_Z","Modbus MHR120","Set Vertical Axis PWM Duty cycle %"
"V131","HBW_Cur_Progress","Modbus MHR131","0 to 100 percent job completion"
"V132","HBW_Cur_Stage","Modbus MHR132","Current stage number"
"V137","HBW_Status_X_Pos","Modbus MHR137","Current X encoder position"
"V139","HBW_Status_Z_Pos","Modbus MHR139","Current Z encoder position"
"V140","HBW_Target_X_Pos","Modbus MHR140","Target X encoder position"
"V142","HBW_Target_Z_Pos","Modbus MHR142","Target Z encoder position"
"V181","HBW_Fault_code","Modbus MHR181","Current Fault code"
"V801","VGR_Fault_Code","",""
"N810","VGR_Rot_Target","",""
"N811","VGR_X_Target","",""
"N812","VGR_Y_Target","",""
"D0","MC","",""
"D1","Feeder_Extend","",""
"D140","X_Start_Position","","Distance to target"
"D142","Y_Start_Position","","Distance to target"
"D143","HBW_PWM_Cur_X","","PWM value for X for XZ movement task"
"D144","HBW_PWM_Cur_Z","","PWM value for Z for XZ movement task"
"T3","T_HBW_S6","",""
"T4","T_Conveyor_Timer","","Used to detect conveyor faults"
"MPO_Program.S2","Vaccum_MO","",""
"MPO_Program.S3","Vaccum","",""
"MPO_Program.S4","Vacumm_MO","",""
"MPO_Program.S5","Vaccum_Load","",""
"US0","_CP_Strogram_A","","CP_State_Program"
"US1","_VGR_Movement","","VGR_Movement"
"US2","_SSC_Check_InOut","","SSC_Check_InOut"
"UB0","_VGR_MisScan_A","","VGR_Movement.Done ThisScan"
#END

