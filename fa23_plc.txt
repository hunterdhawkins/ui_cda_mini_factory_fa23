// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\DLChe\ui_cda_mini_factory_fa23\fa23_plc.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
21cc5d83cf212aaf3c95ee3a5546e4f4cdbfe5994dce91601ccaf63f8c8b931e040ecdd4127ab1f0
57c5fc8894e47e98347cb2e764b5c5ba4c30465395ccdf61a023b812b94b288cd57bb9fbbfbb701b
d045c6af93b1032a2a95014ac07b9cdff9caee10a9619453afe1490e894aaca96e4fddeee3f412c9
f7125a5c97dbaf5f216db32ceea2030abd4da5ac8e9a1de4d98e6775096048e49525242a2796222d
4ad4a4e3f83de305aed4c80a8a015e491bee2d40bfdd29efe8f0ffdaa289e1bc27d4824c4d8fcc21
f5bc7d23524372e2629003e2bf664a0551d91b808724cbb145509643ef5c0c23b0137f026fdc60d8
df27f8c8fd7c9603b869e4fe5d51e1e680ca62ea34c0b8e88c3d34446348369b52f7f90575d7bc96
1c28c3bfbb91d0a685bb6791646b4bc39c9a0d8d0983b08e5e0705e354164410fe813f3da5dff171
aee318832b15e740c575f4c519da0bbcc064095d149d72cbbee885b212986e0745b9fb42a7a1b367
d5c9adab50a64aa91ba2154cf77b3b8530d6c701442976de5863211a63cd3a1417c3ea079c15c35a
42780fb815b3bd3fe21af9780d867be1c0c7e4ce1ab1cb6e6799034594a33a20f0254e493b3cff4a
19f62734b13107c4cd04c3bfb5d800f7dc2814f1f3e4467400a530d83e6da5b89a87eece886e43a9
f2a11315cdb781f6885f68499da8ad83769b9546972270c80b1279b66dc088560c1453e3b769dd27
a66e8f6a0638c2a8882170d099dd53f8f62acdf06b7fb72ba625d23fd3bf556b7c7c5143c27f36ea
ed6ac86628b743e705c10a144628f84d5fde8b8650a330aef4839e85475ab2ac666f4a105feec873
fbbb86a784c41a970aa393f6eeb8688477a6da78db411ff963d4dbfbe6d33a4b96789c52f59d7047
39dd6743146f934ae688cbbfbd7bcb6ec13d903b5306dd7af8b6b27c8c436acf584fb002f66b0fc6
daaee6c1617d900cf7a5134943301138efd0be082c7a501bd77c626cbb31f592f13ced46af78298b
85bf5aa6ee632304c49e40bf0c365c591833ba7b62c9a742bc2104cbe121ce167b0ac19a0cd34ba2
71a7d781faca8f622a817d375a92b7bd4a6390a92602a3f3162fa6bf22c5721640def47dafd7dae0
d87018b7bb1c33354eb997fef811ed02789552af5f5147844fca39cb8e24f16b669121c48c1eaa18
0d764401300b0e9f4159a3c97ed2c18c27705b3e480dd7279c9d6a9eb4f7c54d092810c94f9aa64d
83f3e2022cc3fd123677602356b7547bd6a69a1d4b59ddc16e5287ba39f9692baef62b6e6ec07f2f
38dd3bd90f7606e32ca757bc4f28abe6d9d0bc8304f3e603f494d0b231f9218d982690dba613fe10
7a95499c24a691971eb25f1c3ab14956cb528e606ff044451616f77809325f1b46db528d1baf5ca4
6406607544238a6adac1e3b15c916c1489253d0bf63424aad9215f462e1c6ddb1addfab8af1df842
daba3d86e3271953283ce6d73348f21acb5eaeacb148a1993ad47b57a0fcd7e8a7f0dce5fd5de5e7
0eba36f8a212dfaa35939010804ebc2a20c5b79401a776190f8449c7f9977ca55091849697d43c6d
a419d0116cc14557aa3fd0e60d1e68f429af92804fd3800b51d16f9c2a29761fb9c1fe1347e02b04
896772cc05fbd1e00caa011e5787063005a04ae6b78332c70adb2c8ffbcf0bc9fb45df3a78b529bd
7f583c706be8b995fa9658c7627b1dec1453d23eb9809e99aaf894ae23ed77992a1da7dd5442e98b
8d83f985dc7ab19fa5593274402b8d0a87b0a361015927b5093e570b4a5e66d761c4aeffd2b61921
c1e2f5cff02c2bca34e512c89376bdb55d3e43d463ce11329b60aae876fd169a0f6fea3c22dc63e4
16be5393448f784f0a1ebbe45ffa80b9301751821ca5643de3199628fa4191f4b6833ee5fcdbf1d6
90f36e0d49d4b9a9d735ebe743624bf4a787a0caa9ebc5d31923f7107f8b22723c0799cb5158f4e5
cf3f9c4071fb16c24500219c63748ff94414b2ed2facde2c75c59366ff66ffb31eb36c4f52b67ca6
07894d0c567f9c4eada521901b6f1944c5bdd408d8c7623d622020302c8a066cf7abf9cff9ec505b
085b40b0469e47ed97ca9790d612d9f0ea7e7d2dcee25b98c75c204639465de4cd52dd0e78ca4f7c
0b192d2ede3c69606f83cacf31168ccad4066affaf397a37bac842f04200c0e09e69c6b9e5a0be6c
c67d1f7d0a6e3b21ab52df8f297654280fbab0e0fea880ddc4e929d39e1c364a0fc0f9a0d947feff
d9c9cc72cd038f251c7a133f8310c8604b58d6a7c0b8e6bbdf17357048e1dd77500f6287dff71ea7
bf888a40bb700fd30e319d29bc3c240ca60739b47ba9e8e52916384c62d94da6be1146ee15626a43
5d08169c66cc2f879eafc3115f9c333d7988f97797daa67ad8e2a622081ad3e500744ce331679a7e
d547be404e13e38755b3cbc662663baee6e153e0e1d6c600f71cbe0114e3548cb5ef8287cbe11098
7cc0d5dbb29e7a896009574b46b14ea825753290f7b8c5c6b060b9d2b6177b0bb78fabffd7289f90
4d580d1a10f5b7f747ce76dbf85fdd7b443e58d500c2389dbfcc2e987c190ce0b3214b2d3b4bd958
0bb81ad9475490f1367735c03c7fb64cc92b5ad866849db3345f4dd583aa3fc406e64b9a1aaa3a28
9a66e52795385ee79c461a5cf375c062c5a4e0147ba4c135769e0fe5dfc24c246f078b0e3820ebf7
2f999f64cae9a49b25e73ca3f5eb54b9f5906960b3a64e153b4c840f4bb1a7fb337d8bb441e446e5
188aa4d7f367cf7fbffa7149c7af50309208fbb0c8ec1d869f82c521a38d2b5c3e4daca1ba82e2a5
57ec160a91fcbe9d2748168eecbb438220f42b3c9196945152eb501a90d1ccd432720d808b6104e3
3dd3b36e934fdf7b6271c84f5c336e7da69db443bfbeddafcfc1adb77741e5e9d18f5242736fb132
7ee08f451b4d76b905e45e455208efd3ec9f99f16044f5ee71c6c3683e08c2eadfd77017d907222a
ee9791bcca0357e75d06cf3421a3f8ca2a959f60a5a9acfcef09a6d9c047648b4967a56f55b86562
e93fc25ae78f2a07bd6bf47c3206e779ac6c09615362894afa823f5b645adf2e0bbd2ace70dc1812
a4afdcd92c3bd95b566026e20adc45921e2dcfb4b451a30fa478e169a02e4e7e7e25ef928c75147b
3caaa818477cf2af90f8af8c74792a70322ee04de1c78f69a4939055542e535831b9e43826061ded
0b1fdb35525dd5729e55fd52b59a43ef6b2559d906f10413cad8f14b079530e34e2d0ac058146f6a
23ffef699e45620dcf6e1ea380194a2551d81b2b8bd1620242d5e5a5f2753d960fe3e9ff57b788e6
c8a4e92d4b73570d2c0ed3cf520fbfbd1f818d5e8448f8a51ab5c917e94a512b4e46a8192b829764
d29dbd358d2c0fb07a340d274d003601e5391b5e650c59433ddf9b1fd73e82897722f7e0468136a9
6f1d92e86ad98dbdba53f169d2dbb59af865173d2f0da81b1b59e6f494b9c2408b0948ba785e8aaa
5daff7d2f08bde153e3351ee852b304046f60544db5b0343da9112008f20283e24d9610908a5037c
42ee733c625c1de2f0b48f26776d9732336ec70ccaae8e54544b3c80e8a904989d0da12afc9305af
e646bd35012d85c817c76ce392e4bffbbc765aa3ba8cf249387794bfb2d010aba5bfcfc97989287a
ae2db12c0fed14f470e336817fa1531b9ce5bc55c6c9f3545db307c863ff0c4e1eca49d516e51507
88276f790f69bb489238a3be2aeb98ddebc62104f01aa225b6d646caedbd68b244217403c2800202
32d4cbe6c351104fda42c0456d48a0f4111c12bb91f6c81f372a30a46596dcdedf381de97b82dee0
50c70c066fd61ddbbfdf05653a6781d64580f7ffd6e2b93561c3dbffbb5962461f05ff5a4b962ab2
190eb16bcb95c82e79e623c41588bfaf31b2c577d5a7f9dc76739403c3c6f35d302cae188209082a
979901442e753176028e96cf55a1d386b9e7622c0d7447729cf1ed6fb923f8a4f91f089f0038cd89
d80df174f6aa4f8ffbf44294f4f317444f4480676a2853e71dae3f3a44cadc3e696a6429f6dbec67
a5bf6590030c3639f279fbe17ca75574ee6e3676f7bc60d481c86a7c9e573a64d271edd242ee654b
6500a1542673445a8391b1e4cbced069aa7e1e00a0ff9cfa958a7c8c502be42bd83606c1fe99112d
073552242935d0204dd762cf55fa7276f12b381ce7aff629a7986df95c9957dbe07ef678a9b6b683
120a409a7f05e423bc2ac64d0a787aa2209fcb3b358630011839d5cc2c4d3b59c449e7c1ecd2fc26
25cbeb679221d7c9ba6db3996de052c1d3e6efcee48ed3653782c25b172b754d0326d045c603bfac
cff6c259d551d804e121571826a32efa9826177587f27866bee9b84186b1a9039f22b03cb7d9f792
045b40bb8997aefaef77f5725aaeee1cc0eb5d0ef53205dd68c03e086a629c39306de3c8e1ae150d
40193b824cdcc58eb2f3050145476226998b5fe6c9feb099e0dfea02af6cb99987bdaf80a7993e94
8f522c0327353427ee86a8642cbd02f19bbbff7e399f9ac5ea654bf0f9d3c5515ffb376cf738db5d
f0acddeb98694e128372166b62f877a37836b5da315b3c07eb9c40ce604272ab3ec682d3e5cd73f1
89760027fa2c922c16d2852e22faaab98f86f9506b831d718e8e6f0aa7269bbc37059aeb563b20e6
45fb5639d7d6aa906ea0b9d73e8c89420b7838525dc98cf99ae3611e077cd41295f3ca22694aed27
82cbc450f552e06854b1c664f4d3a0bdad499d444113d2d08373e85f776e312711b2af5b0cdffe08
9e52ce4dd6198222bbe0643e0727f39ccea2f441807e8056caa9a92a926776f13e2d24c157a879f9
e49586f9dd9ce222c201d680721e96a3a5436a891953b3de5740d64f2cc9ad813302822ccebec1db
631b28cfd3638a2a065ecf6fb0bc75ab6d8c969210578285efd6f6ddc83c3ab65b7514061a106745
3b250edfdf7cd8880ad86495ab45a3b11ba02b8b9f3a8da7de4e642c90d755873b03a26be6432513
f007c8c2e33e296a04c7260326f9aea91251802d14318bd5b4688afe9bfcbe46cbf2687435190c86
7f9201887c642ca557ee1c462f07c7d8baeb1dfcfd99f313e4608ab96d1fec7a2f876dd9f97be3cc
e846041028ccf0125bcb9b4221abcd0aad518c48ba004fd4e9a96361fa411ad0a0a95038e202032f
12e358ab4c5d191a5248cb7310d41b709648e6bf93a5688a61cccf3cddaa280cf94e72b35794adea
c3b2210c6921d2e0f6ae4777f78691705d126163ff607cd1eb8080e4c48329d014e8a7bc98f80d88
8c3276807d288e868a883cb5adc5c5ec9a8b59f7964239a1347d2930f3ab3ba8a55bd93bbf14fa59
6040025e78688b10131f0c9acfa72728bcb0b3757235ae5ffdb41e083f204d6e341005dcfff26c68
7af9a0fbbc3bb1b4374276763aa4e774caf433b7de73ae333f8e72bc027195700ff6b91696e94d48
a325d212745f20d07b629356a7e7c762d4f59e12eaaf065ca82c6fbc434c3b62ab96c7e8707e1922
f33d4dc7c7e500ab934dc2a0a7d3fb9ce58b6be5779c8f85e944a8ea1a72340ce89b7fc1b787d594
65d87f1bdd5a7ffaac07a9cb97541908cafdbf7619740d06958e78bd3485c91be48845bb67876015
41cc0e01860688c747cc76938f73c8d9b697097c67a2da9a0d17fa274e6dd768c06cd50f8a695c22
a000997b25d6fdb8c5f21bdfc4bd90397cc134739462025e2f01740dc8ab6877c7b1cf35f8d2aa00
cb1fc4800db2360f31c0b5521d92d76874a7538d71b44fd152d617a0c58ba6412e8798db8e80ff7d
1a0bab73b5859ab634ffa4efa622888355366539c610956bc20b3139dea3046a6a437628a34db7b8
12febdb2fdfd032238b77c492fee28e25ed5dae985d93b1338ff736848d16fcdb49869ccbeb9fabb
58c9e0643531e573c0d9659a18f525ae3a822bc99465049fc4088a43323668002f0c4a3391a6df74
9def7f40db4ffb736c66d4699ff2d2e7c055fd995b7b52e811e3402b91b326bbd70646b3df0f4b25
677636ca3960d548e9ddccca07c68e99836b733b0091846aa0621b0f394ce9e7a06264787b30a133
398506b670b30b185f045028b05ee05a87c6c878e4933d97b7190026c4acb0a1f4b7bc7fa8dce69f
6a2d74448afa4f721fc1d52fc291539651745f4e7ddaa84516c4f0857b6672cc5ec9262113a389a0
befdaf53c92d5fb7c15388228e2d130a297e16273240ac9e66e9527e557febb1a4f67b5f61c6c305
9b71e847e2dadffa4a6cf2a79a1a9d5d2f1c4f5577af78df396a8549b734b37a0b5eeea5f9db8ee2
baae066a175b7908fae234e3d90d66fe577505479ce6ada73329426dd8186cd8b8aebc5b081a18af
6f01f05c5357b665796aaeef0475b686a14e9e7146e874b8ba7e0d200a58eb9683e26917cb3fb383
84589d570bf8973aae347b41cab5f1115d45b661569ff0ee89d424a049a930e06a2586db7878b653
28c2138ce705d583ea2232744ee994606982ebe31ad245ebae6e93e3b96f595cce45132add2730ff
ba218b8610be327e742adbb6ad74e4a1e858d11e981dc3f03641cbff861a26b293b60001433d23dd
49fe6f8b390be4b76abf25d36aa10ff81290cb41fa646963ad393c11fe60540caa7c3ade7145f489
b0c31b0fb7db50734cecaa62f325f20bfab06b6d848687def7a2a5af71f2a11e6f925044d84904fb
a817e225e42c913c1cf5a04ca3a95034664f86f821a7827ff5831219af4e72069989e126ac12f26b
449a03f6f3119e4e554ec3aebd1133a762b7602d0a19a4d89b71dcd211e89075e1abc6a21d858008
1e889cfa80b3c7637bd2f9636a3f4fb4da02de2d414e458af0cdf5e426574440e723f63fead0a045
fff582b0c752c90ab99e6164aa63ebdd0eb160402dc7fdee02f2960cee173be5260020499355a579
2e3fbd4ee43b9d35295db8ac147a90ab062285f5872e7066cd4a52796b17547b04ae95d5b3112f4e
249ee2adaf6c6da824af82c4307875a61741d2502eada6280ea89c38dfa9f1facbc4df06f4ad605f
8cfb10acbaf0d17054adea91dacf99d4a233501db06d63c9a278a8cb9c39bbdb6121415eab5054c3
6bd12dd515f8d6ead454456c2d9fbb0ad7cf0347906caf1f9a14bfd9f4f93b2f97b10764214668e9
4fc183344b63799b55d3b6b50308c88cce5344733f1e85eb624769690409c7dab2a1171483a51330
b6d1c7d876357ab237060705ae3ed150000ab91f71deba42be3ed49469965b434bba59431f757632
13daf559d3baef7bb0fff89e6f659b5c6006ec2634a2718356c5b6de4676fa43135cd3cf2b2b59d2
3c353da277d100693a37637f510d9f952ea9111c36589bd09526aa8c3eef4bfced96f8cb44ff6c2d
7360d33414e654150e1c3f90bebba830cc939af200d5babac3ee1a7831953b0d0c2604a672ad8815
2f37aabe4e48a18489d5405246e8a4a66c58cae88e776dd48ecdb84ff5bf73dcdf4055261e054e7f
e10e256c9f6628c1300f1e613b0d9d2ca42888933d9c3259408f56c61295434570f77e892e2899ae
9f8094c54d2d63409d90373f42e3f6ccd9da371a1f843e95a32c53886715b4f04c3c4c1dcbaca0ee
5bd7aacdae0bc60c74346ed8cd2e0dce736a0f4a8822b16b2daf68e8678b34e4c37ce9ca2a1b66e0
24551bf0faa5ba0553f6a32d5c0370cbf3d2bf62c7b00edc4d42ddf2d2fb46a54d0a50eee3f41b27
39a330f35cbefb04f69a3ff758e13192b4e144a2be5b4574ed56b7cc00117e3f47978d193704e722
02c5683fd97ce75a0f24c7f57f9a292fcb9c49af99cb3001076264d32e95fee026f3732aa720e4b4
f4f663656d8ceaaabc65535811fd42dc3698d36cc8fe224d3a33f0dd08571881394b58d020004580
06608393043a6082978781071d544e6a4a9d3b2613e33abef99ae38c8c0ddac689f81705d3883d6b
dca3fc2da6b104c53cdd5e6042e7141ec8cf43d511f0dd7c3932f809202ed81cc5618667414ec553
67d86289868d07d899b3c7b37aef7895102d593e4a896a07cc4b9c194fe821d3aa26608d508c8ca8
8f5e6e76b87118b266256a5425508964f34ebd8275351484ce653a9f82dd84223c8e2c4b36cdbdb8
83b2e64605120ac6deeaee6ec2e7809f899556797587da7ef573397ea8113630a2fc559713f2d670
b35607e2e816b20f8530e1b267e39fb786eb58d723c2734ac4da6f905292d48825f4b99653f9a86a
d03caaca030b6729620b4964371824cda53a35522e4811bc160f56b7583c156773fe4084fb9fa09b
d317114488f6ddd1ec3ac594c68975cb11e1a7e915a37fb6f4e7b1b9ee25a3044bb094b182b7fb72
456f7d583aa68c6b5e736e87809bd52bd02c2bbcb086a692524a4fc02613bf81705aea96049599dc
15962af1784fb0c51ae03c5a7eb2f7bae4df06dd2b9488d11b1825a9ba6f5b2373e442a90c8ec020
2ec5edb32d82fdee2fff01abffdfeb1876d1b56037839a1907e539bee6e904d64f7cf0f0578f70a7
8fcf67e7e1f19cd6666a8439deb5449e88d1ea745afb0e9149f2748236b478217879e291a5b60c4d
8c45cd8822c5e486cda4c87b4c4e7020e77af080f797ba26aa0f200462f387ea91ea5afcb38ffb32
aa2aae84cf880a40c42533099c61ff33614a94fa3dd5291ac7438be5f4a92b951548555c6cf449f6
71296704d3210563a249e1dbaf56e568ee2fb6657c57b4d930038892b44e315bef6538362357b6ad
d9d501dc5a0f8cfc0dfd4a6900a5b1b8adca2dd991989e34b24c34c95ef3dae132d52bab96c47296
d956a829192f32392850e980195bd5e5358264ef2b4767070d23c1ec2f2f003402e36ee0db533f49
f7147b57b7f05dfdcb3ff549995e81d62ccb75be1601e3dd811110d1d3bcdf39cb995814c5fe7f39
bf574b8f0884583590617907bb76681d07314d7a8c05c1ceb6592686a304d96779112c4dd8240a83
dbdc56b66a3c71dc9a21e2d37e10487e2554964550dc167c40de887183c2448564f4142917a055b6
424ea6b0b937e2ec08d82f594dfb900d5c40a579595ddf89e85100b6fdc5be5be662af3270ef1455
0f5506fde970785a928fc6bf068e706721de7e82ed69d7973d82f040cf39f91710f13717210fdf51
13c2a215a16c724d5377301dd0d4d3ab8e68208bd60837cbf69f3214aceff9e46b2ef93e2841fd9c
c37902af5ab8e5ae137e808c3d2351a767c83d6e16fb1941d161f25eb7335e9efc801ea5c59728f9
564f8be0643b06ff394215a0a487f4e7d1fefbd5f4992a45b3848b0f9377eee0a85f29613e9bbe79
bf1c432eca53b7d3ba4905a8ad5f77fce4249bbcadaa3c9fff3789d2a16c120a8731de52e1ca6d89
d2421edb09abcae4012cd5ea3260e70a4b48f64ba565b3a7411af9ddb9dc90792891d20a80495253
e035875a6094955b7489c78d7f601fc43d03844a75cedd52b21e68942190947f84b1e8de51225689
b26638cd2c5cde2566e47b2da178cba4f501b888afdf906f210d045fc07d92696e2452bbab63344d
9ccc1cc663238d83e8c31c63bdd27acc33163c063562ff21f42aa79ed8060586260903504e0b96e7
2baa2d6ab591ff07a0a4c816a3eed0918bb0f54edcc123b6e717811039fbc3ed3e79001becd222a0
56111468a945d938bb30d1c0d7de14a752cc572179eb90a585595207e9970354b24a652b513fd846
458171c9a7a914c83409eb1ed2ba829391959afecb3939b44044c075db5baf54959d316010a33136
d6724a2074a063365aef201b12a8a69f741a838eb5bd71f30a1108aac887aa749cb93627884ac7e9
ae518cead8f25b5eef9374fbe59b74b612bade0fb97789853b9c03907f5fcc223e36ce492101b665
7434882ae651b2d98a2b1dda9b7db8f6c2d650d76db83735e254ef4b135e7b3f951c88570fd1c284
6d9286a483ea4a4bd668771e9baea194c763b529285175741b520687edc3a979a9537454770af05a
24513966f34483967eab7f2ddb5ef3587da1c8035723e1c86a660226eef5c59c22be58aef91de9ac
ad80872e4257c5e52b8e775246ab1f8a6d398f2db10a033ecc11ec295ceb5d69609a1cddd40c4a9b
f6496b349e0f6e2cde7c3f7dbef7c695f7fc1c07b1c5900d94e160f294751b5a4dd3dec5f162f33b
7d1e665559bd54eac79b9f12dc7cd6451a16ee8644e74ca717549eeccbbb04720809d17009486d7e
9bafcfc9726aaa5dccd452198239f91a99fda25dcc988388b8fe120d70c4eb75d991af81f510f834
3a9427053ad849fc49624ad9c415fd9b103ed224aadcdb04c6d4466f19618a3144c8a56a682d4593
386e00579c3ac90872b30c168b269a844b8b948f8dace606c228bb7b3963a784b660102df1be61cb
4886a57df5b0b92e7c3843067c434fec0dbe26d20c930d06da4b5aabf6c71535bbd41c7737ffe8ee
7e22800409f2fb2f855363e3128c9aef0e30b7b4a63bc107a8a5b5f8122fde6a92dea8271295f6f2
d30e706cbfe165432fcc3395153f67e1eeb092886cde6f7521f69e75bfad1255c428fd3d270afa54
8225ef169a09d6eaa66dec1415aa12e5db0531fdf674956823026e5937b54555981c1beda9db81b0
18245a27f339cbf7e7e69aa1401895fedbe2407965192e4be207a9247d42600c73852b77d5919792
fb0aec92e8fabf1d011ed6a5121f13e98d38b16bb6e4850c36b8c3e8c26deb147b92fecd9046c291
02f7cc09e02470e4f0cdb317aba7e5c854dd10c4a0039ad50d6964c9401b763f0992f483233d5551
2cf0d9fc23e1f99c168fe051d1e694895919bd85351055675592ff2f27119a5110e09fba8cd2ab04
d96ba3e009f7341a7fbe2cc95764ac17a1d86f428ee32f59bbdea1734b5884173e78d7e7136db369
b7ca05ac02076efbeace26e84701080438c2bd18c2ec1bec7f36d3f6b150f8932a51cca621a6da78
53817bf7fb7a564d51c7cc2fa353dfe50a4e4fee9007a011d5131db04e44f7e674db8d176d6a4f03
ab4fd72733e96e700e36384ea9641eec4f1126650b4b12f54c6532f6321836b4d184e00ab3c0ac97
8c9f92db14d89c252458ba584501deb9e43cf5cc7cdbb5f8de8df8a2b3a444576810fb568d484c62
086b73d1f3650fc0e91400e436f15b1a0ec4cc9c32e328df934b45100d1a472561eb70e826d43b34
10216c5f9c16e99d084b8547385d71090dac51dd19be7c78694d76a0673d891ed91c612b8aeddd91
cf517e40a7bac5788393d786c8672db3acf0651ea4057a53d59bdfc20fb040e81a247e1837c8f035
f6f5c6b330d6e00ff2f6e9f93d40fe19ff92d9de1f37b46016b1b29bc9cea8a6a5a716f90bf95558
73e39d091f3b7829b432f8d67e62076f009826175bb3a22468e0048871ade34f17fc6ad116e10ca1
d5d0de3cc6111470dc7045e6984813b80635bf373e0f57c1e8f0fffc33a1cd2e12646db6e04619ad
737fbd83f5c8c7955c29ecf9c6949683df3520ba96a3ff5f87ce86debd8bc55157e6777f6f94d52a
fd392a5c0465cfe7677444033ac92472eb57c3503b56e6bbfd085c67d587306b60a64199ea3c0a06
a6782081d84f2f749dcf8d7c23bfe59cbd1daf72da405929fe5add4045eb3baf9ae9e819bd18150e
d2bd78d646c8e3334fc28594c1212417b897cf24e566a16b208491dc1f66c54f8365a2e7f461995b
9a4487142d9fa0929181b19da56ff5e5c1b1b69f283c86950c75f093a78837958b8af49f0f6b355a
0054aaa06f184509287031b4d6293ad8195e796185b2b2feb4dbc2d955b93f9a11a1b26e74706381
6c73f6396c480b531700458f5dadc5c2d9b1f2ce789b07877c1c025dccd64f0cbb8dc02e5d2e568a
b46297c876213408f5896c05406669160ede52a4082adbc79217b9de38bb35a9f856d24ee32f02e1
d1e05c0090b9eecc40e6528c7365d4c6aae149e54508d54312fb4f2cdee81835c7243727577bd3dc
093b6a981e85966f5d5559c7a865a277d32f5b65afee60b7db929b4511f94e00e98f023fead1cde9
0b8759f7448119a30eb27feb54e935f23239f817673d95779cb10fc338ffc04dbccb1168ff2dc3c2
7476c7fc4c660ae17b2c49ba0a7cd66fab01d55c6a6e3e353e45b25268b7c340c501cacf69bffd9a
41a40840e9aa190dacfdb3bb6fcdee26ed7ee91929e876ad4bbe3dbb1f8f7654760a286633765e34
d18ad831aae75448bce0de2f53d3a509934fedb1039fa6906f0514b054cb099036668ae29fa3692b
d55228db28742c68e3e628309048ad28df862f636d6b37cb128441a39131a75eb9620d44d8db0ca8
d603b0ba1734c8f180dfa6e3eb62b6fb9ea9ae0a7804033b743479f81183577181e5551fbff21d20
3aaaa959b55fd23da0329afdc3197dd6de5587620ea5b505e1b7de821a3c8981ed5841044d96e26f
daebd4042e7c05beb14038dc89b1aaf3b4448ce03760e4c77e31bc48cec1aefedf3517a9ab9a32d1
524b16c92b514dcb6fefdfa88318064577bd22d50731c9b18ba967358ecbf1269ce5ef8d598e5d1a
1b7449bfce7eb8a70d45905c2a5db8526cbb364219f8b25f22c03b57d58eb0e71336db3bcb416772
de35ff90ef77e4aefc461a9d56db3ad30b1e6db0f474f90716f3c02d3c1aeac64adc022ad14fa297
ebb35330b86b2ee1415adf4b31577d32b512e24a417cdeb6cb95d3142f70f44f0e31e9fdf6fd7933
cc8e1685df8f790501c7c9e8a131f7898378ebae4a1733b4a16719231b5bffb21f38977b80fefc87
bb234be3c6ee45d62df7ab994ef224c3aa99c1dc0a0c3acfdb878e30e616cf53ad840823fd1563e1
55ca3bb59f4af13bd1142791fdf1261f9414bf5552ecc0150f6922d93ab794a17065f28c83d16da5
aee51f5249b12643fe30a52d4e12a82cd7d3da46c24c2bc727129f885a4505303d77729f1565cb8d
1d08594a7afbbfe787eb53dc890e0aaf9a9a693016324ebe381730737beb05a304a10855980557c7
5d53a1a38e2fe9c4c208e028b55917edc8d738b1527be0c933bf88981191ac0f16a5d4c0fb06baf1
4700aa911b83aa7054678aacdaa7a519c1bc78fbfc128c208dddfc1ad3c3bd559b9ea1899b2e0ce2
afb17511207d096ce23f2cd7b81b40453cc7a6b532bc4e9d8ccf2572ec4d84bdc1ee262323a6ea83
29ce35b0e206c15ed2e20925f88f19f6df884a4d3b76d7424d5fd27e69c2f5c890be1f8cf10c986e
05851e0b58ffda23b61bc4012e42adb8633c5ce9a657516f601e779d9c9fd8ecb3aa721d799764e3
e8aeb07c7849a4a5a729443b47302c0647c5a24a3359b3f0d1406f8f790e61b2f24b124ab4f27889
f5dbe214015db0646420b7b47bf56004b1e1a1eb430f0e15a9e6bfaf9367d91687254282a77b50a3
390889c9af8cb86a2b09b700fb11fbd5c550fc112ff474e18d45bf980ccf492349838ccba0c4f4e7
470fa5a9e2de5bc1f1d567de29f914c5ed1b920e71599d497f2a740ad0199630cf41d151189d257a
899de49fad9d882a3d2a9e838494af8d065a291964c0eb317e3fcadf8d9d1dfce6df66cccaab5fa0
a7c946e8240238637980dd2b16a1b6e7c16128231960fd316d37b96ca033e6610b054641c50b67a8
015e9e332fdbcd8d93bba788f1ab30183dbf5e098697b3198446b06d3dce5f6be350f9dfd56b6e05
232a4269ad2ed039a7144368f012984e0818f7f8eb8145443535473325054fa74d69383e9f5bb7d5
5ef59061de159f7932cc35cafb1208eeaf7352101d6dcfef4064bb09d9131f6860c2216ff8b9598c
2a948dec625e2b9815789528575e3b8569355a4b4a99cb2bfe866a9bc344ac22e8314ada13e6d957
dfe94af557e61c7c99d6e26d93ba48bac570ad735a874d2024e4dafb4aba83fa95d862fd0d4ace06
026a446c31168b15153cd1b1ae5578d71e91397e5f72969643dc24c25f2b99b6a056bb0b996781d4
d4db303f9bd5142976d88f7c45f619f43eeda48835c7ddaf4a
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 SSC_Copy_State <Virtual>  0
 HBW_Pick TASK  0 -1
 HBW_Copy_State <Virtual>  0
 PID_10 PID  0
 PID_11 PID  0
 hunt_exp_light PROGRAM  0 -1
 HBW_Home <Virtual>  0
 HBW_Pick_Sto <Virtual>  0
 test TASK  0 -1
 HBW_Pickup_ST PROGRAM  0 -1
 HWB_Extend_Arm <Virtual>  0
 HBW_Retract_Arm <Virtual>  0
 HWB_PickUp TASK  0 -1
 HBW_HTO1POS <Virtual>  0
 HBW_Left_1Block <Virtual>  0
 HBW_HomeTo2_Col <Virtual>  0
 HWB_HomeTo3_Col <Virtual>  0
 HWB_HomeTo2_Row <Virtual>  0
 HWB_HomeTo3_Row <Virtual>  0
 HWB_HomeTo1_Col <Virtual>  0
 HBW_move_left_1 <Virtual>  0
 HWB_Home_to_11 <Virtual>  0
 HWB_11_DropOff <Virtual>  0
 HBW_Pickup <Virtual>  0
 HBW_PickUp_R1 <Virtual>  0
 HBW_Send_VGR <Virtual>  0
 HBW_PickUp_VGR <Virtual>  0
 HBW_Return_VGR <Virtual>  0
 HBW_MotorsOff <Virtual>  0
 HBW_ConvTo11 <Virtual>  0
 HBW_Return_Top <Virtual>  0
 HBW_MV_11_12 <Virtual>  0
 HBW_Conv_12 <Virtual>  0
 HBW_Conv_12_Lat <Virtual>  0
 HBW_RETRACT_13 <Virtual>  0
 HBW_Retract_23 <Virtual>  0
 HBW_Conv13_Lat <Virtual>  0
 HBW_Conv_2Row <Virtual>  0
 HBW_PickUp_R2 <Virtual>  0
 HBW_Conv11_Lat <Virtual>  0
 HBW_Retract_12 <Virtual>  0
 HBW_Shift_C1C2 <Virtual>  0
 HBW_Move_R1_R2 <Virtual>  0
 HBW_Retract_22 <Virtual>  0
 HBW_Retract_21 <Virtual>  0
 HBW_Retract_31 <Virtual>  0
 HBW_Move_R2_R3 <Virtual>  0
 HBW_PickUp_R3 <Virtual>  0
 HBW_Conv_3Row <Virtual>  0
 HBW_Retract_32 <Virtual>  0
 HBW_Retract_33 <Virtual>  0
 HBW_Retract_Done PROGRAM  0 -1
 HBW_Retract_DN <Virtual>  0
 oneOperation <Virtual>  0
 HBW_Check1Puck <Virtual>  0
 HBW_OneTime_R1 <Virtual>  0
 HBW_OneTime_R2 <Virtual>  0
 HBW_OneTime_R3 <Virtual>  0
 HBW_OneTime_C1 <Virtual>  0
 HBW_OneTime_C2 <Virtual>  0
 HBW_OneTime_C3 <Virtual>  0
 HBW_OneDropR3 <Virtual>  0
 HBW_OneDropR2 <Virtual>  0
 HBW_OneDropR1 <Virtual>  0
 VGR_Done <Virtual>  0
 HBW_Return11 <Virtual>  0
 HBW_Return12 <Virtual>  0
 HBW_Return13 <Virtual>  0
 HBW_Return21 <Virtual>  0
 HBW_Return22 <Virtual>  0
 HBW_Return23 <Virtual>  0
#END

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"VGR Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC410 C410 1 0x0 MC409 C409 1 0x0 MC412 Y28 1 0x0 MC412 MC450 1 0x0 MC411 C411 1 0x0 MC408 C408 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC413 Y29 1 0x0 MC413 MC451 1 0x0 X27 MI200 1 0x0 X26 MI454 1 0x0 X25 MI453 1 0x0 MC452 C452 1"

// Rung VGR_Copy_State#2
// Offset 33
NOP

// Rung VGR_Copy_State#3
// Offset 34
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
STR ST1
OUT Y29

// Rung VGR_Suction#2
// Offset 2
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC800 Y41 1 0x0 Y41 MI801 1 0x0 MC802 Y43 1 0x0 Y43 MI803 1 0x0 MC804 C804 1 0x0 MC805 C805 1 0x0 MC806 Y44 1 0x0 MC807 Y20 1 0x0 MC808 C811 1 0x0 MC809 C809 1 0x0 MC810 C810 1 0x0 MC812 C812 1 0x0 MC813 C813 1 0x0 MC814 C814 1 0x0 MC816 Y45 1 0x0 MC817 Y46 1 0x0 MC818 Y21 1 0x0 MC819 Y20 1 0x0 MC820 Y44 1 0x0 MC822 Y52 1"

// Rung MPO_Copy_State#2
// Offset 45
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC800 C1600 1 0x0 MC801 C1601 1 0x0 MC802 C1602 1 0x0 MC803 C1603 1 0x0 MC804 C1604 1 0x0 Y31 MI800 1 0x0 MC850 C1605 1 0x0 MC805 C1610 1"

// Rung SLD_Copy_State#2
// Offset 21
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"SSC Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC606 C1200 1 0x0 MC607 C1201 1 0x0 MC608 C1202 1 0x0 MC609 C1203 1 0x0 MC615 C1215 1 0x0 MC616 C1216 1 0x0 MC617 C1217 1 0x0 MC618 C1218 1 0x0 MC619 C1219 1 0x0 MC620 C1220 1"

// Rung SSC_Copy_State#2
// Offset 25
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block HBW_Home
$LGCMOD HBW_Home

// Rung HBW_Home#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Home#2
// Offset 8
STRN C215
ANDN X0
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 60 60
OUT Y51

// Rung HBW_Home#3
// Offset 26
STRN C215
ANDN X3
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5

// Rung HBW_Home#4
// Offset 43
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y76

// Rung HBW_Home#5
// Offset 64
NOP

// Rung HBW_Home#6
// Offset 65
RET

// End of Code Block HBW_Home
$LGCEND HBW_Home

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 Y40 1 0x0 Y80 MHR102 1 0x0 MC101 C205 1 0x0 MC102 C206 1 0x0 MC103 C207 1 0x0 MC104 C208 1 0x0 MC105 C209 1 0x0 MC106 C210 1 0x0 MC107 C211 1 0x0 MC108 C212 1 0x0 MC109 C213 1 0x0 MC110 C214 1 0x0 MC111 C215 1 0x0 MC112 C216 1 0x0 MC113 C300 1 0x0 MC114 C217 1 0x0 MC115 C218 1 0x0 MC116 C219 1 0x0 MC117 C220 1 0x0 MC118 C221 1 0x0 MC119 C222 1 0x0 MC120 C223 1 0x0 MC121 C224 1 0x0 MC122 C225 1 0x0 MC123 C226 1 0x0 X2 MI101 1 0x0 X10 MI102 1 0x0 X11 MI103 1 0x0 X3 MI104 1 0x0 X0 MI105 1 0x0 X6 MI106 1 0x0 X7 MI107 1 0x0 X8 MI108 1 0x0 X9 MI109 1 0x0 $HBW_Encoder_X.Acc MHR1 1 0x0 $HBW_Encoder_Z.Acc MHR2 1"

// Rung HBW_Copy_State#2
// Offset 77
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block HBW_HomeTo2_Col
$LGCMOD HBW_HomeTo2_Col

// Rung HBW_HomeTo2_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_HomeTo2_Col#2
// Offset 17
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_HomeTo2_Col#3
// Offset 22
NOP

// Rung HBW_HomeTo2_Col#4
// Offset 23
NOP

// Rung HBW_HomeTo2_Col#5
// Offset 24
NOP

// Rung HBW_HomeTo2_Col#6
// Offset 25
RET

// End of Code Block HBW_HomeTo2_Col
$LGCEND HBW_HomeTo2_Col

// Beginning of Code Block HWB_HomeTo1_Col
$LGCMOD HWB_HomeTo1_Col

// Rung HWB_HomeTo1_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HWB_HomeTo1_Col#2
// Offset 17
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_HomeTo1_Col#3
// Offset 22
NOP

// Rung HWB_HomeTo1_Col#4
// Offset 23
NOP

// Rung HWB_HomeTo1_Col#5
// Offset 24
RET

// End of Code Block HWB_HomeTo1_Col
$LGCEND HWB_HomeTo1_Col

// Beginning of Code Block HWB_Home_to_11
$LGCMOD HWB_Home_to_11

// Rung HWB_Home_to_11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HWB_Home_to_11#2
// Offset 22
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_Home_to_11#3
// Offset 27
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HWB_Home_to_11#4
// Offset 49
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_Home_to_11#5
// Offset 54
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HWB_Home_to_11#6
// Offset 73
NOP

// Rung HWB_Home_to_11#7
// Offset 74
NOP

// Rung HWB_Home_to_11#8
// Offset 75
RET

// End of Code Block HWB_Home_to_11
$LGCEND HWB_Home_to_11

// Beginning of Code Block HWB_11_DropOff
$LGCMOD HWB_11_DropOff

// Rung HWB_11_DropOff#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HWB_11_DropOff#2
// Offset 8
STRGE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_11_DropOff#3
// Offset 13
STRN C215
ANDN C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51

// Rung HWB_11_DropOff#4
// Offset 31
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y4
AND ST2
OUT Y5

// Rung HWB_11_DropOff#5
// Offset 51
STRGE 2730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_11_DropOff#6
// Offset 56
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 60 60
OUT Y7

// Rung HWB_11_DropOff#7
// Offset 73
RET

// End of Code Block HWB_11_DropOff
$LGCEND HWB_11_DropOff

// Beginning of Code Block HBW_PickUp_R1
$LGCMOD HBW_PickUp_R1

// Rung HBW_PickUp_R1#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R1#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R1#3
// Offset 41
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R1#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R1#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_PickUp_R1#6
// Offset 69
NOP

// Rung HBW_PickUp_R1#7
// Offset 70
NOP

// Rung HBW_PickUp_R1#8
// Offset 71
NOP

// Rung HBW_PickUp_R1#9
// Offset 72
NOP

// Rung HBW_PickUp_R1#10
// Offset 73
RET

// End of Code Block HBW_PickUp_R1
$LGCEND HBW_PickUp_R1

// Beginning of Code Block HBW_Send_VGR
$LGCMOD HBW_Send_VGR

// Rung HBW_Send_VGR#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Send_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_Send_VGR#3
// Offset 37
STRN C215
AND X2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y48
AND ST2
OUT Y49

// Rung HBW_Send_VGR#4
// Offset 56
NOP

// Rung HBW_Send_VGR#5
// Offset 57
NOP

// Rung HBW_Send_VGR#6
// Offset 58
RET

// End of Code Block HBW_Send_VGR
$LGCEND HBW_Send_VGR

// Beginning of Code Block HBW_PickUp_VGR
$LGCMOD HBW_PickUp_VGR

// Rung HBW_PickUp_VGR#1
// Offset 0
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_PickUp_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_PickUp_VGR#3
// Offset 37
STRN C215
AND X11
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_PickUp_VGR#4
// Offset 56
NOP

// Rung HBW_PickUp_VGR#5
// Offset 57
NOP

// Rung HBW_PickUp_VGR#6
// Offset 58
RET

// End of Code Block HBW_PickUp_VGR
$LGCEND HBW_PickUp_VGR

// Beginning of Code Block HBW_Return_VGR
$LGCMOD HBW_Return_VGR

// Rung HBW_Return_VGR#1
// Offset 0
STRN C215
ANDN C251
DUPBOOL
AND C299
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y6

// Rung HBW_Return_VGR#2
// Offset 22
STRN C215
AND X1
DUPBOOL
AND C299
AND C251
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
POPBOOL
AND ST2
OUT Y48

// Rung HBW_Return_VGR#3
// Offset 45
STRN C215
DUPBOOL
AND C299
ANDN X1
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_Return_VGR#4
// Offset 68
STRLE 2550 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_VGR#5
// Offset 73
NOP

// Rung HBW_Return_VGR#6
// Offset 74
NOP

// Rung HBW_Return_VGR#7
// Offset 75
RET

// End of Code Block HBW_Return_VGR
$LGCEND HBW_Return_VGR

// Beginning of Code Block HBW_MotorsOff
$LGCMOD HBW_MotorsOff

// Rung HBW_MotorsOff#1
// Offset 0
STRN C215
ANDN ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_MotorsOff#2
// Offset 18
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_MotorsOff#3
// Offset 36
STRN C215
AND ST2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
OUT Y48

// Rung HBW_MotorsOff#4
// Offset 54
NOP

// Rung HBW_MotorsOff#5
// Offset 55
NOP

// Rung HBW_MotorsOff#6
// Offset 56
NOP

// Rung HBW_MotorsOff#7
// Offset 57
RET

// End of Code Block HBW_MotorsOff
$LGCEND HBW_MotorsOff

// Beginning of Code Block HBW_ConvTo11
$LGCMOD HBW_ConvTo11

// Rung HBW_ConvTo11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_ConvTo11#2
// Offset 22
NOP

// Rung HBW_ConvTo11#3
// Offset 23
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_ConvTo11#4
// Offset 28
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_ConvTo11#5
// Offset 50
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_ConvTo11#6
// Offset 55
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_ConvTo11#7
// Offset 74
NOP

// Rung HBW_ConvTo11#8
// Offset 75
NOP

// Rung HBW_ConvTo11#9
// Offset 76
RET

// End of Code Block HBW_ConvTo11
$LGCEND HBW_ConvTo11

// Beginning of Code Block HBW_Return_Top
$LGCMOD HBW_Return_Top

// Rung HBW_Return_Top#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Return_Top#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HBW_Return_Top#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_Top#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_Return_Top#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return_Top#6
// Offset 69
NOP

// Rung HBW_Return_Top#7
// Offset 70
NOP

// Rung HBW_Return_Top#8
// Offset 71
RET

// End of Code Block HBW_Return_Top
$LGCEND HBW_Return_Top

// Beginning of Code Block HBW_MV_11_12
$LGCMOD HBW_MV_11_12

// Rung HBW_MV_11_12#1
// Offset 0
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_MV_11_12#2
// Offset 21
NOP

// Rung HBW_MV_11_12#3
// Offset 22
NOP

// Rung HBW_MV_11_12#4
// Offset 23
NOP

// Rung HBW_MV_11_12#5
// Offset 24
RET

// End of Code Block HBW_MV_11_12
$LGCEND HBW_MV_11_12

// Beginning of Code Block HBW_Conv_12
$LGCMOD HBW_Conv_12

// Rung HBW_Conv_12#1
// Offset 0
NOP

// Rung HBW_Conv_12#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_12#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Conv_12#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 80
OUT C251

// Rung HBW_Conv_12#5
// Offset 45
NOP

// Rung HBW_Conv_12#6
// Offset 46
RET

// End of Code Block HBW_Conv_12
$LGCEND HBW_Conv_12

// Beginning of Code Block HBW_Conv_12_Lat
$LGCMOD HBW_Conv_12_Lat

// Rung HBW_Conv_12_Lat#1
// Offset 0
NOP

// Rung HBW_Conv_12_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv_12_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv_12_Lat#4
// Offset 42
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv_12_Lat#5
// Offset 47
NOP

// Rung HBW_Conv_12_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv_12_Lat
$LGCEND HBW_Conv_12_Lat

// Beginning of Code Block HBW_RETRACT_13
$LGCMOD HBW_RETRACT_13

// Rung HBW_RETRACT_13#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_RETRACT_13#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_RETRACT_13#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_RETRACT_13#4
// Offset 46
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_RETRACT_13#5
// Offset 68
STRGE 7650 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_RETRACT_13#6
// Offset 73
RET

// End of Code Block HBW_RETRACT_13
$LGCEND HBW_RETRACT_13

// Beginning of Code Block HBW_Retract_23
$LGCMOD HBW_Retract_23

// Rung HBW_Retract_23#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_23#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_23#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_23#4
// Offset 46
STRN C215
AND ST2
OUT Y51
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_Retract_23#5
// Offset 65
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_23#6
// Offset 70
RET

// End of Code Block HBW_Retract_23
$LGCEND HBW_Retract_23

// Beginning of Code Block HBW_Conv13_Lat
$LGCMOD HBW_Conv13_Lat

// Rung HBW_Conv13_Lat#1
// Offset 0
NOP

// Rung HBW_Conv13_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv13_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv13_Lat#4
// Offset 42
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv13_Lat#5
// Offset 47
NOP

// Rung HBW_Conv13_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv13_Lat
$LGCEND HBW_Conv13_Lat

// Beginning of Code Block HBW_Conv_2Row
$LGCMOD HBW_Conv_2Row

// Rung HBW_Conv_2Row#1
// Offset 0
NOP

// Rung HBW_Conv_2Row#2
// Offset 1
NOP

// Rung HBW_Conv_2Row#3
// Offset 2
NOP

// Rung HBW_Conv_2Row#4
// Offset 3
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_2Row#5
// Offset 22
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Conv_2Row#6
// Offset 42
STRGE $HBW_Encoder_Z.Acc 1380
OUT C251

// Rung HBW_Conv_2Row#7
// Offset 47
NOP

// Rung HBW_Conv_2Row#8
// Offset 48
RET

// End of Code Block HBW_Conv_2Row
$LGCEND HBW_Conv_2Row

// Beginning of Code Block HBW_PickUp_R2
$LGCMOD HBW_PickUp_R2

// Rung HBW_PickUp_R2#1
// Offset 0
NOP

// Rung HBW_PickUp_R2#2
// Offset 1
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R2#3
// Offset 20
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R2#4
// Offset 38
NOP

// Rung HBW_PickUp_R2#5
// Offset 39
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R2#6
// Offset 61
STRLE 1400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R2#7
// Offset 66
NOP

// Rung HBW_PickUp_R2#8
// Offset 67
NOP

// Rung HBW_PickUp_R2#9
// Offset 68
NOP

// Rung HBW_PickUp_R2#10
// Offset 69
RET

// End of Code Block HBW_PickUp_R2
$LGCEND HBW_PickUp_R2

// Beginning of Code Block HBW_Conv11_Lat
$LGCMOD HBW_Conv11_Lat

// Rung HBW_Conv11_Lat#1
// Offset 0
NOP

// Rung HBW_Conv11_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv11_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv11_Lat#4
// Offset 42
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv11_Lat#5
// Offset 47
NOP

// Rung HBW_Conv11_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv11_Lat
$LGCEND HBW_Conv11_Lat

// Beginning of Code Block HBW_Retract_12
$LGCMOD HBW_Retract_12

// Rung HBW_Retract_12#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_12#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_12#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_12#4
// Offset 46
RET

// End of Code Block HBW_Retract_12
$LGCEND HBW_Retract_12

// Beginning of Code Block HBW_Shift_C1C2
$LGCMOD HBW_Shift_C1C2

// Rung HBW_Shift_C1C2#1
// Offset 0
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Shift_C1C2#2
// Offset 5
NOP

// Rung HBW_Shift_C1C2#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Shift_C1C2#4
// Offset 25
NOP

// Rung HBW_Shift_C1C2#5
// Offset 26
STRN C215
AND ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_Shift_C1C2#6
// Offset 44
NOP

// Rung HBW_Shift_C1C2#7
// Offset 45
RET

// End of Code Block HBW_Shift_C1C2
$LGCEND HBW_Shift_C1C2

// Beginning of Code Block HBW_Move_R1_R2
$LGCMOD HBW_Move_R1_R2

// Rung HBW_Move_R1_R2#1
// Offset 0
STRGE 1760 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Move_R1_R2#2
// Offset 5
NOP

// Rung HBW_Move_R1_R2#3
// Offset 6
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Move_R1_R2#4
// Offset 25
NOP

// Rung HBW_Move_R1_R2#5
// Offset 26
NOP

// Rung HBW_Move_R1_R2#6
// Offset 27
RET

// End of Code Block HBW_Move_R1_R2
$LGCEND HBW_Move_R1_R2

// Beginning of Code Block HBW_Retract_22
$LGCMOD HBW_Retract_22

// Rung HBW_Retract_22#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_22#2
// Offset 22
STRGE 1730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_22#3
// Offset 27
NOP

// Rung HBW_Retract_22#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_22#5
// Offset 47
STRLE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_22#6
// Offset 52
STRN C215
AND C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
AND ST2
OUT Y50

// Rung HBW_Retract_22#7
// Offset 72
NOP

// Rung HBW_Retract_22#8
// Offset 73
RET

// End of Code Block HBW_Retract_22
$LGCEND HBW_Retract_22

// Beginning of Code Block HBW_Retract_21
$LGCMOD HBW_Retract_21

// Rung HBW_Retract_21#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_21#2
// Offset 22
STRGE 1730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_21#3
// Offset 27
NOP

// Rung HBW_Retract_21#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_21#5
// Offset 47
STRLE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_21#6
// Offset 52
STRN C215
AND C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
AND ST2
OUT Y50

// Rung HBW_Retract_21#7
// Offset 72
NOP

// Rung HBW_Retract_21#8
// Offset 73
RET

// End of Code Block HBW_Retract_21
$LGCEND HBW_Retract_21

// Beginning of Code Block HBW_Retract_31
$LGCMOD HBW_Retract_31

// Rung HBW_Retract_31#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_31#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_31#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_31#4
// Offset 46
STRN C215
AND ST2
OUT Y51
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_Retract_31#5
// Offset 65
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_31#6
// Offset 70
RET

// End of Code Block HBW_Retract_31
$LGCEND HBW_Retract_31

// Beginning of Code Block HBW_Move_R2_R3
$LGCMOD HBW_Move_R2_R3

// Rung HBW_Move_R2_R3#1
// Offset 0
STRGE 3600 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Move_R2_R3#2
// Offset 5
NOP

// Rung HBW_Move_R2_R3#3
// Offset 6
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Move_R2_R3#4
// Offset 25
NOP

// Rung HBW_Move_R2_R3#5
// Offset 26
NOP

// Rung HBW_Move_R2_R3#6
// Offset 27
RET

// End of Code Block HBW_Move_R2_R3
$LGCEND HBW_Move_R2_R3

// Beginning of Code Block HBW_PickUp_R3
$LGCMOD HBW_PickUp_R3

// Rung HBW_PickUp_R3#1
// Offset 0
NOP

// Rung HBW_PickUp_R3#2
// Offset 1
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R3#3
// Offset 20
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R3#4
// Offset 38
STRLE 2800 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R3#5
// Offset 43
NOP

// Rung HBW_PickUp_R3#6
// Offset 44
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R3#7
// Offset 66
NOP

// Rung HBW_PickUp_R3#8
// Offset 67
NOP

// Rung HBW_PickUp_R3#9
// Offset 68
NOP

// Rung HBW_PickUp_R3#10
// Offset 69
RET

// End of Code Block HBW_PickUp_R3
$LGCEND HBW_PickUp_R3

// Beginning of Code Block HBW_Conv_3Row
$LGCMOD HBW_Conv_3Row

// Rung HBW_Conv_3Row#1
// Offset 0
NOP

// Rung HBW_Conv_3Row#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_3Row#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Conv_3Row#4
// Offset 40
STRLE $HBW_Encoder_Z.Acc 2730
OUT C251

// Rung HBW_Conv_3Row#5
// Offset 45
NOP

// Rung HBW_Conv_3Row#6
// Offset 46
RET

// End of Code Block HBW_Conv_3Row
$LGCEND HBW_Conv_3Row

// Beginning of Code Block HBW_Retract_32
$LGCMOD HBW_Retract_32

// Rung HBW_Retract_32#1
// Offset 0
STRGE 3300 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_32#2
// Offset 5
NOP

// Rung HBW_Retract_32#3
// Offset 6
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_32#4
// Offset 28
NOP

// Rung HBW_Retract_32#5
// Offset 29
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_32#6
// Offset 48
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_32#7
// Offset 53
NOP

// Rung HBW_Retract_32#8
// Offset 54
STRN C215
AND C250
DUPBOOL
ANDN C251
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_Retract_32#9
// Offset 77
NOP

// Rung HBW_Retract_32#10
// Offset 78
RET

// End of Code Block HBW_Retract_32
$LGCEND HBW_Retract_32

// Beginning of Code Block HBW_Retract_33
$LGCMOD HBW_Retract_33

// Rung HBW_Retract_33#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_33#2
// Offset 22
STRGE 3300 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_33#3
// Offset 27
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_33#4
// Offset 46
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_33#5
// Offset 51
NOP

// Rung HBW_Retract_33#6
// Offset 52
STRN C215
AND C250
DUPBOOL
ANDN C251
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_Retract_33#7
// Offset 75
NOP

// Rung HBW_Retract_33#8
// Offset 76
RET

// End of Code Block HBW_Retract_33
$LGCEND HBW_Retract_33

// Beginning of Code Block HBW_Retract_DN
$LGCMOD HBW_Retract_DN

// Rung HBW_Retract_DN#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_DN#2
// Offset 22
STRGE 3200 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_DN#3
// Offset 27
NOP

// Rung HBW_Retract_DN#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_DN#5
// Offset 47
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_DN#6
// Offset 52
STRN C215
AND C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
AND ST2
OUT Y50

// Rung HBW_Retract_DN#7
// Offset 72
NOP

// Rung HBW_Retract_DN#8
// Offset 73
RET

// End of Code Block HBW_Retract_DN
$LGCEND HBW_Retract_DN

// Beginning of Code Block oneOperation
$LGCMOD oneOperation

// Rung oneOperation#1
// Offset 0
NOP

// Rung oneOperation#2
// Offset 1
NOP

// Rung oneOperation#3
// Offset 2
RET

// End of Code Block oneOperation
$LGCEND oneOperation

// Beginning of Code Block HBW_Check1Puck
$LGCMOD HBW_Check1Puck

// Rung HBW_Check1Puck#1
// Offset 0
STR ST1
MOVE 0 C301

// Rung HBW_Check1Puck#2
// Offset 3
STR C217
MOVE 1 C301
MOVE 1 N2

// Rung HBW_Check1Puck#3
// Offset 8
STR C218
MOVE 1 C301
MOVE 2 N2

// Rung HBW_Check1Puck#4
// Offset 13
STR C219
MOVE 1 C301
MOVE 3 N2

// Rung HBW_Check1Puck#5
// Offset 18
STR C220
MOVE 1 C301
MOVE 4 N2

// Rung HBW_Check1Puck#6
// Offset 23
STR C221
MOVE 1 C301
MOVE 5 N2

// Rung HBW_Check1Puck#7
// Offset 28
STR C222
MOVE 1 C301
MOVE 6 N2

// Rung HBW_Check1Puck#8
// Offset 33
STR C223
MOVE 1 C301
MOVE 7 N2

// Rung HBW_Check1Puck#9
// Offset 38
STR C224
MOVE 1 C301
MOVE 8 N2

// Rung HBW_Check1Puck#10
// Offset 43
STR C225
MOVE 1 C301
MOVE 9 N2

// Rung HBW_Check1Puck#11
// Offset 48
RET

// End of Code Block HBW_Check1Puck
$LGCEND HBW_Check1Puck

// Beginning of Code Block HBW_OneTime_R1
$LGCMOD HBW_OneTime_R1

// Rung HBW_OneTime_R1#1
// Offset 0
STRGE 375 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneTime_R1#2
// Offset 5
NOP

// Rung HBW_OneTime_R1#3
// Offset 6
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_OneTime_R1#4
// Offset 25
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneTime_R1#5
// Offset 45
NOP

// Rung HBW_OneTime_R1#6
// Offset 46
RET

// End of Code Block HBW_OneTime_R1
$LGCEND HBW_OneTime_R1

// Beginning of Code Block HBW_OneTime_R2
$LGCMOD HBW_OneTime_R2

// Rung HBW_OneTime_R2#1
// Offset 0
STRGE 1650 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneTime_R2#2
// Offset 5
NOP

// Rung HBW_OneTime_R2#3
// Offset 6
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_OneTime_R2#4
// Offset 25
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneTime_R2#5
// Offset 45
NOP

// Rung HBW_OneTime_R2#6
// Offset 46
RET

// End of Code Block HBW_OneTime_R2
$LGCEND HBW_OneTime_R2

// Beginning of Code Block HBW_OneTime_R3
$LGCMOD HBW_OneTime_R3

// Rung HBW_OneTime_R3#1
// Offset 0
STRGE 3200 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneTime_R3#2
// Offset 5
NOP

// Rung HBW_OneTime_R3#3
// Offset 6
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_OneTime_R3#4
// Offset 25
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneTime_R3#5
// Offset 45
NOP

// Rung HBW_OneTime_R3#6
// Offset 46
RET

// End of Code Block HBW_OneTime_R3
$LGCEND HBW_OneTime_R3

// Beginning of Code Block HBW_OneTime_C1
$LGCMOD HBW_OneTime_C1

// Rung HBW_OneTime_C1#1
// Offset 0
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_OneTime_C1#2
// Offset 5
NOP

// Rung HBW_OneTime_C1#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_OneTime_C1#4
// Offset 25
NOP

// Rung HBW_OneTime_C1#5
// Offset 26
RET

// End of Code Block HBW_OneTime_C1
$LGCEND HBW_OneTime_C1

// Beginning of Code Block HBW_OneTime_C2
$LGCMOD HBW_OneTime_C2

// Rung HBW_OneTime_C2#1
// Offset 0
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_OneTime_C2#2
// Offset 5
NOP

// Rung HBW_OneTime_C2#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_OneTime_C2#4
// Offset 25
NOP

// Rung HBW_OneTime_C2#5
// Offset 26
RET

// End of Code Block HBW_OneTime_C2
$LGCEND HBW_OneTime_C2

// Beginning of Code Block HBW_OneTime_C3
$LGCMOD HBW_OneTime_C3

// Rung HBW_OneTime_C3#1
// Offset 0
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_OneTime_C3#2
// Offset 5
NOP

// Rung HBW_OneTime_C3#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_OneTime_C3#4
// Offset 25
NOP

// Rung HBW_OneTime_C3#5
// Offset 26
RET

// End of Code Block HBW_OneTime_C3
$LGCEND HBW_OneTime_C3

// Beginning of Code Block HBW_OneDropR3
$LGCMOD HBW_OneDropR3

// Rung HBW_OneDropR3#1
// Offset 0
NOP

// Rung HBW_OneDropR3#2
// Offset 1
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_OneDropR3#3
// Offset 23
STRGE 3300 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneDropR3#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneDropR3#5
// Offset 47
NOP

// Rung HBW_OneDropR3#6
// Offset 48
NOP

// Rung HBW_OneDropR3#7
// Offset 49
RET

// End of Code Block HBW_OneDropR3
$LGCEND HBW_OneDropR3

// Beginning of Code Block HBW_OneDropR2
$LGCMOD HBW_OneDropR2

// Rung HBW_OneDropR2#1
// Offset 0
NOP

// Rung HBW_OneDropR2#2
// Offset 1
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_OneDropR2#3
// Offset 23
STRGE 1730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneDropR2#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneDropR2#5
// Offset 47
NOP

// Rung HBW_OneDropR2#6
// Offset 48
NOP

// Rung HBW_OneDropR2#7
// Offset 49
RET

// End of Code Block HBW_OneDropR2
$LGCEND HBW_OneDropR2

// Beginning of Code Block HBW_OneDropR1
$LGCMOD HBW_OneDropR1

// Rung HBW_OneDropR1#1
// Offset 0
NOP

// Rung HBW_OneDropR1#2
// Offset 1
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_OneDropR1#3
// Offset 23
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneDropR1#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneDropR1#5
// Offset 47
NOP

// Rung HBW_OneDropR1#6
// Offset 48
NOP

// Rung HBW_OneDropR1#7
// Offset 49
RET

// End of Code Block HBW_OneDropR1
$LGCEND HBW_OneDropR1

// Beginning of Code Block VGR_Done
$LGCMOD VGR_Done

// Rung VGR_Done#1
// Offset 0
STR ST1
MOVE 0 C700

// Rung VGR_Done#2
// Offset 3
NOP

// Rung VGR_Done#3
// Offset 4
RET

// End of Code Block VGR_Done
$LGCEND VGR_Done

// Beginning of Code Block HBW_Return11
$LGCMOD HBW_Return11

// Rung HBW_Return11#1
// Offset 0
NOP

// Rung HBW_Return11#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Return11#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Return11#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 80
OUT C251

// Rung HBW_Return11#5
// Offset 45
NOP

// Rung HBW_Return11#6
// Offset 46
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Return11#7
// Offset 68
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return11#8
// Offset 73
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Return11#9
// Offset 92
NOP

// Rung HBW_Return11#10
// Offset 93
RET

// End of Code Block HBW_Return11
$LGCEND HBW_Return11

// Beginning of Code Block HBW_Return12
$LGCMOD HBW_Return12

// Rung HBW_Return12#1
// Offset 0
NOP

// Rung HBW_Return12#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Return12#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Return12#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 80
OUT C251

// Rung HBW_Return12#5
// Offset 45
NOP

// Rung HBW_Return12#6
// Offset 46
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Return12#7
// Offset 68
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return12#8
// Offset 73
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Return12#9
// Offset 92
NOP

// Rung HBW_Return12#10
// Offset 93
RET

// End of Code Block HBW_Return12
$LGCEND HBW_Return12

// Beginning of Code Block HBW_Return13
$LGCMOD HBW_Return13

// Rung HBW_Return13#1
// Offset 0
NOP

// Rung HBW_Return13#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Return13#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Return13#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 80
OUT C251

// Rung HBW_Return13#5
// Offset 45
NOP

// Rung HBW_Return13#6
// Offset 46
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Return13#7
// Offset 68
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return13#8
// Offset 73
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Return13#9
// Offset 92
NOP

// Rung HBW_Return13#10
// Offset 93
RET

// End of Code Block HBW_Return13
$LGCEND HBW_Return13

// Beginning of Code Block HBW_Return21
$LGCMOD HBW_Return21

// Rung HBW_Return21#1
// Offset 0
NOP

// Rung HBW_Return21#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Return21#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Return21#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 1380
OUT C251

// Rung HBW_Return21#5
// Offset 45
NOP

// Rung HBW_Return21#6
// Offset 46
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Return21#7
// Offset 68
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return21#8
// Offset 73
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Return21#9
// Offset 92
NOP

// Rung HBW_Return21#10
// Offset 93
RET

// End of Code Block HBW_Return21
$LGCEND HBW_Return21

// Beginning of Code Block HBW_Return22
$LGCMOD HBW_Return22

// Rung HBW_Return22#1
// Offset 0
NOP

// Rung HBW_Return22#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Return22#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Return22#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 1380
OUT C251

// Rung HBW_Return22#5
// Offset 45
NOP

// Rung HBW_Return22#6
// Offset 46
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Return22#7
// Offset 68
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return22#8
// Offset 73
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Return22#9
// Offset 92
NOP

// Rung HBW_Return22#10
// Offset 93
RET

// End of Code Block HBW_Return22
$LGCEND HBW_Return22

// Beginning of Code Block HBW_Return23
$LGCMOD HBW_Return23

// Rung HBW_Return23#1
// Offset 0
NOP

// Rung HBW_Return23#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Return23#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Return23#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 1380
OUT C251

// Rung HBW_Return23#5
// Offset 45
NOP

// Rung HBW_Return23#6
// Offset 46
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Return23#7
// Offset 68
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return23#8
// Offset 73
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Return23#9
// Offset 92
NOP

// Rung HBW_Return23#10
// Offset 93
RET

// End of Code Block HBW_Return23
$LGCEND HBW_Return23

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#2
// Offset 3
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#3
// Offset 6
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#4
// Offset 9
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#5
// Offset 12
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// Rung $Main#6
// Offset 15
#BEGIN FMT_COMMENT 
"Hunter Demo Light<br>"
#END

STR ST1
RUN hunt_exp_light

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
SG HBW_Program.S0

// Rung HBW_Program#2
// Offset 2
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#3
// Offset 10
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#4
// Offset 12
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#5
// Offset 14
STR ST1
MOVE 0 C298

// Rung HBW_Program#6
// Offset 17
STR ST1
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#7
// Offset 25
STR ST1
CALL HBW_Check1Puck 0x1 DST511 "3" "3"

// Rung HBW_Program#8
// Offset 33
STR C301
JMP HBW_Program.S19

// Rung HBW_Program#9
// Offset 35
NOP

// Rung HBW_Program#10
// Offset 36
STR C216
JMP HBW_Program.S1

// Rung HBW_Program#11
// Offset 38
STR C213
JMP HBW_Program.S1

// Rung HBW_Program#12
// Offset 40
SG HBW_Program.S1

// Rung HBW_Program#13
// Offset 42
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#14
// Offset 50
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#15
// Offset 52
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#16
// Offset 54
STR ST1
MOVE 0 N1

// Rung HBW_Program#17
// Offset 57
STR ST1
MOVE 0 C299

// Rung HBW_Program#18
// Offset 60
NOP

// Rung HBW_Program#19
// Offset 61
STR ST1
DUPBOOL
STR C205
ANDN C206
STR C206
ANDN C205
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 500 60
POPBOOL
DUPBOOL
AND C205
OUT Y48
POPBOOL
AND C206
OUT Y49

// Rung HBW_Program#20
// Offset 90
STR ST1
DUPBOOL
STR C207
ANDN C208
STRN C207
AND C208
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
POPBOOL
DUPBOOL
AND C207
OUT Y50
POPBOOL
AND C208
OUT Y51

// Rung HBW_Program#21
// Offset 119
STR ST1
DUPBOOL
STR C209
ANDN C210
STRN C209
AND C210
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
POPBOOL
DUPBOOL
AND C209
OUT Y4
POPBOOL
AND C210
OUT Y5

// Rung HBW_Program#22
// Offset 148
STR ST1
DUPBOOL
STR C211
ANDN C212
STRN C211
AND C212
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
POPBOOL
DUPBOOL
AND C211
OUT Y6
POPBOOL
AND C212
OUT Y7

// Rung HBW_Program#23
// Offset 177
STR C226
JMP HBW_Program.S0

// Rung HBW_Program#24
// Offset 179
STR C213
JMP HBW_Program.S2

// Rung HBW_Program#25
// Offset 181
SG HBW_Program.S2

// Rung HBW_Program#26
// Offset 183
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#27
// Offset 191
STR X0
OUT $HBW_Encoder_X.ResetLevel

// Rung HBW_Program#28
// Offset 193
STR X3
OUT $HBW_Encoder_Z.ResetLevel

// Rung HBW_Program#29
// Offset 195
STR ST1
CALL HBW_Home 0x1 DST511 "3" "3"

// Rung HBW_Program#30
// Offset 203
STR X0
AND X11
AND X3
JMP HBW_Program.S3

// Rung HBW_Program#31
// Offset 207
STR C212
JMP HBW_Program.S3

// Rung HBW_Program#32
// Offset 209
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#33
// Offset 211
SG HBW_Program.S3

// Rung HBW_Program#34
// Offset 213
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#35
// Offset 221
STR ST1
CALL HWB_Home_to_11 0x1 DST511 "3" "3"

// Rung HBW_Program#36
// Offset 229
STRN C250
ANDN C251
JMP HBW_Program.S4

// Rung HBW_Program#37
// Offset 232
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#38
// Offset 234
SG HBW_Program.S4

// Rung HBW_Program#39
// Offset 236
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#40
// Offset 244
STR ST1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#41
// Offset 252
STR X10
ANDN C251
JMP HBW_Program.S5

// Rung HBW_Program#42
// Offset 255
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#43
// Offset 257
NOP

// Rung HBW_Program#44
// Offset 258
SG HBW_Program.S5

// Rung HBW_Program#45
// Offset 260
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#46
// Offset 268
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#47
// Offset 276
STRN C251
AND C250
JMP HBW_Program.S6

// Rung HBW_Program#48
// Offset 279
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#49
// Offset 281
SG HBW_Program.S6

// Rung HBW_Program#50
// Offset 283
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#51
// Offset 291
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#52
// Offset 299
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#53
// Offset 301
STRN X2
MOVE 1 C298

// Rung HBW_Program#54
// Offset 304
STRN X2
JMP HBW_Program.S7
INC N1

// Rung HBW_Program#55
// Offset 307
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#56
// Offset 309
NOP

// Rung HBW_Program#57
// Offset 310
SG HBW_Program.S7

// Rung HBW_Program#58
// Offset 312
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#59
// Offset 320
STR C300
MOVE 1 C299

// Rung HBW_Program#60
// Offset 323
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#61
// Offset 331
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#62
// Offset 340
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#63
// Offset 342
NOP

// Rung HBW_Program#64
// Offset 343
SG HBW_Program.S8

// Rung HBW_Program#65
// Offset 345
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#66
// Offset 353
STR ST1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#67
// Offset 361
STR ST1
MOVE 0 C299
MOVE 0 C298

// Rung HBW_Program#68
// Offset 366
STRN C250
JMP HBW_Program.S9

// Rung HBW_Program#69
// Offset 368
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#70
// Offset 370
NOP

// Rung HBW_Program#71
// Offset 371
SG HBW_Program.S9

// Rung HBW_Program#72
// Offset 373
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#73
// Offset 381
STR ST1
CALL HBW_Return_Top 0x1 DST511 "3" "3"

// Rung HBW_Program#74
// Offset 389
STR X10
ANDN C251
JMP HBW_Program.S10
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#75
// Offset 399
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#76
// Offset 401
NOP

// Rung HBW_Program#77
// Offset 402
SG HBW_Program.S10

// Rung HBW_Program#78
// Offset 404
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#79
// Offset 412
STR ST1
CALL HBW_MV_11_12 0x1 DST511 "3" "3"

// Rung HBW_Program#80
// Offset 420
STRN C250
JMP HBW_Program.S11

// Rung HBW_Program#81
// Offset 422
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#82
// Offset 424
NOP

// Rung HBW_Program#83
// Offset 425
SG HBW_Program.S11

// Rung HBW_Program#84
// Offset 427
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#85
// Offset 435
STRE N1 1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#86
// Offset 446
STRE N1 2
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#87
// Offset 457
STRE N1 3
CALL HBW_Move_R1_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#88
// Offset 468
STRE N1 3
ANDLE 1650 $HBW_Encoder_Z.Acc
JMP HBW_Program.S51

// Rung HBW_Program#89
// Offset 477
STRE N1 4
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#90
// Offset 488
STRE N1 5
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#91
// Offset 499
STRE N1 6
CALL HBW_Move_R2_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#92
// Offset 510
STRE N1 6
ANDLE 3200 $HBW_Encoder_Z.Acc
JMP HBW_Program.S51

// Rung HBW_Program#93
// Offset 519
STRE N1 7
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#94
// Offset 530
STRE N1 8
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#95
// Offset 541
STRE N1 9
JMP HBW_Program.S18

// Rung HBW_Program#96
// Offset 546
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#97
// Offset 548
NOP

// Rung HBW_Program#98
// Offset 549
NOP

// Rung HBW_Program#99
// Offset 550
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#100
// Offset 553
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#101
// Offset 555
SG HBW_Program.S51

// Rung HBW_Program#102
// Offset 557
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#103
// Offset 565
STRE N1 3
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#104
// Offset 576
STRE N1 6
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#105
// Offset 587
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#106
// Offset 589
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#107
// Offset 592
SG HBW_Program.S12

// Rung HBW_Program#108
// Offset 594
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#109
// Offset 602
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#110
// Offset 610
STRN C251
AND C250
JMP HBW_Program.S13

// Rung HBW_Program#111
// Offset 613
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#112
// Offset 615
SG HBW_Program.S13

// Rung HBW_Program#113
// Offset 617
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#114
// Offset 625
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#115
// Offset 633
STRN X2
MOVE 1 C298

// Rung HBW_Program#116
// Offset 636
STR C300
MOVE 1 C299

// Rung HBW_Program#117
// Offset 639
STRN X2
AND C299
JMP HBW_Program.S14
INC N1

// Rung HBW_Program#118
// Offset 643
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#119
// Offset 645
SG HBW_Program.S14

// Rung HBW_Program#120
// Offset 647
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#121
// Offset 655
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#122
// Offset 663
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#123
// Offset 672
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#124
// Offset 674
SG HBW_Program.S15

// Rung HBW_Program#125
// Offset 676
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#126
// Offset 684
STR ST1
MOVE 0 C299
MOVE 0 C298

// Rung HBW_Program#127
// Offset 689
STRE N1 1
CALL HBW_Return11 0x1 DST511 "3" "3"

// Rung HBW_Program#128
// Offset 700
STRE N1 2
CALL HBW_Return12 0x1 DST511 "3" "3"

// Rung HBW_Program#129
// Offset 711
STRE N1 3
CALL HBW_Return13 0x1 DST511 "3" "3"

// Rung HBW_Program#130
// Offset 722
STRE N1 4
CALL HBW_Return21 0x1 DST511 "3" "3"

// Rung HBW_Program#131
// Offset 733
STRE N1 5
CALL HBW_Return22 0x1 DST511 "3" "3"

// Rung HBW_Program#132
// Offset 744
STRE N1 6
CALL HBW_Return23 0x1 DST511 "3" "3"

// Rung HBW_Program#133
// Offset 755
STRE N1 7
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#134
// Offset 766
STRE N1 8
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#135
// Offset 777
STRE N1 9
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#136
// Offset 788
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#137
// Offset 790
STRN C251
JMP HBW_Program.S16
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#138
// Offset 799
SG HBW_Program.S16

// Rung HBW_Program#139
// Offset 801
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#140
// Offset 809
STRE N1 1
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#141
// Offset 820
STRE N1 2
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#142
// Offset 831
STRE N1 3
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#143
// Offset 842
STRE N1 4
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#144
// Offset 853
STRE N1 5
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#145
// Offset 864
STRE N1 6
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#146
// Offset 875
STRE N1 7
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#147
// Offset 886
STRE N1 8
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#148
// Offset 897
STRE N1 9
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#149
// Offset 908
NOP

// Rung HBW_Program#150
// Offset 909
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#151
// Offset 911
STRN C250
AND X10
JMP HBW_Program.S17

// Rung HBW_Program#152
// Offset 914
SG HBW_Program.S17

// Rung HBW_Program#153
// Offset 916
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#154
// Offset 924
STRE N1 1
CALL HBW_Retract_12 0x1 DST511 "3" "3"

// Rung HBW_Program#155
// Offset 935
STRE N1 2
CALL HBW_RETRACT_13 0x1 DST511 "3" "3"

// Rung HBW_Program#156
// Offset 946
STRE N1 3
CALL HBW_Retract_23 0x1 DST511 "3" "3"

// Rung HBW_Program#157
// Offset 957
STRE N1 4
CALL HBW_Retract_22 0x1 DST511 "3" "3"

// Rung HBW_Program#158
// Offset 968
STRE N1 5
CALL HBW_Retract_21 0x1 DST511 "3" "3"

// Rung HBW_Program#159
// Offset 979
STRE N1 6
CALL HBW_Retract_21 0x1 DST511 "3" "3"

// Rung HBW_Program#160
// Offset 990
STRE N1 7
CALL HBW_Retract_32 0x1 DST511 "3" "3"

// Rung HBW_Program#161
// Offset 1001
STRE N1 8
CALL HBW_Retract_33 0x1 DST511 "3" "3"

// Rung HBW_Program#162
// Offset 1012
STRE N1 9
CALL HBW_Retract_33 0x1 DST511 "3" "3"

// Rung HBW_Program#163
// Offset 1023
NOP

// Rung HBW_Program#164
// Offset 1024
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#165
// Offset 1026
STR X11
ANDN C251
ANDN C250
JMP HBW_Program.S11

// Rung HBW_Program#166
// Offset 1030
STR X11
ANDE N1 1
JMP HBW_Program.S50

// Rung HBW_Program#167
// Offset 1036
SG HBW_Program.S18

// Rung HBW_Program#168
// Offset 1038
STR ST1
JMP HBW_Program.S0

// Rung HBW_Program#169
// Offset 1040
SG HBW_Program.S50

// Rung HBW_Program#170
// Offset 1042
STR ST1
CALL HBW_Shift_C1C2 0x1 DST511 "3" "3"

// Rung HBW_Program#171
// Offset 1050
STRN Y50
ANDN C250
JMP HBW_Program.S11

// Rung HBW_Program#172
// Offset 1053
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#173
// Offset 1055
NOP

// Rung HBW_Program#174
// Offset 1056
SG HBW_Program.S19

// Rung HBW_Program#175
// Offset 1058
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#176
// Offset 1066
STR X0
OUT $HBW_Encoder_X.ResetLevel

// Rung HBW_Program#177
// Offset 1068
STR X3
OUT $HBW_Encoder_Z.ResetLevel

// Rung HBW_Program#178
// Offset 1070
NOP

// Rung HBW_Program#179
// Offset 1071
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#180
// Offset 1073
STR ST1
CALL HBW_Home 0x1 DST511 "3" "3"

// Rung HBW_Program#181
// Offset 1081
STR X0
AND X11
AND X3
JMP HBW_Program.S20

// Rung HBW_Program#182
// Offset 1085
SG HBW_Program.S20

// Rung HBW_Program#183
// Offset 1087
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#184
// Offset 1095
NOP

// Rung HBW_Program#185
// Offset 1096
STRE N2 1
CALL HBW_OneTime_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#186
// Offset 1107
STRE N2 2
CALL HBW_OneTime_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#187
// Offset 1118
STRE N2 3
CALL HBW_OneTime_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#188
// Offset 1129
STRE N2 4
CALL HBW_OneTime_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#189
// Offset 1140
STRE N2 5
CALL HBW_OneTime_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#190
// Offset 1151
STRE N2 6
CALL HBW_OneTime_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#191
// Offset 1162
STRE N2 7
CALL HBW_OneTime_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#192
// Offset 1173
STRE N2 8
CALL HBW_OneTime_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#193
// Offset 1184
STRE N2 9
CALL HBW_OneTime_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#194
// Offset 1195
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#195
// Offset 1197
STRN C251
JMP HBW_Program.S21

// Rung HBW_Program#196
// Offset 1199
SG HBW_Program.S21

// Rung HBW_Program#197
// Offset 1201
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#198
// Offset 1209
NOP

// Rung HBW_Program#199
// Offset 1210
STRE N2 1
CALL HBW_OneTime_C1 0x1 DST511 "3" "3"

// Rung HBW_Program#200
// Offset 1221
STRE N2 2
CALL HBW_OneTime_C2 0x1 DST511 "3" "3"

// Rung HBW_Program#201
// Offset 1232
STRE N2 3
CALL HBW_OneTime_C3 0x1 DST511 "3" "3"

// Rung HBW_Program#202
// Offset 1243
STRE N2 4
CALL HBW_OneTime_C1 0x1 DST511 "3" "3"

// Rung HBW_Program#203
// Offset 1254
STRE N2 5
CALL HBW_OneTime_C2 0x1 DST511 "3" "3"

// Rung HBW_Program#204
// Offset 1265
STRE N2 6
CALL HBW_OneTime_C3 0x1 DST511 "3" "3"

// Rung HBW_Program#205
// Offset 1276
STRE N2 7
CALL HBW_OneTime_C1 0x1 DST511 "3" "3"

// Rung HBW_Program#206
// Offset 1287
STRE N2 8
CALL HBW_OneTime_C2 0x1 DST511 "3" "3"

// Rung HBW_Program#207
// Offset 1298
STRE N2 9
CALL HBW_OneTime_C3 0x1 DST511 "3" "3"

// Rung HBW_Program#208
// Offset 1309
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#209
// Offset 1311
STRN C250
JMP HBW_Program.S22

// Rung HBW_Program#210
// Offset 1313
SG HBW_Program.S22

// Rung HBW_Program#211
// Offset 1315
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#212
// Offset 1323
STRE N2 1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#213
// Offset 1334
STRE N2 2
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#214
// Offset 1345
STRE N2 3
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#215
// Offset 1356
STRE N2 4
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#216
// Offset 1367
STRE N2 5
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#217
// Offset 1378
STRE N2 6
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#218
// Offset 1389
STRE N2 7
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#219
// Offset 1400
STRE N2 8
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#220
// Offset 1411
STRE N2 9
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#221
// Offset 1422
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#222
// Offset 1424
STRN C251
JMP HBW_Program.S23

// Rung HBW_Program#223
// Offset 1426
SG HBW_Program.S23

// Rung HBW_Program#224
// Offset 1428
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#225
// Offset 1436
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#226
// Offset 1444
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#227
// Offset 1446
STRN C251
AND C250
JMP HBW_Program.S24

// Rung HBW_Program#228
// Offset 1449
SG HBW_Program.S24

// Rung HBW_Program#229
// Offset 1451
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#230
// Offset 1459
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#231
// Offset 1467
STRN X2
MOVE 1 C298

// Rung HBW_Program#232
// Offset 1470
STRN X2
AND C299
JMP HBW_Program.S25

// Rung HBW_Program#233
// Offset 1473
STR C300
MOVE 1 C299

// Rung HBW_Program#234
// Offset 1476
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#235
// Offset 1478
SG HBW_Program.S25

// Rung HBW_Program#236
// Offset 1480
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#237
// Offset 1488
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#238
// Offset 1496
STR X11
JMP HBW_Program.S26
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#239
// Offset 1505
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#240
// Offset 1507
NOP

// Rung HBW_Program#241
// Offset 1508
SG HBW_Program.S26

// Rung HBW_Program#242
// Offset 1510
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#243
// Offset 1518
STR ST1
MOVE 0 C299
MOVE 0 C298

// Rung HBW_Program#244
// Offset 1523
STRE N2 1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#245
// Offset 1534
STRE N2 2
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#246
// Offset 1545
STRE N2 3
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#247
// Offset 1556
STRE N2 4
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#248
// Offset 1567
STRE N2 5
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#249
// Offset 1578
STRE N2 6
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#250
// Offset 1589
STRE N2 7
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#251
// Offset 1600
STRE N2 8
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#252
// Offset 1611
STRE N2 9
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#253
// Offset 1622
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#254
// Offset 1624
STRN C251
JMP HBW_Program.S27
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#255
// Offset 1633
SG HBW_Program.S27

// Rung HBW_Program#256
// Offset 1635
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#257
// Offset 1643
STRE N2 1
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#258
// Offset 1654
STRE N2 2
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#259
// Offset 1665
STRE N2 3
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#260
// Offset 1676
STRE N2 4
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#261
// Offset 1687
STRE N2 5
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#262
// Offset 1698
STRE N2 6
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#263
// Offset 1709
STRE N2 7
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#264
// Offset 1720
STRE N2 8
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#265
// Offset 1731
STRE N2 9
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#266
// Offset 1742
NOP

// Rung HBW_Program#267
// Offset 1743
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#268
// Offset 1745
STRN C250
AND X10
JMP HBW_Program.S28

// Rung HBW_Program#269
// Offset 1748
SG HBW_Program.S28

// Rung HBW_Program#270
// Offset 1750
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#271
// Offset 1758
STRE N2 1
CALL HBW_OneDropR1 0x1 DST511 "3" "3"

// Rung HBW_Program#272
// Offset 1769
STRE N2 2
CALL HBW_OneDropR1 0x1 DST511 "3" "3"

// Rung HBW_Program#273
// Offset 1780
STRE N2 3
CALL HBW_OneDropR1 0x1 DST511 "3" "3"

// Rung HBW_Program#274
// Offset 1791
STRE N2 4
CALL HBW_OneDropR2 0x1 DST511 "3" "3"

// Rung HBW_Program#275
// Offset 1802
STRE N2 5
CALL HBW_OneDropR2 0x1 DST511 "3" "3"

// Rung HBW_Program#276
// Offset 1813
STRE N2 6
CALL HBW_OneDropR2 0x1 DST511 "3" "3"

// Rung HBW_Program#277
// Offset 1824
STRE N2 7
CALL HBW_OneDropR3 0x1 DST511 "3" "3"

// Rung HBW_Program#278
// Offset 1835
STRE N2 8
CALL HBW_OneDropR3 0x1 DST511 "3" "3"

// Rung HBW_Program#279
// Offset 1846
STRE N2 9
CALL HBW_OneDropR3 0x1 DST511 "3" "3"

// Rung HBW_Program#280
// Offset 1857
STR X11
JMP HBW_Program.S0

// Rung HBW_Program#281
// Offset 1859
STR C215
JMP HBW_Program.S0

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
SG VGR_Program.S0

// Rung VGR_Program#2
// Offset 2
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#3
// Offset 10
STR ST1
DUPBOOL
STR C410
ANDN C409
STRN C410
AND C409
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
POPBOOL
DUPBOOL
AND C410
OUT Y27
POPBOOL
AND C409
OUT Y26

// Rung VGR_Program#4
// Offset 39
STR ST1
DUPBOOL
STR C408
ANDN C411
STRN C408
AND C411
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
POPBOOL
DUPBOOL
AND C408
OUT Y24
POPBOOL
AND C411
OUT Y25

// Rung VGR_Program#5
// Offset 68
STR ST1
DUPBOOL
STR C406
ANDN C407
STRN C406
AND C407
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
POPBOOL
DUPBOOL
AND C406
OUT Y23
POPBOOL
AND C407
OUT Y22

// Rung VGR_Program#6
// Offset 97
STR C452
JMP VGR_Program.S1

// Rung VGR_Program#7
// Offset 99
SG VGR_Program.S1

// Rung VGR_Program#8
// Offset 101
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#9
// Offset 103
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#10
// Offset 111
STRN X25
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
OUT Y22

// Rung VGR_Program#11
// Offset 127
STRN X26
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
OUT Y24

// Rung VGR_Program#12
// Offset 143
STRN X27
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
OUT Y26

// Rung VGR_Program#13
// Offset 159
STR X27
OUT $VGR_Encoder_Rot.ResetLevel

// Rung VGR_Program#14
// Offset 161
STR X26
OUT $VGR_Encoder_X.ResetLevel

// Rung VGR_Program#15
// Offset 163
STR X25
OUT $VGR_Encoder_Y.ResetLevel

// Rung VGR_Program#16
// Offset 165
STR X25
AND X26
AND X27
JMP VGR_Program.S2

// Rung VGR_Program#17
// Offset 169
SG VGR_Program.S2

// Rung VGR_Program#18
// Offset 171
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#19
// Offset 179
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#20
// Offset 181
STR ST1
OUT $VGR_Encoder_Rot.EnableCapture

// Rung VGR_Program#21
// Offset 183
STR ST1
OUT $VGR_Encoder_X.EnableCapture

// Rung VGR_Program#22
// Offset 185
STR ST1
OUT $VGR_Encoder_Y.EnableCapture

// Rung VGR_Program#23
// Offset 187
STR ST1
OUT $VGR_Encoder_Rot.EnableCapture

// Rung VGR_Program#24
// Offset 189
STR ST1
OUT $VGR_Encoder_X.EnableCapture

// Rung VGR_Program#25
// Offset 191
STR ST1
OUT $VGR_Encoder_Y.EnableCapture

// Rung VGR_Program#26
// Offset 193
STRGE 5340 $VGR_Encoder_Rot.Acc
ANDGE 5360 $VGR_Encoder_Rot.Acc
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
OUT Y27

// Rung VGR_Program#27
// Offset 216
STRGE 725 $VGR_Encoder_X.Acc
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
OUT Y25

// Rung VGR_Program#28
// Offset 235
STRN X2
JMP VGR_Program.S3

// Rung VGR_Program#29
// Offset 237
SG VGR_Program.S3

// Rung VGR_Program#30
// Offset 239
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#31
// Offset 247
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#32
// Offset 249
STRGE 600 $VGR_Encoder_Y.Acc
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
OUT Y23

// Rung VGR_Program#33
// Offset 268
STRGE $VGR_Encoder_Y.Acc 600
JMP VGR_Program.S4

// Rung VGR_Program#34
// Offset 273
SG VGR_Program.S4

// Rung VGR_Program#35
// Offset 275
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#36
// Offset 283
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#37
// Offset 285
STR ST1
OUT Y28

// Rung VGR_Program#38
// Offset 287
STR Y28
JMP VGR_Program.S5

// Rung VGR_Program#39
// Offset 289
SG VGR_Program.S5

// Rung VGR_Program#40
// Offset 291
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#41
// Offset 299
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#42
// Offset 301
STR ST1
OUT Y28

// Rung VGR_Program#43
// Offset 303
STR ST1
OUT Y29

// Rung VGR_Program#44
// Offset 305
STR Y29
JMP VGR_Program.S6

// Rung VGR_Program#45
// Offset 307
SG VGR_Program.S6

// Rung VGR_Program#46
// Offset 309
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#47
// Offset 317
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#48
// Offset 319
STR ST1
OUT Y28
OUT Y29

// Rung VGR_Program#49
// Offset 322
STRN X25
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
OUT Y22

// Rung VGR_Program#50
// Offset 338
STR X25
JMP VGR_Program.S7

// Rung VGR_Program#51
// Offset 340
SG VGR_Program.S7

// Rung VGR_Program#52
// Offset 342
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#53
// Offset 350
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#54
// Offset 352
STR ST1
OUT Y28
OUT Y29

// Rung VGR_Program#55
// Offset 355
STR ST1
MOVE 1 C299

// Rung VGR_Program#56
// Offset 358
STRN X26
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
OUT Y24

// Rung VGR_Program#57
// Offset 374
STR X26
JMP VGR_Program.S8

// Rung VGR_Program#58
// Offset 376
SG VGR_Program.S8

// Rung VGR_Program#59
// Offset 378
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#60
// Offset 386
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#61
// Offset 388
STR ST1
OUT Y28
OUT Y29

// Rung VGR_Program#62
// Offset 391
STRN X27
ANDGE $VGR_Encoder_Rot.Acc 3567
ANDGE $VGR_Encoder_Rot.Acc 3557
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
OUT Y26

// Rung VGR_Program#63
// Offset 415
STRGE 3404 $VGR_Encoder_X.Acc
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
OUT Y25

// Rung VGR_Program#64
// Offset 434
STRGE $VGR_Encoder_X.Acc 3404
JMP VGR_Program.S9

// Rung VGR_Program#65
// Offset 439
SG VGR_Program.S9

// Rung VGR_Program#66
// Offset 441
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#67
// Offset 449
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#68
// Offset 451
STR ST1
OUT Y28
OUT Y29

// Rung VGR_Program#69
// Offset 454
STRGE 2026 $VGR_Encoder_Y.Acc
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
OUT Y23

// Rung VGR_Program#70
// Offset 473
STRGE $VGR_Encoder_Y.Acc 2026
JMP VGR_Program.S10

// Rung VGR_Program#71
// Offset 478
SG VGR_Program.S10

// Rung VGR_Program#72
// Offset 480
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#73
// Offset 488
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#74
// Offset 490
STR ST2
OUT Y29

// Rung VGR_Program#75
// Offset 492
STRN X25
ANDN Y29
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
OUT Y22

// Rung VGR_Program#76
// Offset 509
STRN X26
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
OUT Y24

// Rung VGR_Program#77
// Offset 525
STR ST2
JMP VGR_Program.S11

// Rung VGR_Program#78
// Offset 527
STR X25
AND X26
JMP VGR_Program.S2

// Rung VGR_Program#79
// Offset 530
SG VGR_Program.S11

// Rung VGR_Program#80
// Offset 532
STRN X25
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
OUT Y22

// Rung VGR_Program#81
// Offset 548
STRN X26
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
OUT Y24

// Rung VGR_Program#82
// Offset 564
STRN X27
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
OUT Y26

// Rung VGR_Program#83
// Offset 580
STR X27
OUT $VGR_Encoder_Rot.ResetLevel

// Rung VGR_Program#84
// Offset 582
STR X26
OUT $VGR_Encoder_X.ResetLevel

// Rung VGR_Program#85
// Offset 584
STR X25
OUT $VGR_Encoder_Y.ResetLevel

// Rung VGR_Program#86
// Offset 586
STR ST1
MOVE 1 C700

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STR C813
OUT Y18

// Rung MPO_Program#4
// Offset 12
STR C810
OUT Y17

// Rung MPO_Program#5
// Offset 14
STR C811
OUT Y52

// Rung MPO_Program#6
// Offset 16
STR ST1
DUPBOOL
STR C804
ANDN C805
STR C805
ANDN C804
ORSTR
ANDSTR
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 100
POPBOOL
DUPBOOL
AND C804
OUT Y53
POPBOOL
AND C805
OUT Y15

// Rung MPO_Program#7
// Offset 45
STR C814
OUT Y19

// Rung MPO_Program#8
// Offset 47
STR C809
JMP MPO_Program.S1

// Rung MPO_Program#9
// Offset 49
SG MPO_Program.S1

// Rung MPO_Program#10
// Offset 51
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#11
// Offset 59
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#12
// Offset 61
STR X24
RST C1199

// Rung MPO_Program#13
// Offset 63
STRN X24
SET Y17

// Rung MPO_Program#14
// Offset 65
STR Y17
OUT Y20
ANDN X17
ONDTMR T105 3000 Y44

// Rung MPO_Program#15
// Offset 71
STR X17
JMP MPO_Program.S10

// Rung MPO_Program#16
// Offset 73
SG MPO_Program.S10

// Rung MPO_Program#17
// Offset 75
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#18
// Offset 83
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#19
// Offset 85
STR X17
RST Y20

// Rung MPO_Program#20
// Offset 87
STR X17
ONDTMR T106 2000 Y16

// Rung MPO_Program#21
// Offset 91
STR T106.Done
JMP MPO_Program.S11

// Rung MPO_Program#22
// Offset 93
SG MPO_Program.S11

// Rung MPO_Program#23
// Offset 95
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#24
// Offset 103
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#25
// Offset 105
STRN X18
OUT Y52

// Rung MPO_Program#26
// Offset 107
STR X18
RST Y20

// Rung MPO_Program#27
// Offset 109
STR X18
RST Y16

// Rung MPO_Program#28
// Offset 111
STRN Y16
ONDTMR T107 1000 C819

// Rung MPO_Program#29
// Offset 115
STR C819
JMP MPO_Program.S2

// Rung MPO_Program#30
// Offset 117
SG MPO_Program.S2

// Rung MPO_Program#31
// Offset 119
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#32
// Offset 127
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#33
// Offset 129
NOP

// Rung MPO_Program#34
// Offset 130
STRN X19
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y53

// Rung MPO_Program#35
// Offset 146
STR X19
JMP MPO_Program.S3

// Rung MPO_Program#36
// Offset 148
SG MPO_Program.S3

// Rung MPO_Program#37
// Offset 150
STR ST1
SET Y17

// Rung MPO_Program#38
// Offset 152
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#39
// Offset 160
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#40
// Offset 162
STR X19
SET Y19

// Rung MPO_Program#41
// Offset 164
STR X19
ONDTMR T100 1000 Y18

// Rung MPO_Program#42
// Offset 168
STR T100.DN
JMP MPO_Program.S4

// Rung MPO_Program#43
// Offset 170
SG MPO_Program.S4

// Rung MPO_Program#44
// Offset 172
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#45
// Offset 180
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#46
// Offset 182
STR X19
RST Y19

// Rung MPO_Program#47
// Offset 184
STRN X16
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y15

// Rung MPO_Program#48
// Offset 200
STR X16
JMP MPO_Program.S5

// Rung MPO_Program#49
// Offset 202
SG MPO_Program.S5

// Rung MPO_Program#50
// Offset 204
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#51
// Offset 212
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#52
// Offset 214
STR X16
SET Y19

// Rung MPO_Program#53
// Offset 216
STR Y19
ONDTMR T101 1000 C815

// Rung MPO_Program#54
// Offset 220
STR C815
RST Y18

// Rung MPO_Program#55
// Offset 222
STRN Y18
ONDTMR T110 1000 C830

// Rung MPO_Program#56
// Offset 226
STR C830
JMP MPO_Program.S6

// Rung MPO_Program#57
// Offset 228
SG MPO_Program.S6

// Rung MPO_Program#58
// Offset 230
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#59
// Offset 238
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#60
// Offset 240
STR X16
RST Y19

// Rung MPO_Program#61
// Offset 242
STRN Y19
ONDTMR T102 1000 C818

// Rung MPO_Program#62
// Offset 246
STR C818
JMP MPO_Program.S7

// Rung MPO_Program#63
// Offset 248
SG MPO_Program.S7

// Rung MPO_Program#64
// Offset 250
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#65
// Offset 258
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#66
// Offset 260
STRN X15
OUT Y45

// Rung MPO_Program#67
// Offset 262
STR X15
TMRDOWN T102 1000
OUT Y43

// Rung MPO_Program#68
// Offset 266
STR T102.Done
JMP MPO_Program.S8

// Rung MPO_Program#69
// Offset 268
SG MPO_Program.S8

// Rung MPO_Program#70
// Offset 270
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#71
// Offset 278
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#72
// Offset 280
STRN X13
OUT Y45

// Rung MPO_Program#73
// Offset 282
STR X13
TMRDOWN T103 1000
OUT Y21

// Rung MPO_Program#74
// Offset 286
STR T103.Done
JMP MPO_Program.S9

// Rung MPO_Program#75
// Offset 288
SG MPO_Program.S9

// Rung MPO_Program#76
// Offset 290
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#77
// Offset 298
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#78
// Offset 300
STRN X12
ONDTMR T104 1000 Y46

// Rung MPO_Program#79
// Offset 304
STR ST1
OUT Y47

// Rung MPO_Program#80
// Offset 306
STR X12
JMP MPO_Program.S12

// Rung MPO_Program#81
// Offset 308
SG MPO_Program.S12

// Rung MPO_Program#82
// Offset 310
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#83
// Offset 318
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#84
// Offset 320
STR X12
RST Y17

// Rung MPO_Program#85
// Offset 322
STRN Y17
JMP MPO_Program.S1

// Rung MPO_Program#86
// Offset 324
STRN X14
SET C1199

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
SG SLD_Program.S0

// Rung SLD_Program#2
// Offset 2
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#3
// Offset 10
STR C1600
OUT Y30

// Rung SLD_Program#4
// Offset 12
STR C1601
OUT Y31

// Rung SLD_Program#5
// Offset 14
STR C1602
OUT Y32

// Rung SLD_Program#6
// Offset 16
STR C1603
OUT Y33

// Rung SLD_Program#7
// Offset 18
STR C1604
OUT Y34

// Rung SLD_Program#8
// Offset 20
STR C1605
JMP SLD_Program.S1

// Rung SLD_Program#9
// Offset 22
SG SLD_Program.S1

// Rung SLD_Program#10
// Offset 24
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#11
// Offset 32
STRN C1605
JMP SLD_Program.S0

// Rung SLD_Program#12
// Offset 34
STRN X35
OFFDTMR T200 1750 C1651

// Rung SLD_Program#13
// Offset 38
STR C1651
OUT Y30

// Rung SLD_Program#14
// Offset 40
STRGE T200.Acc 1750
FLASHER 500 500 Y899

// Rung SLD_Program#15
// Offset 48
SG SLD_Program.S2

// Rung SLD_Program#16
// Offset 50
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#17
// Offset 58
STRN C1605
JMP SLD_Program.S0

// Rung SLD_Program#18
// Offset 60
STR ST1
SGSET SLD_Program.S3

// Rung SLD_Program#19
// Offset 62
SG SLD_Program.S3

// Rung SLD_Program#20
// Offset 64
STR C1610
OUT Y30

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STR C1200
OUT Y39

// Rung SSC_Program#4
// Offset 12
STR C1201
OUT Y40

// Rung SSC_Program#5
// Offset 14
STR C1202
OUT Y41

// Rung SSC_Program#6
// Offset 16
STR C1215
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y35

// Rung SSC_Program#7
// Offset 32
STR C1216
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y36

// Rung SSC_Program#8
// Offset 48
STR C1217
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#9
// Offset 64
STR C1218
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#10
// Offset 80
STR ST2
ANDPD X47
ANDPDPF
STR ST2
AND CT150.Done
CNT CT150 100

// Rung SSC_Program#11
// Offset 88
STR C1203
JMP SSC_Program.S1

// Rung SSC_Program#12
// Offset 90
SG SSC_Program.S1

// Rung SSC_Program#13
// Offset 92
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#14
// Offset 100
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#15
// Offset 102
STRN X41
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#16
// Offset 118
STRN X40
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y36

// Rung SSC_Program#17
// Offset 134
STR X40
AND X41
JMP SSC_Program.S2

// Rung SSC_Program#18
// Offset 137
SG SSC_Program.S2

// Rung SSC_Program#19
// Offset 139
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#20
// Offset 147
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#21
// Offset 149
STR X44
ANDPDPF
STR ST2
CNT CT150 300

// Rung SSC_Program#22
// Offset 154
STRN CT150.Done
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y35

// Rung SSC_Program#23
// Offset 170
STR X46
STR ST2
CNT CT151 1300

// Rung SSC_Program#24
// Offset 174
STRN CT151.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#25
// Offset 190
STR CT150.Done
AND CT151.Done
JMP SSC_Program.S3

// Rung SSC_Program#26
// Offset 193
SG SSC_Program.S3

// Rung SSC_Program#27
// Offset 195
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#28
// Offset 203
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#29
// Offset 205
STR X46
STR ST2
CNT CT152 300

// Rung SSC_Program#30
// Offset 209
STRN CT152.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#31
// Offset 225
STR CT152.Done
JMP SSC_Program.S4

// Rung SSC_Program#32
// Offset 227
SG SSC_Program.S4

// Rung SSC_Program#33
// Offset 229
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#34
// Offset 237
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#35
// Offset 239
STR X46
STR ST2
CNT CT153 135

// Rung SSC_Program#36
// Offset 243
STRN CT153.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#37
// Offset 259
STR X44
STR ST2
CNT CT154 210

// Rung SSC_Program#38
// Offset 263
STRN CT154.Done
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y36

// Rung SSC_Program#39
// Offset 279
STR CT153.Done
AND CT154.Done
JMP SSC_Program.S5

// Rung SSC_Program#40
// Offset 282
SG SSC_Program.S5

// Rung SSC_Program#41
// Offset 284
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#42
// Offset 292
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#43
// Offset 294
STR X46
STR ST2
CNT CT155 1100

// Rung SSC_Program#44
// Offset 298
STRN CT155.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// End of Code Block SSC_Program
$PGMEND SSC_Program

// Beginning of Code Block hunt_exp_light
$PRGRM hunt_exp_light

// Rung hunt_exp_light#1
// Offset 0
STR ST2
COPY 0x1 "4 0x0 MC402 Y39 1"

// End of Code Block hunt_exp_light
$PGMEND hunt_exp_light

// Beginning of Code Block HWB_PickUp
$TSK HWB_PickUp

// Rung HWB_PickUp#1
// Offset 0
NOP

// End of Code Block HWB_PickUp
$TSKEND HWB_PickUp

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"C1","copy","",""
"C11","C11_Interlock","","Used to delay logic by one scan"
"C12","C12_Interlock_2","","Used to delay logic by one scan"
"C20","HBW_Has_Pallet","","True when carrying a pallet"
"C51","X_Direction","","True: Left False: Right"
"C52","Z_Direction","","True: Down False: Up"
"C80","Conveyor_Timeout","","Bit high when Conveyor Timeout timer active"
"C90","HBW_XY_PID_EN","","Enables PID control in HBW_Move_XZ"
"C101","HBW_T1_Send","Modbus MC101","Task to deliver a pallet to conveyor"
"C102","HBW_T2_Receive","Modbus MC102","Task to pickup a pallet from conveyor"
"C103","HBW_T3_Reset","Modbus MC103","Reinitialize and home all axises"
"C104","HBW_T4_Manual","Modbus MC104","Switch to manual mode"
"C110","HBW_Move_X_L","Modbus MC110","Move Horizontal Axis towards bay"
"C111","HBW_Move_X_R","Modbus MC111","Move Horizontal Axis towards Conveyor"
"C112","HBW_Move_Y_In","Modbus MC112","Move Cantilever In"
"C113","HBW_Move_Y_Out","Modbus MC113","Move Cantilever Out"
"C114","HBW_Move_Z_Up","Modbus MC114","Move Vertical Axis Up"
"C115","HBW_Move_Z_Down","Modbus MC115","Move Vertical Axis Down"
"C116","HBW_Conveyor_In","Modbus MC116","Move Conveyor In"
"C117","HBW_Conveyor_Out","Modbus MC117","Move Conveyor Out"
"C130","HBW_Status_Ready","Modbus MC130","On when ready for a task"
"C133","HBW_Mov_Conveyor","Modbus MC133","Status Conveyor Moving"
"C134","HBW_Moving_X","Modbus MC134","Status GantryMovingX"
"C135","HBW_Moving_Y","Modbus MC135","Status GantryMovingY"
"C136","HBW_Moving_Z","Modbus MC136","Status GantryMovingZ"
"C138","HBW_Status_Y_Pos","Modbus MC138","Current Y position"
"C141","HBW_Target_Y_Pos","Modbus MC141","Target Y position"
"C150","HBW_MoveComplete","","HBW_Move_XZ completion interlock."
"C180","HBW_Fault","Modbus MC180","Status in Fault State"
"C182","Fault_X_Target","","Active when X target out of range"
"C183","Fault_Z_target","","Active when Z target out of range"
"C400","VGR_T0","",""
"C410","VGR_T1","",""
"C420","VGR_T2","",""
"C430","VGR_T3","",""
"C440","VGR_T4","",""
"C500","VGR_Man_Control","",""
"C799","VGR_RESET","",""
"V105","HBW_Task_X_slot","Modbus MHR105","Value for slot X coord"
"V106","HBW_Task_Y_slot","Modbus MHR106","Value for slot y coord"
"V118","HBW_PWM_Set_X","Modbus MHR118","Set Horizontal Axis PWM Duty Cycle %"
"V119","HBW_PWM_Set_Y","Modbus MHR119","Set Cantilever Axis PWM Duty Cycle %"
"V120","HBW_PWM_Set_Z","Modbus MHR120","Set Vertical Axis PWM Duty cycle %"
"V131","HBW_Cur_Progress","Modbus MHR131","0 to 100 percent job completion"
"V132","HBW_Cur_Stage","Modbus MHR132","Current stage number"
"V137","HBW_Status_X_Pos","Modbus MHR137","Current X encoder position"
"V139","HBW_Status_Z_Pos","Modbus MHR139","Current Z encoder position"
"V140","HBW_Target_X_Pos","Modbus MHR140","Target X encoder position"
"V142","HBW_Target_Z_Pos","Modbus MHR142","Target Z encoder position"
"V181","HBW_Fault_code","Modbus MHR181","Current Fault code"
"V801","VGR_Fault_Code","",""
"N810","VGR_Rot_Target","",""
"N811","VGR_X_Target","",""
"N812","VGR_Y_Target","",""
"D0","MC","",""
"D1","Feeder_Extend","",""
"D140","X_Start_Position","","Distance to target"
"D142","Y_Start_Position","","Distance to target"
"D143","HBW_PWM_Cur_X","","PWM value for X for XZ movement task"
"D144","HBW_PWM_Cur_Z","","PWM value for Z for XZ movement task"
"T3","T_HBW_S6","",""
"T4","T_Conveyor_Timer","","Used to detect conveyor faults"
"MPO_Program.S2","Vaccum_MO","",""
"MPO_Program.S3","Vaccum","",""
"MPO_Program.S4","Vacumm_MO","",""
"MPO_Program.S5","Vaccum_Load","",""
"US0","_CP_Strogram_A","","CP_State_Program"
"US1","_VGR_Movement","","VGR_Movement"
"US2","_SSC_Check_InOut","","SSC_Check_InOut"
"UB0","_VGR_MisScan_A","","VGR_Movement.Done ThisScan"
#END

