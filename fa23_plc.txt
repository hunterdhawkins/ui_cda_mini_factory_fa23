// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\brent\Desktop\factory\ui_cda_mini_factory_fa23\fa23_plc.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
0c5f3a39bc2f86f6cf3d2c17c6215a83d7e748cae786230e868df86dbc4ef026763455779c3983bb
d9e91744c2ac4a49cfac95c0ba0bf12672edd6500ee607b02ef776a692c4acf5820784e40cbcadea
4c6d48d720cf0472c3f805577b32cfe34f79d855682b3371574f48da4cc581650837c7cd9d53c5e8
2332fd77a97a2c0cbfe714defc5f6ecab45aac03e7fac9de8a9f6a3c231718ccc0dd3898a1553ec3
ac3d5b2bd0817e9314aaeebe83424bf3d8635b306de1a5cd938eba5fedfeed0be773124c424644e9
c893aff5feb015582a4f2b8f55fc975b9a0a922bc1d24925dbce490c68b94d0f5d591791c6032590
ee1d0c6d99e323842a2424b71766415a08be70f4506bf2886a9e05186e2e52166e267af0377bb5d1
15609ffddfe64b7693d77b099655bc6f042ef779618ab0bb505b25442638fd3f2c0939d449d3ad96
130fa6780484c2104f4c5f0e8ded5825282e52cb088740d1a52c530ab603330990f5dd6120cc67bb
d28b2ba7bf193f79c56f6499c60b5191cde2d8c9896c427bb41bc275be65f46bfaf55becfec237e4
aa4d6bbe7e0a8c159f26ec0672ce029d1118debd5aa08b1a888a61f7c472919dab6a49d6c66fc416
300c4f11f92cdd83fb7f7e7ee00aba92c2d48f6eb15a3bc277e800effd207d943ab75ade71bc1905
55394099f23fe62166945282894261161caed380e8b6fe9dd5b7a34286e4339df5fec301c44e52a5
8ae8a3fa419e8f528fd2990337b97453ca720001ffa268a24217f3d061efca05e2a593388f3effcc
d2de67d173aa0c3d983c46ee136e2717d3a5bd6966bb655ffdd71746635f350a731ced11c346767f
9d40dfeb13c29d27325c3ac9040d5bf321229ceeafb087affa22140b5415ff87813ed9ca16da69ba
15438abcf728bea84dad2abdb5db0e0c96b9d02b705c89e8d8126d28e5760181e287476ed0ba653f
d4a043649ac6edd5603a04097a64f4fb2a4d4c2a762fea64caf6bfaa9c8e9aa36c32669e46b37d61
a0e997b045a969fb8a5ab30ded843c35746ff1699e76cafcef7c6142a416b67d1cb49995ae272a24
f12c40f5fd260255a6470823da3c674d79ef2a7e0442f1dcc2eee4b793a04a24ecb4354871b6403c
0804f7173b8d7cb6b1023ff4a95f36740cb7b23c3c82f45382990b15183de1120fef6bb91d636ea5
bcbff3e6b94adb8868c9a41734e55d9ef91717039bb253c3202ad3b388455d61697ae393bda16e14
9663f4fe27c462046d325e03317942fec7761dfec7f3d91e05b451168cd763d4cdf049fe4293571c
3d5f3f50a87776d62181abbe7cbd671d7ae026e8d10b12d7b51a92cc5fc4df526f5d7af7b4a6f184
b4dcf5bb0849248b24be92e35b9a58fd31a8e8fe02b236251d991007650eb85be7352e14e8ff93a7
3d2ea22218a369aa46f0686263f6ccf86ae61d2f85bce889aaf3492639c13737310eb04bc47ff700
00a695ac9f6d0b1f8d81445882cefe34c5b9864283c43c4b90df71e5768d854628f23bdc4696f16d
02f98f96f0a0c8034753f4857f60a982ee4a375bb6a427187620dfcc3cc37564f3fcf0aefed5de49
8e3b5c1e085a6ec00d23619b3fc6dcf8721679222692b22b03b11d2e79f8acaab5397e5c03400e7c
1f5a4642d0a1efc6ed57ef409b5abf41d2c3e326a3cb790ee9e78795ec4903ea00990fb7c684c63a
8830ab30fad3d9a4bcf9cc160bb6e4106c33b20192e6d13fc2c92e88062751e5aa2e04ec397c373b
de59a8ebd5eecd27d362e763b6f8c9a3db4d452e902bc86a9f28d9f4590dbb8441d9b764c286ed83
6bd01654a67f0e9baa62aa5d468a97062b55531ba4f668e17851a47d0c99569e56a1ba766b3a67b4
7062d5c59a6e75a1cfeb77578042acbc9a927e26cc3ece9b0a829f6ddc866441d31cd6d9cbb69c7b
c7ce30e5019c8580e07f153591db809ae604dad672b28e6db3f6b096d774e268267bb02fe5642f30
016511d51f80bb8175cc9fd72b2b2fd97ffa2948224f8d2c4a5e6da97de47b302b9d5bcb446fd146
910695e1863e3ba7b3f14ee235b246ff07b2f042c9bdcba22773c9e04a072c08089f118bedfffc8e
bc7ce90a23f976afc71bab640cb32ef5919bb9820b476471c5afd41ae80bcbd4a480d9c5b7134075
1880c3283c1f6d2ce68f695a5e4fe9fa2cdc8e7652326ed9956601b15330df90d0f8053cac5c9363
31aa99486e63aa3febbbdd6ace2d782270892f7fd9847f05b83c65488617e5de599edd019541ab75
fba0e6bfa63980c1b9b4875504a2fb106ae16f363b75e4a6c04780c22fd3b0794bde9cec63981ac2
26165fb7fc594588a8e291eb76c367c76035659c7ff42576adb020776af6f0a6f6ce3bc99166d919
3e3e9f80a02efeb2ce76ef97822b7ece3ea43f1c28bc7208e6b011dd69ab9c32aea1a1c05264843c
d7637542df2adc04a9303ee900696f5d1011cb5dbb5b90e23ccf47ad043c62f2ce53b455f3d4c7aa
4f3eb0cc426e5cc5fdf4fed172e4ba2169d22c666a114d66ba19b0df68ea4c7741f7060c382e640d
0fd21f9679f5e906bcbcd020ec8f6af0bad7d18a56014222d210c673523df10228bcbadb64329368
9dcb79bfcc43fe1c0529aec5bbadfb8728dbb7ce7203c9feadea894e8fcd20dc31f80297d5a5eac8
13b4208c7e6740172ee226a206a43d94d6e2737d3f4db13fd64b55693f549a9b27d01b1c0280d7a6
5d8ee121fd4441355d9512ee3dc1a522b90d14d883a8f60200d562998d53dc90d366bd5cda576510
6f3c5e86e9b6742a642d966f2d6c25c527c874fe3dad09b1f04788a32eaa32a85dba1b018b091307
fa5b8a289ea1e3fac9dac7a8bede7ba5cd70b6b1f69477265181a90d8e409f07317794b28dd78074
6c5238c761d08b25b18e03e5da37a3ef1840da1ea64d23c207672a4420d9df7b8b7dbc617353de38
a35de04e083a68e32e89dee358c586ab63632a1f55c33d0d3c51a0e496b9c88322d81a9d53239f5b
7f887311fd47bdb3290d2a4d4e8d73f234bd0143acb366ef41798fa40a5d4210b01904fd2f996fa3
989804cc6f990a8500d6292b1430cf21b85172eca0caf814f5769c9fe6da2aba641a47a10aec7d19
1527a2d7a8baf423f7baa4811e06357ef4dbf03c74358e80db49bbab7e28bc76a26dabf8201cef87
3db318281db1c36974fcc957a53e8853590f549a8256df0f03a4686fe6f1d88ae6682c0d943f694c
23bab52f4b757cc1e0427b289beba24ed69c2988beaf24672eb4ca3dd6466b2069112d22410b00fc
28e7217621da734de27032e6bc73ee638438420da8ff9f21a31ddac6d973c0c0715ae39d782b2459
2d39367458340f724005e681a1844605dfcba344a3821353f6373918ce0c062f21e4f279af05dd23
549641128118ff00d9ff850babaa04a046793dbdf3de28bd391c33db8369ed3ec4bc2fcb4037491c
f3d8cdb1e3ebb65f94623af081bc5186ce7a8e3fc983115644042952dc1789c832f036e61c63947f
365a2ba4df5de239cf743c6b8e45b8cbbc4b61557bff0082c329f5a61087e173805af26971e52556
17215cbb8e7ad821a5af4aeb979daeae9f8628f65cd7cfc781bf9832f94d27541557d9656b8ee5f5
e0cf162f43cb1a1a8af8c53076e73494345d7eb075652bc8e1da749a4a8cd3cef5c0ea2d3f3f6aa5
a14f6e86d6b3adcb883543f18fb4c08f72595c3ef992aafd18d35ead7cbbc4c75eddd85640a3746d
17d4a2c0d26d747a2175323ef3100bbdc3b8c99c3e90a3e964f66d64fe9a58e746e0ccd97a52f2b6
a49cb5e0fa02676108c50ed8bc52280954896ff868b747e67df01ee28f4089a12cdc3885533136ca
199fc82de67b090efad0e44ac2894153cc63abbd7731a7156b50212e90462423db888c8747a0ef7d
207eab33d154b14cc846b2cbc49606819c66d8a6f38507b8e306d521d0dff2a73520e49b9871f41c
3dd585e0e284dbe12d31d4f487a5720e026b8463c2601a4434a6dfcdcd9837322c96d501213d072a
a60bd392fbad1c771b04488d94225c67121da6701215c07bd72629040775f23619d55d690cbbb516
7c0fce8c8e893d7dfa9c15548a10e7d11a8133fc56aa59b5725c1442a5f641144b635c8424fb92b1
7fc47473cb1d7f788457e6443e6070e27772e62e473eafaa9e8b1bfd29897bc1ccae0cccec7c7742
19972f6edfb0ef16b8c007a8513acc3d48525b7fb4a10a6d232ae6cf92bbc2c0a9e5203836bdabdb
9929bf82ba97ec6e25f5440938d21ce084efd022f39f7e2e543815838a579108a5ac62710b611772
efe2498f92f88c42d038df13419c2fe6208ae6ca9ef4099c6d5e577852b8ffbd9fdcfbd4f91a69c6
146b69b0344b6027a98b88b5151a5ed22756a399d0e2ac8178782593fb87052ff51d77016bf96d1c
b39ba50f92d2e43c3bb16e97ada406b07ac9d09538b006ccb8ffbb37e7c5d82a1470f96eb56f98c2
c8b6b1788eeaca10f899ef85970811ae9f0bc93a7d7fc7c04a958cb2b69582c297e86db56fd9327c
860ec245b1b01816cb4670af80c5b4c5e1a4bf7c404da9476b64ae02e83c267348ffc3e67e0f6dfe
dd00a04be691c14cc54973e2fd627f4cbbacaf398b334ef5dbf595e24a8b7c7096376ccb9811ab24
07764aef1cf7a304cad90d8e317a0ff5ba57fc90f0455c16fa6749be15032a992f98b6cc13637620
df860efdb7c4dd77a6c953049549a335fe251408f06cc8816d1bb14b62fdc922089d3fabafb03b5f
b6ce4e3529833b24de8919e60710517980038ee6987bb17ab7862c77c63cf72a24318f0d72fa6e9d
2751db473d510d85b0a6bcb8791c10be71611e968518b867af97f3143a59f96d6b89d6198222390b
8b4861a17bbf6a869c081eb803727c4c371952b63e5503a4a41ce817512568d78b1540edfaa431f6
bbdc812744d4414e65f988e65941f643fda871deedf25b6769ae5ebedfc5415ba49b243c8b5e9fbc
d7f550b703b3c96a901ab60031a5d48a352d9a2f91c47d8249b4a947c81f91a6ae0383a55a2b887f
190abdf1f3fe759358b74c5d790f4adb2af016f6c26ce3b85761f80c11688e375001e758b96b54bc
740206d87b5be27435aea3590163e1cf4a040059fab2c4431a5757075c9fe354b13cede9f08ea935
fdc242ff519e26b779c84f5c618dd351c3814ba689dcfc320bb3ce5e7da262165ff52e7f1b46e6e7
23755bcc0db7046fbdfe5efc617be14d6a3ece042d060df0c35dc4253ebb990a39e670a32ae893dc
5e8622dd3782d19b551f5a03bea7e47be812a73e6dd15a3634c87af702db242754312cd854038a13
29cff945afa0b879ae18b5ccb1c3731926156a2f0bc19066165f56c8f1d4207c8b02edf14f537b66
8774824da81c02339fb1883d0a4102d961c826f59e7d3fe8cf57f994a36db6c4ae3c5a56d3631cb6
467e5df3f02e1d5e44f540b9317751be04a077d2e1e98cd58c9228b6055f2345a028bd9bd6229370
83ea6d1fe0cc4545a7cbc18747e33fdf82c39e1624c8cbad9e812955a101582e896ed57d5c346330
9fa540ac70886f16ce3eef498125e48af3158f5727366079462bf441f9497bc1f58ae0c09a08629e
524e0ce6e60f6dc114845fb02afe1b9e8bbd35beff3ca51a49b5682ec41ae3cb30f1500f8a99105e
b740aea283388e10195848bb0ee986be6d752fc90434cf2c990ebd597b35051919f1100d4524a943
232d37792c0b55824faf7c7109b0c1dcc804556369ebf30c7271a1f923b53c07106dd31eca02de9a
4278be2175264491443d36d069f1c7da106095f4364f007e4672a00321c78f8ad1a6e49b04b9354b
d4b54d85be8ee9b90f0511f10b814bc762fb722b9f19d7d68316111f35c6e28568992d579db60156
1a9b738ed4c9d36b01c60c0b5040c8ff7010249cadcd976f0c3d5960006582e51da79495db20647b
17a1e006657c4c979afa3e9db1d98b97263d211f09feb7e005e6aaac39fe9e05d15d19caed4ffc4a
b707c00690b519f9ffa2bca91f6a68e65ddf3db3db4e25fd8e53c6dfe794b5aae411791b94253525
68070404693a44428f378c118381f1fec97a328b2232e2cd0d879278f1a16736c23db184902654b9
2c4b4af687af57c2886502df9809c093fe4fd6b4cd2ddc85d005c202320c62771103443841b9dcde
657fd1ccf2b014be4af1b3ba4e23aa9f0d94bf128aa511a92389be2c8e45e0c1f0fcb6868e809639
7427a085b8dedd769b1a7537896d32b6cef01d1f10b6fe9ca72159b3a57acca4892d1e4e1cb07ea7
6a9be43e46131a9bd1e60d568912115db649a9b15260e597a65493aed650862ec09c02c22405c3e2
1bb494bd905cf7726e4ec0641b24d2e91f0bc77a08fd2671e1be748276d9fb37648eb896656f96ca
299340382d64c1c74c1954d810ec9d90e26fdcea4fd82121e08e60f104aea5af3d5e0df006bae178
89669d57fd9cd3eb4f6cf8bd50e916a49bd6437f0a06972e9f21a764c8e82c2bc043d029b5a9811e
123c014a3463a53ed583becf31dfbd86aa7f66efc63ea8638a862238f050162c8bf60233d8b1a3a4
8d3023040960bab6e334c839b5135d4c4257262ae349b7f56d40b2e14ebd6d284f3b1aa1ece9b1d7
45a7d045e87f3e97371aff6face0b91297b47ea5353b0b98befc1e4bf884bb02bd526d4aea1dab4e
f28342ab585a28ee758625199ce2872bafe2bb223a1336313be56d3c03718c4e22ae3f6e919feac0
e6ecb9246751dc8965cd19d4a6c99a2895068eb123a701314b6d4ccfc8b0841d7505af2eba094eac
2860d55f2996838dd7ec98dae2387dd5f989113a557b01973244a22428a618a962cb38ac76b0403c
e97e3ecf65ba7c019fde0440f3df20255ba62b05514cf62d299d28864f88181405001732d0795a17
d8d11e64c5e1f1b9740ea60d999247f68cd2e2523e6e122da6c8081c0490da716825868b1331fdce
6814a84936170bfaffcbb8b70a12d3966b41d23f6827fba3f8debbf9854f13f32bc8954c18901848
d27a5e4bf2040076893bb07a7d8b9ef1bf81e6caa184134c79b009701dacc470af9a7a578f33cee9
944e73f2def4cfa4691eabc1d6e549a1919dde13fec0332dc2da79dfbea6c8d0a6f23756e2136850
746278520f29c6f1b14ba43b47026748340bc3176a14210d4ddd82689d99c8ef43729225455a4859
b51ffea6dedeb8ee5fb244bdfe16d63fd8e7b6e557169569435bd422c669a0e7ca0e0414db2c1c04
588215230212faa2dcf24885eeec111abc93d620c94ab27cae989e4a7bd68134742219161d3ecb1e
e312862b4e086372ae0d35d5e383f69ef7f09e34e9d7d74819f3c55e84c7abf23b5f2fcd413cd4ee
78c7291c517434cf1436383dafc84cbce60547d7a8f70b32a00878f6fe290623bb459213f8ad8747
185f790a08a79273625330178b967b0fad7898a571c31ee266ff95c466a83f2af57b6dbd1c3b76f2
a9718574454cabff390f233aff3272b5b3a3bf1d083d16635e405f37ab72858d8821e3ffe6b66ab4
62de52ba4a3e72e707096d8d5ecaeed1b0e605f3f42be1d7baa6a71e3e656707878216620124415d
a925416a01266bf78b5aa65a5e2140dc59570595cbbd04279206c92d36b1800952d6c0fe92915659
90b53ffd9fa55a88838d9f2d4abf683970135d9d8fe0dbcae1d9bac2a209cd938bff087924d9f6aa
d77a0189f5ceb7c6645a4c11ad4e5773f6cd28cad6f06e62fde1ede99613cf36034422c90879f478
3c6c012e7d05e84b3cec6bd7b7ceaeedafe3efdad0930193dc83c66e4bdf93cf547f461d37758fed
3356ccfefed5515b7f509cb6d4af4f3f7f4c865308e97d4c85f62534e0f1db9ea6f68df342df4226
c4daf4635c50e1e7680d212ed9a7c64c1b7416eebff72f45a2fd8dcf7b3aeb7b26b34de31ce1a45e
89687e3b0f3dbf0caabe855d41c0225517d25bebf8112bfd08f706644caa313c015a40f7f4d1bec5
89f8342731aaddbe45809edf8cc291c7c05424c848b02e7372c34726f33e8d9c4425e034b2839ecd
589aafcc3ac0e5e583f829ff8e52325321b3a029b4b89e00b114719b2f2c8ad798d8124b5f9a5d7c
5025d3a45ac1a566ca5bb4e06d931b747c8d4f2682e640573ddc024596dc1d65891cf3d7d968534e
21129e1ce1620b1bcad5f56238a567576833f41ae2a34aa8d2fd5171f421162658d55d02b916ac0e
b881c673696533515fc54bbf168a8f833ca3b49417a8d84dce0b8693d9a5cb1dbf5b5d861d96094c
887be0639a5cc52b7b9c901684411ae09d782197d874769de29c5c76b11762cece27efc673d43a73
6eb0f0b6f2e6aff9d2361413fa62e5b20618557f2dfdb586da1d8cb00aea1921314b0942f4ab69ca
d78d5f6c101e481fe201895db4a3c2651f5f3117c38c52ff4ba4976e81134271b7976c30eead624c
29a99502c70836beffb619bde24bfb9c4113ee8886c8bed189515844db70a13af2cca1f844c7d70b
faf7b6530d58a06a4bc13c587992dab9583eac39b01773bbea9eb009a450eb7a2a43ece6a95d98bb
e4b70b192f056e0617880b17116a602597f49cf89efea81e93514dc10bb2a148ff6263357a2d3739
3c2733a1562fae94f7a47b2e3b96ac16799fcce1bccbcd5f7819b9a1eb83e6c27fc12f4b56748556
bd01d655078af6fd03363a0941a6b6b47fe933b1eafb1cd1585fe7f734b5604439b7e38149e406e8
be33a5f7424bd05b726ce0c369fb55896f0d62a06289b3d4ff246fff8e20aaf73c9147f0214f1ddf
659321c164f64fb8568ff619d3c3c1e3631141534dc96fc0802ebe166557deed1c37c40c71c5b1a5
75369f6f30edbe2f0cf085b91da14dc0acdd0ceac05740c3d323ab7dd11da0194729b47d09c5e570
3cabf0e534c78073be7fc7c3adcb7ba71c4d108bc4ec0e66e14c5a7769df250303ad754e2a24527b
ce11f38883b730ae7866c2aeabf1648ab7857188fd39e07519f3c6ee1e54d2c8d6ade3d410886f08
9da853e8900959c8fe594f1ea55f91445584d7092cf22a5887abb2bdd9579cae11a735502c869274
52f8b07bba1380bd5f006ed078606253567f017c4625adfe492227deee4c7335d2d4269b3e35bc64
9b45ba245bf2a89a5a633677d56e2160076f153a8315ad6df4ecf691ab3994011270af3c284f2a12
37301ed0b4afdc5b3fd60ebfa43d393c8b131557112fd2b865020ce06d90609f48faf63c2d5b30b3
19d6850cfbbfcc2bbd3967408eabb45e4c7bc6297591f6caac5726d0e4d47bf76bc9bfccd88e9d43
97e81847c14be9487d79ab87a4914c5836fc20a3ea78b8f146bab4b3fc6394d4afc8372a4c7a6d0a
a90f58facf525609ac8edec79c4f69f233e1ff2c67ce79ecdb803ddf5c76f415ba0bf86558619ce2
7ab268e9bee405be47337653230a2d510a84d0de4ad907a0ef0f81955d616ae7d129c6d64d11f697
c1697f0c31ab7a4bf54816de8ecfebe869bc852fdf28b8edafe4254c05f3dc9d7c6c359ef0e69c83
8f3311d8f53c8246c036f65b4af55ed73f31c019eecf53078088c1a98cac499a54603cae9d97cf4a
cc8d82c740f74461ffa607148fd182bd05b7bfc8a728fd5621e99b30e99b16a98e18823d2961cfaf
41107ca480637f7473da3e13bbad7c2242920cc40797bf381333a70ad7394d707cad8639620293db
d66830340df70632d3b4eea4fa20e67ad8ff864da3748a794da5d0f17aa0cec07da1556a384f87ef
d7fafefafd995c8e8e54e8fc20b1c3085d5f75d1cfb398b77fc99f228f5f5f632b0011b9494b5518
84dfad9233733184f97448c9b44df1555d66246c8c06c8e39989c0c14416fc00f95057723a483786
c9fd900bd32bafe0dea31ebcd3b8e544c03752c8b5b81d9bba2c37f5f2e09983523f25d1ff7962aa
87ef52fbad788a9ce049ccc6d27d199aef02c8583382c8cbccbbf6e79eeb6d624367375b30dd52c6
fc0c29f1bd2954a0179c3c25a63d846c039c3ce47cfbd185e13a422060cf285bfb02dddda06a6ef4
f0d28e5b702b11e7713044d50505992184b167ffc496dc0c88e985f75a46082df99bd7dab10950d5
3dcfde193d7f5e694b3c448add791518ddca8cc841570124dc1fc03ad8f8f56a79670b6e6739a7eb
4ace6ab623489ee5483c74b0389dfe5d46fbb920b7d723b652a7fc1d1017ba507f454e853a06da12
a14aa0a12c0a32b0a555313826b793e5e5bf52f0a593462bd132d6cfed8184da70305572c2cf4a72
73fa117e138b0698989e7f17664d3641c08d8db2e183c3207b1ec341d52f68ec7122cca0b5867dde
8255503930ead0135462dd6134997af70d67976bd18a27c3c6bda1026c619728ab20340ee09144d3
a5e9707e331c4cba2fcc33f0c7f9ddb4264ad841dd978aa72efc696fcc4318b678386f2195b7003f
69ec625d7398bfea5110424c5561dbf9be7dec257b44d6332b20425a82cfa241658646ed86f42478
b6b368c303f97d77a9f77146f8995a596ba7fd91ad22ea3bf5b6b22b603244913cf27e9b97d46b97
364ceb71f2bc0924bfeaf78d8af99e755aefd264f620e88591c63d34538533d86b617a28f59ad7bd
10f4210eff7d2219167a9b63c595de2d87e2ca02b48f93f1c6fea081c94cf3a1a677664cb2c99b0d
a268d664a9f3a7245d9354196b7c834a57030b1ee33b73604ffad26b32efcbb640a2c6326b064602
f78a92c4426868b51c704376ae2a7be8424ccf1afeebebbcc2bcb901cc78f34112cae78f37ae9dd5
e1c74c2c08732693096ebb7cbb3ebf330b94371acc712d4ca282d7125ca497393856ff4b0ab7c4f6
314c9ce0e38f7f3686feb3b1fc6d44177b268b57354f58568ffa8b0d96cfa492acf9b16220387123
50450d67b88e6acf624addde7de35420d35884b18c36ee5b6f7467ea77feecc1a09476f911a27331
24da73c23fe078cbbf67226d49c67d5fc3909d71dce6b0916ec9ddb3eb5331beab1fe61b85e66c67
ee49dadd395d78f978d0bb2060d68ae58d447bba8efc6122146560cab0afb3cfa3bd9b7c2c623e52
1715c1f4866fc27b25c48f74e014bd025c69787d377f1014d82a473d42c5b515506cbf627e1a5dda
ab2c9070d7ef43099ee0ab0a85fe17ee43e88e808eca2eff64dc6d0e6218137c85b79d980335364e
b207922e38187f99b81dfbbf751a3b1576d3b80122065378bf6e5cc8267f0391cfb453b4d98fdd29
24b7a535ef3fcba87e2fd227f5e6116866c2408e85404cf41dbe40d99f4c923166a73534823c590f
08e56a7cdec4e58d926f64c20f89cce37178cd0676ea50b6a7e3cbf55da823ce80194b11f0f4bae2
c673a6534b274e87bf367d9f50ba6dbc9c8602ed171e22f793b50c8a2ba119f6291199a9b5a3e357
c16e6733c7acacf483f9f077b70df85a9606d3d256769ff6c417c8d052c1457b51f202a737cbc9fd
ea1f9cb18ce5d42e2945e09dd0dc8f0e25f2b75f721af03a8c975d34d59efcc8ed6763451a17beee
a6f6f116f08ffb16b5bb83c67e283c7e853da1494070d130e2be9e12cab1727676cbc8c83567743a
a5fdf6b1cbffe2efa6232a05b6452cbd11ca6738ed24ac054d5c9458afdf15204045bbb54667eb54
90d151294ebd77265da75728c69513fa0a3a34e1a5f6976e40521eeaed280925e2acb9711744b5f0
c998047fb319c89f2ce0d33e88bedea621dc99585569efeb15b4fa58773534019405f841ea5e50db
57ca664e713707add01adb94a72058c46797a8c0fb14a5d272eeda896b88566b70e8c12ec3789b15
2afcf44f93c7d6752511d7577e38176521bed2f442b7685127a1646f3a438bdf8ea3ab58b2152fb0
dc3f2ceeb93dfc52237e0a51cc1ee2086c048b79447487efe4126a5aee52f0bf2e37a101cdba1c58
771af1c6c47486413a2b48029e182f745d4f7c0909589a69095ab308cdf58fbff207834e7f490e85
f14a3a4ec42129efc3233d4ff4f9d45edeabcc190a4efc50804278393b56bb0a09a414dfe8d60f31
bd75a188f6905a055703836909dd3b5f9557c658288361482510ad76186fac1458a5aabd076b9743
f13586acb6148a9b7b34795ed5d80925451d077cd8cf158e28bc97ffedec245e33d2a0d66edbc1e2
7114ec81d75b92fdbcb392d048d091aee3231f685268b98e2c3866a6a4aac0ef7f4683eb140a6572
add4f0f146db7d201e80faa691b0bc2ad2d75562d118617c279b49c47e9086e700f50e0e90dec17a
f104abf8e4cdd96470aded836c24436e0e624e24ccbcc2ce9dd69e5a7e315b676d642c6554197b61
2100483575ffe9a845803744d44304420e7d4c2146c085a4d4b038487b5a0631e824b4de0f4d139a
4225ac30045549028e388bc25dfd2489d43cf3d8eeb0d65c1ec17a3bff51d160becae704447ef838
00e7ebf2e2cf07101215fff506171acb1afedd343316179324817b604060e46918a57ab43d8a3543
9f104ba9ca6ed59477781be3ee63a518ec2ec719e152b0cb4c84e8c24cef39324be3d1a15435596c
9afd89521d2936b8c0ad53dfa32f4dcb18715d71e605aa6048a54dec39a74668c15a66c3f690a609
0f24807018ea71b491071e2b43eb24144268865657d61564f154ab9daf617036137b0641e867bb61
f4ddbe2d5e0b6664f1b91b2a73bc087ae384e6f53cd3038d8f9a0f5d702e37d1d8271e38afb8e9b0
fa2a45a9b49729ff5c4c18f02d28d4a497aa14363c9e0c50e6c6f462ba93fa5d34da84325d2bf536
794992c5f2aac8b965014eadf935b56f1da94efd7a0958375f6f18499a75cec68be30b8547ce4bf3
84a0d64aa3a4db08804ceb31bba71c4eb38b5705ab5d23b8fd8f01d85a83d0a090be5dd0a04bbe41
445275179d78df3527904a425250b2b928010d7a3e9ecedd1eb561e54b183b374face8bf8ebbdb1f
32767799691c35f12c383ebb7fc2f63567c79cc337178bbef23910747fc8b558464d97469eb1d0ce
41cdf922c3e683d07d4bbd5b593ec948a84331d0e31ec4c1fcf8d820948e5248b3723db505f61e6a
f2f7fff3f32d7cd566bf95acae6ff3b6445e3b60
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 SSC_Copy_State <Virtual>  0
 HBW_Pick TASK  0 -1
 HBW_Copy_State <Virtual>  0
 PID_10 PID  0
 PID_11 PID  0
 hunt_exp_light PROGRAM  0 -1
 HBW_Home <Virtual>  0
 HBW_Pick_Sto <Virtual>  0
 test TASK  0 -1
 HBW_Pickup_ST PROGRAM  0 -1
 HWB_Extend_Arm <Virtual>  0
 HBW_Retract_Arm <Virtual>  0
 HWB_PickUp TASK  0 -1
 HBW_HTO1POS <Virtual>  0
 HBW_Left_1Block <Virtual>  0
 HBW_HomeTo2_Col <Virtual>  0
 HWB_HomeTo3_Col <Virtual>  0
 HWB_HomeTo2_Row <Virtual>  0
 HWB_HomeTo3_Row <Virtual>  0
 HWB_HomeTo1_Col <Virtual>  0
 HBW_move_left_1 <Virtual>  0
 HWB_Home_to_11 <Virtual>  0
 HWB_11_DropOff <Virtual>  0
 HBW_Pickup <Virtual>  0
 HBW_PickUp_R1 <Virtual>  0
#END

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"VGR Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC410 C410 1 0x0 MC409 C409 1 0x0 MC412 Y28 1 0x0 MC412 MC450 1 0x0 MC411 C411 1 0x0 MC408 C408 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC413 Y29 1 0x0 MC413 MC451 1 0x0 X27 MI200 1"

// Rung VGR_Copy_State#2
// Offset 27
NOP

// Rung VGR_Copy_State#3
// Offset 28
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC800 Y41 1 0x0 Y41 MI801 1 0x0 MC802 Y43 1 0x0 Y43 MI803 1 0x0 MC804 C804 1 0x0 MC805 C805 1 0x0 MC806 Y44 1 0x0 MC807 Y20 1 0x0 MC808 C811 1 0x0 MC809 C809 1 0x0 MC810 C810 1 0x0 MC812 C812 1 0x0 MC813 C813 1 0x0 MC814 C814 1 0x0 MC816 Y45 1 0x0 MC817 Y46 1 0x0 MC818 Y21 1"

// Rung MPO_Copy_State#2
// Offset 39
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
NOP

// Rung SLD_Copy_State#2
// Offset 1
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"SSC Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC606 C1200 1 0x0 MC607 C1201 1 0x0 MC608 C1202 1 0x0 MC609 C1203 1 0x0 MC615 C1215 1 0x0 MC616 C1216 1"

// Rung SSC_Copy_State#2
// Offset 17
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block HBW_Home
$LGCMOD HBW_Home

// Rung HBW_Home#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Home#2
// Offset 8
STRN C215
ANDN X0
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51

// Rung HBW_Home#3
// Offset 26
STRN C215
ANDN X3
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5

// Rung HBW_Home#4
// Offset 44
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7

// Rung HBW_Home#5
// Offset 61
RET

// End of Code Block HBW_Home
$LGCEND HBW_Home

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 Y40 1 0x0 Y80 MHR102 1 0x0 MC101 C205 1 0x0 MC102 C206 1 0x0 MC103 C207 1 0x0 MC104 C208 1 0x0 MC105 C209 1 0x0 MC106 C210 1 0x0 MC107 C211 1 0x0 MC108 C212 1 0x0 MC109 C213 1 0x0 MC110 C214 1 0x0 MC111 C215 1 0x0 MC112 C216 1 0x0 X2 MI101 1 0x0 X10 MI102 1 0x0 X11 MI103 1 0x0 X3 MI104 1 0x0 X0 MI105 1 0x0 X6 MI106 1 0x0 X7 MI107 1 0x0 X8 MI108 1 0x0 X9 MI109 1 0x0 $HBW_Encoder_X.Acc MHR1 1 0x0 $HBW_Encoder_Z.Acc MHR2 1"

// Rung HBW_Copy_State#2
// Offset 55
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block HBW_HomeTo2_Col
$LGCMOD HBW_HomeTo2_Col

// Rung HBW_HomeTo2_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_HomeTo2_Col#2
// Offset 17
STRGE -2775 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_HomeTo2_Col#3
// Offset 22
NOP

// Rung HBW_HomeTo2_Col#4
// Offset 23
NOP

// Rung HBW_HomeTo2_Col#5
// Offset 24
NOP

// Rung HBW_HomeTo2_Col#6
// Offset 25
RET

// End of Code Block HBW_HomeTo2_Col
$LGCEND HBW_HomeTo2_Col

// Beginning of Code Block HWB_HomeTo1_Col
$LGCMOD HWB_HomeTo1_Col

// Rung HWB_HomeTo1_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HWB_HomeTo1_Col#2
// Offset 17
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_HomeTo1_Col#3
// Offset 22
NOP

// Rung HWB_HomeTo1_Col#4
// Offset 23
NOP

// Rung HWB_HomeTo1_Col#5
// Offset 24
RET

// Rung HWB_HomeTo1_Col#6
// Offset 25
NOP

// End of Code Block HWB_HomeTo1_Col
$LGCEND HWB_HomeTo1_Col

// Beginning of Code Block HWB_Home_to_11
$LGCMOD HWB_Home_to_11

// Rung HWB_Home_to_11#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HWB_Home_to_11#2
// Offset 19
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_Home_to_11#3
// Offset 24
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HWB_Home_to_11#4
// Offset 43
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_Home_to_11#5
// Offset 48
NOP

// Rung HWB_Home_to_11#6
// Offset 49
NOP

// Rung HWB_Home_to_11#7
// Offset 50
RET

// Rung HWB_Home_to_11#8
// Offset 51
NOP

// End of Code Block HWB_Home_to_11
$LGCEND HWB_Home_to_11

// Beginning of Code Block HWB_11_DropOff
$LGCMOD HWB_11_DropOff

// Rung HWB_11_DropOff#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HWB_11_DropOff#2
// Offset 8
STRGE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_11_DropOff#3
// Offset 13
STRN C215
ANDN C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51

// Rung HWB_11_DropOff#4
// Offset 31
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HWB_11_DropOff#5
// Offset 51
STRGE 2850 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_11_DropOff#6
// Offset 56
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7

// Rung HWB_11_DropOff#7
// Offset 73
RET

// End of Code Block HWB_11_DropOff
$LGCEND HWB_11_DropOff

// Beginning of Code Block HBW_PickUp_R1
$LGCMOD HBW_PickUp_R1

// Rung HBW_PickUp_R1#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R1#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R1#3
// Offset 41
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R1#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R1#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_PickUp_R1#6
// Offset 69
NOP

// Rung HBW_PickUp_R1#7
// Offset 70
NOP

// Rung HBW_PickUp_R1#8
// Offset 71
NOP

// Rung HBW_PickUp_R1#9
// Offset 72
NOP

// Rung HBW_PickUp_R1#10
// Offset 73
RET

// Rung HBW_PickUp_R1#11
// Offset 74
NOP

// Rung HBW_PickUp_R1#12
// Offset 75
NOP

// End of Code Block HBW_PickUp_R1
$LGCEND HBW_PickUp_R1

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#2
// Offset 3
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#3
// Offset 6
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#4
// Offset 9
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#5
// Offset 12
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// Rung $Main#6
// Offset 15
#BEGIN FMT_COMMENT 
"Hunter Demo Light<br>"
#END

STR ST1
RUN hunt_exp_light

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
SG HBW_Program.S0

// Rung HBW_Program#2
// Offset 2
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#3
// Offset 10
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#4
// Offset 12
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#5
// Offset 14
STR C213
JMP HBW_Program.S1

// Rung HBW_Program#6
// Offset 16
SG HBW_Program.S1

// Rung HBW_Program#7
// Offset 18
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#8
// Offset 26
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#9
// Offset 28
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#10
// Offset 30
STR ST1
DUPBOOL
STR C205
ANDN C206
STR C206
ANDN C205
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 500 60
POPBOOL
DUPBOOL
AND C205
OUT Y48
POPBOOL
AND C206
OUT Y49

// Rung HBW_Program#11
// Offset 59
STR ST1
DUPBOOL
STR C207
ANDN C208
STRN C207
AND C208
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
POPBOOL
DUPBOOL
AND C207
OUT Y50
POPBOOL
AND C208
OUT Y51

// Rung HBW_Program#12
// Offset 88
STR ST1
DUPBOOL
STR C209
ANDN C210
STRN C209
AND C210
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
POPBOOL
DUPBOOL
AND C209
OUT Y4
POPBOOL
AND C210
OUT Y5

// Rung HBW_Program#13
// Offset 117
STR ST1
DUPBOOL
STR C211
ANDN C212
STRN C211
AND C212
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
POPBOOL
DUPBOOL
AND C211
OUT Y6
POPBOOL
AND C212
OUT Y7

// Rung HBW_Program#14
// Offset 146
STR C213
JMP HBW_Program.S2

// Rung HBW_Program#15
// Offset 148
SG HBW_Program.S2

// Rung HBW_Program#16
// Offset 150
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#17
// Offset 158
STR X0
OUT $HBW_Encoder_X.ResetLevel

// Rung HBW_Program#18
// Offset 160
STR X3
OUT $HBW_Encoder_Z.ResetLevel

// Rung HBW_Program#19
// Offset 162
STR ST1
CALL HBW_Home 0x1 DST511 "3" "3"

// Rung HBW_Program#20
// Offset 170
STR X0
AND X11
AND X3
JMP HBW_Program.S3

// Rung HBW_Program#21
// Offset 174
STR C212
JMP HBW_Program.S2

// Rung HBW_Program#22
// Offset 176
NOP

// Rung HBW_Program#23
// Offset 177
SG HBW_Program.S3

// Rung HBW_Program#24
// Offset 179
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#25
// Offset 187
STR ST1
CALL HWB_Home_to_11 0x1 DST511 "3" "3"

// Rung HBW_Program#26
// Offset 195
STRN C250
ANDN C251
JMP HBW_Program.S4

// Rung HBW_Program#27
// Offset 198
SG HBW_Program.S4

// Rung HBW_Program#28
// Offset 200
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#29
// Offset 208
STR ST1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#30
// Offset 216
STR X10
ANDN C251
JMP HBW_Program.S5

// Rung HBW_Program#31
// Offset 219
SG HBW_Program.S5

// Rung HBW_Program#32
// Offset 221
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#33
// Offset 229
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#34
// Offset 237
STR C215
JMP HBW_Program.S1

// Rung HBW_Program#35
// Offset 239
SG HBW_Program.S16

// Rung HBW_Program#36
// Offset 241
NOP

// Rung HBW_Program#37
// Offset 242
NOP

// Rung HBW_Program#38
// Offset 243
NOP

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#2
// Offset 8
STR ST1
DUPBOOL
STR C410
ANDN C409
STRN C410
AND C409
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
POPBOOL
DUPBOOL
AND C410
OUT Y27
POPBOOL
AND C409
OUT Y26

// Rung VGR_Program#3
// Offset 37
STR ST1
DUPBOOL
STR C408
ANDN C411
STRN C408
AND C411
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
POPBOOL
DUPBOOL
AND C408
OUT Y24
POPBOOL
AND C411
OUT Y25

// Rung VGR_Program#4
// Offset 66
STR ST1
DUPBOOL
STR C406
ANDN C407
STRN C406
AND C407
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
POPBOOL
DUPBOOL
AND C406
OUT Y23
POPBOOL
AND C407
OUT Y22

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STR C813
OUT Y18

// Rung MPO_Program#4
// Offset 12
STR C810
OUT Y17

// Rung MPO_Program#5
// Offset 14
STR C811
OUT Y52

// Rung MPO_Program#6
// Offset 16
STR ST1
DUPBOOL
STR C804
ANDN C805
STR C805
ANDN C804
ORSTR
ANDSTR
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 100
POPBOOL
DUPBOOL
AND C804
OUT Y53
POPBOOL
AND C805
OUT Y15

// Rung MPO_Program#7
// Offset 45
STR C814
OUT Y19

// Rung MPO_Program#8
// Offset 47
STR C809
JMP MPO_Program.S2

// Rung MPO_Program#9
// Offset 49
SG MPO_Program.S1

// Rung MPO_Program#10
// Offset 51
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#11
// Offset 59
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#12
// Offset 61
STRN X24
SET Y17

// Rung MPO_Program#13
// Offset 63
STR Y17
OUT Y20
ANDN X17
ONDTMR T0 1000 Y44

// Rung MPO_Program#14
// Offset 69
SG MPO_Program.S2

// Rung MPO_Program#15
// Offset 71
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#16
// Offset 79
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#17
// Offset 81
STRN X19
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y53

// Rung MPO_Program#18
// Offset 97
STR X19
JMP MPO_Program.S3

// Rung MPO_Program#19
// Offset 99
SG MPO_Program.S3

// Rung MPO_Program#20
// Offset 101
STR ST1
SET Y17

// Rung MPO_Program#21
// Offset 103
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#22
// Offset 111
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#23
// Offset 113
STR X19
SET Y19

// Rung MPO_Program#24
// Offset 115
STR X19
ONDTMR T100 2000 Y18

// Rung MPO_Program#25
// Offset 119
STR T100.DN
JMP MPO_Program.S4

// Rung MPO_Program#26
// Offset 121
SG MPO_Program.S4

// Rung MPO_Program#27
// Offset 123
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#28
// Offset 131
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#29
// Offset 133
STR X19
RST Y19

// Rung MPO_Program#30
// Offset 135
STRN X16
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y15

// Rung MPO_Program#31
// Offset 151
STR X16
JMP MPO_Program.S5

// Rung MPO_Program#32
// Offset 153
SG MPO_Program.S5

// Rung MPO_Program#33
// Offset 155
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#34
// Offset 163
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#35
// Offset 165
STR X16
SET Y19

// Rung MPO_Program#36
// Offset 167
STR Y19
ONDTMR T101 2000 C815

// Rung MPO_Program#37
// Offset 171
STR C815
RST Y18

// Rung MPO_Program#38
// Offset 173
STRN Y18
JMP MPO_Program.S6

// Rung MPO_Program#39
// Offset 175
SG MPO_Program.S6

// Rung MPO_Program#40
// Offset 177
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#41
// Offset 185
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#42
// Offset 187
STR X16
RST Y19

// Rung MPO_Program#43
// Offset 189
STRN Y19
ONDTMR T102 1000 C818

// Rung MPO_Program#44
// Offset 193
STR C818
JMP MPO_Program.S7

// Rung MPO_Program#45
// Offset 195
SG MPO_Program.S7

// Rung MPO_Program#46
// Offset 197
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#47
// Offset 205
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#48
// Offset 207
STRN X15
OUT Y45

// Rung MPO_Program#49
// Offset 209
STR X15
TMRDOWN T102 1000
OUT Y43

// Rung MPO_Program#50
// Offset 213
STR T102.Done
JMP MPO_Program.S8

// Rung MPO_Program#51
// Offset 215
SG MPO_Program.S8

// Rung MPO_Program#52
// Offset 217
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#53
// Offset 225
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#54
// Offset 227
STRN X13
OUT Y45

// Rung MPO_Program#55
// Offset 229
STR X13
TMRDOWN T103 1000
OUT Y21

// Rung MPO_Program#56
// Offset 233
STR T103.Done
JMP MPO_Program.S9

// Rung MPO_Program#57
// Offset 235
SG MPO_Program.S9

// Rung MPO_Program#58
// Offset 237
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#59
// Offset 245
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#60
// Offset 247
STR ST1
OUT Y47

// Rung MPO_Program#61
// Offset 249
STRN X12
ONDTMR T104 1000 Y46

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"SLD Program"
#END

STR ST2
COPY 0x1 "4 0x0 MC404 Y40 1"

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STR C1200
OUT Y39

// Rung SSC_Program#4
// Offset 12
STR C1201
OUT Y40

// Rung SSC_Program#5
// Offset 14
STR C1202
OUT Y41

// Rung SSC_Program#6
// Offset 16
STR C1215
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y35

// Rung SSC_Program#7
// Offset 32
STR C1203
JMP SSC_Program.S1

// Rung SSC_Program#8
// Offset 34
STR C1216
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y36

// Rung SSC_Program#9
// Offset 50
SG SSC_Program.S1

// Rung SSC_Program#10
// Offset 52
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#11
// Offset 60
STRN C1203
JMP SSC_Program.S0

// End of Code Block SSC_Program
$PGMEND SSC_Program

// Beginning of Code Block hunt_exp_light
$PRGRM hunt_exp_light

// Rung hunt_exp_light#1
// Offset 0
STR ST2
COPY 0x1 "4 0x0 MC402 Y39 1"

// End of Code Block hunt_exp_light
$PGMEND hunt_exp_light

// Beginning of Code Block HWB_PickUp
$TSK HWB_PickUp

// Rung HWB_PickUp#1
// Offset 0
NOP

// End of Code Block HWB_PickUp
$TSKEND HWB_PickUp

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"C1","copy","",""
"C11","C11_Interlock","","Used to delay logic by one scan"
"C12","C12_Interlock_2","","Used to delay logic by one scan"
"C20","HBW_Has_Pallet","","True when carrying a pallet"
"C51","X_Direction","","True: Left False: Right"
"C52","Z_Direction","","True: Down False: Up"
"C80","Conveyor_Timeout","","Bit high when Conveyor Timeout timer active"
"C90","HBW_XY_PID_EN","","Enables PID control in HBW_Move_XZ"
"C101","HBW_T1_Send","Modbus MC101","Task to deliver a pallet to conveyor"
"C102","HBW_T2_Receive","Modbus MC102","Task to pickup a pallet from conveyor"
"C103","HBW_T3_Reset","Modbus MC103","Reinitialize and home all axises"
"C104","HBW_T4_Manual","Modbus MC104","Switch to manual mode"
"C110","HBW_Move_X_L","Modbus MC110","Move Horizontal Axis towards bay"
"C111","HBW_Move_X_R","Modbus MC111","Move Horizontal Axis towards Conveyor"
"C112","HBW_Move_Y_In","Modbus MC112","Move Cantilever In"
"C113","HBW_Move_Y_Out","Modbus MC113","Move Cantilever Out"
"C114","HBW_Move_Z_Up","Modbus MC114","Move Vertical Axis Up"
"C115","HBW_Move_Z_Down","Modbus MC115","Move Vertical Axis Down"
"C116","HBW_Conveyor_In","Modbus MC116","Move Conveyor In"
"C117","HBW_Conveyor_Out","Modbus MC117","Move Conveyor Out"
"C130","HBW_Status_Ready","Modbus MC130","On when ready for a task"
"C133","HBW_Mov_Conveyor","Modbus MC133","Status Conveyor Moving"
"C134","HBW_Moving_X","Modbus MC134","Status GantryMovingX"
"C135","HBW_Moving_Y","Modbus MC135","Status GantryMovingY"
"C136","HBW_Moving_Z","Modbus MC136","Status GantryMovingZ"
"C138","HBW_Status_Y_Pos","Modbus MC138","Current Y position"
"C141","HBW_Target_Y_Pos","Modbus MC141","Target Y position"
"C150","HBW_MoveComplete","","HBW_Move_XZ completion interlock."
"C180","HBW_Fault","Modbus MC180","Status in Fault State"
"C182","Fault_X_Target","","Active when X target out of range"
"C183","Fault_Z_target","","Active when Z target out of range"
"C400","VGR_T0","",""
"C410","VGR_T1","",""
"C420","VGR_T2","",""
"C430","VGR_T3","",""
"C440","VGR_T4","",""
"C500","VGR_Man_Control","",""
"C799","VGR_RESET","",""
"V105","HBW_Task_X_slot","Modbus MHR105","Value for slot X coord"
"V106","HBW_Task_Y_slot","Modbus MHR106","Value for slot y coord"
"V118","HBW_PWM_Set_X","Modbus MHR118","Set Horizontal Axis PWM Duty Cycle %"
"V119","HBW_PWM_Set_Y","Modbus MHR119","Set Cantilever Axis PWM Duty Cycle %"
"V120","HBW_PWM_Set_Z","Modbus MHR120","Set Vertical Axis PWM Duty cycle %"
"V131","HBW_Cur_Progress","Modbus MHR131","0 to 100 percent job completion"
"V132","HBW_Cur_Stage","Modbus MHR132","Current stage number"
"V137","HBW_Status_X_Pos","Modbus MHR137","Current X encoder position"
"V139","HBW_Status_Z_Pos","Modbus MHR139","Current Z encoder position"
"V140","HBW_Target_X_Pos","Modbus MHR140","Target X encoder position"
"V142","HBW_Target_Z_Pos","Modbus MHR142","Target Z encoder position"
"V181","HBW_Fault_code","Modbus MHR181","Current Fault code"
"V801","VGR_Fault_Code","",""
"N810","VGR_Rot_Target","",""
"N811","VGR_X_Target","",""
"N812","VGR_Y_Target","",""
"D0","MC","",""
"D1","Feeder_Extend","",""
"D140","X_Start_Position","","Distance to target"
"D142","Y_Start_Position","","Distance to target"
"D143","HBW_PWM_Cur_X","","PWM value for X for XZ movement task"
"D144","HBW_PWM_Cur_Z","","PWM value for Z for XZ movement task"
"T3","T_HBW_S6","",""
"T4","T_Conveyor_Timer","","Used to detect conveyor faults"
"MPO_Program.S2","Vaccum_MO","",""
"MPO_Program.S3","Vaccum","",""
"MPO_Program.S4","Vacumm_MO","",""
"MPO_Program.S5","Vaccum_Load","",""
"US0","_CP_Strogram_A","","CP_State_Program"
"US1","_VGR_Movement","","VGR_Movement"
"US2","_SSC_Check_InOut","","SSC_Check_InOut"
"UB0","_VGR_MisScan_A","","VGR_Movement.Done ThisScan"
#END

