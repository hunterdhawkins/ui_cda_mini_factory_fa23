// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\brent\Desktop\factory\ui_cda_mini_factory_fa23\fa23_plc.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
ccd8d64de494ad5f4593d4d741cd2edb6ccce140497ee3e95fcc1d7e7b4811d5ecda139a073c5e4e
2df7b1f932bbbe1db4cbef9b07115e8059bc291ae9f265a6f211c7bd6e4c012cd2b53b7049c27ecd
eb1b4cde59d1b2633820fcf4875a16ca7df6510db52b2f51ff6b4b1094cc57c38aee3ab700ccc83a
dd85e4fc57e284bd02e7cf7e2afe8cea9e13b454c2a5160a09efb3fcf3b07cab833ab3ce7be6b0d2
e72aac97ba88faea2609c6301aff5910788eda9f67e116c63f96cf42a54f1a51ad4b31113b6ea896
4b0c22a1ff616dfe9befe1db64fbda4a2f53ae0c964a0f456a718ce329bc4dcb405d03a0414946e4
3758189bf8ab2d7a0f0a680b71f25f71679484b0ced2b331bdc8f7fe7149a7ddac2bd305f2fd954d
ce8d1b2e96248ba5fc09b6fce19d38fcdcfed8cb2dd721699418656c5b8231112b4ffba5820adc45
25fdeb04d9d98e2c59709b56ce8a8d958149785ffca16a19c521784d4dc37747ca3d81722238c4e3
5bcfe96e9b2201933e5d7aa856514d3528e525eb86eda2eda4a691a4061886d5029e931fdf04bc39
f76c27ebe8612b7aec7e1d2ea4d062c436beebe881d22ac9552780de659b518e9d75637b4ad3d0fa
b1ab4f65c8613597c603a3fbfa803df532cfe22d9588d02a42675a47ae32d18d509c4e1f0ef3ae99
9c8088f4119da5b0d34786ecec4bd66187ddad74f500e34e3ad2758b0a76ce7e2bbaee5d81f39bdd
6153ac8bb7eaa8a28a3720eec69c049d90dba232a385d1acc45f31c45f730789dd4629aeb1932776
b0fb7a3e016652ff50c32cfd1a3b31e7fbf2ea7e13e3813fef3c03b1ed0269b397e3dfb811b6046e
dcc196102567b996b0e515e60620b71ee1d926d1c6179e481d97190c2c67dbe6cb5e674316e096d7
975ba812d40b87a2dce46281d75317ec05de7ee662d8f1354cbb57cc6b91f3af32836fd36821602b
788c104626e575fdaf7c15c4233e3e85a58c41d6e079942d5b5d34aab1a6fa74c04221839d1bffa6
ee67a24961f15921e5bc1db157d71ba72c1de4933932b81fee17aee547f2346fe1216f1d9a7449a5
1db165294fc64364092d34f1995c3b6456a241485b23b29e424fbfc7d289ae44ed6d5d374ede78e6
fdad445516226fe6699a96e75613f62521783d0995b34199ba54a584f2cdd06eb08164260406da07
c8ae278d5ff3db535b55414463138e11a2c965b89aad035f7f3f5ba8d957f5e09e63c1fb4fc08d26
0907b544ec491a5fad1ca2af67684a428fea93f691838a0cf3061a08e0d2b21987449988631ef8a5
cb36299269dbc7958e0313814da2545c0e5e74e9e716bc41d281cb67e5d3ea5d4b3153a6d9f0a6d4
b9208e108f0b6c902024f4fc60ed4eaa80fa614ce22dedfa81dc32f0adb5ed416e68a84d45d7fc9a
8def6bf981dfe8e49e2f9533424270c8c079055099f86fc9a7e85339559676d8d5b98f82b572b640
9c7a72b10022714786feb4ecf6ffb1159cb5dae14bca3de02b8a036d374d8281240686b0127e6cdb
be1effdb6c09e3cfe4b61b08bb55c2587763e244277652986e6e544da646f2dd2095e9dec433ab1d
d6e49cfb717b056bd0cddceff17f4c76d9cdff2f9cf95026d4b6ba57c5a8ee49a762e374087215c8
95cc159724adf2c47d9e9135047fa2187f1ff95d102e69c2388db25a5632bf13724ac36959715b25
30ecff2c18cb669fdf6018c42660874c344ff75a160eb342de89e15c00831d969bc093e23793df46
b93db47216b43f63aed0768b7b21522c51d5b71d6461056ee1a973d3d6ca3bae95ff21e86305a054
cf7466ffe60d674a333ec80cdc32a46ebca116066bcb3b87950c153e5479000dfb3f2fb18a820a1f
ea39d9f8f5d23dc9a5e888831d2d3f3a2b0a102ce3d0a734d05bd873e5072ef47b46bdcb72ea5950
9e47d5469308b827cdc81394ecbc91d792ab79b3116e75db596ec5539e36f0124435917db9808a30
ccb4f185717a05a655968a75e569ec5df91a4fedc0ec9024bcb05b0de10504127fdfaff5e0796d41
db51f1c5fa72d989c9e668f28c6add9764386a503c71916cacb36374d1c964f94a8bfd970a27902b
08cb12f4c429b404f5dacb0abe8835bd5f97e23ccd6bda31ad9a4d12b5094475576c76377902d472
efd301134ba343c23b2ea49346387c5cfabcf4f981b9257acac2e0a0a4e16c5acffd4d0f4a6aac06
6c2394004c7fd94dbf8528d817cf4fe55127cdd82b5d8e3b036ca053d168e63263b4a3681f31e196
e4b1f61c67ea5ed4fc7e692c4da567eb46f37b9b88542ec820964dd90de73929354624d98f5e46c7
6dde2188ce8b0fb53feeba0ea505a2f7a776951ecf9c475aca9d801b1d4b1b23fe0c54a31cdccbcb
6a7555db8bc6ba029be3f65f1cac5cc65d7eba2ee09a742203ca7ebc8b25b9aaaacb596f8f371ca9
bf8815e016da77eee037deb7b180cdcc16806686592bf5068e64cdb5ea7a46db3cdd7bb78772c2f4
dabf2ac759fac0c4ffdb4847c67f5ad6ba646ab371f27823ff94b02422430016e0c7b31030180dfd
704ce9252eed17a280f123f0155a1af2e2dbdf8a9d16e04aa21c6dafb8ebb8014793c2158245b290
40374510759fd65bef650d88df9cfd15d74cc2535e108391b879443e8509111268e2e78a6bc7dacb
e67bd503421146aa83e1fd0823a13a367df5218505b0e948d6b633911ac10ba405654a8689e94bce
9dbebcd5bc3bbe0ecb32cfe049272788b9d5ed0f492866d2921fe36d6e784dddfb6370445a65a913
585c7936e0a1d962f84966f20a84bdde174c0c3712943333021ff7dfcc288149ea112420f874ba4c
8470fd27be06c53b9315ddd3391493f73c3c9acb7f491a24d064fb1c64b5b3916d78fbd48dd16f5a
87a504b373b5b06acf88787c7378d4392deeaa94b218fd829d6b6cc6942073757abf2892d7c3d37e
ad864d8f77868a64b43e859708604ffe06e9b067e27494b1d1ad0e6f910d06a3dfe44f51af0f40a6
383df37fad07b22f0141720f1a622f2c4f98da169e835814b34b565999de437935a065c14c5b2538
c65704e4da6a030ed54f6ed19ffca57171b7aa277f12be0375c0d5aa15016f05ad3b266419fa45d2
a95b37a3947bf4fbebf1f2c72e9367d6ca25bdc9baf7cca1f26c37de534361d0b42e6a8999356e88
1cafcd029f12d5f026e4faa308c89c93da72cc91051a93fe42a2799f7ae463e73058ae970abc8de5
96a3729bb697f8c79e53e41eb02712652229f6a353e2a7989ed7eba1af3eef7d35c03c9a3db9d3cb
d7f19c6a6a1ab6c1b6d9abfa88b0210838b66eb07fecd3bbf2a156e38b7c978768b700cb1cfbbdeb
6112bdbb4a3ff87c69b3453e538034b884eb797915e43c52e98f109a987d834e0da770eb88577433
20b1ceff31adafff04eaba1966a666099b4a154028c22edd5fa787f308c7eb2eac30256d70892d26
c383ae7e7a44cbddfc88216103774fdeffd0c1c03599d90d82917ae8aafea14bd7da566ef4ae7062
2ad3f7fe1bba464e7d6f5e47e92389d25af848e9fa3e6c331b24fbdb063c6ad757472315432ed638
e82f706d564406b1a3a3f6595da3293fdc0b12a8dfa4d6803df949de0e727e9764b7e7d6e2a2831a
edd942bc84ecbd9508118545561880a61252d5931a0391dee47bf028f4915527d91bc048ea5a1b09
dd25841f9240bc5d05fd591dffc2467f9807c7e5004e231f9ddbc1dc825fb9ee77f2c5307627ebff
1e2472cf7f6febdd8be61ef111b74231e4c06acf71f615d88f41dccbdadc5cfc517f02d61ed07a86
76da9743c4d8460de95d2861435577bfd28d3b9488be7db44c71ff8f8389566f561f80ceeb92bd88
406089c67d666b6042fd33abb23fc27cddbff104af5c110c37143e04e37cbcae4ba16abcd8f06aa1
cd4594b43a4b7a92bfbfe5cc986bcf3e311c1d5f64d03a89ae4b5f7f96d99a010a00229d93034640
1b4f08bc30500b9165164374ea6826037a7540701d21a375eeb5e934d2c554cbf1044213ce32e764
789d5d282793452720d487838848af9ad8b307ed5e8f8a54edae7a5a4e74a0564ed2cdd1d41c0dd3
49be204be9f2c2c44c3eb94b61559b18fd7332d804107681e775869c34ff5d374405712f5f525887
be878e9c7be424668383eed250069c97901d8d80e240809bd84a6d2a742c6ddcb3ec1541d3408031
ba72f2d0b83ecca5faf391c5c09ebfbe2c1f5df0abdaf467c512636cd9ef5beb07a061de1599a2bc
987f9da0a6e06ea720124647179cf26cecac08bb6153af7ce300c85e0d8e7cacd823bc902be11040
197df403d87af5ebf6138f2ef8daae03d730d77ae4f1ff0ee215dc0788559e01f0150eefb8af213e
e02883fd94aae8697833ceae8bf0c30afc9852f81dd324596d7e4a2fda9809d272bd77fed647f7f0
28aa1dc6308b891f851932c72bcc41a313b2a17559ecf9ee83eb84b2151ed6311c5e01165603bc39
517c6cd37c3c6b5ae6dd9b26e6f650b0660007ef3c1e88128e659167824cbbc62abec17b5bc23d92
29f3b4ca9eeb82d681be46c46596c75f432581fe1c3da8c648cafeb336a6c5dabb551cceaaa40e56
5b0eb2b84ed255d96c61f3761db9c8008230c28f0a25375834893c70c4b1057a2bbe34b42cd2310c
e3d59696da92d1510a87baec4577488c2e5354c1c31795a3335b7cc44c558d8ae6f6990316e06918
d6687c52126207b6749eaae2ff21ef698cbb1d06e262b91c1a0141611a1e49f5734402cd038590d2
e75ddc1f34c2613bce0c1564c0d3a0f9a249590802ce37fb2b51fe2f188558e457bb49a251be6452
3ab94c4126ac9a9e7b07ca7c41f7a840f813e013732ce0690d7a3770f4af404e1bd245adc870bbec
0c0e0abc1de0f478fe5fd0ec97baa7c9da7107f2a7e1a2da2d226fde885a61e8b6323a6cc92e9a2a
50f3910a99725829eb87b9a21631f0d83342205c80a396789f17467c01cc14428a48b1b521a4bb1e
85d4332f9f76d13de184cdc812440cc93034a0de7244b196a2f6b3f0f0bf2868fc713c1f2b05848f
2d1efa14f4d53bdf9477445d674d3b3d937fc3507dbc59a81e3b198f9f17edecdbd0ccc0abdde77a
7761ad15296bdf2f5d48423e1ff03a2ad5f7c3515d35b54c1a245d4c173d1e4affc8db2f63e184d1
d35a4fe1e4d667af18ae3327ce4088a786e83a785a59d4922a1d456ca9118e4e1c3d3b6051e8d0cc
c60a3f32183d1951f4c3eabb560d68a9807bf603731642e49e53a3f4954361c80d07e22732101378
66834b2033970e1d972d9eaed8f53313fcda14741e3a854d9932e37632cd2e3e6c5d4614946297c8
f8b3daf65328119399c98f65040f230220ccdb791114a7dc1f2c06716df0ab28ec918af26ef4a69b
383375d07674746c2351cd4ca98a693785e21f1a10fc771318504b82673a5a74da965c5f4704b986
e7dfe801af9f843f4604bfaf7f613abfd69fdaa89cb562957370d4e598bb9fde20c413107636294e
638e8b028c0c94de24e8e49a3065d3bfa3801e58589fad28f6d1ff855d60af3976ff4dee71083cfb
00e9e8d1def2e1261021f5ea86dd000d2277b2873a0bb7eae8d643d15042e11a7d2744288ca7bce5
abf8bcdcc01696bd6236094b752cbe1b549c2b5603d0d8a8c2e0e3147102adbad9ed851da0df401e
d6bf31a190f828896afdcaeaa6a451c011d3cd1d081f878261bbf3ca581e895f049431ac3dd5cde4
52dd339dd7608cabf548d5b2b0a02e49ab519c69d31b607ca71c68d3350734d18ff128bd0a5e9f45
ba7fb24ac0ae2d81718eab58e78f51fedad9aeb08505e9d5b7555d307ea6b416766b4b84d86d70db
ba4cbdeb3ffe0d7ed36630201ce46ae843d71b4db05ca0e364e7cbbee0d9ca9889a15ca7b57dfe7d
d2f7e75dd3ac9e89c0369b5d9b9c9750c5b6eb3964bff4fcde988611360fcc87296edc997fe427cc
62833597053fd3813d27b256ebd04b195f8a4e4fc86d601c01207fec04e164c83f0e1749b8a50d41
a7eee7b2927d5455be8840c8a0e20574b3f8c172e7cfa04efc98983424dc0d3ff294811233416d9f
84894a0bd44241a85dcb33f5e72442dbdb3598765775675e31f8b01d70106501ddfd9e1eae6c88ab
dba4467e16af330b32a7d0760ea7ce82a71af4b8b5638bb72806afa1fc5b1482f59dfe63a046a1b0
56c4bc958ef49f6603d352180149859c1221a0138b51340ebcf8e12f0da45563be7573705c4fe041
4b47d838ff22f93dd3590842f572b4dd473b2e6e87644dcd7d8d5bf5233a83b37240d43e3b19ceaa
771ff4088d5ce0940ed73e4625a97f7715547d13bfc0df29dfe943d434443987af9626fc4f1cf7c1
ceadf1a84d2a2ac51909544cdb40ac8c254a735438c009da6a0d0d4e27fd0db6a44a557604f93bc6
b4812f0f9b813c52dd71fcfb1ac92775619629cab7b84c57266342e1229ad5deb86844171ed61066
f3463df763d6dcb2740e7db236ecc05842c9f171201fba2c728200e49ffdb33ad427ed475a978639
c45ed95f93a8cd4131bf688aa4579b866382ae06d7f16ac9bbac68c066a4ffea1b7ad6523cb5df0a
aa8f90c1fcb7c99e58c3287e1765ae54c6cbc357792afa9adfe46fd06cac09e1d4cf1e66ed9da6fe
0e8276c04180f913d871b8b5e628529d4ed559e9e1c31013b7f63033b883d7f68588278605d636fb
001a438696649471ce6b3048a64c054a5e91eb1658492b47d5274e8f3263ba2e6aa15b92412cc961
66484beeeab7bec7c8f0a6481eff1ceac86bd9f1afb590c34e40904fcb98a7ff3db5d34920d50343
e92f3731b4f8aaf4725d3196b1eeb68ee54c3efb7ca4f388a957f3ccacf21d2734c474f751b467e7
0fb27214e20aed1541f03df6020278d07be4ecd94300364b1bf73f35cc90d8f3a8e05c4b0bfbeb1b
96ed41cd8d572e3a03a19bdf86a3705136d39754da10fbedc96daf147dd1e7e6bf9aebc384b8b043
531cd3ca057f11f253bb4bca83df44efe2573c3c9b9d508ee3e543b15d51942d72418be82435a874
3a2e846c741316519ca898957c1c77e703c4cf48048ff43cd1c992c942188aa4c4b489025e1144f5
aeefe9f36678ac1099fb1025487b9536159f80e6aeb4280ebcbc424d1c75e3d74287c08212b5f689
c6487eb77ade120117d57d896d0402bd435fb331546d3385e99ad56e127f9600fb9127171e7cbfb1
68fcd9d89683dbc97c40bdee8e77ba3c595ae8ab9bf95ef4a60b3e73ea840d2827277c54dc40e8dc
6329bc515412c2ddc85ec8e61d9d436c9cab910c7dd2c997c7d2f0727b91ad80d059c24f6760c32e
940e820084534b7a807474cb966e37bc45c04cc2494f0cf831f7222971115956a7849fe545dba31b
ae3d858882cc16c1d9f5fa988eb8f281a9982e51306d639afbef1510769617fcaca9e8c8d09b0eb2
785b5da157f9182259a191b1ff16925ecbba0fcba7d01bc64614411ab4385f35f57317c87fb29f26
a407da9e903578a84ba433e1cdc679d9fc23a86983b0b7736f324ae670c3acac1f09716000fdb256
0d311d98ed060be2dddcd361d11ca8fe4227167051b2a88c2670c21ea070c47ae4c26da10b2884c9
a54be70d91f3d98fcbb67936985a6041e8cca35416f3aa9973beb0dc8db6c6da882502449a27c4e5
e6c7d7e1d602b37c780c1a07caf2446352c335a62bc7c8a86c450754c39309dcde4fe392710fe30c
9cd54a68e8dcf2e8d2c035f8c6069be95428a6dcec298708b48cd6ead23c00516d8956e859c31b92
42e69d94588b394cda38a5854011866afd0d273462768b99fa468bb1a7170d69d5c6f0e4e7099e33
b58325503b8820c97dd03e30144fe0fb233c1550b173c39c6d5be06f9765df1803775a1cea646129
088622920a5119987c81816d6a872d0bdd41175efa485f615c08db260c1de6534b22b5fb7841328f
b62c85ac938d9a95eaba8ea4c442249c722a51025cccab59366ade4102a6a3c9f1d5b852f6eb5fba
4a9a7b1e20cea5c06190ae54de23cff1a60a4847403a87fea9e022286584d4550f4dacae136513d8
6140e504518cff4787e79eb4266a88ca9c5873bd4bdfb5b091b630f818a0c096412d04cd5bbdf9a8
bbac25089c68b79c4c2b1d32595486dae7f2596b96e5b3955234b0aaae4127b4034c1676e7547093
6e719818620f49d754e21f1eb5cc5b532b1b44869d4c27e6b8c15532dc918c5fb1be156e8314e938
061bbb9a00ccbf8bbd6085e96c138608942f6e76b2668e3757024d4cc6b90b4d6e0ae2b616995ad7
7408e85b31b94c56b4c1686a26e936dd087332a3b2abe8997a34417ea41a6a3a152041f850158994
f7d2f47a1d1118c1c2dbf31da36a066cb311454604d51c4fe7aba23949e788ff4515fedda9c7a35f
23189a3a6924898b34c0a931d33b320c7b5dc597fbf16c2c9dd32791e0860fb3e103682d7bb79a73
aeeff41282f387fa37d988ed0ddc29e89052752ba78597e189c8fe1ec2ae2baccfff08b7447761e4
a5c8255351dbd21a78abbeb54877d5cbfa4ca810c2fa71f89aa69e0330ea439e5c516ba485d07367
e5bef69434ccb30126a87457a68d63f84c370598ea5f5af3ada7103ba2390eb13ee48e40a3141e92
b48bc963d3c1d84ecb203599bfd840b0f510d2f93877f29476b3ceb0835cd7087c1bc330bc008a75
6b7cfbfc13fa014192fa6a1805276512d8d23a96896ff7a80148123595d097775f73e0bc12429caa
84efd669d8e545cad878ff69112a5b468c502d4a043028b651aae495c0dd1e1fbb68ae2759059599
8ef305b463870964f8ad7c412285c551387b452593bc2574bbad6099d25df2d24798e7adf22d3a42
bc731e8b628aec36ad17595dd58ab6b9f6a364bad7eb6fc0331319ec54ce4d3307d1604a2e6264d5
cf7f631d54cb6f0c23c15d0f5978a3e770c00d147876c29252aad4d528fe877257af4f33bc560cc6
e3be7f287579f90c4220c73bbcc5348c89fc6b0a5370f1f1d983d849104712f4c2928f905dd0a638
800a7c9b4a48e601db0da872392f71f6345ad37dda9886292e01e0ad99f1d5c98ba27d24a3cc8cf9
455978b022e143e4781d2cdcc960ec0692edefba61563dd58b032b4d5110ff67c1fe635a83cd5b25
e7c36ce8088ab6477b20c9f2e43afbecd6c11091c9ecb12d7ae791aaf56516fc0fb95b25880a3809
d1865e617f24adcb309b986907b11b464260c574093856dae488c3f0f86bb83ed3246474f40fcf1a
c7aa74245985f796f497391fb18ffdbbc62cf57db64deaa015a1d06588434239133ee17e140a754d
47efb5197d5a66678ecf3f8594943dbe57b942d71dbc9e5a3ed4a195720e73a3ceaf1647989c8037
33fc6aea224f2c436612cbbb9f62ab3eea2513cd08634ef7c174a23657117db0963702fa5b4ed033
20f97e04e9cf54a777fd2097c4c9bcfee207cbe99e9d41c5af9b3a69ca8e2a45621bd7e32e4acab8
77f204e7e039acab2dd7e2b2de4c9ecba138322457d1747ccf73c279d9445949d277a62b066f7b18
4f08ba22aa30f57853766dfd3df96bf1eef7a2f9d94017f3d6c8524ea55b3f8faa5e98691abbfa3c
3dbbb85d4abc417bb4d489135a3ee4f2fe3319454a748cc9fe8c437b276b9190a3613044f298f33f
b88bb7f99b561654c7d854eb44d78ec3860f177dce1b33efafe50726b1a8045c5928b8b34065888e
adaeaa29d856b0b70284affff8d279d45230eafde91a825e9edbe4fe956528366b55fb8b6e25afda
1467dd109536ef0569142322c36b0df25926c71634b1de30d23f78c05aa6f19f80c2d5096587f7d8
f504ba8d532e66487d92b9e88eb560deaab0f01b0a89a4e09180baeec828ebabb62a5dba74632a33
49943b0ec2cdad0396f9e1093af8ae605317c1c3e5fdd949bffc57f98e20db574c06fac2fb8cf0b6
e23af80ecd742325ee5bcf689728dcd2bec9895d63ed31dec56a675953fa776737cbf9473e136dda
38ea163e30d3e5bfac67d842d6ceb47d9656f14b5ec713e155d2da519e9df894cd5602a5eb97796e
f70505f521d963a0fe2150d54233b443f2f28e52940e121361f6f91be47b8fd339392b17a53f52ce
367ed962febc118e4db20c09654f5920c1ef72d0490962be6e3ca613065a8e5e08665b5fb1e0d4a9
5b0e573a7b4cd2f2d215837575107c62638d9a8b78805e5e163b43b9ad0a56818475d564eede19d5
5694bcc962a349256eeb71269057c13807a4ef7b805123280858372559f3e344efeff4fb333dc49c
6d113826ebd13b49699d46eefa29f7260ae644fa31bf142968c60d8b63185cefb6e2cc8c152ac22b
6785ae76d6225a95fce07cac6ecfbe94643ca3f95282362531a9bb5b5ac164cb1cf0c53ddafdf186
e4382fd435c7129ba42c6c660f63f73c6a0fbee579c7f8cfb85b664fbdc3c583af6cc6caeeb5296a
3987c663666413a7a1792122225f8986c3e459de25449da53fb0dc4697dce391852bd17e509a980c
a7ad3edc209453c28e85ae6962191e40f91bad22f776133c033927ebcf2186da5592cbf8e17f6557
10618a955af98c3dc15b7e1897a7e0d5a750fb27573c2f94516489da61f4d4a53de48ba3a6e798e8
78062b63ede9c1c5949447517b149917dc099c2a8ce4157b693616ab0b0969bc2040c86312c14e8b
a6e2cbefa9b9280120aca885e3b93f1aae8f683a6a8ebec446b001f7e99592a04409305de58cf19d
590d8c367b1941f1ee22034b47dce76a4c580b38b08f033a24aaf6e7cd7054ac9678cdc8ce1b5cd4
4fa4510c6549f60052a655cb38a3daff8932ab89e60f742624d4b1049ea941e19b7065ed173b3b4c
00d98b2aae907ec789f5b2d6c8909be1dddb476ed9e6285770998ee1504be1d3ce15602b7a2335c6
b3c41dbb35f4046c9a9da94290642bfb67ee4d388f3305680c05e8f7cbc061573367ba44ec06fc3b
363d2cc032f1ef1855648caf9913c5e32fdad3f87fd2963472d5bbbd613e2b27a668a9e8ab19881b
01007e9fd1667d417a6e7d0e937af556d043845db6fde00df2794103b418790540fbdd04cf61a03a
520f23eb58e0a88c03b8c3ffc1ad3864aa5d6f4e52220a65314b448beadfaa08ce99937538f436f9
b3fc1aba0a3a60da6ba7a3df9701a244d1aa7bccc47b16a74bfe087787f1276f7f7959525f0a74bb
88f2c4c554f6d550eeceabe2b66c36a7b92a0adbd8ec2d010f4a46f64ed7ee17d18692fd126711b3
26f28dc5330064956015b272b64da0f7c9f6fd1c260547b30b4cd820eecda2c329cc285a6f6ba066
8373bbf58658a8b4bbd04286a0ab70e1160af68f8733335e27fcad0a1e3226191f11013dcf1995fd
654021ff971808e07518fcdd28c266ffe18d8667314ba1dc51666d00d44a09d5f7428a4ea17b2c73
0e4f0c7ed24624a27dd3dae768dcf8c15cecc2e7d63e8b2a7ff7119f6b5c5348e80aae1f452a5a9b
4d1de948cd4c58dc0c1f1a56ebbc82687984e3581b952c3049ad1594ec08c9cc51604f12ae67ee26
d7cff668a0d300d5fe0a6f8f66bdb2e62ae0bb080783a34e12f607ea6e2041e1dfde1d5c9a7ffe39
950dde90ecfcbcc5a25f96ddc9778e7c0368b9afdb165be1e3da6160d4b9a99333e2e8f8802b6c7c
4ef00dbd270d0aa9a09c56193f37e0661de031cde2d122e941ad0e35542291135046bab5a52eedaf
5f377264fac84f264220c90768ba4c4b041e5f504cf5ac8632729c5f5756bff9629ed2fbfe12c5e0
4546f6f75d36db036ca6814870582f4a155125c90c86b0b26b46a66ecbc81a7f86416182b087126b
24d1c6af2832a93754e66627a97a1d63fe1a5fd0b08c8c06d2da2f467cbc63b36317a3584e0cec74
e711af3711c2159cd23b6133c276b2b653742c60ac25792d977a2b0086816057ee1e0557ef26bf05
8dbbc83f699903ec7bdf33553b687670c5b27e683ee2bfbbf966ee486f1453d953ceab53cb109f74
5f2cf41b03db21f3f32ab0bcabfe13d43313f06c7d04013dbfb136d7d664b8677fbac1345cda60ad
594395e6257bab05193290550cda739442c313ea2ff0c940897896a6090ec36ee781c8a434ba1f9c
bef20621e2f25aecde99c8de534e5ed5cdc9c21e65acabf859b7016c888aa3855f935d506cdec452
004de9ecdaaf5cecdb71c833998d090bbee6ed662cdbbb805fd75411d49b9bf34248703c66485064
65d6e323077ac29b7f21a991117ef29803df24f778f22de4e4403a998ec72aa57d80b32e002dd5ff
562e95780771428e02eb5756e3c7b098ba4bbc8643c7e49f3ffbf281b5744d0b8a0b6b40bb35c78f
69e75e54a15ff26867a4e14680592785e4cc598cff98bc902f1f9bd19cb297e4401548203a76f123
c0017e4ed09a9cfa1fe9098c45ccb1ea50ac655a80394140ab2caa3ba7bca33b76f19378560690bb
40736517cd66ba3dc049b7c445ea80922b2c93a0cbe91a925473b2d8cedd08382d3aad4c256bdaef
7a7a4b5223531e3cd9b435058cf2ef0543cc2ac4a2c2a8d0be46f60a9cb9587e8d8ccda8f2a471b1
d60340c3d246dcf13556d4acc3a594a099226e7198fce37ecf66785daeb00658fe6fa9c90003f8be
88444dca06dfbb3324eda5fee27705ff8ab0cde159c429e639117da48249c8f2b55dd4781b018c98
2f42a27c6296a0a10dc824dbeeedafd7255a84fb91fb095a21e439476c1b6a80909d4077f98b453b
9b88ab7546d0139ae6ae8551d8cd48bce8ff7c0e74b3a3b0936a5aa91981d1cd584f6db863041005
bf904561514ca3b7025179e4d95d720a00ee90cece622c581f3fc4cb3a1fa157da346c9498c22b85
b6a4f0299e0670d82f53a097ac2093abd750df1c3cd40fc7ce2a79296923eccee945f147f9bd999e
89a349fd06d5cb6df3b893fceb54553ce98f55fe8a30496a1bc7283f182fbd676ba7df36871e6e50
a1ba1659cee0fb86ae1cc6396eea8d390ba75170838fabdd8da7adaa6034c7d8cc590f227c6482d9
477a3386a2f71ef65062e08ae15c4e0ddeb68122a5a0d2dba64b3a3c089692d1209d7c5cca8d0e3b
d6f0917da4d5faec488b61343bebda43ebe625a1d910c05cb28af39a8979f19b5837f5161395b544
ed1d46fe280ffd6cc9491b0eb0c78c8a6d931fa842f87d93a76be916d26a0953c6493b2aff518386
626a6d1e82f0996ac048c9be47d47410a919e2672cc5c7789ae72ef5282a991cd60fc32b8d7ed08b
591a772de713d59c2034c1ba106d29fb4099f5d93935a4a4a85ec500ad5554e2ab20d9407aa1c610
f9188fcac4d263091baebf0b9e202004b1a7546988eb3e9b273f134639949fd135d50040acddfd7a
921cd60f94048d7847c9414735661bad7111f5ba4ac4068f7dafc277ebc12ced2340c1605e3feaa6
feab8f78064fb1c4c0436639d17f545071611a9d7da0135bf837efe6a05dcaa773bd834622a48944
58b2ad5d251b5e2265b81571620fbb30e812dcf99d264ffc1531224c953177859f9595
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 SSC_Copy_State <Virtual>  0
 HBW_Pick TASK  0 -1
 HBW_Copy_State <Virtual>  0
 PID_10 PID  0
 PID_11 PID  0
 hunt_exp_light PROGRAM  0 -1
 HBW_Home <Virtual>  0
 HBW_Pick_Sto <Virtual>  0
 test TASK  0 -1
 HBW_Pickup_ST PROGRAM  0 -1
 HWB_Extend_Arm <Virtual>  0
 HBW_Retract_Arm <Virtual>  0
 HWB_PickUp TASK  0 -1
 HBW_HTO1POS <Virtual>  0
 HBW_Left_1Block <Virtual>  0
 HBW_HomeTo2_Col <Virtual>  0
 HWB_HomeTo3_Col <Virtual>  0
 HWB_HomeTo2_Row <Virtual>  0
 HWB_HomeTo3_Row <Virtual>  0
 HWB_HomeTo1_Col <Virtual>  0
 HBW_move_left_1 <Virtual>  0
 HWB_Home_to_11 <Virtual>  0
 HWB_11_DropOff <Virtual>  0
 HBW_Pickup <Virtual>  0
 HBW_PickUp_R1 <Virtual>  0
 HBW_Send_VGR <Virtual>  0
 HBW_PickUp_VGR <Virtual>  0
 HBW_Return_VGR <Virtual>  0
 HBW_MotorsOff <Virtual>  0
 HBW_ConvTo11 <Virtual>  0
 HBW_Return_Top <Virtual>  0
 HBW_MV_11_12 <Virtual>  0
 HBW_Conv_12 <Virtual>  0
 HBW_Conv_12_Lat <Virtual>  0
 HBW_RETRACT_13 <Virtual>  0
 HBW_Retract_23 <Virtual>  0
 HBW_Conv13_Lat <Virtual>  0
 HBW_Conv_2Row <Virtual>  0
 HBW_PickUp_R2 <Virtual>  0
 HBW_Conv11_Lat <Virtual>  0
 HBW_Retract_12 <Virtual>  0
 HBW_Shift_C1C2 <Virtual>  0
#END

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"VGR Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC410 C410 1 0x0 MC409 C409 1 0x0 MC412 Y28 1 0x0 MC412 MC450 1 0x0 MC411 C411 1 0x0 MC408 C408 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC413 Y29 1 0x0 MC413 MC451 1 0x0 X27 MI200 1"

// Rung VGR_Copy_State#2
// Offset 27
NOP

// Rung VGR_Copy_State#3
// Offset 28
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC800 Y41 1 0x0 Y41 MI801 1 0x0 MC802 Y43 1 0x0 Y43 MI803 1 0x0 MC804 C804 1 0x0 MC805 C805 1 0x0 MC806 Y44 1 0x0 MC807 Y20 1 0x0 MC808 C811 1 0x0 MC809 C809 1 0x0 MC810 C810 1 0x0 MC812 C812 1 0x0 MC813 C813 1 0x0 MC814 C814 1 0x0 MC816 Y45 1 0x0 MC817 Y46 1 0x0 MC818 Y21 1"

// Rung MPO_Copy_State#2
// Offset 39
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC800 C1600 1 0x0 MC801 C1601 1 0x0 MC802 C1602 1 0x0 MC803 C1603 1 0x0 MC804 C1604 1 0x0 Y31 MI800 1 0x0 MC850 C1605 1"

// Rung SLD_Copy_State#2
// Offset 19
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"SSC Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC606 C1200 1 0x0 MC607 C1201 1 0x0 MC608 C1202 1 0x0 MC609 C1203 1 0x0 MC615 C1215 1 0x0 MC616 C1216 1 0x0 MC617 C1217 1 0x0 MC618 C1218 1 0x0 MC619 C1219 1 0x0 MC620 C1220 1"

// Rung SSC_Copy_State#2
// Offset 25
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block HBW_Home
$LGCMOD HBW_Home

// Rung HBW_Home#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Home#2
// Offset 8
STRN C215
ANDN X0
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 60 60
OUT Y51

// Rung HBW_Home#3
// Offset 26
STRN C215
ANDN X3
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5

// Rung HBW_Home#4
// Offset 43
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y76

// Rung HBW_Home#5
// Offset 64
NOP

// Rung HBW_Home#6
// Offset 65
RET

// End of Code Block HBW_Home
$LGCEND HBW_Home

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 Y40 1 0x0 Y80 MHR102 1 0x0 MC101 C205 1 0x0 MC102 C206 1 0x0 MC103 C207 1 0x0 MC104 C208 1 0x0 MC105 C209 1 0x0 MC106 C210 1 0x0 MC107 C211 1 0x0 MC108 C212 1 0x0 MC109 C213 1 0x0 MC110 C214 1 0x0 MC111 C215 1 0x0 MC112 C216 1 0x0 X2 MI101 1 0x0 X10 MI102 1 0x0 X11 MI103 1 0x0 X3 MI104 1 0x0 X0 MI105 1 0x0 X6 MI106 1 0x0 X7 MI107 1 0x0 X8 MI108 1 0x0 X9 MI109 1 0x0 $HBW_Encoder_X.Acc MHR1 1 0x0 $HBW_Encoder_Z.Acc MHR2 1"

// Rung HBW_Copy_State#2
// Offset 55
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block HBW_HomeTo2_Col
$LGCMOD HBW_HomeTo2_Col

// Rung HBW_HomeTo2_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_HomeTo2_Col#2
// Offset 17
STRGE -2775 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_HomeTo2_Col#3
// Offset 22
NOP

// Rung HBW_HomeTo2_Col#4
// Offset 23
NOP

// Rung HBW_HomeTo2_Col#5
// Offset 24
NOP

// Rung HBW_HomeTo2_Col#6
// Offset 25
RET

// End of Code Block HBW_HomeTo2_Col
$LGCEND HBW_HomeTo2_Col

// Beginning of Code Block HWB_HomeTo1_Col
$LGCMOD HWB_HomeTo1_Col

// Rung HWB_HomeTo1_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HWB_HomeTo1_Col#2
// Offset 17
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_HomeTo1_Col#3
// Offset 22
NOP

// Rung HWB_HomeTo1_Col#4
// Offset 23
NOP

// Rung HWB_HomeTo1_Col#5
// Offset 24
RET

// End of Code Block HWB_HomeTo1_Col
$LGCEND HWB_HomeTo1_Col

// Beginning of Code Block HWB_Home_to_11
$LGCMOD HWB_Home_to_11

// Rung HWB_Home_to_11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HWB_Home_to_11#2
// Offset 22
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_Home_to_11#3
// Offset 27
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HWB_Home_to_11#4
// Offset 49
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_Home_to_11#5
// Offset 54
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HWB_Home_to_11#6
// Offset 73
NOP

// Rung HWB_Home_to_11#7
// Offset 74
NOP

// Rung HWB_Home_to_11#8
// Offset 75
RET

// End of Code Block HWB_Home_to_11
$LGCEND HWB_Home_to_11

// Beginning of Code Block HWB_11_DropOff
$LGCMOD HWB_11_DropOff

// Rung HWB_11_DropOff#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HWB_11_DropOff#2
// Offset 8
STRGE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_11_DropOff#3
// Offset 13
STRN C215
ANDN C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51

// Rung HWB_11_DropOff#4
// Offset 31
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y4
AND ST2
OUT Y5

// Rung HWB_11_DropOff#5
// Offset 51
STRGE 2850 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_11_DropOff#6
// Offset 56
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 60 60
OUT Y7

// Rung HWB_11_DropOff#7
// Offset 73
RET

// End of Code Block HWB_11_DropOff
$LGCEND HWB_11_DropOff

// Beginning of Code Block HBW_PickUp_R1
$LGCMOD HBW_PickUp_R1

// Rung HBW_PickUp_R1#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R1#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R1#3
// Offset 41
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R1#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R1#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_PickUp_R1#6
// Offset 69
NOP

// Rung HBW_PickUp_R1#7
// Offset 70
NOP

// Rung HBW_PickUp_R1#8
// Offset 71
NOP

// Rung HBW_PickUp_R1#9
// Offset 72
NOP

// Rung HBW_PickUp_R1#10
// Offset 73
RET

// End of Code Block HBW_PickUp_R1
$LGCEND HBW_PickUp_R1

// Beginning of Code Block HBW_Send_VGR
$LGCMOD HBW_Send_VGR

// Rung HBW_Send_VGR#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Send_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_Send_VGR#3
// Offset 37
STRN C215
AND X2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y48
AND ST2
OUT Y49

// Rung HBW_Send_VGR#4
// Offset 56
NOP

// Rung HBW_Send_VGR#5
// Offset 57
NOP

// Rung HBW_Send_VGR#6
// Offset 58
RET

// End of Code Block HBW_Send_VGR
$LGCEND HBW_Send_VGR

// Beginning of Code Block HBW_PickUp_VGR
$LGCMOD HBW_PickUp_VGR

// Rung HBW_PickUp_VGR#1
// Offset 0
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_PickUp_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_PickUp_VGR#3
// Offset 37
STRN C215
AND X11
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_PickUp_VGR#4
// Offset 56
NOP

// Rung HBW_PickUp_VGR#5
// Offset 57
NOP

// Rung HBW_PickUp_VGR#6
// Offset 58
RET

// End of Code Block HBW_PickUp_VGR
$LGCEND HBW_PickUp_VGR

// Beginning of Code Block HBW_Return_VGR
$LGCMOD HBW_Return_VGR

// Rung HBW_Return_VGR#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C253
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y6

// Rung HBW_Return_VGR#2
// Offset 22
STRN C215
AND X1
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_Return_VGR#3
// Offset 41
STRN C215
AND C251
DUPBOOL
ANDN X1
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_Return_VGR#4
// Offset 63
STRLE 2575 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_VGR#5
// Offset 68
NOP

// Rung HBW_Return_VGR#6
// Offset 69
NOP

// Rung HBW_Return_VGR#7
// Offset 70
RET

// End of Code Block HBW_Return_VGR
$LGCEND HBW_Return_VGR

// Beginning of Code Block HBW_MotorsOff
$LGCMOD HBW_MotorsOff

// Rung HBW_MotorsOff#1
// Offset 0
STRN C215
ANDN ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_MotorsOff#2
// Offset 18
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_MotorsOff#3
// Offset 36
STRN C215
AND ST2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
OUT Y48

// Rung HBW_MotorsOff#4
// Offset 54
NOP

// Rung HBW_MotorsOff#5
// Offset 55
NOP

// Rung HBW_MotorsOff#6
// Offset 56
NOP

// Rung HBW_MotorsOff#7
// Offset 57
RET

// End of Code Block HBW_MotorsOff
$LGCEND HBW_MotorsOff

// Beginning of Code Block HBW_ConvTo11
$LGCMOD HBW_ConvTo11

// Rung HBW_ConvTo11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_ConvTo11#2
// Offset 22
NOP

// Rung HBW_ConvTo11#3
// Offset 23
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_ConvTo11#4
// Offset 28
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_ConvTo11#5
// Offset 50
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_ConvTo11#6
// Offset 55
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_ConvTo11#7
// Offset 74
NOP

// Rung HBW_ConvTo11#8
// Offset 75
NOP

// Rung HBW_ConvTo11#9
// Offset 76
RET

// End of Code Block HBW_ConvTo11
$LGCEND HBW_ConvTo11

// Beginning of Code Block HBW_Return_Top
$LGCMOD HBW_Return_Top

// Rung HBW_Return_Top#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Return_Top#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HBW_Return_Top#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_Top#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_Return_Top#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return_Top#6
// Offset 69
NOP

// Rung HBW_Return_Top#7
// Offset 70
NOP

// Rung HBW_Return_Top#8
// Offset 71
RET

// End of Code Block HBW_Return_Top
$LGCEND HBW_Return_Top

// Beginning of Code Block HBW_MV_11_12
$LGCMOD HBW_MV_11_12

// Rung HBW_MV_11_12#1
// Offset 0
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_MV_11_12#2
// Offset 21
NOP

// Rung HBW_MV_11_12#3
// Offset 22
NOP

// Rung HBW_MV_11_12#4
// Offset 23
NOP

// Rung HBW_MV_11_12#5
// Offset 24
RET

// End of Code Block HBW_MV_11_12
$LGCEND HBW_MV_11_12

// Beginning of Code Block HBW_Conv_12
$LGCMOD HBW_Conv_12

// Rung HBW_Conv_12#1
// Offset 0
NOP

// Rung HBW_Conv_12#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_12#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Conv_12#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 80
OUT C251

// Rung HBW_Conv_12#5
// Offset 45
NOP

// Rung HBW_Conv_12#6
// Offset 46
RET

// End of Code Block HBW_Conv_12
$LGCEND HBW_Conv_12

// Beginning of Code Block HBW_Conv_12_Lat
$LGCMOD HBW_Conv_12_Lat

// Rung HBW_Conv_12_Lat#1
// Offset 0
NOP

// Rung HBW_Conv_12_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv_12_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv_12_Lat#4
// Offset 42
STRGE 5325 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv_12_Lat#5
// Offset 47
NOP

// Rung HBW_Conv_12_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv_12_Lat
$LGCEND HBW_Conv_12_Lat

// Beginning of Code Block HBW_RETRACT_13
$LGCMOD HBW_RETRACT_13

// Rung HBW_RETRACT_13#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_RETRACT_13#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_RETRACT_13#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_RETRACT_13#4
// Offset 46
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_RETRACT_13#5
// Offset 68
STRGE 7685 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_RETRACT_13#6
// Offset 73
RET

// End of Code Block HBW_RETRACT_13
$LGCEND HBW_RETRACT_13

// Beginning of Code Block HBW_Retract_23
$LGCMOD HBW_Retract_23

// Rung HBW_Retract_23#1
// Offset 0
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y8

// Rung HBW_Retract_23#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HBW_Retract_23#3
// Offset 41
STRGE 1700 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_23#4
// Offset 46
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_Retract_23#5
// Offset 68
STRGE 7685 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_23#6
// Offset 73
RET

// End of Code Block HBW_Retract_23
$LGCEND HBW_Retract_23

// Beginning of Code Block HBW_Conv13_Lat
$LGCMOD HBW_Conv13_Lat

// Rung HBW_Conv13_Lat#1
// Offset 0
NOP

// Rung HBW_Conv13_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv13_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv13_Lat#4
// Offset 42
STRGE 7685 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv13_Lat#5
// Offset 47
NOP

// Rung HBW_Conv13_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv13_Lat
$LGCEND HBW_Conv13_Lat

// Beginning of Code Block HBW_Conv_2Row
$LGCMOD HBW_Conv_2Row

// Rung HBW_Conv_2Row#1
// Offset 0
NOP

// Rung HBW_Conv_2Row#2
// Offset 1
NOP

// Rung HBW_Conv_2Row#3
// Offset 2
NOP

// Rung HBW_Conv_2Row#4
// Offset 3
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_2Row#5
// Offset 22
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Conv_2Row#6
// Offset 42
STRGE $HBW_Encoder_Z.Acc 1380
OUT C251

// Rung HBW_Conv_2Row#7
// Offset 47
NOP

// Rung HBW_Conv_2Row#8
// Offset 48
RET

// End of Code Block HBW_Conv_2Row
$LGCEND HBW_Conv_2Row

// Beginning of Code Block HBW_PickUp_R2
$LGCMOD HBW_PickUp_R2

// Rung HBW_PickUp_R2#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R2#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R2#3
// Offset 41
STRLE 1500 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R2#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R2#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_PickUp_R2#6
// Offset 69
NOP

// Rung HBW_PickUp_R2#7
// Offset 70
NOP

// Rung HBW_PickUp_R2#8
// Offset 71
NOP

// Rung HBW_PickUp_R2#9
// Offset 72
NOP

// Rung HBW_PickUp_R2#10
// Offset 73
RET

// End of Code Block HBW_PickUp_R2
$LGCEND HBW_PickUp_R2

// Beginning of Code Block HBW_Conv11_Lat
$LGCMOD HBW_Conv11_Lat

// Rung HBW_Conv11_Lat#1
// Offset 0
NOP

// Rung HBW_Conv11_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv11_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv11_Lat#4
// Offset 42
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv11_Lat#5
// Offset 47
NOP

// Rung HBW_Conv11_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv11_Lat
$LGCEND HBW_Conv11_Lat

// Beginning of Code Block HBW_Retract_12
$LGCMOD HBW_Retract_12

// Rung HBW_Retract_12#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_12#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_12#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_12#4
// Offset 46
RET

// End of Code Block HBW_Retract_12
$LGCEND HBW_Retract_12

// Beginning of Code Block HBW_Shift_C1C2
$LGCMOD HBW_Shift_C1C2

// Rung HBW_Shift_C1C2#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_Shift_C1C2#2
// Offset 17
STRGE 5320 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Shift_C1C2#3
// Offset 22
NOP

// Rung HBW_Shift_C1C2#4
// Offset 23
NOP

// Rung HBW_Shift_C1C2#5
// Offset 24
RET

// Rung HBW_Shift_C1C2#6
// Offset 25
NOP

// Rung HBW_Shift_C1C2#7
// Offset 26
NOP

// End of Code Block HBW_Shift_C1C2
$LGCEND HBW_Shift_C1C2

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#2
// Offset 3
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#3
// Offset 6
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#4
// Offset 9
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#5
// Offset 12
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// Rung $Main#6
// Offset 15
#BEGIN FMT_COMMENT 
"Hunter Demo Light<br>"
#END

STR ST1
RUN hunt_exp_light

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
SG HBW_Program.S0

// Rung HBW_Program#2
// Offset 2
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#3
// Offset 10
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#4
// Offset 12
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#5
// Offset 14
STR ST1
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#6
// Offset 22
NOP

// Rung HBW_Program#7
// Offset 23
STR C213
JMP HBW_Program.S1

// Rung HBW_Program#8
// Offset 25
SG HBW_Program.S1

// Rung HBW_Program#9
// Offset 27
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#10
// Offset 35
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#11
// Offset 37
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#12
// Offset 39
STR ST1
MOVE 0 N1

// Rung HBW_Program#13
// Offset 42
STR ST1
DUPBOOL
STR C205
ANDN C206
STR C206
ANDN C205
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 500 60
POPBOOL
DUPBOOL
AND C205
OUT Y48
POPBOOL
AND C206
OUT Y49

// Rung HBW_Program#14
// Offset 71
STR ST1
DUPBOOL
STR C207
ANDN C208
STRN C207
AND C208
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
POPBOOL
DUPBOOL
AND C207
OUT Y50
POPBOOL
AND C208
OUT Y51

// Rung HBW_Program#15
// Offset 100
STR ST1
DUPBOOL
STR C209
ANDN C210
STRN C209
AND C210
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
POPBOOL
DUPBOOL
AND C209
OUT Y4
POPBOOL
AND C210
OUT Y5

// Rung HBW_Program#16
// Offset 129
STR ST1
DUPBOOL
STR C211
ANDN C212
STRN C211
AND C212
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
POPBOOL
DUPBOOL
AND C211
OUT Y6
POPBOOL
AND C212
OUT Y7

// Rung HBW_Program#17
// Offset 158
STR C213
JMP HBW_Program.S2

// Rung HBW_Program#18
// Offset 160
SG HBW_Program.S2

// Rung HBW_Program#19
// Offset 162
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#20
// Offset 170
STR X0
OUT $HBW_Encoder_X.ResetLevel

// Rung HBW_Program#21
// Offset 172
STR X3
OUT $HBW_Encoder_Z.ResetLevel

// Rung HBW_Program#22
// Offset 174
STR ST1
CALL HBW_Home 0x1 DST511 "3" "3"

// Rung HBW_Program#23
// Offset 182
STR X0
AND X11
AND X3
JMP HBW_Program.S3

// Rung HBW_Program#24
// Offset 186
STR C212
JMP HBW_Program.S3

// Rung HBW_Program#25
// Offset 188
NOP

// Rung HBW_Program#26
// Offset 189
SG HBW_Program.S3

// Rung HBW_Program#27
// Offset 191
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#28
// Offset 199
STR ST1
CALL HWB_Home_to_11 0x1 DST511 "3" "3"

// Rung HBW_Program#29
// Offset 207
STRN C250
ANDN C251
JMP HBW_Program.S4

// Rung HBW_Program#30
// Offset 210
SG HBW_Program.S4

// Rung HBW_Program#31
// Offset 212
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#32
// Offset 220
STR ST1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#33
// Offset 228
STR X10
ANDN C251
JMP HBW_Program.S5

// Rung HBW_Program#34
// Offset 231
SG HBW_Program.S5

// Rung HBW_Program#35
// Offset 233
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#36
// Offset 241
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#37
// Offset 249
STRN C251
AND C250
JMP HBW_Program.S6

// Rung HBW_Program#38
// Offset 252
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#39
// Offset 254
SG HBW_Program.S6

// Rung HBW_Program#40
// Offset 256
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#41
// Offset 264
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#42
// Offset 272
STRN X2
INC N1

// Rung HBW_Program#43
// Offset 274
STRN X2
JMP HBW_Program.S7

// Rung HBW_Program#44
// Offset 276
SG HBW_Program.S7

// Rung HBW_Program#45
// Offset 278
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#46
// Offset 286
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#47
// Offset 294
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#48
// Offset 303
SG HBW_Program.S8

// Rung HBW_Program#49
// Offset 305
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#50
// Offset 313
STR ST1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#51
// Offset 321
STRN C250
JMP HBW_Program.S9

// Rung HBW_Program#52
// Offset 323
SG HBW_Program.S9

// Rung HBW_Program#53
// Offset 325
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#54
// Offset 333
STR ST1
CALL HBW_Return_Top 0x1 DST511 "3" "3"

// Rung HBW_Program#55
// Offset 341
STR X10
ANDN C251
JMP HBW_Program.S10
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#56
// Offset 351
SG HBW_Program.S10

// Rung HBW_Program#57
// Offset 353
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#58
// Offset 361
STR ST1
CALL HBW_MV_11_12 0x1 DST511 "3" "3"

// Rung HBW_Program#59
// Offset 369
STRN C250
JMP HBW_Program.S11

// Rung HBW_Program#60
// Offset 371
SG HBW_Program.S11

// Rung HBW_Program#61
// Offset 373
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#62
// Offset 381
STRE N1 1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#63
// Offset 392
STRE N1 2
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#64
// Offset 403
STR C215
JMP HBW_Program.S1

// Rung HBW_Program#65
// Offset 405
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#66
// Offset 408
SG HBW_Program.S12

// Rung HBW_Program#67
// Offset 410
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#68
// Offset 418
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#69
// Offset 426
STRN C251
AND C250
JMP HBW_Program.S13

// Rung HBW_Program#70
// Offset 429
SG HBW_Program.S13

// Rung HBW_Program#71
// Offset 431
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#72
// Offset 439
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#73
// Offset 447
STRN X2
INC N1

// Rung HBW_Program#74
// Offset 449
STRN X2
JMP HBW_Program.S14

// Rung HBW_Program#75
// Offset 451
SG HBW_Program.S14

// Rung HBW_Program#76
// Offset 453
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#77
// Offset 461
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#78
// Offset 469
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#79
// Offset 478
SG HBW_Program.S15

// Rung HBW_Program#80
// Offset 480
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#81
// Offset 488
STRE N1 1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#82
// Offset 499
STRE N1 2
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#83
// Offset 510
STRE N1 3
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#84
// Offset 521
STRE N1 4
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#85
// Offset 532
STRE N1 5
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#86
// Offset 543
STRE N1 6
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#87
// Offset 554
STRE N1 7
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#88
// Offset 565
STRE N1 8
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#89
// Offset 576
STRE N1 9
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#90
// Offset 587
NOP

// Rung HBW_Program#91
// Offset 588
STRN C251
JMP HBW_Program.S16
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#92
// Offset 597
SG HBW_Program.S16

// Rung HBW_Program#93
// Offset 599
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#94
// Offset 607
STRE N1 1
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#95
// Offset 618
STRE N1 2
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#96
// Offset 629
STRE N1 3
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#97
// Offset 640
NOP

// Rung HBW_Program#98
// Offset 641
STRN C250
AND X10
JMP HBW_Program.S17

// Rung HBW_Program#99
// Offset 644
SG HBW_Program.S17

// Rung HBW_Program#100
// Offset 646
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#101
// Offset 654
STRE N1 1
CALL HBW_Retract_12 0x1 DST511 "3" "3"

// Rung HBW_Program#102
// Offset 665
STRE N1 2
CALL HBW_RETRACT_13 0x1 DST511 "3" "3"

// Rung HBW_Program#103
// Offset 676
STRE N1 3
CALL HBW_Retract_23 0x1 DST511 "3" "3"

// Rung HBW_Program#104
// Offset 687
NOP

// Rung HBW_Program#105
// Offset 688
STR X11
ANDN C251
ANDN C250
JMP HBW_Program.S11

// Rung HBW_Program#106
// Offset 692
STR X11
ANDE N1 1
JMP HBW_Program.S50

// Rung HBW_Program#107
// Offset 698
SG HBW_Program.S50

// Rung HBW_Program#108
// Offset 700
STR ST1
CALL HBW_Shift_C1C2 0x1 DST511 "3" "3"

// Rung HBW_Program#109
// Offset 708
STRN Y50
ANDN C250
JMP HBW_Program.S11

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#2
// Offset 8
STR ST1
DUPBOOL
STR C410
ANDN C409
STRN C410
AND C409
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
POPBOOL
DUPBOOL
AND C410
OUT Y27
POPBOOL
AND C409
OUT Y26

// Rung VGR_Program#3
// Offset 37
STR ST1
DUPBOOL
STR C408
ANDN C411
STRN C408
AND C411
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
POPBOOL
DUPBOOL
AND C408
OUT Y24
POPBOOL
AND C411
OUT Y25

// Rung VGR_Program#4
// Offset 66
STR ST1
DUPBOOL
STR C406
ANDN C407
STRN C406
AND C407
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
POPBOOL
DUPBOOL
AND C406
OUT Y23
POPBOOL
AND C407
OUT Y22

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STR C813
OUT Y18

// Rung MPO_Program#4
// Offset 12
STR C810
OUT Y17

// Rung MPO_Program#5
// Offset 14
STR C811
OUT Y52

// Rung MPO_Program#6
// Offset 16
STR ST1
DUPBOOL
STR C804
ANDN C805
STR C805
ANDN C804
ORSTR
ANDSTR
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 100
POPBOOL
DUPBOOL
AND C804
OUT Y53
POPBOOL
AND C805
OUT Y15

// Rung MPO_Program#7
// Offset 45
STR C814
OUT Y19

// Rung MPO_Program#8
// Offset 47
STR C809
JMP MPO_Program.S2

// Rung MPO_Program#9
// Offset 49
SG MPO_Program.S1

// Rung MPO_Program#10
// Offset 51
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#11
// Offset 59
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#12
// Offset 61
STRN X24
SET Y17

// Rung MPO_Program#13
// Offset 63
STR Y17
OUT Y20
ANDN X17
ONDTMR T0 1000 Y44

// Rung MPO_Program#14
// Offset 69
SG MPO_Program.S2

// Rung MPO_Program#15
// Offset 71
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#16
// Offset 79
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#17
// Offset 81
STRN X19
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y53

// Rung MPO_Program#18
// Offset 97
STR X19
JMP MPO_Program.S3

// Rung MPO_Program#19
// Offset 99
SG MPO_Program.S3

// Rung MPO_Program#20
// Offset 101
STR ST1
SET Y17

// Rung MPO_Program#21
// Offset 103
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#22
// Offset 111
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#23
// Offset 113
STR X19
SET Y19

// Rung MPO_Program#24
// Offset 115
STR X19
ONDTMR T100 2000 Y18

// Rung MPO_Program#25
// Offset 119
STR T100.DN
JMP MPO_Program.S4

// Rung MPO_Program#26
// Offset 121
SG MPO_Program.S4

// Rung MPO_Program#27
// Offset 123
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#28
// Offset 131
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#29
// Offset 133
STR X19
RST Y19

// Rung MPO_Program#30
// Offset 135
STRN X16
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y15

// Rung MPO_Program#31
// Offset 151
STR X16
JMP MPO_Program.S5

// Rung MPO_Program#32
// Offset 153
SG MPO_Program.S5

// Rung MPO_Program#33
// Offset 155
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#34
// Offset 163
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#35
// Offset 165
STR X16
SET Y19

// Rung MPO_Program#36
// Offset 167
STR Y19
ONDTMR T101 2000 C815

// Rung MPO_Program#37
// Offset 171
STR C815
RST Y18

// Rung MPO_Program#38
// Offset 173
STRN Y18
JMP MPO_Program.S6

// Rung MPO_Program#39
// Offset 175
SG MPO_Program.S6

// Rung MPO_Program#40
// Offset 177
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#41
// Offset 185
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#42
// Offset 187
STR X16
RST Y19

// Rung MPO_Program#43
// Offset 189
STRN Y19
ONDTMR T102 1000 C818

// Rung MPO_Program#44
// Offset 193
STR C818
JMP MPO_Program.S7

// Rung MPO_Program#45
// Offset 195
SG MPO_Program.S7

// Rung MPO_Program#46
// Offset 197
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#47
// Offset 205
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#48
// Offset 207
STRN X15
OUT Y45

// Rung MPO_Program#49
// Offset 209
STR X15
TMRDOWN T102 1000
OUT Y43

// Rung MPO_Program#50
// Offset 213
STR T102.Done
JMP MPO_Program.S8

// Rung MPO_Program#51
// Offset 215
SG MPO_Program.S8

// Rung MPO_Program#52
// Offset 217
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#53
// Offset 225
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#54
// Offset 227
STRN X13
OUT Y45

// Rung MPO_Program#55
// Offset 229
STR X13
TMRDOWN T103 1000
OUT Y21

// Rung MPO_Program#56
// Offset 233
STR T103.Done
JMP MPO_Program.S9

// Rung MPO_Program#57
// Offset 235
SG MPO_Program.S9

// Rung MPO_Program#58
// Offset 237
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#59
// Offset 245
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#60
// Offset 247
STR ST1
OUT Y47

// Rung MPO_Program#61
// Offset 249
STRN X12
ONDTMR T104 1000 Y46

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
SG SLD_Program.S0

// Rung SLD_Program#2
// Offset 2
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#3
// Offset 10
STR C1600
OUT Y30

// Rung SLD_Program#4
// Offset 12
STR C1601
OUT Y31

// Rung SLD_Program#5
// Offset 14
STR C1602
OUT Y32

// Rung SLD_Program#6
// Offset 16
STR C1603
OUT Y33

// Rung SLD_Program#7
// Offset 18
STR C1604
OUT Y34

// Rung SLD_Program#8
// Offset 20
STR C1605
JMP SLD_Program.S1

// Rung SLD_Program#9
// Offset 22
SG SLD_Program.S1

// Rung SLD_Program#10
// Offset 24
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#11
// Offset 32
STRN C1605
JMP SLD_Program.S0

// Rung SLD_Program#12
// Offset 34
STRN X35
OFFDTMR T200 1750 C1651

// Rung SLD_Program#13
// Offset 38
STR C1651
OUT Y30

// Rung SLD_Program#14
// Offset 40
STRGE T200.Acc 1750
FLASHER 500 500 Y899

// Rung SLD_Program#15
// Offset 48
SG SLD_Program.S2

// Rung SLD_Program#16
// Offset 50
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#17
// Offset 58
STRN C1605
JMP SLD_Program.S0

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STR C1200
OUT Y39

// Rung SSC_Program#4
// Offset 12
STR C1201
OUT Y40

// Rung SSC_Program#5
// Offset 14
STR C1202
OUT Y41

// Rung SSC_Program#6
// Offset 16
STR C1215
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y35

// Rung SSC_Program#7
// Offset 32
STR C1216
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y36

// Rung SSC_Program#8
// Offset 48
STR C1217
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#9
// Offset 64
STR C1218
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#10
// Offset 80
STR ST2
ANDPD X47
ANDPDPF
STR ST2
AND CT150.Done
CNT CT150 100

// Rung SSC_Program#11
// Offset 88
STR C1203
JMP SSC_Program.S1

// Rung SSC_Program#12
// Offset 90
SG SSC_Program.S1

// Rung SSC_Program#13
// Offset 92
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#14
// Offset 100
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#15
// Offset 102
STRN X41
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#16
// Offset 118
STRN X40
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y36

// Rung SSC_Program#17
// Offset 134
STR X40
AND X41
JMP SSC_Program.S2

// Rung SSC_Program#18
// Offset 137
SG SSC_Program.S2

// Rung SSC_Program#19
// Offset 139
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#20
// Offset 147
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#21
// Offset 149
STR X44
ANDPDPF
STR ST2
CNT CT150 300

// Rung SSC_Program#22
// Offset 154
STRN CT150.Done
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y35

// Rung SSC_Program#23
// Offset 170
STR X46
STR ST2
CNT CT151 1300

// Rung SSC_Program#24
// Offset 174
STRN CT151.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#25
// Offset 190
STR CT150.Done
AND CT151.Done
JMP SSC_Program.S3

// Rung SSC_Program#26
// Offset 193
SG SSC_Program.S3

// Rung SSC_Program#27
// Offset 195
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#28
// Offset 203
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#29
// Offset 205
STR X46
STR ST2
CNT CT152 300

// Rung SSC_Program#30
// Offset 209
STRN CT152.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// End of Code Block SSC_Program
$PGMEND SSC_Program

// Beginning of Code Block hunt_exp_light
$PRGRM hunt_exp_light

// Rung hunt_exp_light#1
// Offset 0
STR ST2
COPY 0x1 "4 0x0 MC402 Y39 1"

// End of Code Block hunt_exp_light
$PGMEND hunt_exp_light

// Beginning of Code Block HWB_PickUp
$TSK HWB_PickUp

// Rung HWB_PickUp#1
// Offset 0
NOP

// End of Code Block HWB_PickUp
$TSKEND HWB_PickUp

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"C1","copy","",""
"C11","C11_Interlock","","Used to delay logic by one scan"
"C12","C12_Interlock_2","","Used to delay logic by one scan"
"C20","HBW_Has_Pallet","","True when carrying a pallet"
"C51","X_Direction","","True: Left False: Right"
"C52","Z_Direction","","True: Down False: Up"
"C80","Conveyor_Timeout","","Bit high when Conveyor Timeout timer active"
"C90","HBW_XY_PID_EN","","Enables PID control in HBW_Move_XZ"
"C101","HBW_T1_Send","Modbus MC101","Task to deliver a pallet to conveyor"
"C102","HBW_T2_Receive","Modbus MC102","Task to pickup a pallet from conveyor"
"C103","HBW_T3_Reset","Modbus MC103","Reinitialize and home all axises"
"C104","HBW_T4_Manual","Modbus MC104","Switch to manual mode"
"C110","HBW_Move_X_L","Modbus MC110","Move Horizontal Axis towards bay"
"C111","HBW_Move_X_R","Modbus MC111","Move Horizontal Axis towards Conveyor"
"C112","HBW_Move_Y_In","Modbus MC112","Move Cantilever In"
"C113","HBW_Move_Y_Out","Modbus MC113","Move Cantilever Out"
"C114","HBW_Move_Z_Up","Modbus MC114","Move Vertical Axis Up"
"C115","HBW_Move_Z_Down","Modbus MC115","Move Vertical Axis Down"
"C116","HBW_Conveyor_In","Modbus MC116","Move Conveyor In"
"C117","HBW_Conveyor_Out","Modbus MC117","Move Conveyor Out"
"C130","HBW_Status_Ready","Modbus MC130","On when ready for a task"
"C133","HBW_Mov_Conveyor","Modbus MC133","Status Conveyor Moving"
"C134","HBW_Moving_X","Modbus MC134","Status GantryMovingX"
"C135","HBW_Moving_Y","Modbus MC135","Status GantryMovingY"
"C136","HBW_Moving_Z","Modbus MC136","Status GantryMovingZ"
"C138","HBW_Status_Y_Pos","Modbus MC138","Current Y position"
"C141","HBW_Target_Y_Pos","Modbus MC141","Target Y position"
"C150","HBW_MoveComplete","","HBW_Move_XZ completion interlock."
"C180","HBW_Fault","Modbus MC180","Status in Fault State"
"C182","Fault_X_Target","","Active when X target out of range"
"C183","Fault_Z_target","","Active when Z target out of range"
"C400","VGR_T0","",""
"C410","VGR_T1","",""
"C420","VGR_T2","",""
"C430","VGR_T3","",""
"C440","VGR_T4","",""
"C500","VGR_Man_Control","",""
"C799","VGR_RESET","",""
"V105","HBW_Task_X_slot","Modbus MHR105","Value for slot X coord"
"V106","HBW_Task_Y_slot","Modbus MHR106","Value for slot y coord"
"V118","HBW_PWM_Set_X","Modbus MHR118","Set Horizontal Axis PWM Duty Cycle %"
"V119","HBW_PWM_Set_Y","Modbus MHR119","Set Cantilever Axis PWM Duty Cycle %"
"V120","HBW_PWM_Set_Z","Modbus MHR120","Set Vertical Axis PWM Duty cycle %"
"V131","HBW_Cur_Progress","Modbus MHR131","0 to 100 percent job completion"
"V132","HBW_Cur_Stage","Modbus MHR132","Current stage number"
"V137","HBW_Status_X_Pos","Modbus MHR137","Current X encoder position"
"V139","HBW_Status_Z_Pos","Modbus MHR139","Current Z encoder position"
"V140","HBW_Target_X_Pos","Modbus MHR140","Target X encoder position"
"V142","HBW_Target_Z_Pos","Modbus MHR142","Target Z encoder position"
"V181","HBW_Fault_code","Modbus MHR181","Current Fault code"
"V801","VGR_Fault_Code","",""
"N810","VGR_Rot_Target","",""
"N811","VGR_X_Target","",""
"N812","VGR_Y_Target","",""
"D0","MC","",""
"D1","Feeder_Extend","",""
"D140","X_Start_Position","","Distance to target"
"D142","Y_Start_Position","","Distance to target"
"D143","HBW_PWM_Cur_X","","PWM value for X for XZ movement task"
"D144","HBW_PWM_Cur_Z","","PWM value for Z for XZ movement task"
"T3","T_HBW_S6","",""
"T4","T_Conveyor_Timer","","Used to detect conveyor faults"
"MPO_Program.S2","Vaccum_MO","",""
"MPO_Program.S3","Vaccum","",""
"MPO_Program.S4","Vacumm_MO","",""
"MPO_Program.S5","Vaccum_Load","",""
"US0","_CP_Strogram_A","","CP_State_Program"
"US1","_VGR_Movement","","VGR_Movement"
"US2","_SSC_Check_InOut","","SSC_Check_InOut"
"UB0","_VGR_MisScan_A","","VGR_Movement.Done ThisScan"
#END

