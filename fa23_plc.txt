// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\walri\OneDrive\Documents\Github\ui_cda_mini_factory_fa23\fa23_plc.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
7a15a75d4791dd3338bd25618cbc3a3c2d1811b18e66e1f1ce3c491d76e0a384399bd8d963334149
a5ed7a7ddcae55a7812377838a02f19c2d18dec350d68a845cb93c179f494c40e8dfcff7118e05ce
deb173d050779de2163f7f9633dd0a4821cbe49bcd5fba7b6416a18d7dbea01cd894214dbafe5edd
dc8002652bdae94da2792854a28f634e03a2bb620a032166ad8d046744ffb72e47e719075fb15508
75671c2f3fe7703cb0bc94e66b9fdc5df873d9a67f45b423ee942942eaec92cc03f0126c1151af77
ff4b4e5685da882ef78fd312852e49570c37ef0e80cb08b47bf19e9e0d96ef03708d139f22764bcf
d1713ac0916d8b2f0753df91977734508f4195b23c033ed867e60c2b059264cc9b95a448d9b79104
49d01d6d99b9a751aa35493e317d8e20759a3673d0fd8e4e1ba77a2725c34c27205175ff194d1c19
32e2d817eb5235ae10192636d37087db4113ab3a56016d8c90035c006d5afa7187eca84c0e6e7ee2
5c717281636590668a71cdf0471e55d99927927463a5e3e1eb47dbe7754cf46d56179eba925f2e2b
a9e00246b455ba028ec16db508ae777d0978c15e531136e7e69e95e6473003391d03d9a742503b87
f9c24eba366bb6857444e38b95676590447e1bed3b453a828dc106c638db0aa26af1d3cea7e7a147
6c86dd8e3c2af2b0fd7bae5c4ac61227208f866b855180f2b70925871a920a2b6fe150e363ac4ce9
78a1588f6e8ac065e419ac330d602ecd436867b99f5ec5d1185e776c0ce32d51bb8592735fcda128
56451a7ca6a5bf99f8c6f149d10602b649aefd7d28256f2beac49fe8f5ee0d10fce02821045c91a1
07dc5a9a7e11c9cc68586b6d351158a93c0ad6351cb09cc4d93edc6b605c41749dea532c18a5f78b
58c8f037069db7cd69992775dff2cea77e223490bb26b790ee614a74f89842560afdbc00f2c132f2
0729d620a1397e4d518675ebeafa77ab80a3eaffd1048ddbf1ba761c0b31500c608c6b6444b00ff1
241f012217336be500a8cf57d234e3b948372b557893b7c238c57de986291d7717469a3b503aa83a
38e51f63e6270325c0ecb529b29dbcdd0adde947cc818ec0631060c2606b6d301a88fc00fd00ffc3
28da7cd4678c013bb2532c5888e4f83a9b6c1a83a63295447fa3193b496dd22fa4746355a91fa76c
e4574fc7cdc31867b2b95012906e6e35ca1297dcc3683dc3b23c460ae30990a81143235a203580b9
cc80b26ecc1651174a74a234d7f31c0ac592a666761da3387450e253499489013e4077931d22e023
178e9fff4ac344123edbcf9773f00591ae408e8121432034e3a604d6e0c0095c4264cc667fae9df7
82c5e410720e045aa0c62930ab0ffeb2e6b0210e8bc88ac0bc5bc24841d103ea191d432c54a3ce47
8c21bd92813817b1aee36b1a816aa9bc7a99744ab980c0872c78220cbb63ece9118bf825039d840b
6d543a86907d484e8fc73ee7bdf8650ca1f7345f43e0781764ce71080f73014a6373356a847df8fc
e5eb4d7f00a6f9f1752fa5fbb50949258c60460857b02364344c5e2d55d3abf39554678b6dca3a9a
50a8adc88f6b1dc411283d3a469c2952c0e28bfb8822536076392194d4a03393de0480d4e0a48047
acd96e6c31b07f563ea0b594448659f89aabb6ca89aebc0b175acdac9fa1bab23e18d7b3bcb2050e
112f34bf6c88218ef55390d90f85e262cba1b1a01b087f263b0b2a86e7adc0c9d1c5c8304fb4325b
0d3ffe7b9f2a2a4614093848ed92e74fca8b9bb29c2bcba5eaeee908ce6e7c82ba26951fb869e0be
51e2e26a18f8c6c07b268c98ff1f047a64fbc8988b12759ef491e2023c3a9dc06a7e19f9e28434fe
9bc0921ddc461c05c41b57886b773991914a9295135dd043d5361fc5ca41b1389af0b0b54e6b124d
9097d111f470f47b081d61dbf7ac1bd4bc031bc54830f85ece139257391f8cfe41996bd8a3a15213
8c664301b26a8b0830ba5d118798c2ef2bd5a250b34bdd5579ebbbdec89a9764a78b2fe738fb3304
7178671357514c1a46e0438ba3b682a985c0210bb2b14e5ce50645f31cb4011760a657f140ab3700
e7b81f8b2b8e3dd34102f7dd2ba68cdac1f702c0d65f941f998476c7092e1797a263a4babf92beb7
0d2cba9debc22f8cbe68155b96dcdc780c21273e5c7f8e4e722752bfdb1f5a96d4f5dc35b59dae83
85102fe8f0e9c20db5daad39532c38d145aebd15a038786befbe583006defe39cb986fcfdf2d5b2e
8d097cf75fdbcc89e8298340ce979a54c5376e2bb218da26be548a9a86f69443259864dcb7998bcb
3be837f9a9d0fef3395fe3587247f60aa51b82d1d0a6159f7a7adf53c2228f211b4a2e93f716c328
8f89e62163416b77536409f6d3b3c3fbbc21ab639f3cd3a1347405e7593d8458a813653e7805ee6f
ed4e3c2b9d59b0d987ae2237a0a647940775ab5820c9b2395d4f2a9f1ad2740838cd1dd232f0cf04
55f88d70b241cfcea35c0f88dd1b04314e61d41dc9940230f8465a19d0612c57f7c7b22746a0116f
9ac9d6b977350ba13d173c606356ebb05faf3d9780775024879f37acb4b93ac082c05c25d1cabe37
68b0196f65236643e36c4c12111f252a1e18ae86abbcb2cfa9f1af8f8ee247e1da44d9ff2c035256
28f5f5d0145db3591b6fb896b2e441981f0fa01d0a30fe1211848a2155c34f25ff707cfa4d7a9806
34ac09d68b39aa24ee395e54c8a284521df01c16fbca580ef2f75f538f9b311b494c7067c90dd740
ad66ed63c8ade1fb9b6ba5aeb184c0045fc77a447020d29a45c91bdc1b28d397e38399a5dbe92187
44bc6cc4c0429feb9e268e32e792abf0998d68a20f814e7007170761a8861f51a9224c6422048864
a462e207d690a1bbb714520b410ecbf2d2b57296bad275eba84fe3a526f1c6e29fb44d0d220aec70
f4e8d6f9ab0a1688978cc9f6a0327437d98622ab3671192a9040cd86f5d3c99a5111c07c70221f98
2f280d0757f216e8b58758f286df3d7351070497eb2273130dd95e319fb25388f982a8d28885a011
1421b52c931ade24747ca5a1f2403e007406e5ec6f0f8a69c9d1f519f467abbd73c64ff798603633
6d842266e0ad7eee0d718be936cec06e9d5bc64b30d9d547e8703a816b5873698b09f3b9cd8bba8e
5a093c5d997f0ec6e455d19aeaa880fb91c3b3b840d8e4b36194818a182cace9ab9378a1c5da5bbc
60f704db3bfe6283973ae049e45939423dc895ac07e82387ece76a4c80145a26a6b91e2b8e14256c
a59fe116fd95aa921a2d357fccde8a312c1d5d0a4f6c80112a6745c334ef3725a7b2689efbcfb171
8d67b18fd5100074f207f7c8a64c55e7998a01fb51a3361d72a655c4d322bd921d5debebb7e82524
7d225cb966ad261654402b9487d0c69c7b0b94ab1bb3e878e453679b48df2e011051a96befc1a9c3
3ea6bfaa57a970564cc2020e84ab3aaff46d5d1d4af5119afd0c984e32fc368348170dbd4b9357fd
7ed64f973ca1b81de05eff6da1e2c82b62ee94c11e3530528de68893a3a515e4a53cbce6a621ea44
05ef33647208f6cea6e7425e44874eb6b33dada0aa754c745d0bb82a7030be9dc73f9f1b68bb81d1
b2108fe00a08021d0f0f5a21c40c2dc48bc852d9ddff404ed095c79cc88f456990883e40fb8ac53e
151072cda6b435af3219e804c3252489512049170d9959aae7a53d20dae4b2eb700878691d97776c
5c5a2ada2bdff5c1ef6f50628adabfb305745e192700ab301c832037237ff7940b1b05ef33353b41
c525ecc435850aebc2f9d73a8a9398583f012b243636632c2957dec82bfcec563de23a9133faddf6
37c0044fd7c97d3dbac39ad3410e34b3ba8981b0a90793e942dafa6a9943e8736df939ca83410148
6f8df67fb06ef40359500eb6e5ce743779a83b925564fc52146d53fda0e96b5febab2c6ae3ba2966
5cc348904025e19365a770d6db9ca2755d200bca3df9b62eb5a8526c24ad7e0676679b505349797f
2fdfb34835082d6536d9218105568205fac2aaab0046350ba5387f211bfcc93d17af4048fd93fe44
57ca1df554cfc21aba5c66308d32f2685e0865f1df7adc295aefd75374930cccd633972e6db95946
e689568e25874e213da9699ad85acdd02a1460e980f248d759ae299670ac545e414f32beb8fb472e
78c90e0c65295c7320d386f401d61aac1cf0975847b5c8379fbe90e8b7badc5891d22fc751d814ef
6cdc574131b3188eb38ba6dd5f14cc7d3001eb35c985eed123f2967729533f1284835e841db0b977
6319790f6af7fa53150b6115db49a344d78558eb22b6cc0f8218d0a5120bd188c0bb1553e5a3aa50
f43fb240f12c06309e0e45e5faadfed7d74d620696c9d0ab951159bf30f0edd818335a1556cdc6ac
dab022b6c7704d8c7abef36bdb3e2bdf0df4380c426f160530eccd4cc95ad739c5101fa9d6ed9d92
4fcd7aa16902f069a60e9279bb30fe0974b8293b1019281ce3cfd6d5367d7104e5aa32fdc7404e1d
42f2e9369d70a2a2b7fba218dc0915cd1980340e0e3e4b7fba7b7e83548b62ce9ff9f928286dd3a2
373fa92f74085f406e1e207489ce035585c6823f2c230d0cbb6742b9f1298d258ab9b6f2db0bfa5b
4629576a89323353015a4eca20643e2b8a6a832e7241e56e13784bba25c6ea7f9b066a595cdf1be9
0b5265e609cb05262145899585db9a3bf6f5e1b9588b05229ddcb2efdc4d8640d5c5f2282bf00e83
d189687b50d48837aa2fde3e37187a3e578a7ce22d69a949f89487314eb50c9bf44453df6944a827
34a9bcfe4a897eedf934593b79479dc77f33aef303acba27c26b792bf621dfabea33b3919a96ff87
54b267580568bd2193767a1c0f448e08a8e8746f34836a93170c9dde9d6d71b036b7c5d811080c43
4c0c9815587b4f51f5de578169764b1bf8e276603db5d51bb8fa910da3b712bd97ee7e94dd6136b7
65d9de7fb60bf0dacf79d84c01b4213030d9902c77f62498696f818195199dc135f6fcae71dacb0b
a9ed67171bcba0f6a8632360b6ba668d2b5359f6f7f0cd58aa035a05ead9015f286b567504b1332f
693cdaf32d1ae00aaa47cff99b5425d50196780ff45a7980a7c69cd81d1752ed1b3ccc0f3c1388e7
6619a84c8babe0d513476efa94f37ba7dc174f976dca23269b40e6fb36e79cca4b74d8c42efe881d
d69a52c5930cdf550d7a9a2a0e690f0529af8741802e6e0f64f73941774b0fd499fec78f1c2ff066
aba2601b42c018b748a21784490c419d287873543030f6daa057675785e8a04f00ca721132b1fdc3
fe623438516086b00ce6e901d80ff9826732ce7b043b8cf0354f9144eaa7fd8fd3a4ed32f3f2ef20
dd5a7ffb1e2c561499d43e54c20b1474d28a26ce37200c67535bb83d797e22dbd41577c19cee633a
8678c18f9f5471af68f3a8aedf224526c57757b9beb84eada28a99eee4f9b7371bf1f4e032333f6d
3136d9ba523f13e50bda213cf5a01c874340b246ba9ab357ab6e6c7fdd61a37cb94c9e2573430134
e7ef000a634374efee41f818f1e97d1e14eb73c7a07e9673adfc824ff704c2374a1209b9d325483c
321373446a2be76b6923e6a5336c8998807dc5be3cff28fa300c0ce5647da94fd16765597d650c28
4937824eda64293d97e91a33226dd6e2a9d870e7ff4e7346a9fe7c7fcbcf847174b0c8c089e7d3ae
b0dd8e755a55bba28314085460f9aeecc2452ba800548fab369a4291325526037becde84974ebe4d
05f339b6aa66d5efc477ddab7ab48734dbf1d29f258d80efe6819faaea063a58bab2df91c9c47616
0b2be4b80d10bbca3bf7275aeb127a54a2f4e4d820ae2cab3f93c538d4286bec5f730668d1c59786
b25e86d99da8b33b713e729450e83a911f8c07c1d14b8be6d92214347dc33fb812b7c12e64176f32
bda9b09b2014cabf66f456497dc23b164663fff68fc71c1842d316204b2a00085667f5de28e36bcf
869db213b5c8e5ce37280d0ecd3dfdc1f7c4552b18743db940c19c17bab4d122c14e839652c4eec5
ec6513e4a26cf3b81dccc40b8cbe6b3216a39c469703d40a884e648c533f4a2b0190f975c5a65670
d7ca161ba3ec19c89bbdebfe9872537722f50ba8c1f0c445a3b30278c9f188fa193e81fd38b9731b
2a6a4d3eff54e1b0e4c781869066bac3edec5d62d1d0d3c5f3a648bb0c94cfdff7e355a152b0fa53
73da2ab091a35a29cde1bfae4be0498025dca55cd374d93fc9000d2114c7507af1a32067ca0fb123
05f38f7ae2ed161129a8e7b29f87f327f1dc745fc6c1fdcac20947bfdd84023e3554d7e11e2b8181
11e2048b9acfb872fd4154c67bd04ab1dc6f4c727f90cf70c1fefbe5ff9958c1f970bf0eff4b3a7f
b2e8412ef1d6604bd964ac74d2c4663bda6097effacf6b404be5919a2bbee816f5a6dd8cd32243be
92e5fe189a5d90b4f642842b05d05c974901059762b2529b0c97b4ea985e25acf672580a8ef3a6f4
45a0dc1682b57e844d58301e17f7c5b67560d5a8b2acb81492cffe6d948e0bad4591d0946f7d1191
6987dc331ce1a3b19aaf10ed33c65a88e90c6e5a741dd6a5b3c3a8e69aa22ac75ad173d488a0e2b4
5a483404cc5e1c669869a56f9393e8d156886a524b5849067e875b6f6ac3a64887e0f69ae90d9822
7fedcab7f884d95262f4a3d8d23bf98d0190c13e00755f7a7025b8fbcd5411fd0e04fd9985ad320e
06358ad33c933f3e5f856c99cf8e24e29991a4f22ada617130e6b7e81968299b7e44d936c41f828f
d70d07fb26c9b3a5a5e6d41886355e860025ba26a0af106f913753e7d3c979cac7df0fc04170fec1
90cf9672d8807c6d6487176505caa7f1480d44fcb9a0f6e2a193bfec5d944ccaef7fe3e58e8aec53
7f8a9ce662f7ba5e1c3be84a4e1385b63910b0d0c63cba4f3933970b704f2ac20da2b7af39c64b95
54407a547703c72e4719f1fff280cb29d5a55f4a744f217e7c9b17f0b1bf43e3316d95b8867505e8
3ec1aae7b900a898296ca905180deaa1734ac1eadd30cca06df1ed619193f8242c36e6b13a34d01e
4a290fc580490f014865ec8f671facc3858caf9617cd1ed9aaeee64ce97b0af5719c2481a0d625b9
0bc3123c1b44c3905818fcfe325b6485c74777bc53c01765125111f9c883db58f36c5a4363a5813c
92f0b97618bf43f871cff81d210d254672e30573022ef227483bf47cee4dc85e046748f0e206c6c2
a4df72d517426801036cb91cf76eb6399429c9c904405a644ebc85ff472ff40071c02ecf307b0f47
8e0922e18bb864bed4445c33152e41f85f78be82fff25a080aebfd46beedaf54b6b6d548f713455d
6a68c53c709a7bbde836861e73278d6b030dc73d8b941fef550de79b56523416dd885f387203d172
8a7970a104592619492e16aa0252648e41733cb6c9284f3998da57a88dbe1dedda8a2123524383d5
a40a94380a10d717ea84ce27e97ac77649415de5d63cdbb7d7398993acf486fdbc8ac9cd70197026
1d4f354523026537d7e8ead00ac08d2017fabb35501aa6f0b66276032da236323c25cf99eaf95777
efcc85c3825ce91582b770bd470f3338c22c17641d55b86a4a4aea4a40b7da2b97b37d3f94cd1d24
44519956d57f97a08236cc2552ba465954efcccdc059ff62275b22210959c16bddaafb47643b5e16
dac2e5dc14f54adf906603bf3f15ad8dd228deee4f1ca4865779d476e9c6e6cf729186a19850b10e
9bf41f90a4fd667db7453e51feaf9e07ee454eb72d05aa00f8b1aa13b1c72b636db4cd833359309d
2808eb278b55a6ed1ada6b5706c25812e7ccd2f2e857150062975e156b262f169c743169f8027364
f8c49ab772b59a30b62023ebd1149aed1add8f9918497ac2951e52aaa9aca40db8f35584ba2e79c2
d91843812dd9c5b48fe72a9bdec4de3697edb19069a843e84d6b9e8d4a8a05b3e64e9d976639008d
fbd90f0a25cccdcdc197568901c876adc3c14237da9d68749b3b21bc31fdd41dd3467d80b5e1e76f
5601ade188d07b9b1eea7b20b28f2f18b4db2a745b62cf9308a7cc48f94623d53a2cac813b436448
bd6316f6f948c5c812c0bfd06f978544d1f585932ce96f0732f1432bee25a5f0a90f11a30166db23
53566d5c08a8d7c0d8140c383cbc10f5900f1804c7e8e4164bef2ba828807c1f667cbb5343dfd580
19ddbdeaab5bbd759f1cc9b2e255b78fd3f94018d84c7f9b1445f30188c073ef49a057c0cc926c62
1122202c4783520f867ba75b4f74e0c937662e4e053c52c2371c857d7a3b35b33b94060e9346c14e
aa5a5b74034d40b3f7b5b44ccb9d6b971be4d6540f1b3586be720a398d2094cdb67d51ddf9bf3ae0
02eb10313b9b5b16880bd998f5a00e4793442e90cd01be14490344179f58d65827de2cba05453459
7ed8a9a53d674ee4dea35238726248899699ad3cdf20b96175adaba7f9c4e3ea46bd1a73d9e61ed7
322bd96e9e753af1848e227d1dc299f1cd3107594e27d14390799a553f32534e69febfa6cc68b6c3
1092d6521b83979a65802f804c6d0fb6d57e72c0496d0a25962d3849fd99508777f51585ff60f264
4377f647092f0be98285a2c18e929c308812ff3ba66f3a02fe541b450015ae552d9f25cefdf85d1c
dd8c754028c623b33f9ab591f36212e0b31740eae97cd10829703673d60e6646a8199811430860f1
9d5ec8105f640e27e7dadd64e0596a0887fb8fb6c84b0ee82337517efbe578c2a76ffd1db8285f8e
67dce410e68d5bc07cc221c86c40ed47de28a3e6c221662dd78aa8bb5283ca727ba01dc008eb4a69
0a67572b452cc47e325eeefc0eb7c6432b33301efb6e1f987334a3610d31826ed013c25925d394d0
bc62a0d78e170c83bd5c357ffe3db6fe3c3dc789543b6c9210e94ea5c973832ef4d0b402cc63972b
22a1de0cebd5024e048d90467f916c22bd4168079aa775a686ad25b5670104302ea1905848cc04c8
190898784e148efd485130852eedd845f64cff2391800839d98a3b3ed7598957e2c560cee96672fc
84fcb74c53be637f37a602a5cd42c804caecbea8fedbe32cb40ae9c1a74ab6feb638c282d76bf482
f11271ca2959bd42c5a1e51de995f39ffce1c06f499c0f45f180642e9157a3865ad4f27852fa54f9
34802f8b9609d500e7c8c44678149810ee7446186aa8e1b790d52c79ff1d1974c043a35f0eb0d1e1
7c2af673537466539b9bec28933e4d2ce2a53490db23f89fee86158f11c7de113c202a501ca04e6e
f7d0ffe28acde038d0cf11da5302293c49280afdbfaa77bfeb9678916b34c4ab21d5613bbc8c3974
0556e56122028eb17ca30c31b6476dd4619f7f59139ee7dd2b9a1ede9ddaec5336775636b2fe4c0f
fd9cb5fbd67ce65b5f1c8734063b172f92eb928f01d30170afedf28d5ea96b6ac4ab2e78ac4ae5f4
cd334fc2d1f9f1d706d60d0b9ced52ee5ea1428bfaee026e8051c038a5d8b8c0e6bb6090a876ca00
f9b7fa7c6f14413a5be12d17e3d82c33e1bf5a11d7ac76393f7e32a0c7fe33336389fada93b83634
d6277558054f9dcc4f4ceef9eb333ae42030d1dc34b29067b1c151284aa4684d06729a4efdfe5973
953763105251d5eac7c7b3946df777c17b8560ad79cee8f01a24ccf2a462cbf9fd9dd8f88f28aaee
5cf5d972715346185ac67983c85e879dbdd238a966bf7ff47312a8f8728b41dac00aeec3c7af8f18
2b9de78f35e45adf92b7e0d76dd691ad60313f6509fdadc8a107464299f7e65ba5f85ec1c733bf67
5816f73089f6fb12f5612d545b08795d658e57f77dcb751b839e9da2226b3946065c36f5f9eaf377
df8c30f81096e05db0c9a2f270f849e6e383060deab2eb09554a7f6b2f8ca0183b98e64d0d4bf02c
a19a19a08dad6a2b75b4b4452835ac80dc209a02fb3958783b9e9619574b2cfad4422ed97ea2260f
47966e4cb74ba68b45db9ce8d39cb04679e10c6daafe6bc6580cccc2f464711cffe3dd99673806f4
67945ad22aada4bf6b4a72f5bd8ffea27bfd4d8ae38ebdb3a815df4798d41119df8beff80527f022
e28ccbd3eef8d5bdca6e75518f763e0da6d5e0128ac41a8b68bb40bcc8b8b8f04240d1475c613436
84599f0108696d7c1eaf5e3541a4dfba54f6750bee7938e4e2f16c321129eeaa58518c6bf0ac9163
dc46607b06e24004f29de84116bc10be68295f6ad6516a9d7c035a466c2ce862beaf835feb642ca3
78a65432e35e0b6fdd00e14854737534c5d64f8b6f1c9fa8e2fbf4a0dc646ab9801861fd5ffc6a5b
2beec39dba9a3d06a3b7d6e0e9ee57bd8a3730c37d981b72d52a68354c6bc8451f58a90f8060f9fa
f801a08466188df0bf9cc970b5a9d0ae66107d062956f48543070560440083af3a0ac929ea9375ef
11929e767c99067268bdfc1a8f61d14cdd65cf81c7fba6dd8e6fe63583fe740dd2f37015cc9eb127
8450792768adc6c5c7d60385e5882be35526e0c8253affb4b961be651effd13025d0a35756ed47db
463e392c9dbf5204b8ce6d00dd78e0013e2127ac9af38ea767534f18d6d64dce408708ba804631dc
da286f9c681d90831ed14d7a256920bec60b18f1a175a357d421f20afd0aca52099654263eecc018
4a1f85a2e8386ae84f46f4e02e5c8470bf5691434a756e624f60356e1d584541c0dbe7284c747bba
a68e8c3de8519fa3be85d3f9fc15a5d0bcf07caa90138c2cd46841572e43f72fed3ecdad0a5e950f
fbcc47a392200d585fe6d9643d8a750024c50c5804c8ec028361fdc89d93aa583142d1759554e6eb
ccca13087553dd1951656706c91fa4744acb8693d67e88651b05de405081c9efe49f06f1009ad913
4cd27e26852c3ae99af003d9a8dbd250166687c91fb30a4206021350b1063ff8e32f6c2f2d0cc513
a3e82e8ff89d6bd41c1ccacca0e4af3e174c202d36479fa6e16f79a582de286d2edc1f6366f4bc31
01b231befd39345f648ba46ee477b0492420bf25b9ac9359e2b4d9747b5510165153126c8956902e
947229e40c1e50aa354fa06026178b5e67b4157ec60007c087b190e523df0a07b511a77297bd18d9
711aa95ca32fb81e33a21f8e23ffec09c110cbe8d29a0f528fcbab7af031c6c75e082de5b2241e33
8f288664995b6b9c17721892c376dd6cbe1a685210921cbb23f83b612447adb3296f8e718de091d5
4d412d2143afdfefa4fc988e0bbdd08f044544ec8a63050b4c40d404b1a47be92c7a0bd8449bb612
440e5802509dd8c9250cc99d4d887ca00c9d86dac6bf1ee282b6f17c631cd12f1cc5b7cb13a128ca
c13f042f916d2da7624d146a48cdae95580000da49b5856bf190ae78423e75ca524ea3bd4ec358b3
95064770218e022f8304f82e3db2621eecef71e16d6d03ac16e51752d8bbaa59b39e191c6214002b
66fedb755c2aa37320d5a1031ad832be1221a2856f27f1cf89f282c2d33e313a31baec13f917d0fc
6976646f64a11309518c0fa6ba412994476b8578b8baff7a05e5791aef9b5bb877348a74adae8c61
c33ad189c42d593317cc2d360550e12cda6f3e9bfb3d3d5c821ae6692c6ef5807f16b724c0e70bdb
a452e76a11f11e84e1b26bbaa38b53a2650aad25485f75b78dcb07af896f65c783de2c2ca1b56905
d1862ee8910d96340b47830d7d00ced5316562f3cb3934d08b10a9400bae3b1621f3b1a1a019a81e
ff14d10d14183742e80f1f8354b045e917896a384fff504e2bf7d02de0ebac5a16a1fa111549bafd
378c3e1a04fc3da3f8b5ae40ee1478300e34dd5a148179e2fc45dcbc8037b1536441ef40d775db03
77df3a3062ee4818e2fad07e5f911eae6758e81e03b9473db3d485e6d6e94dd77b28b2dcd19b13b0
48320a85baf46550006cd3e6d2ae0404df62424dd13c29e832dd3980e6211362db7f5d7c5403bc3a
b53032abc1a4915edcfb68586e2684ffcb73919d39d5da364f779b6c7fbae1a6eed11c342e2a6f6e
2f03226f3dcc61c89d3bec080aed3ae987d8231037c62af04ffdd05b37e83462b8cdd36c9a86cad6
7334af243161244247bdacde4d147b86dc5ed0452b99a2b350ede3a1c24160b950e08f50a817e25d
57f71a71cafa09094e3a648e315c032b38413e67214ce5ad38c570550e6605d946c1040041b71699
d711fe649337d2efc874080a0bcc862b37f9b12667f9c6acf5f851aa350d66f7e03884585f1c0b7e
0e42d97fc58b8d15c29eae8fb2cb9f4477807ee35448a332ffa36ab0c469cac57b43a092e4380210
27cdf6161b22196f87469887e6c3fc5fde6fbc9dd294c32f217ad7beadd0b3073f74e8f4bd0a7de4
a618540d89671a4b4063a5d0be2777ea6ce1126f69fe0c3d38aea72188ada2d0156b19e370991f20
a1a1937907fd2773d58b3d98ab0c0a71682b7fcaf87154ab485183f690d1bec020809328884c80ce
9a669c4bd7e777d3e6fb30913ca2bd710d95862bd9f56ff10c0fe147963e702b4445500db949a1ca
5018b8d1afb2cf3e0cae55a6d61f950b46dfc47af12357e1910b0b0069481b76a612e495e3189ff6
5c9168f7e403d19cecbdf19c51f38dbecafe93b770edf1e0acaee616102c2a47e8a0954533310554
35eed59f9cd4ab1ca0f3d196e0bb7c7b9e18bab75d68b5f5ba9d94a178c948970f3dc3ccb228af8d
5e468c76c0072637e11a3180fd7b665f0a560283b53ca3bfe4f9bb50dfc9fa0cdd5210569adea58d
661b02eb167fb71e93cdce488a638a67358e04f1010d151e2b9a6af763959943ac905c7921abe491
4a1b2c9836f643db45353a812a31c007438a421091147029a8652cdb36fd96a199a87215fee53593
606d621132600b04fa7a9db9051c99096efa49aefadac7d0a50ede8926f6424ef96b5cb15422becf
670c2ef7c894b412380e97593e23dcf5e617df7d833caa74b845ad1e8ffa87b26ef2f7d30faf8abf
d22b6bb8be39d450d05f8a59d934252f78f23beb113a3eecc9a129fa1c4d8823bee247031c677e30
9c89cd6c047923172160944df4073b3852439a8116b3a099d898fcac8939a8e96697a59f52456f93
e7090535def2487a6fdf11d75e7d4d3c91100e31303c495ee1744e64de31093028ee2a7c5401369b
90fc717d68220f63889c87d8b80dc2301e212ef84e4a7b959713b543b8f156f0c2ffe4e71f7dc8e1
2d0ec4829b432383fd0bf0ff0e2b8563ee00584e4216ef41726034f5c277812ad925d6e17af5467e
06d55a99a1c936fe77134616561cd3e176da6ec87a399d9a8cd63c88736874f21c57620d9a448d67
3d5883afbe50434eba2d8973097bd011f2fb4fb39b7147e21a640938d7b1e5604fe4d902ccc9583b
2d8b23ca7e1aaee17ddb41010c3e7d7d7606c5adda0f4b1e166e35b701c4bc10392f1dc6e5efb2fa
1668ba8c4e62dd76fd1ffc74790eae7e81070ff3fc46f7fc476ee52bfb8a1701a5678dd8d70736af
076ad8cd33154ee67413ce46b5676a300227f27e63605b6c15e8d0184c223548ef6356548ac53533
1d3ab31c38ace97735f8fcb07f0bdb6ee69e70a42e9a62a9c352b103bc7c9a1250e31d74728ba50c
24faea85477d82c75906999098de2744838d0d6ead397559bd848e70aa77bc52fc1d9b06d2029a67
597b365cebf04b72a3759e69c41f07b1af258fd59143fc25c9d359cfe4bec5c033d77bb7e6b26c87
cbc5eae201770d907a4929d758e020a5fb7c289085308308310e93b88487ab2672a1539587cf2bcb
0ab3104571c482c851c969356b37565a99453dfc6b4813224f0a8d26200eb57dcc4933672ad870bb
e09c22336bd0c3b976fecae79ad643a3548f74bb08c9c63a8af0974349edf714d59a584230d5a139
3c313d3de3bc15a64749d127ecd862908a7526
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 SSC_Copy_State <Virtual>  0
 HBW_Pick TASK  0 -1
 HBW_Copy_State <Virtual>  0
 PID_10 PID  0
 PID_11 PID  0
 hunt_exp_light PROGRAM  0 -1
 HBW_Home <Virtual>  0
 HBW_Pick_Sto <Virtual>  0
 test TASK  0 -1
 HBW_Pickup_ST PROGRAM  0 -1
 HWB_Extend_Arm <Virtual>  0
 HBW_Retract_Arm <Virtual>  0
 HWB_PickUp TASK  0 -1
 HBW_HTO1POS <Virtual>  0
 HBW_Left_1Block <Virtual>  0
 HBW_HomeTo2_Col <Virtual>  0
 HWB_HomeTo3_Col <Virtual>  0
 HWB_HomeTo2_Row <Virtual>  0
 HWB_HomeTo3_Row <Virtual>  0
 HWB_HomeTo1_Col <Virtual>  0
 HBW_move_left_1 <Virtual>  0
 HWB_Home_to_11 <Virtual>  0
 HWB_11_DropOff <Virtual>  0
 HBW_Pickup <Virtual>  0
 HBW_PickUp_R1 <Virtual>  0
 HBW_Send_VGR <Virtual>  0
 HBW_PickUp_VGR <Virtual>  0
 HBW_Return_VGR <Virtual>  0
 HBW_MotorsOff <Virtual>  0
 HBW_ConvTo11 <Virtual>  0
 HBW_Return_Top <Virtual>  0
 HBW_MV_11_12 <Virtual>  0
 HBW_Conv_12 <Virtual>  0
 HBW_Conv_12_Lat <Virtual>  0
 HBW_RETRACT_13 <Virtual>  0
 HBW_Retract_23 <Virtual>  0
 HBW_Conv13_Lat <Virtual>  0
 HBW_Conv_2Row <Virtual>  0
 HBW_PickUp_R2 <Virtual>  0
 HBW_Conv11_Lat <Virtual>  0
 HBW_Retract_12 <Virtual>  0
 HBW_Shift_C1C2 <Virtual>  0
 HBW_Move_R1_R2 <Virtual>  0
 HBW_Retract_22 <Virtual>  0
 HBW_Retract_21 <Virtual>  0
 HBW_Retract_31 <Virtual>  0
 HBW_Move_R2_R3 <Virtual>  0
 HBW_PickUp_R3 <Virtual>  0
 HBW_Conv_3Row <Virtual>  0
 HBW_Retract_32 <Virtual>  0
 HBW_Retract_33 <Virtual>  0
 HBW_Retract_Done PROGRAM  0 -1
 HBW_Retract_DN <Virtual>  0
 oneOperation <Virtual>  0
 HBW_Check1Puck <Virtual>  0
 HBW_OneTime_R1 <Virtual>  0
 HBW_OneTime_R2 <Virtual>  0
 HBW_OneTime_R3 <Virtual>  0
 HBW_OneTime_C1 <Virtual>  0
 HBW_OneTime_C2 <Virtual>  0
 HBW_OneTime_C3 <Virtual>  0
 HBW_OneDropR3 <Virtual>  0
 HBW_OneDropR2 <Virtual>  0
 HBW_OneDropR1 <Virtual>  0
#END

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"VGR Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC410 C410 1 0x0 MC409 C409 1 0x0 MC412 Y28 1 0x0 MC412 MC450 1 0x0 MC411 C411 1 0x0 MC408 C408 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC413 Y29 1 0x0 MC413 MC451 1 0x0 X27 MI200 1 0x0 X26 MI454 1 0x0 X25 MI453 1 0x0 MC452 C452 1"

// Rung VGR_Copy_State#2
// Offset 33
NOP

// Rung VGR_Copy_State#3
// Offset 34
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC800 Y41 1 0x0 Y41 MI801 1 0x0 MC802 Y43 1 0x0 Y43 MI803 1 0x0 MC804 C804 1 0x0 MC805 C805 1 0x0 MC806 Y44 1 0x0 MC807 Y20 1 0x0 MC808 C811 1 0x0 MC809 C809 1 0x0 MC810 C810 1 0x0 MC812 C812 1 0x0 MC813 C813 1 0x0 MC814 C814 1 0x0 MC816 Y45 1 0x0 MC817 Y46 1 0x0 MC818 Y21 1 0x0 MC819 Y20 1 0x0 MC820 Y44 1 0x0 MC822 Y52 1"

// Rung MPO_Copy_State#2
// Offset 45
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC800 C1600 1 0x0 MC801 C1601 1 0x0 MC802 C1602 1 0x0 MC803 C1603 1 0x0 MC804 C1604 1 0x0 Y31 MI800 1 0x0 MC850 C1605 1 0x0 MC805 C1610 1"

// Rung SLD_Copy_State#2
// Offset 21
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"SSC Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC606 C1200 1 0x0 MC607 C1201 1 0x0 MC608 C1202 1 0x0 MC609 C1203 1 0x0 MC615 C1215 1 0x0 MC616 C1216 1 0x0 MC617 C1217 1 0x0 MC618 C1218 1 0x0 MC619 C1219 1 0x0 MC620 C1220 1"

// Rung SSC_Copy_State#2
// Offset 25
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block HBW_Home
$LGCMOD HBW_Home

// Rung HBW_Home#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Home#2
// Offset 8
STRN C215
ANDN X0
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 60 60
OUT Y51

// Rung HBW_Home#3
// Offset 26
STRN C215
ANDN X3
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5

// Rung HBW_Home#4
// Offset 43
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y76

// Rung HBW_Home#5
// Offset 64
NOP

// Rung HBW_Home#6
// Offset 65
RET

// End of Code Block HBW_Home
$LGCEND HBW_Home

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 Y40 1 0x0 Y80 MHR102 1 0x0 MC101 C205 1 0x0 MC102 C206 1 0x0 MC103 C207 1 0x0 MC104 C208 1 0x0 MC105 C209 1 0x0 MC106 C210 1 0x0 MC107 C211 1 0x0 MC108 C212 1 0x0 MC109 C213 1 0x0 MC110 C214 1 0x0 MC111 C215 1 0x0 MC112 C216 1 0x0 MC113 C300 1 0x0 MC114 C217 1 0x0 MC115 C218 1 0x0 MC116 C219 1 0x0 MC117 C220 1 0x0 MC118 C221 1 0x0 MC119 C222 1 0x0 MC120 C223 1 0x0 MC121 C224 1 0x0 MC122 C225 1 0x0 X2 MI101 1 0x0 X10 MI102 1 0x0 X11 MI103 1 0x0 X3 MI104 1 0x0 X0 MI105 1 0x0 X6 MI106 1 0x0 X7 MI107 1 0x0 X8 MI108 1 0x0 X9 MI109 1 0x0 $HBW_Encoder_X.Acc MHR1 1 0x0 $HBW_Encoder_Z.Acc MHR2 1"

// Rung HBW_Copy_State#2
// Offset 75
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block HBW_HomeTo2_Col
$LGCMOD HBW_HomeTo2_Col

// Rung HBW_HomeTo2_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_HomeTo2_Col#2
// Offset 17
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_HomeTo2_Col#3
// Offset 22
NOP

// Rung HBW_HomeTo2_Col#4
// Offset 23
NOP

// Rung HBW_HomeTo2_Col#5
// Offset 24
NOP

// Rung HBW_HomeTo2_Col#6
// Offset 25
RET

// End of Code Block HBW_HomeTo2_Col
$LGCEND HBW_HomeTo2_Col

// Beginning of Code Block HWB_HomeTo1_Col
$LGCMOD HWB_HomeTo1_Col

// Rung HWB_HomeTo1_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HWB_HomeTo1_Col#2
// Offset 17
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_HomeTo1_Col#3
// Offset 22
NOP

// Rung HWB_HomeTo1_Col#4
// Offset 23
NOP

// Rung HWB_HomeTo1_Col#5
// Offset 24
RET

// End of Code Block HWB_HomeTo1_Col
$LGCEND HWB_HomeTo1_Col

// Beginning of Code Block HWB_Home_to_11
$LGCMOD HWB_Home_to_11

// Rung HWB_Home_to_11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HWB_Home_to_11#2
// Offset 22
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_Home_to_11#3
// Offset 27
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HWB_Home_to_11#4
// Offset 49
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_Home_to_11#5
// Offset 54
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HWB_Home_to_11#6
// Offset 73
NOP

// Rung HWB_Home_to_11#7
// Offset 74
NOP

// Rung HWB_Home_to_11#8
// Offset 75
RET

// End of Code Block HWB_Home_to_11
$LGCEND HWB_Home_to_11

// Beginning of Code Block HWB_11_DropOff
$LGCMOD HWB_11_DropOff

// Rung HWB_11_DropOff#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HWB_11_DropOff#2
// Offset 8
STRGE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_11_DropOff#3
// Offset 13
STRN C215
ANDN C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51

// Rung HWB_11_DropOff#4
// Offset 31
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y4
AND ST2
OUT Y5

// Rung HWB_11_DropOff#5
// Offset 51
STRGE 2730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_11_DropOff#6
// Offset 56
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 60 60
OUT Y7

// Rung HWB_11_DropOff#7
// Offset 73
RET

// End of Code Block HWB_11_DropOff
$LGCEND HWB_11_DropOff

// Beginning of Code Block HBW_PickUp_R1
$LGCMOD HBW_PickUp_R1

// Rung HBW_PickUp_R1#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R1#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R1#3
// Offset 41
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R1#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R1#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_PickUp_R1#6
// Offset 69
NOP

// Rung HBW_PickUp_R1#7
// Offset 70
NOP

// Rung HBW_PickUp_R1#8
// Offset 71
NOP

// Rung HBW_PickUp_R1#9
// Offset 72
NOP

// Rung HBW_PickUp_R1#10
// Offset 73
RET

// End of Code Block HBW_PickUp_R1
$LGCEND HBW_PickUp_R1

// Beginning of Code Block HBW_Send_VGR
$LGCMOD HBW_Send_VGR

// Rung HBW_Send_VGR#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Send_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_Send_VGR#3
// Offset 37
STRN C215
AND X2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y48
AND ST2
OUT Y49

// Rung HBW_Send_VGR#4
// Offset 56
NOP

// Rung HBW_Send_VGR#5
// Offset 57
NOP

// Rung HBW_Send_VGR#6
// Offset 58
RET

// End of Code Block HBW_Send_VGR
$LGCEND HBW_Send_VGR

// Beginning of Code Block HBW_PickUp_VGR
$LGCMOD HBW_PickUp_VGR

// Rung HBW_PickUp_VGR#1
// Offset 0
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_PickUp_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_PickUp_VGR#3
// Offset 37
STRN C215
AND X11
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_PickUp_VGR#4
// Offset 56
NOP

// Rung HBW_PickUp_VGR#5
// Offset 57
NOP

// Rung HBW_PickUp_VGR#6
// Offset 58
RET

// End of Code Block HBW_PickUp_VGR
$LGCEND HBW_PickUp_VGR

// Beginning of Code Block HBW_Return_VGR
$LGCMOD HBW_Return_VGR

// Rung HBW_Return_VGR#1
// Offset 0
STRN C215
ANDN C251
DUPBOOL
AND C299
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y6

// Rung HBW_Return_VGR#2
// Offset 22
STRN C215
AND X1
DUPBOOL
AND C299
AND C251
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
POPBOOL
AND ST2
OUT Y48

// Rung HBW_Return_VGR#3
// Offset 45
STRN C215
DUPBOOL
AND C299
ANDN X1
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_Return_VGR#4
// Offset 68
STRLE 2550 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_VGR#5
// Offset 73
NOP

// Rung HBW_Return_VGR#6
// Offset 74
NOP

// Rung HBW_Return_VGR#7
// Offset 75
RET

// End of Code Block HBW_Return_VGR
$LGCEND HBW_Return_VGR

// Beginning of Code Block HBW_MotorsOff
$LGCMOD HBW_MotorsOff

// Rung HBW_MotorsOff#1
// Offset 0
STRN C215
ANDN ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_MotorsOff#2
// Offset 18
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_MotorsOff#3
// Offset 36
STRN C215
AND ST2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
OUT Y48

// Rung HBW_MotorsOff#4
// Offset 54
NOP

// Rung HBW_MotorsOff#5
// Offset 55
NOP

// Rung HBW_MotorsOff#6
// Offset 56
NOP

// Rung HBW_MotorsOff#7
// Offset 57
RET

// End of Code Block HBW_MotorsOff
$LGCEND HBW_MotorsOff

// Beginning of Code Block HBW_ConvTo11
$LGCMOD HBW_ConvTo11

// Rung HBW_ConvTo11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_ConvTo11#2
// Offset 22
NOP

// Rung HBW_ConvTo11#3
// Offset 23
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_ConvTo11#4
// Offset 28
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_ConvTo11#5
// Offset 50
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_ConvTo11#6
// Offset 55
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_ConvTo11#7
// Offset 74
NOP

// Rung HBW_ConvTo11#8
// Offset 75
NOP

// Rung HBW_ConvTo11#9
// Offset 76
RET

// End of Code Block HBW_ConvTo11
$LGCEND HBW_ConvTo11

// Beginning of Code Block HBW_Return_Top
$LGCMOD HBW_Return_Top

// Rung HBW_Return_Top#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Return_Top#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HBW_Return_Top#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_Top#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_Return_Top#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return_Top#6
// Offset 69
NOP

// Rung HBW_Return_Top#7
// Offset 70
NOP

// Rung HBW_Return_Top#8
// Offset 71
RET

// End of Code Block HBW_Return_Top
$LGCEND HBW_Return_Top

// Beginning of Code Block HBW_MV_11_12
$LGCMOD HBW_MV_11_12

// Rung HBW_MV_11_12#1
// Offset 0
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_MV_11_12#2
// Offset 21
NOP

// Rung HBW_MV_11_12#3
// Offset 22
NOP

// Rung HBW_MV_11_12#4
// Offset 23
NOP

// Rung HBW_MV_11_12#5
// Offset 24
RET

// End of Code Block HBW_MV_11_12
$LGCEND HBW_MV_11_12

// Beginning of Code Block HBW_Conv_12
$LGCMOD HBW_Conv_12

// Rung HBW_Conv_12#1
// Offset 0
NOP

// Rung HBW_Conv_12#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_12#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Conv_12#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 80
OUT C251

// Rung HBW_Conv_12#5
// Offset 45
NOP

// Rung HBW_Conv_12#6
// Offset 46
RET

// End of Code Block HBW_Conv_12
$LGCEND HBW_Conv_12

// Beginning of Code Block HBW_Conv_12_Lat
$LGCMOD HBW_Conv_12_Lat

// Rung HBW_Conv_12_Lat#1
// Offset 0
NOP

// Rung HBW_Conv_12_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv_12_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv_12_Lat#4
// Offset 42
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv_12_Lat#5
// Offset 47
NOP

// Rung HBW_Conv_12_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv_12_Lat
$LGCEND HBW_Conv_12_Lat

// Beginning of Code Block HBW_RETRACT_13
$LGCMOD HBW_RETRACT_13

// Rung HBW_RETRACT_13#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_RETRACT_13#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_RETRACT_13#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_RETRACT_13#4
// Offset 46
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_RETRACT_13#5
// Offset 68
STRGE 7650 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_RETRACT_13#6
// Offset 73
RET

// End of Code Block HBW_RETRACT_13
$LGCEND HBW_RETRACT_13

// Beginning of Code Block HBW_Retract_23
$LGCMOD HBW_Retract_23

// Rung HBW_Retract_23#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_23#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_23#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_23#4
// Offset 46
STRN C215
AND ST2
OUT Y51
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_Retract_23#5
// Offset 65
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_23#6
// Offset 70
RET

// End of Code Block HBW_Retract_23
$LGCEND HBW_Retract_23

// Beginning of Code Block HBW_Conv13_Lat
$LGCMOD HBW_Conv13_Lat

// Rung HBW_Conv13_Lat#1
// Offset 0
NOP

// Rung HBW_Conv13_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv13_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv13_Lat#4
// Offset 42
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv13_Lat#5
// Offset 47
NOP

// Rung HBW_Conv13_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv13_Lat
$LGCEND HBW_Conv13_Lat

// Beginning of Code Block HBW_Conv_2Row
$LGCMOD HBW_Conv_2Row

// Rung HBW_Conv_2Row#1
// Offset 0
NOP

// Rung HBW_Conv_2Row#2
// Offset 1
NOP

// Rung HBW_Conv_2Row#3
// Offset 2
NOP

// Rung HBW_Conv_2Row#4
// Offset 3
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_2Row#5
// Offset 22
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Conv_2Row#6
// Offset 42
STRGE $HBW_Encoder_Z.Acc 1380
OUT C251

// Rung HBW_Conv_2Row#7
// Offset 47
NOP

// Rung HBW_Conv_2Row#8
// Offset 48
RET

// End of Code Block HBW_Conv_2Row
$LGCEND HBW_Conv_2Row

// Beginning of Code Block HBW_PickUp_R2
$LGCMOD HBW_PickUp_R2

// Rung HBW_PickUp_R2#1
// Offset 0
NOP

// Rung HBW_PickUp_R2#2
// Offset 1
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R2#3
// Offset 20
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R2#4
// Offset 38
NOP

// Rung HBW_PickUp_R2#5
// Offset 39
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R2#6
// Offset 61
STRLE 1400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R2#7
// Offset 66
NOP

// Rung HBW_PickUp_R2#8
// Offset 67
NOP

// Rung HBW_PickUp_R2#9
// Offset 68
NOP

// Rung HBW_PickUp_R2#10
// Offset 69
RET

// End of Code Block HBW_PickUp_R2
$LGCEND HBW_PickUp_R2

// Beginning of Code Block HBW_Conv11_Lat
$LGCMOD HBW_Conv11_Lat

// Rung HBW_Conv11_Lat#1
// Offset 0
NOP

// Rung HBW_Conv11_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv11_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv11_Lat#4
// Offset 42
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv11_Lat#5
// Offset 47
NOP

// Rung HBW_Conv11_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv11_Lat
$LGCEND HBW_Conv11_Lat

// Beginning of Code Block HBW_Retract_12
$LGCMOD HBW_Retract_12

// Rung HBW_Retract_12#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_12#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_12#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_12#4
// Offset 46
RET

// End of Code Block HBW_Retract_12
$LGCEND HBW_Retract_12

// Beginning of Code Block HBW_Shift_C1C2
$LGCMOD HBW_Shift_C1C2

// Rung HBW_Shift_C1C2#1
// Offset 0
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Shift_C1C2#2
// Offset 5
NOP

// Rung HBW_Shift_C1C2#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Shift_C1C2#4
// Offset 25
NOP

// Rung HBW_Shift_C1C2#5
// Offset 26
STRN C215
AND ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_Shift_C1C2#6
// Offset 44
NOP

// Rung HBW_Shift_C1C2#7
// Offset 45
RET

// End of Code Block HBW_Shift_C1C2
$LGCEND HBW_Shift_C1C2

// Beginning of Code Block HBW_Move_R1_R2
$LGCMOD HBW_Move_R1_R2

// Rung HBW_Move_R1_R2#1
// Offset 0
STRGE 1760 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Move_R1_R2#2
// Offset 5
NOP

// Rung HBW_Move_R1_R2#3
// Offset 6
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Move_R1_R2#4
// Offset 25
NOP

// Rung HBW_Move_R1_R2#5
// Offset 26
NOP

// Rung HBW_Move_R1_R2#6
// Offset 27
RET

// End of Code Block HBW_Move_R1_R2
$LGCEND HBW_Move_R1_R2

// Beginning of Code Block HBW_Retract_22
$LGCMOD HBW_Retract_22

// Rung HBW_Retract_22#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_22#2
// Offset 22
STRGE 1730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_22#3
// Offset 27
NOP

// Rung HBW_Retract_22#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_22#5
// Offset 47
STRLE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_22#6
// Offset 52
STRN C215
AND C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
AND ST2
OUT Y50

// Rung HBW_Retract_22#7
// Offset 72
NOP

// Rung HBW_Retract_22#8
// Offset 73
RET

// End of Code Block HBW_Retract_22
$LGCEND HBW_Retract_22

// Beginning of Code Block HBW_Retract_21
$LGCMOD HBW_Retract_21

// Rung HBW_Retract_21#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_21#2
// Offset 22
STRGE 1730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_21#3
// Offset 27
NOP

// Rung HBW_Retract_21#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_21#5
// Offset 47
STRLE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_21#6
// Offset 52
STRN C215
AND C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
AND ST2
OUT Y50

// Rung HBW_Retract_21#7
// Offset 72
NOP

// Rung HBW_Retract_21#8
// Offset 73
RET

// End of Code Block HBW_Retract_21
$LGCEND HBW_Retract_21

// Beginning of Code Block HBW_Retract_31
$LGCMOD HBW_Retract_31

// Rung HBW_Retract_31#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_31#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_31#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_31#4
// Offset 46
STRN C215
AND ST2
OUT Y51
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_Retract_31#5
// Offset 65
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_31#6
// Offset 70
RET

// End of Code Block HBW_Retract_31
$LGCEND HBW_Retract_31

// Beginning of Code Block HBW_Move_R2_R3
$LGCMOD HBW_Move_R2_R3

// Rung HBW_Move_R2_R3#1
// Offset 0
STRGE 3600 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Move_R2_R3#2
// Offset 5
NOP

// Rung HBW_Move_R2_R3#3
// Offset 6
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Move_R2_R3#4
// Offset 25
NOP

// Rung HBW_Move_R2_R3#5
// Offset 26
NOP

// Rung HBW_Move_R2_R3#6
// Offset 27
RET

// End of Code Block HBW_Move_R2_R3
$LGCEND HBW_Move_R2_R3

// Beginning of Code Block HBW_PickUp_R3
$LGCMOD HBW_PickUp_R3

// Rung HBW_PickUp_R3#1
// Offset 0
NOP

// Rung HBW_PickUp_R3#2
// Offset 1
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R3#3
// Offset 20
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R3#4
// Offset 38
STRLE 2800 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R3#5
// Offset 43
NOP

// Rung HBW_PickUp_R3#6
// Offset 44
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R3#7
// Offset 66
NOP

// Rung HBW_PickUp_R3#8
// Offset 67
NOP

// Rung HBW_PickUp_R3#9
// Offset 68
NOP

// Rung HBW_PickUp_R3#10
// Offset 69
RET

// End of Code Block HBW_PickUp_R3
$LGCEND HBW_PickUp_R3

// Beginning of Code Block HBW_Conv_3Row
$LGCMOD HBW_Conv_3Row

// Rung HBW_Conv_3Row#1
// Offset 0
NOP

// Rung HBW_Conv_3Row#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_3Row#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Conv_3Row#4
// Offset 40
STRLE $HBW_Encoder_Z.Acc 2950
OUT C251

// Rung HBW_Conv_3Row#5
// Offset 45
NOP

// Rung HBW_Conv_3Row#6
// Offset 46
RET

// End of Code Block HBW_Conv_3Row
$LGCEND HBW_Conv_3Row

// Beginning of Code Block HBW_Retract_32
$LGCMOD HBW_Retract_32

// Rung HBW_Retract_32#1
// Offset 0
STRGE 3300 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_32#2
// Offset 5
NOP

// Rung HBW_Retract_32#3
// Offset 6
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_32#4
// Offset 28
NOP

// Rung HBW_Retract_32#5
// Offset 29
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_32#6
// Offset 48
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_32#7
// Offset 53
NOP

// Rung HBW_Retract_32#8
// Offset 54
STRN C215
AND C250
DUPBOOL
ANDN C251
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_Retract_32#9
// Offset 77
NOP

// Rung HBW_Retract_32#10
// Offset 78
RET

// End of Code Block HBW_Retract_32
$LGCEND HBW_Retract_32

// Beginning of Code Block HBW_Retract_33
$LGCMOD HBW_Retract_33

// Rung HBW_Retract_33#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_33#2
// Offset 22
STRGE 3300 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_33#3
// Offset 27
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_33#4
// Offset 46
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_33#5
// Offset 51
NOP

// Rung HBW_Retract_33#6
// Offset 52
STRN C215
AND C250
DUPBOOL
ANDN C251
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_Retract_33#7
// Offset 75
NOP

// Rung HBW_Retract_33#8
// Offset 76
RET

// End of Code Block HBW_Retract_33
$LGCEND HBW_Retract_33

// Beginning of Code Block HBW_Retract_DN
$LGCMOD HBW_Retract_DN

// Rung HBW_Retract_DN#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_DN#2
// Offset 22
STRGE 3200 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_DN#3
// Offset 27
NOP

// Rung HBW_Retract_DN#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_DN#5
// Offset 47
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_DN#6
// Offset 52
STRN C215
AND C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
AND ST2
OUT Y50

// Rung HBW_Retract_DN#7
// Offset 72
NOP

// Rung HBW_Retract_DN#8
// Offset 73
RET

// End of Code Block HBW_Retract_DN
$LGCEND HBW_Retract_DN

// Beginning of Code Block oneOperation
$LGCMOD oneOperation

// Rung oneOperation#1
// Offset 0
NOP

// Rung oneOperation#2
// Offset 1
NOP

// Rung oneOperation#3
// Offset 2
RET

// End of Code Block oneOperation
$LGCEND oneOperation

// Beginning of Code Block HBW_Check1Puck
$LGCMOD HBW_Check1Puck

// Rung HBW_Check1Puck#1
// Offset 0
STR ST1
MOVE 0 C301

// Rung HBW_Check1Puck#2
// Offset 3
STR C217
MOVE 1 C301
MOVE 1 N2

// Rung HBW_Check1Puck#3
// Offset 8
STR C218
MOVE 1 C301
MOVE 2 N2

// Rung HBW_Check1Puck#4
// Offset 13
STR C219
MOVE 1 C301
MOVE 3 N2

// Rung HBW_Check1Puck#5
// Offset 18
STR C220
MOVE 1 C301
MOVE 4 N2

// Rung HBW_Check1Puck#6
// Offset 23
STR C221
MOVE 1 C301
MOVE 5 N2

// Rung HBW_Check1Puck#7
// Offset 28
STR C222
MOVE 1 C301
MOVE 6 N2

// Rung HBW_Check1Puck#8
// Offset 33
STR C223
MOVE 1 C301
MOVE 7 N2

// Rung HBW_Check1Puck#9
// Offset 38
STR C224
MOVE 1 C301
MOVE 8 N2

// Rung HBW_Check1Puck#10
// Offset 43
STR C225
MOVE 1 C301
MOVE 9 N2

// Rung HBW_Check1Puck#11
// Offset 48
RET

// End of Code Block HBW_Check1Puck
$LGCEND HBW_Check1Puck

// Beginning of Code Block HBW_OneTime_R1
$LGCMOD HBW_OneTime_R1

// Rung HBW_OneTime_R1#1
// Offset 0
STRGE 375 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneTime_R1#2
// Offset 5
NOP

// Rung HBW_OneTime_R1#3
// Offset 6
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_OneTime_R1#4
// Offset 25
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneTime_R1#5
// Offset 45
NOP

// Rung HBW_OneTime_R1#6
// Offset 46
RET

// End of Code Block HBW_OneTime_R1
$LGCEND HBW_OneTime_R1

// Beginning of Code Block HBW_OneTime_R2
$LGCMOD HBW_OneTime_R2

// Rung HBW_OneTime_R2#1
// Offset 0
STRGE 1650 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneTime_R2#2
// Offset 5
NOP

// Rung HBW_OneTime_R2#3
// Offset 6
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_OneTime_R2#4
// Offset 25
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneTime_R2#5
// Offset 45
NOP

// Rung HBW_OneTime_R2#6
// Offset 46
RET

// End of Code Block HBW_OneTime_R2
$LGCEND HBW_OneTime_R2

// Beginning of Code Block HBW_OneTime_R3
$LGCMOD HBW_OneTime_R3

// Rung HBW_OneTime_R3#1
// Offset 0
STRGE 3200 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneTime_R3#2
// Offset 5
NOP

// Rung HBW_OneTime_R3#3
// Offset 6
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_OneTime_R3#4
// Offset 25
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneTime_R3#5
// Offset 45
NOP

// Rung HBW_OneTime_R3#6
// Offset 46
RET

// End of Code Block HBW_OneTime_R3
$LGCEND HBW_OneTime_R3

// Beginning of Code Block HBW_OneTime_C1
$LGCMOD HBW_OneTime_C1

// Rung HBW_OneTime_C1#1
// Offset 0
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_OneTime_C1#2
// Offset 5
NOP

// Rung HBW_OneTime_C1#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_OneTime_C1#4
// Offset 25
NOP

// Rung HBW_OneTime_C1#5
// Offset 26
RET

// End of Code Block HBW_OneTime_C1
$LGCEND HBW_OneTime_C1

// Beginning of Code Block HBW_OneTime_C2
$LGCMOD HBW_OneTime_C2

// Rung HBW_OneTime_C2#1
// Offset 0
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_OneTime_C2#2
// Offset 5
NOP

// Rung HBW_OneTime_C2#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_OneTime_C2#4
// Offset 25
NOP

// Rung HBW_OneTime_C2#5
// Offset 26
RET

// Rung HBW_OneTime_C2#6
// Offset 27
NOP

// End of Code Block HBW_OneTime_C2
$LGCEND HBW_OneTime_C2

// Beginning of Code Block HBW_OneTime_C3
$LGCMOD HBW_OneTime_C3

// Rung HBW_OneTime_C3#1
// Offset 0
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_OneTime_C3#2
// Offset 5
NOP

// Rung HBW_OneTime_C3#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_OneTime_C3#4
// Offset 25
NOP

// Rung HBW_OneTime_C3#5
// Offset 26
RET

// Rung HBW_OneTime_C3#6
// Offset 27
NOP

// End of Code Block HBW_OneTime_C3
$LGCEND HBW_OneTime_C3

// Beginning of Code Block HBW_OneDropR3
$LGCMOD HBW_OneDropR3

// Rung HBW_OneDropR3#1
// Offset 0
NOP

// Rung HBW_OneDropR3#2
// Offset 1
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_OneDropR3#3
// Offset 23
STRGE 3300 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneDropR3#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneDropR3#5
// Offset 47
NOP

// Rung HBW_OneDropR3#6
// Offset 48
NOP

// Rung HBW_OneDropR3#7
// Offset 49
RET

// End of Code Block HBW_OneDropR3
$LGCEND HBW_OneDropR3

// Beginning of Code Block HBW_OneDropR2
$LGCMOD HBW_OneDropR2

// Rung HBW_OneDropR2#1
// Offset 0
NOP

// Rung HBW_OneDropR2#2
// Offset 1
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_OneDropR2#3
// Offset 23
STRGE 1730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneDropR2#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneDropR2#5
// Offset 47
NOP

// Rung HBW_OneDropR2#6
// Offset 48
NOP

// Rung HBW_OneDropR2#7
// Offset 49
RET

// Rung HBW_OneDropR2#8
// Offset 50
NOP

// End of Code Block HBW_OneDropR2
$LGCEND HBW_OneDropR2

// Beginning of Code Block HBW_OneDropR1
$LGCMOD HBW_OneDropR1

// Rung HBW_OneDropR1#1
// Offset 0
NOP

// Rung HBW_OneDropR1#2
// Offset 1
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_OneDropR1#3
// Offset 23
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneDropR1#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneDropR1#5
// Offset 47
NOP

// Rung HBW_OneDropR1#6
// Offset 48
NOP

// Rung HBW_OneDropR1#7
// Offset 49
RET

// Rung HBW_OneDropR1#8
// Offset 50
NOP

// End of Code Block HBW_OneDropR1
$LGCEND HBW_OneDropR1

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#2
// Offset 3
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#3
// Offset 6
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#4
// Offset 9
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#5
// Offset 12
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// Rung $Main#6
// Offset 15
#BEGIN FMT_COMMENT 
"Hunter Demo Light<br>"
#END

STR ST1
RUN hunt_exp_light

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
SG HBW_Program.S0

// Rung HBW_Program#2
// Offset 2
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#3
// Offset 10
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#4
// Offset 12
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#5
// Offset 14
STR ST1
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#6
// Offset 22
STR ST1
CALL HBW_Check1Puck 0x1 DST511 "3" "3"

// Rung HBW_Program#7
// Offset 30
STR C301
JMP HBW_Program.S19

// Rung HBW_Program#8
// Offset 32
NOP

// Rung HBW_Program#9
// Offset 33
STR C216
JMP HBW_Program.S1

// Rung HBW_Program#10
// Offset 35
STR C213
JMP HBW_Program.S1

// Rung HBW_Program#11
// Offset 37
SG HBW_Program.S1

// Rung HBW_Program#12
// Offset 39
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#13
// Offset 47
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#14
// Offset 49
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#15
// Offset 51
STR ST1
MOVE 0 N1

// Rung HBW_Program#16
// Offset 54
STR ST1
MOVE 0 C299

// Rung HBW_Program#17
// Offset 57
NOP

// Rung HBW_Program#18
// Offset 58
STR ST1
DUPBOOL
STR C205
ANDN C206
STR C206
ANDN C205
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 500 60
POPBOOL
DUPBOOL
AND C205
OUT Y48
POPBOOL
AND C206
OUT Y49

// Rung HBW_Program#19
// Offset 87
STR ST1
DUPBOOL
STR C207
ANDN C208
STRN C207
AND C208
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
POPBOOL
DUPBOOL
AND C207
OUT Y50
POPBOOL
AND C208
OUT Y51

// Rung HBW_Program#20
// Offset 116
STR ST1
DUPBOOL
STR C209
ANDN C210
STRN C209
AND C210
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
POPBOOL
DUPBOOL
AND C209
OUT Y4
POPBOOL
AND C210
OUT Y5

// Rung HBW_Program#21
// Offset 145
STR ST1
DUPBOOL
STR C211
ANDN C212
STRN C211
AND C212
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
POPBOOL
DUPBOOL
AND C211
OUT Y6
POPBOOL
AND C212
OUT Y7

// Rung HBW_Program#22
// Offset 174
STR C213
JMP HBW_Program.S2

// Rung HBW_Program#23
// Offset 176
SG HBW_Program.S2

// Rung HBW_Program#24
// Offset 178
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#25
// Offset 186
STR X0
OUT $HBW_Encoder_X.ResetLevel

// Rung HBW_Program#26
// Offset 188
STR X3
OUT $HBW_Encoder_Z.ResetLevel

// Rung HBW_Program#27
// Offset 190
STR ST1
CALL HBW_Home 0x1 DST511 "3" "3"

// Rung HBW_Program#28
// Offset 198
STR X0
AND X11
AND X3
JMP HBW_Program.S3

// Rung HBW_Program#29
// Offset 202
STR C212
JMP HBW_Program.S3

// Rung HBW_Program#30
// Offset 204
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#31
// Offset 206
SG HBW_Program.S3

// Rung HBW_Program#32
// Offset 208
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#33
// Offset 216
STR ST1
CALL HWB_Home_to_11 0x1 DST511 "3" "3"

// Rung HBW_Program#34
// Offset 224
STRN C250
ANDN C251
JMP HBW_Program.S4

// Rung HBW_Program#35
// Offset 227
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#36
// Offset 229
SG HBW_Program.S4

// Rung HBW_Program#37
// Offset 231
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#38
// Offset 239
STR ST1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#39
// Offset 247
STR X10
ANDN C251
JMP HBW_Program.S5

// Rung HBW_Program#40
// Offset 250
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#41
// Offset 252
NOP

// Rung HBW_Program#42
// Offset 253
SG HBW_Program.S5

// Rung HBW_Program#43
// Offset 255
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#44
// Offset 263
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#45
// Offset 271
STRN C251
AND C250
JMP HBW_Program.S6

// Rung HBW_Program#46
// Offset 274
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#47
// Offset 276
SG HBW_Program.S6

// Rung HBW_Program#48
// Offset 278
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#49
// Offset 286
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#50
// Offset 294
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#51
// Offset 296
STRN X2
JMP HBW_Program.S7
INC N1

// Rung HBW_Program#52
// Offset 299
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#53
// Offset 301
NOP

// Rung HBW_Program#54
// Offset 302
SG HBW_Program.S7

// Rung HBW_Program#55
// Offset 304
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#56
// Offset 312
STR C300
MOVE 1 C299

// Rung HBW_Program#57
// Offset 315
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#58
// Offset 323
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#59
// Offset 332
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#60
// Offset 334
NOP

// Rung HBW_Program#61
// Offset 335
SG HBW_Program.S8

// Rung HBW_Program#62
// Offset 337
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#63
// Offset 345
STR ST1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#64
// Offset 353
STR ST1
MOVE 0 C299

// Rung HBW_Program#65
// Offset 356
STRN C250
JMP HBW_Program.S9

// Rung HBW_Program#66
// Offset 358
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#67
// Offset 360
NOP

// Rung HBW_Program#68
// Offset 361
SG HBW_Program.S9

// Rung HBW_Program#69
// Offset 363
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#70
// Offset 371
STR ST1
CALL HBW_Return_Top 0x1 DST511 "3" "3"

// Rung HBW_Program#71
// Offset 379
STR X10
ANDN C251
JMP HBW_Program.S10
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#72
// Offset 389
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#73
// Offset 391
NOP

// Rung HBW_Program#74
// Offset 392
SG HBW_Program.S10

// Rung HBW_Program#75
// Offset 394
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#76
// Offset 402
STR ST1
CALL HBW_MV_11_12 0x1 DST511 "3" "3"

// Rung HBW_Program#77
// Offset 410
STRN C250
JMP HBW_Program.S11

// Rung HBW_Program#78
// Offset 412
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#79
// Offset 414
NOP

// Rung HBW_Program#80
// Offset 415
SG HBW_Program.S11

// Rung HBW_Program#81
// Offset 417
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#82
// Offset 425
STRE N1 1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#83
// Offset 436
STRE N1 2
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#84
// Offset 447
STRE N1 3
CALL HBW_Move_R1_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#85
// Offset 458
STRE N1 3
ANDLE 1650 $HBW_Encoder_Z.Acc
JMP HBW_Program.S51

// Rung HBW_Program#86
// Offset 467
STRE N1 4
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#87
// Offset 478
STRE N1 5
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#88
// Offset 489
STRE N1 6
CALL HBW_Move_R2_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#89
// Offset 500
STRE N1 6
ANDLE 3200 $HBW_Encoder_Z.Acc
JMP HBW_Program.S51

// Rung HBW_Program#90
// Offset 509
STRE N1 7
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#91
// Offset 520
STRE N1 8
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#92
// Offset 531
STRE N1 9
JMP HBW_Program.S18

// Rung HBW_Program#93
// Offset 536
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#94
// Offset 538
NOP

// Rung HBW_Program#95
// Offset 539
NOP

// Rung HBW_Program#96
// Offset 540
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#97
// Offset 543
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#98
// Offset 545
SG HBW_Program.S51

// Rung HBW_Program#99
// Offset 547
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#100
// Offset 555
STRE N1 3
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#101
// Offset 566
STRE N1 6
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#102
// Offset 577
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#103
// Offset 579
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#104
// Offset 582
SG HBW_Program.S12

// Rung HBW_Program#105
// Offset 584
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#106
// Offset 592
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#107
// Offset 600
STRN C251
AND C250
JMP HBW_Program.S13

// Rung HBW_Program#108
// Offset 603
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#109
// Offset 605
SG HBW_Program.S13

// Rung HBW_Program#110
// Offset 607
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#111
// Offset 615
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#112
// Offset 623
STR C300
MOVE 1 C299

// Rung HBW_Program#113
// Offset 626
STRN X2
AND C299
JMP HBW_Program.S14
INC N1

// Rung HBW_Program#114
// Offset 630
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#115
// Offset 632
SG HBW_Program.S14

// Rung HBW_Program#116
// Offset 634
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#117
// Offset 642
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#118
// Offset 650
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#119
// Offset 659
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#120
// Offset 661
SG HBW_Program.S15

// Rung HBW_Program#121
// Offset 663
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#122
// Offset 671
STR ST1
MOVE 0 C299

// Rung HBW_Program#123
// Offset 674
STRE N1 1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#124
// Offset 685
STRE N1 2
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#125
// Offset 696
STRE N1 3
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#126
// Offset 707
STRE N1 4
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#127
// Offset 718
STRE N1 5
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#128
// Offset 729
STRE N1 6
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#129
// Offset 740
STRE N1 7
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#130
// Offset 751
STRE N1 8
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#131
// Offset 762
STRE N1 9
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#132
// Offset 773
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#133
// Offset 775
STRN C251
JMP HBW_Program.S16
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#134
// Offset 784
SG HBW_Program.S16

// Rung HBW_Program#135
// Offset 786
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#136
// Offset 794
STRE N1 1
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#137
// Offset 805
STRE N1 2
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#138
// Offset 816
STRE N1 3
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#139
// Offset 827
STRE N1 4
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#140
// Offset 838
STRE N1 5
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#141
// Offset 849
STRE N1 6
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#142
// Offset 860
STRE N1 7
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#143
// Offset 871
STRE N1 8
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#144
// Offset 882
STRE N1 9
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#145
// Offset 893
NOP

// Rung HBW_Program#146
// Offset 894
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#147
// Offset 896
STRN C250
AND X10
JMP HBW_Program.S17

// Rung HBW_Program#148
// Offset 899
SG HBW_Program.S17

// Rung HBW_Program#149
// Offset 901
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#150
// Offset 909
STRE N1 1
CALL HBW_Retract_12 0x1 DST511 "3" "3"

// Rung HBW_Program#151
// Offset 920
STRE N1 2
CALL HBW_RETRACT_13 0x1 DST511 "3" "3"

// Rung HBW_Program#152
// Offset 931
STRE N1 3
CALL HBW_Retract_23 0x1 DST511 "3" "3"

// Rung HBW_Program#153
// Offset 942
STRE N1 4
CALL HBW_Retract_22 0x1 DST511 "3" "3"

// Rung HBW_Program#154
// Offset 953
STRE N1 5
CALL HBW_Retract_21 0x1 DST511 "3" "3"

// Rung HBW_Program#155
// Offset 964
STRE N1 6
CALL HBW_Retract_21 0x1 DST511 "3" "3"

// Rung HBW_Program#156
// Offset 975
STRE N1 7
CALL HBW_Retract_32 0x1 DST511 "3" "3"

// Rung HBW_Program#157
// Offset 986
STRE N1 8
CALL HBW_Retract_33 0x1 DST511 "3" "3"

// Rung HBW_Program#158
// Offset 997
STRE N1 9
CALL HBW_Retract_33 0x1 DST511 "3" "3"

// Rung HBW_Program#159
// Offset 1008
NOP

// Rung HBW_Program#160
// Offset 1009
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#161
// Offset 1011
STR X11
ANDN C251
ANDN C250
JMP HBW_Program.S11

// Rung HBW_Program#162
// Offset 1015
STR X11
ANDE N1 1
JMP HBW_Program.S50

// Rung HBW_Program#163
// Offset 1021
SG HBW_Program.S18

// Rung HBW_Program#164
// Offset 1023
STR ST1
JMP HBW_Program.S0

// Rung HBW_Program#165
// Offset 1025
SG HBW_Program.S50

// Rung HBW_Program#166
// Offset 1027
STR ST1
CALL HBW_Shift_C1C2 0x1 DST511 "3" "3"

// Rung HBW_Program#167
// Offset 1035
STRN Y50
ANDN C250
JMP HBW_Program.S11

// Rung HBW_Program#168
// Offset 1038
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#169
// Offset 1040
NOP

// Rung HBW_Program#170
// Offset 1041
SG HBW_Program.S19

// Rung HBW_Program#171
// Offset 1043
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#172
// Offset 1051
STR X0
OUT $HBW_Encoder_X.ResetLevel

// Rung HBW_Program#173
// Offset 1053
STR X3
OUT $HBW_Encoder_Z.ResetLevel

// Rung HBW_Program#174
// Offset 1055
NOP

// Rung HBW_Program#175
// Offset 1056
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#176
// Offset 1058
STR ST1
CALL HBW_Home 0x1 DST511 "3" "3"

// Rung HBW_Program#177
// Offset 1066
STR X0
AND X11
AND X3
JMP HBW_Program.S20

// Rung HBW_Program#178
// Offset 1070
SG HBW_Program.S20

// Rung HBW_Program#179
// Offset 1072
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#180
// Offset 1080
NOP

// Rung HBW_Program#181
// Offset 1081
STRE N2 1
CALL HBW_OneTime_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#182
// Offset 1092
STRE N2 2
CALL HBW_OneTime_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#183
// Offset 1103
STRE N2 3
CALL HBW_OneTime_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#184
// Offset 1114
STRE N2 4
CALL HBW_OneTime_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#185
// Offset 1125
STRE N2 5
CALL HBW_OneTime_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#186
// Offset 1136
STRE N2 6
CALL HBW_OneTime_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#187
// Offset 1147
STRE N2 7
CALL HBW_OneTime_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#188
// Offset 1158
STRE N2 8
CALL HBW_OneTime_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#189
// Offset 1169
STRE N2 9
CALL HBW_OneTime_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#190
// Offset 1180
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#191
// Offset 1182
STRN C251
JMP HBW_Program.S21

// Rung HBW_Program#192
// Offset 1184
SG HBW_Program.S21

// Rung HBW_Program#193
// Offset 1186
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#194
// Offset 1194
NOP

// Rung HBW_Program#195
// Offset 1195
STRE N2 1
CALL HBW_OneTime_C1 0x1 DST511 "3" "3"

// Rung HBW_Program#196
// Offset 1206
STRE N2 2
CALL HBW_OneTime_C2 0x1 DST511 "3" "3"

// Rung HBW_Program#197
// Offset 1217
STRE N2 3
CALL HBW_OneTime_C3 0x1 DST511 "3" "3"

// Rung HBW_Program#198
// Offset 1228
STRE N2 4
CALL HBW_OneTime_C1 0x1 DST511 "3" "3"

// Rung HBW_Program#199
// Offset 1239
STRE N2 5
CALL HBW_OneTime_C2 0x1 DST511 "3" "3"

// Rung HBW_Program#200
// Offset 1250
STRE N2 6
CALL HBW_OneTime_C3 0x1 DST511 "3" "3"

// Rung HBW_Program#201
// Offset 1261
STRE N2 7
CALL HBW_OneTime_C1 0x1 DST511 "3" "3"

// Rung HBW_Program#202
// Offset 1272
STRE N2 8
CALL HBW_OneTime_C2 0x1 DST511 "3" "3"

// Rung HBW_Program#203
// Offset 1283
STRE N2 9
CALL HBW_OneTime_C3 0x1 DST511 "3" "3"

// Rung HBW_Program#204
// Offset 1294
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#205
// Offset 1296
STRN C250
JMP HBW_Program.S22

// Rung HBW_Program#206
// Offset 1298
SG HBW_Program.S22

// Rung HBW_Program#207
// Offset 1300
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#208
// Offset 1308
STRE N2 1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#209
// Offset 1319
STRE N2 2
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#210
// Offset 1330
STRE N2 3
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#211
// Offset 1341
STRE N2 4
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#212
// Offset 1352
STRE N2 5
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#213
// Offset 1363
STRE N2 6
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#214
// Offset 1374
STRE N2 7
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#215
// Offset 1385
STRE N2 8
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#216
// Offset 1396
STRE N2 9
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#217
// Offset 1407
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#218
// Offset 1409
STRN C251
JMP HBW_Program.S23

// Rung HBW_Program#219
// Offset 1411
SG HBW_Program.S23

// Rung HBW_Program#220
// Offset 1413
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#221
// Offset 1421
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#222
// Offset 1429
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#223
// Offset 1431
STRN C251
AND C250
JMP HBW_Program.S24

// Rung HBW_Program#224
// Offset 1434
SG HBW_Program.S24

// Rung HBW_Program#225
// Offset 1436
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#226
// Offset 1444
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#227
// Offset 1452
STRN X2
AND C299
JMP HBW_Program.S25

// Rung HBW_Program#228
// Offset 1455
STR C300
MOVE 1 C299

// Rung HBW_Program#229
// Offset 1458
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#230
// Offset 1460
SG HBW_Program.S25

// Rung HBW_Program#231
// Offset 1462
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#232
// Offset 1470
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#233
// Offset 1478
STR X11
JMP HBW_Program.S26
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#234
// Offset 1487
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#235
// Offset 1489
NOP

// Rung HBW_Program#236
// Offset 1490
SG HBW_Program.S26

// Rung HBW_Program#237
// Offset 1492
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#238
// Offset 1500
STR ST1
MOVE 0 C299

// Rung HBW_Program#239
// Offset 1503
STRE N2 1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#240
// Offset 1514
STRE N2 2
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#241
// Offset 1525
STRE N2 3
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#242
// Offset 1536
STRE N2 4
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#243
// Offset 1547
STRE N2 5
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#244
// Offset 1558
STRE N2 6
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#245
// Offset 1569
STRE N2 7
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#246
// Offset 1580
STRE N2 8
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#247
// Offset 1591
STRE N2 9
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#248
// Offset 1602
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#249
// Offset 1604
STRN C251
JMP HBW_Program.S27
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#250
// Offset 1613
SG HBW_Program.S27

// Rung HBW_Program#251
// Offset 1615
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#252
// Offset 1623
STRE N2 1
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#253
// Offset 1634
STRE N2 2
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#254
// Offset 1645
STRE N2 3
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#255
// Offset 1656
STRE N2 4
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#256
// Offset 1667
STRE N2 5
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#257
// Offset 1678
STRE N2 6
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#258
// Offset 1689
STRE N2 7
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#259
// Offset 1700
STRE N2 8
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#260
// Offset 1711
STRE N2 9
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#261
// Offset 1722
NOP

// Rung HBW_Program#262
// Offset 1723
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#263
// Offset 1725
STRN C250
AND X10
JMP HBW_Program.S28

// Rung HBW_Program#264
// Offset 1728
SG HBW_Program.S28

// Rung HBW_Program#265
// Offset 1730
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#266
// Offset 1738
STRE N2 1
CALL HBW_OneDropR1 0x1 DST511 "3" "3"

// Rung HBW_Program#267
// Offset 1749
STRE N2 2
CALL HBW_OneDropR1 0x1 DST511 "3" "3"

// Rung HBW_Program#268
// Offset 1760
STRE N2 3
CALL HBW_OneDropR1 0x1 DST511 "3" "3"

// Rung HBW_Program#269
// Offset 1771
STRE N2 4
CALL HBW_OneDropR2 0x1 DST511 "3" "3"

// Rung HBW_Program#270
// Offset 1782
STRE N2 5
CALL HBW_OneDropR2 0x1 DST511 "3" "3"

// Rung HBW_Program#271
// Offset 1793
STRE N2 6
CALL HBW_OneDropR2 0x1 DST511 "3" "3"

// Rung HBW_Program#272
// Offset 1804
STRE N2 7
CALL HBW_OneDropR3 0x1 DST511 "3" "3"

// Rung HBW_Program#273
// Offset 1815
STRE N2 8
CALL HBW_OneDropR3 0x1 DST511 "3" "3"

// Rung HBW_Program#274
// Offset 1826
STRE N2 9
CALL HBW_OneDropR3 0x1 DST511 "3" "3"

// Rung HBW_Program#275
// Offset 1837
STR X11
JMP HBW_Program.S0

// Rung HBW_Program#276
// Offset 1839
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#277
// Offset 1841
NOP

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
SG VGR_Program.S0

// Rung VGR_Program#2
// Offset 2
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#3
// Offset 10
STR ST1
DUPBOOL
STR C410
ANDN C409
STRN C410
AND C409
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
POPBOOL
DUPBOOL
AND C410
OUT Y27
POPBOOL
AND C409
OUT Y26

// Rung VGR_Program#4
// Offset 39
STR ST1
DUPBOOL
STR C408
ANDN C411
STRN C408
AND C411
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
POPBOOL
DUPBOOL
AND C408
OUT Y24
POPBOOL
AND C411
OUT Y25

// Rung VGR_Program#5
// Offset 68
STR ST1
DUPBOOL
STR C406
ANDN C407
STRN C406
AND C407
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
POPBOOL
DUPBOOL
AND C406
OUT Y23
POPBOOL
AND C407
OUT Y22

// Rung VGR_Program#6
// Offset 97
STR C452
JMP VGR_Program.S1

// Rung VGR_Program#7
// Offset 99
SG VGR_Program.S1

// Rung VGR_Program#8
// Offset 101
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#9
// Offset 103
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#10
// Offset 111
STRN X25
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
OUT Y22

// Rung VGR_Program#11
// Offset 127
STRN X26
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
OUT Y24

// Rung VGR_Program#12
// Offset 143
STRN X27
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
OUT Y26

// Rung VGR_Program#13
// Offset 159
STR X27
OUT $VGR_Encoder_Rot.ResetLevel

// Rung VGR_Program#14
// Offset 161
STR X26
OUT $VGR_Encoder_X.ResetLevel

// Rung VGR_Program#15
// Offset 163
STR X25
OUT $VGR_Encoder_Y.ResetLevel

// Rung VGR_Program#16
// Offset 165
STR X25
AND X26
AND X27
JMP VGR_Program.S2

// Rung VGR_Program#17
// Offset 169
SG VGR_Program.S2

// Rung VGR_Program#18
// Offset 171
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#19
// Offset 179
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#20
// Offset 181
STR ST1
OUT $VGR_Encoder_Rot.EnableCapture

// Rung VGR_Program#21
// Offset 183
STR ST1
OUT $VGR_Encoder_X.EnableCapture

// Rung VGR_Program#22
// Offset 185
STR ST1
OUT $VGR_Encoder_Y.EnableCapture

// Rung VGR_Program#23
// Offset 187
STRGE 5350 $VGR_Encoder_Rot.Acc
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
OUT Y27

// Rung VGR_Program#24
// Offset 206
STRGE 700 $VGR_Encoder_X.Acc
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
OUT Y25

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STR C813
OUT Y18

// Rung MPO_Program#4
// Offset 12
STR C810
OUT Y17

// Rung MPO_Program#5
// Offset 14
STR C811
OUT Y52

// Rung MPO_Program#6
// Offset 16
STR ST1
DUPBOOL
STR C804
ANDN C805
STR C805
ANDN C804
ORSTR
ANDSTR
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 100
POPBOOL
DUPBOOL
AND C804
OUT Y53
POPBOOL
AND C805
OUT Y15

// Rung MPO_Program#7
// Offset 45
STR C814
OUT Y19

// Rung MPO_Program#8
// Offset 47
STR C809
JMP MPO_Program.S1

// Rung MPO_Program#9
// Offset 49
SG MPO_Program.S1

// Rung MPO_Program#10
// Offset 51
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#11
// Offset 59
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#12
// Offset 61
STRN X24
SET Y17

// Rung MPO_Program#13
// Offset 63
STR Y17
OUT Y20
ANDN X17
ONDTMR T105 3000 Y44

// Rung MPO_Program#14
// Offset 69
STR X17
JMP MPO_Program.S10

// Rung MPO_Program#15
// Offset 71
SG MPO_Program.S10

// Rung MPO_Program#16
// Offset 73
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#17
// Offset 81
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#18
// Offset 83
STR X17
RST Y20

// Rung MPO_Program#19
// Offset 85
STR X17
ONDTMR T106 2000 Y16

// Rung MPO_Program#20
// Offset 89
STR T106.Done
JMP MPO_Program.S11

// Rung MPO_Program#21
// Offset 91
SG MPO_Program.S11

// Rung MPO_Program#22
// Offset 93
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#23
// Offset 101
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#24
// Offset 103
STRN X18
OUT Y52

// Rung MPO_Program#25
// Offset 105
STR X18
RST Y20

// Rung MPO_Program#26
// Offset 107
STR X18
RST Y16

// Rung MPO_Program#27
// Offset 109
STRN Y16
ONDTMR T107 1000 C819

// Rung MPO_Program#28
// Offset 113
STR C819
JMP MPO_Program.S2

// Rung MPO_Program#29
// Offset 115
SG MPO_Program.S2

// Rung MPO_Program#30
// Offset 117
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#31
// Offset 125
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#32
// Offset 127
NOP

// Rung MPO_Program#33
// Offset 128
STRN X19
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y53

// Rung MPO_Program#34
// Offset 144
STR X19
JMP MPO_Program.S3

// Rung MPO_Program#35
// Offset 146
SG MPO_Program.S3

// Rung MPO_Program#36
// Offset 148
STR ST1
SET Y17

// Rung MPO_Program#37
// Offset 150
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#38
// Offset 158
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#39
// Offset 160
STR X19
SET Y19

// Rung MPO_Program#40
// Offset 162
STR X19
ONDTMR T100 1000 Y18

// Rung MPO_Program#41
// Offset 166
STR T100.DN
JMP MPO_Program.S4

// Rung MPO_Program#42
// Offset 168
SG MPO_Program.S4

// Rung MPO_Program#43
// Offset 170
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#44
// Offset 178
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#45
// Offset 180
STR X19
RST Y19

// Rung MPO_Program#46
// Offset 182
STRN X16
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y15

// Rung MPO_Program#47
// Offset 198
STR X16
JMP MPO_Program.S5

// Rung MPO_Program#48
// Offset 200
SG MPO_Program.S5

// Rung MPO_Program#49
// Offset 202
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#50
// Offset 210
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#51
// Offset 212
STR X16
SET Y19

// Rung MPO_Program#52
// Offset 214
STR Y19
ONDTMR T101 1000 C815

// Rung MPO_Program#53
// Offset 218
STR C815
RST Y18

// Rung MPO_Program#54
// Offset 220
STRN Y18
ONDTMR T110 1000 C830

// Rung MPO_Program#55
// Offset 224
STR C830
JMP MPO_Program.S6

// Rung MPO_Program#56
// Offset 226
SG MPO_Program.S6

// Rung MPO_Program#57
// Offset 228
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#58
// Offset 236
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#59
// Offset 238
STR X16
RST Y19

// Rung MPO_Program#60
// Offset 240
STRN Y19
ONDTMR T102 1000 C818

// Rung MPO_Program#61
// Offset 244
STR C818
JMP MPO_Program.S7

// Rung MPO_Program#62
// Offset 246
SG MPO_Program.S7

// Rung MPO_Program#63
// Offset 248
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#64
// Offset 256
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#65
// Offset 258
STRN X15
OUT Y45

// Rung MPO_Program#66
// Offset 260
STR X15
TMRDOWN T102 1000
OUT Y43

// Rung MPO_Program#67
// Offset 264
STR T102.Done
JMP MPO_Program.S8

// Rung MPO_Program#68
// Offset 266
SG MPO_Program.S8

// Rung MPO_Program#69
// Offset 268
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#70
// Offset 276
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#71
// Offset 278
STRN X13
OUT Y45

// Rung MPO_Program#72
// Offset 280
STR X13
TMRDOWN T103 1000
OUT Y21

// Rung MPO_Program#73
// Offset 284
STR T103.Done
JMP MPO_Program.S9

// Rung MPO_Program#74
// Offset 286
SG MPO_Program.S9

// Rung MPO_Program#75
// Offset 288
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#76
// Offset 296
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#77
// Offset 298
STRN X12
ONDTMR T104 1000 Y46

// Rung MPO_Program#78
// Offset 302
STR ST1
OUT Y47

// Rung MPO_Program#79
// Offset 304
STR X12
JMP MPO_Program.S12

// Rung MPO_Program#80
// Offset 306
SG MPO_Program.S12

// Rung MPO_Program#81
// Offset 308
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#82
// Offset 316
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#83
// Offset 318
STR X12
RST Y17

// Rung MPO_Program#84
// Offset 320
STRN Y17
JMP MPO_Program.S1

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
SG SLD_Program.S0

// Rung SLD_Program#2
// Offset 2
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#3
// Offset 10
STR C1600
OUT Y30

// Rung SLD_Program#4
// Offset 12
STR C1601
OUT Y31

// Rung SLD_Program#5
// Offset 14
STR C1602
OUT Y32

// Rung SLD_Program#6
// Offset 16
STR C1603
OUT Y33

// Rung SLD_Program#7
// Offset 18
STR C1604
OUT Y34

// Rung SLD_Program#8
// Offset 20
STR C1605
JMP SLD_Program.S1

// Rung SLD_Program#9
// Offset 22
SG SLD_Program.S1

// Rung SLD_Program#10
// Offset 24
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#11
// Offset 32
STRN C1605
JMP SLD_Program.S0

// Rung SLD_Program#12
// Offset 34
STRN X35
OFFDTMR T200 1750 C1651

// Rung SLD_Program#13
// Offset 38
STR C1651
OUT Y30

// Rung SLD_Program#14
// Offset 40
STRGE T200.Acc 1750
FLASHER 500 500 Y899

// Rung SLD_Program#15
// Offset 48
SG SLD_Program.S2

// Rung SLD_Program#16
// Offset 50
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#17
// Offset 58
STRN C1605
JMP SLD_Program.S0

// Rung SLD_Program#18
// Offset 60
STR ST1
SGSET SLD_Program.S3

// Rung SLD_Program#19
// Offset 62
SG SLD_Program.S3

// Rung SLD_Program#20
// Offset 64
STR C1610
OUT Y30

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STR C1200
OUT Y39

// Rung SSC_Program#4
// Offset 12
STR C1201
OUT Y40

// Rung SSC_Program#5
// Offset 14
STR C1202
OUT Y41

// Rung SSC_Program#6
// Offset 16
STR C1215
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y35

// Rung SSC_Program#7
// Offset 32
STR C1216
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y36

// Rung SSC_Program#8
// Offset 48
STR C1217
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#9
// Offset 64
STR C1218
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#10
// Offset 80
STR ST2
ANDPD X47
ANDPDPF
STR ST2
AND CT150.Done
CNT CT150 100

// Rung SSC_Program#11
// Offset 88
STR C1203
JMP SSC_Program.S1

// Rung SSC_Program#12
// Offset 90
SG SSC_Program.S1

// Rung SSC_Program#13
// Offset 92
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#14
// Offset 100
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#15
// Offset 102
STRN X41
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#16
// Offset 118
STRN X40
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y36

// Rung SSC_Program#17
// Offset 134
STR X40
AND X41
JMP SSC_Program.S2

// Rung SSC_Program#18
// Offset 137
SG SSC_Program.S2

// Rung SSC_Program#19
// Offset 139
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#20
// Offset 147
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#21
// Offset 149
STR X44
ANDPDPF
STR ST2
CNT CT150 300

// Rung SSC_Program#22
// Offset 154
STRN CT150.Done
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y35

// Rung SSC_Program#23
// Offset 170
STR X46
STR ST2
CNT CT151 1300

// Rung SSC_Program#24
// Offset 174
STRN CT151.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#25
// Offset 190
STR CT150.Done
AND CT151.Done
JMP SSC_Program.S3

// Rung SSC_Program#26
// Offset 193
SG SSC_Program.S3

// Rung SSC_Program#27
// Offset 195
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#28
// Offset 203
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#29
// Offset 205
STR X46
STR ST2
CNT CT152 300

// Rung SSC_Program#30
// Offset 209
STRN CT152.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#31
// Offset 225
STR CT152.Done
JMP SSC_Program.S4

// Rung SSC_Program#32
// Offset 227
SG SSC_Program.S4

// Rung SSC_Program#33
// Offset 229
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#34
// Offset 237
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#35
// Offset 239
STR X46
STR ST2
CNT CT153 135

// Rung SSC_Program#36
// Offset 243
STRN CT153.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#37
// Offset 259
STR X44
STR ST2
CNT CT154 210

// Rung SSC_Program#38
// Offset 263
STRN CT154.Done
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y36

// Rung SSC_Program#39
// Offset 279
STR CT153.Done
AND CT154.Done
JMP SSC_Program.S5

// Rung SSC_Program#40
// Offset 282
SG SSC_Program.S5

// Rung SSC_Program#41
// Offset 284
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#42
// Offset 292
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#43
// Offset 294
STR X46
STR ST2
CNT CT155 1100

// Rung SSC_Program#44
// Offset 298
STRN CT155.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// End of Code Block SSC_Program
$PGMEND SSC_Program

// Beginning of Code Block hunt_exp_light
$PRGRM hunt_exp_light

// Rung hunt_exp_light#1
// Offset 0
STR ST2
COPY 0x1 "4 0x0 MC402 Y39 1"

// End of Code Block hunt_exp_light
$PGMEND hunt_exp_light

// Beginning of Code Block HWB_PickUp
$TSK HWB_PickUp

// Rung HWB_PickUp#1
// Offset 0
NOP

// End of Code Block HWB_PickUp
$TSKEND HWB_PickUp

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"C1","copy","",""
"C11","C11_Interlock","","Used to delay logic by one scan"
"C12","C12_Interlock_2","","Used to delay logic by one scan"
"C20","HBW_Has_Pallet","","True when carrying a pallet"
"C51","X_Direction","","True: Left False: Right"
"C52","Z_Direction","","True: Down False: Up"
"C80","Conveyor_Timeout","","Bit high when Conveyor Timeout timer active"
"C90","HBW_XY_PID_EN","","Enables PID control in HBW_Move_XZ"
"C101","HBW_T1_Send","Modbus MC101","Task to deliver a pallet to conveyor"
"C102","HBW_T2_Receive","Modbus MC102","Task to pickup a pallet from conveyor"
"C103","HBW_T3_Reset","Modbus MC103","Reinitialize and home all axises"
"C104","HBW_T4_Manual","Modbus MC104","Switch to manual mode"
"C110","HBW_Move_X_L","Modbus MC110","Move Horizontal Axis towards bay"
"C111","HBW_Move_X_R","Modbus MC111","Move Horizontal Axis towards Conveyor"
"C112","HBW_Move_Y_In","Modbus MC112","Move Cantilever In"
"C113","HBW_Move_Y_Out","Modbus MC113","Move Cantilever Out"
"C114","HBW_Move_Z_Up","Modbus MC114","Move Vertical Axis Up"
"C115","HBW_Move_Z_Down","Modbus MC115","Move Vertical Axis Down"
"C116","HBW_Conveyor_In","Modbus MC116","Move Conveyor In"
"C117","HBW_Conveyor_Out","Modbus MC117","Move Conveyor Out"
"C130","HBW_Status_Ready","Modbus MC130","On when ready for a task"
"C133","HBW_Mov_Conveyor","Modbus MC133","Status Conveyor Moving"
"C134","HBW_Moving_X","Modbus MC134","Status GantryMovingX"
"C135","HBW_Moving_Y","Modbus MC135","Status GantryMovingY"
"C136","HBW_Moving_Z","Modbus MC136","Status GantryMovingZ"
"C138","HBW_Status_Y_Pos","Modbus MC138","Current Y position"
"C141","HBW_Target_Y_Pos","Modbus MC141","Target Y position"
"C150","HBW_MoveComplete","","HBW_Move_XZ completion interlock."
"C180","HBW_Fault","Modbus MC180","Status in Fault State"
"C182","Fault_X_Target","","Active when X target out of range"
"C183","Fault_Z_target","","Active when Z target out of range"
"C400","VGR_T0","",""
"C410","VGR_T1","",""
"C420","VGR_T2","",""
"C430","VGR_T3","",""
"C440","VGR_T4","",""
"C500","VGR_Man_Control","",""
"C799","VGR_RESET","",""
"V105","HBW_Task_X_slot","Modbus MHR105","Value for slot X coord"
"V106","HBW_Task_Y_slot","Modbus MHR106","Value for slot y coord"
"V118","HBW_PWM_Set_X","Modbus MHR118","Set Horizontal Axis PWM Duty Cycle %"
"V119","HBW_PWM_Set_Y","Modbus MHR119","Set Cantilever Axis PWM Duty Cycle %"
"V120","HBW_PWM_Set_Z","Modbus MHR120","Set Vertical Axis PWM Duty cycle %"
"V131","HBW_Cur_Progress","Modbus MHR131","0 to 100 percent job completion"
"V132","HBW_Cur_Stage","Modbus MHR132","Current stage number"
"V137","HBW_Status_X_Pos","Modbus MHR137","Current X encoder position"
"V139","HBW_Status_Z_Pos","Modbus MHR139","Current Z encoder position"
"V140","HBW_Target_X_Pos","Modbus MHR140","Target X encoder position"
"V142","HBW_Target_Z_Pos","Modbus MHR142","Target Z encoder position"
"V181","HBW_Fault_code","Modbus MHR181","Current Fault code"
"V801","VGR_Fault_Code","",""
"N810","VGR_Rot_Target","",""
"N811","VGR_X_Target","",""
"N812","VGR_Y_Target","",""
"D0","MC","",""
"D1","Feeder_Extend","",""
"D140","X_Start_Position","","Distance to target"
"D142","Y_Start_Position","","Distance to target"
"D143","HBW_PWM_Cur_X","","PWM value for X for XZ movement task"
"D144","HBW_PWM_Cur_Z","","PWM value for Z for XZ movement task"
"T3","T_HBW_S6","",""
"T4","T_Conveyor_Timer","","Used to detect conveyor faults"
"MPO_Program.S2","Vaccum_MO","",""
"MPO_Program.S3","Vaccum","",""
"MPO_Program.S4","Vacumm_MO","",""
"MPO_Program.S5","Vaccum_Load","",""
"US0","_CP_Strogram_A","","CP_State_Program"
"US1","_VGR_Movement","","VGR_Movement"
"US2","_SSC_Check_InOut","","SSC_Check_InOut"
"UB0","_VGR_MisScan_A","","VGR_Movement.Done ThisScan"
#END

