// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\brent\Desktop\factory\ui_cda_mini_factory_fa23\fa23_plc.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
52740d1fc9856b60e576d449ed147ef46ff82c664c128cbe948b9de6c9e5989b763b6efdf029f70b
293d6e55213d4dd7b1fd0c7de02982e51ca435be9a6b74d8803f639314e5758c8649391ed49330e4
6df79d3d95a85693d49b42739613395f89dfe8f025f11eecd60a224c966ebc5bbb5af16235b1c7ec
d509f947806e7e9e95fd97c37c786d090035443c1697b273770e98fbe0141cf095a1b6f93b2f0658
ba8e97e9218dcda2e7b54667b6cc238f79bd9e52d56f5f7610fc485b8e934f7bbb0a8a355aeab2be
14da8b34bddb489e1ef4c885b3534e099576ce898d635192c2e5cf590cdcc8d06903d408d50afcc1
57dd03b2a67c85ee4cb04d6bf4e9762fb03c10f374f7d3b4a6e1a929d9dde467894b561edba342e5
5acea10bf6a18f93bdc10177bd38028346faee8ae560aa3531221af65fb470d99cc4a700b8754641
13bc23b352852b1626ea9f608f423a1eddec422066d9607ffab6a85eb11d4b1aac6dec36128bef4f
8f99e44683087213e5be1f0bc9f66274e686f540fc9241b708c8e695026d54edcd7936991f341b62
c53fff130567ab2bc9424138ddece3a27a915d172531fb82353469d1007f570916d8f00831884387
a18261ed70ac9f92a2056d73e1e316d2e84dba7c02bda88aa7d34edb33d5c6fa4b12b90631af363a
41abd87cbff6dcadd3d3b3371b9927ca262a0dd58eafb84cf417fd902dc70f42605d3ef956efef2b
cda91c1af009de1e0a5f864586629e2fdc9e6efd63a8c852935c9de1ac01d7b75dca7c4ccdc4ac45
446cff15c3ffff5587979ce60f9696d456817811e2165d085b72e2418ea59402c97e49ea950abab5
38c2fa60e31c903897d7843a686fdbda96cd79ecf68d77ea8b91cbc385b25102fc99e7bb4fb6d1bb
e0027f786fdb9b7a8d3ebd9e28468f2754f2b99eb4a0c4ab7c4dfb6d3e662d7f2d967f7e83615dc3
05247f91362261aeffe552b6afe5637158851164259cb74db25260a45067df1270a9f5472ae98352
917c0c92ee8895987dc399150620c2fc23af8b56d326c0c1f3462bec5c8148d67c32a7a3fee45e09
00690183a14e3e64446660b698ecdf6f23485d316570e08b6bf1b7413ea522e4ee63c94891d0c0ab
2586038ef08867b702bb469c34d6fe07fbb5056eaa04c723f28168bd8aebcb1e71ada77f6f18224a
ae513ff13673f9ba983214a657f3822c930160eb2718f3dff86313abeb9ae89fe99846b68da2ed78
07105a568b6fd767a70b315e78dc4a91303b6a130b571d4b6d44396005085b2319078fdb05708a40
a811cdda05f4cbdd9d3c55de02bec782742cf88b369b56a96b360744cc865a6f7d53c73bf660e1f8
3cf77de83b58d270eb27852aa53a7b199dcd1e53366e4073842ae7e3cd2633712969263ccbc350c0
d267a62c872f14ae261b424dc343c168ac7ac8b708e6f4096430a642c28da96d45e1134795c4c7ed
5b1eba7800bf0acdfc3fde23ae150727293666f21e42438d2d44432b223abf22db4f070c1abd49ef
8aed3df8dc26b17c2ad6381e16248012adf38162afc71e300d4acaa11954fbb455b9454e51722028
0e64db706f5471e74ab1497b8ef4c1d459286f150071151ba8006496f76877ab6bc7bf531d184dd4
4fa31e19d32c40a2938a3b3d5ec5386778ea0be71fb4814ccebbb2550fc8ac4613d339b999e82e59
89eaf58b80ca3f8f72e27d3cb3ffc43cc956fbd27c6cba02efd91ab55649538ec2f562554d46f549
9a27db27ec68f077e4713ece33f859394c294eae4d32581c8e92b11e66e9be980980946d45aa5e36
c6396bd26122e8aabfca8888c25610934df4119deeca8f0654ed5e1ddb998cf9bbbbf169f851231f
da62cdf16c5ad1b75276163453f8f9e7b1d953b8b9e146f71c80f7099a100dff4ea01f72bfe0b5dd
37ab1e4de35b057eb056abcf58f85d6e223205c916ce8fad9be8b360d616b96efcec9ddb33ffc8c2
a1f01295aca17aae3148740a17bab385f2ccacbcb70c6b525e1fdd3879919c4af87d6278f7a55310
0e583a453ae174d44c64362ddb8eeb383816a1e9da925fb2d3f7f1d534d4269926e4506554be9d89
b132aebbf398114f44a1e1ccf017dd5741601461758b23e451ceb8441827ccdc04f8b3e9b8ad1c4c
7b19124da87025090aa791f7d8b45e79d2b5d471b3162d574fc3f66d1d16b305ca84830cefc86367
11a51dde607cd7bb0a477cda6aaece40634cd65c5ebb0362a5ba031b9693c3fd21b8c9934be2e5c1
9b15b5b549ed4b78e67157b699400540e34c6fb1a8d2cddb06e31d74d2e2cfcfb5e4d2a346efe6ec
de99e237cbc47cfa8ccf6b8f088b2c48efffb3cf8c10ac989eb89b66c82a8b866d9d80bcd9158e14
4e905f2cce7e1a4347a6978db3fe79c8ce54ef80d19dbc28eda666a9917a562fb5ef5f2427860122
0d7cb08663a706c9dbb971a45ef30058abd2e4852030590e6ca2bf5965e56754ee7b85c5d82387fd
8ec1be5439ec1ca7adaff987e9ff54af02d438a2964711ab934b325b4ad891007f428544c71c7cd9
2c9a903a6618143db2f244403c60aded0c1eb98bf885abaec8f07f0a6e707073635b871e6f518944
43673db303026ecb6d5ec06d4b98b76e2b16ac2228829e90290571f20aa0661812c771d0fe03bc17
b05b4926aeaedd9a4f0cccabd6a1a745870c8db1e6696b63f02e830d9960ac80ae641d1abe38b155
ec6c2f44c0f9b3ed4612346ebd9aba0d82457b7a5b0996fadbfd512a9557246847bcadc6d742153e
27415eeaf7c26c29e66b17f75cfc2268d640b767a0459fb7e87d85233b88726cd7cfb2be78cc0c4a
371f547b44ef9b31c7852739fdb742a83c7f593a5716d7568149104b8adbcfc72f82d7bbaec90e1a
8fdbe1b1484088af5008434ac35bb199b316dd9bda372bac7338b571cf0d94d36c7a7ffe8f395c19
a4bb2b4882e403c935fcd07c2f843d699b4cf87f46ba34c8e8611073bd581327794958903e77f4b8
7cd7530ba4abd347e8930ff752b7f447d581e3619464ffc0d0ce96c5e7d446947f01aa82cc337085
2b72321fdb2ad597a0af942984c97718e7e3abfdd72029b4a6d9a8ab38e781853e1b84dcd8c5c9d6
fb58355163d651812b792ce8fc80e9b934bc1a79bc0f2f7bef28de0daa8a81614e7cb22408867a66
0013ca58104e94eac7ac39801fe7cfaeb99f57c3c040f90b3f507a906ca09698993c701daa57cbea
fee6b357a199990b0c5e8009a995b5eeb3f561a82a97ee55709975fcea9e13b992e4644d4e2caeda
7f8adf1b3679f8fba479adde6f6fde65288d7cb96ea03d2a3badfaea2728bf9b9802ebd709567755
899944dca863937d07e9c204fbe758f7abdf5b70ffaf599c00990b36996ba7374d90c2559e0ca550
c6f54312886c6f9d4c37be29f1b9f376784b447564452935559bed871a17bf79d2b8c30d9f771080
2248088d62a01c325a308d7535e7e7566dd084ec947189a9c07f6c6006048805e1ca6e72565d9af8
3fd2b50dafd58b8311104e9b0381074fae129f263e305ad67ba3a2cb8da76691d59ba3eda483611a
934c9208ffa5acf22b4e8af810d2321c5402b5e6f9da7abf484c06043ddaef1bb109a6929edbb60c
5fe2354048695d9703e38aa967e2f29c7c556e40ad1d1219d9be80aa65777722ede826cc70fd4442
4cc7a133c01ab338391e737614b3d88a0b910ca7579b0080da9a1437b2f319c572645a7037093e16
93ba7b8cc885bdfdb493711a935f27574672f888908f237aa463f0cfa7eec43e80feab4ee142a81b
3cd9f1d1387734af242f0db2bc2c6963386c2b9f130b10a6d863149bfe7cc318f249d7ccfcfa8a7a
db9c48cf53c2e13581f4bd13c552f33405dd5f9fa73fc259aee46ee667fd60cb38b4456f5bf57d36
9e8c13bc7c2b7a80765e0cfd2b99744cfc6a01099726e943bf4f236db93e22bcf713a7d29bb9af8d
452877c16ef2c3c4afdfcec2090a10202656a4851999c383145ffebf5589ba0ce3c98eb0973ef549
2350110b85edac7361b50dea78370d2a21bf0bc46ef20dcf1d605d781043649d95f62da3b44d79b2
edf08bb531a9e7c23b3b66bc77a1c55b21401ec32542d1c33e9f048947bb8e0c10f5d5a62455d768
b359e228ab31ac07f1dd42c298d8571c286ce3989af3bf7a636de6f080823503b707eb8c834825ad
91bb95f23629299c9869dd1ceb2973277e6f66409e1f7fefe4d18a047c3d8ce3bc45fd23d75d9c57
3cbdf7bd599b5d8ab0e982bd4f9ee28328020975a7a24b861fb2bb756e147a0c69f4f954725ee0cd
1714fbab3ee17f0355a6ca93bfeb817cc4dd376e265df3a51345f0be276b510f3424dcb4e2bdae32
474d539b43e3b985b7f444df0e1ef32f0533bd3b9319f1a94c5d5346696e501b72ecc6f8520f4042
dadd578871490045a32cec96737fc478f148505eb59eedb6957715f4059d5268cfc51b9cf9394bb2
180145cd1e3eb8c93a816a0699d64300b5e5620b52afbe0e9ad1d78a7ed2914464700ad30ed39cfc
bba2030792fd82b6f739f6c32ce5beb30f6ebaaadea2c4b69975f3b72c6528bbf4d73966137ea64a
74e3fc1d5fe5ed39bbfd3b264b343982409cb0d3b686c5bae5db976cab9b1e905b05ec00a9c98f6e
34bbc748739172b84cb050ee1fa5d7cc849c4a844701ec62527ee8cb07aa508620876f76ae7d99b1
4322b917f16481cacba39e759a2b06fb39649c64de8b7495a21cc64201eb760e69f60870608ca62c
4fbb2c621f617ccfbfd682c3c5c208e0f5a74614c03a3d7f63e7bffd41cef8989f33814489d5cd79
5e9fb540b1c7e99a91b9d000370067ec0ec904b870898d19bb9a38279f1148f05a7612d0656f1733
6357b80a6156778d7059be08f256bdabea341b79f35b13f286fbf5a5969ee985eb9bfc83abf08d8e
c1132362acd34bc0b5097c3f564eddc9b3f3e2671e86b50d17ca14e5c3aa0a66a22e292b116fb057
886282e3f97d67982d20a48c3a56922225271dbbfb812a73082f9f4c6b8961462b454f8fa84383fa
70bfbd050069c263a675cf9c1e6c1223358aebec4965d10c987a69bee02668ae33f0a2e176c77241
ab8128f38ccf4e04915cd6b021917a5e85587ec987a581567fe3586526e74184732a5651e7eb993d
7c78a7e49cf3a65400416845402903dd80247b7e70b004f8fb2283594db86b4896e711269120e461
b9512706c204c1f187b2670cf165c2b0b88df08acadbe4a9290c648f1dd9d60b17c2bad14104a295
d1a26399d6bf0fc4013d812869f1d5a07a3e2e4674b5e54c4fb4d7a2c1c79c06a01786e8abbacd18
ef3838798911c9ac7d551a4c361453e3e36e560eacd012cd6ed5d4840c9b5b46240ad9cc8c878c16
63a0e8960e883074c4e78de797a758faf1fe65aad060fd6d310acd17863d9af9c08dacdbe23df1fd
70d8ed12ce571ee19a98ab47f3bcc9f92af59e5adb757d387e35538841a7ba6f1ce1282d1f600240
207e993b5bc81307f37fc973f90f79963d013bfa591c94cdf0e4af9471b51ced8ce651212a8f2117
544c8441b6a0f7d0a35ea9ee8fe6357bad7acc7f7aee50597c790fbf4704025a5f74c46ef020ff25
5041e50fa544c3a655773e5200ff9244cb6a1d49034a9d5d6e0f75d31c40a55b02f9369c015ce5b0
2269e659de10ba356ff1a62e1f9945db7d79328795e2623de9cd1888b6e98a490e9dc0bc4780788e
ffa0656c42a990f79d08d7cbe086b0d676db39a9d64841ed4c08a347fcd9f678711df0e0b71975d0
ba2695165343fe6cc2076d3827cae0ec75da88a3d054d6f62660c9527c0d76834c3e6638285e9b0d
8ea9ae48a11db33c5d94d6abb456b431a6033e803452729bc69b18d82cf4b0a61749cac82be0525d
ebe4e9f9f121e2e5acdeebca718d16c5310720cc731389746f66138bbcb1ef58b313e82e14b16b76
9d88ae3b1d8c8ee09fd6a77343cb98a253ef9d29be81c90de5a54235638f2b7ed4b0eab0d15e88c3
fd58eb932775d48e79d4d0acbe9dc0add76209e2e3b63a5b3b9e32f0f036bd0d8bf5108db836cd8d
ba401ee058613d402a928f3d297806adb7a0ab635610cf3175dda1539258768eea4aad441b5b6c89
6442bf984a890d5cd812cf08c5bb39c312581976869700eab6aff6d58a3bf0815d9ab0c35bf4705b
4c273893fb6817f4c683b3ec510b3822b0b57a745ace3c165d134ddf7abda7a8eb1a67b2a4ced9cc
ca01f0678873cbb12fc6c1bfd478e31f332881774177d00a3dbddaa9a85424e6bc8a5d604d50d9e4
41d3f94ee6eaf553651a5d868963907aa53ee08c073578106fe6ec91ff80b52d0d175960c54aced0
7933b5771c7e91ee3d36df1de09297491e3e2e2bcc593eb284aaff8f4553b592d01db74df0b03a71
dd32e6c60e5bcec6269dd5d1043a24b38517ba727f5f9a3675b4ce4188bf742fb6477921ff2358a3
4e93b516b12d89fb1468cd2252e013c7dd9eac68b505cc893e8f35221e54bd1549e8861f543888ce
66c012495cadcc60e48a839f36bedf6ff6f816c240e6021759f8a5d078b5966d29a64e075dbcefa6
524084c51a5c66c1bc487992fb99eefc598f91c39ef542e80e628895d5932560686c231d6f5d3d3f
0b2574f2b7b503f1734e8579a9970c2f0ab53607879c15aabc922c0ddad1bbc946e737f7db842f89
a1abfe4d376907036f72f6155ef11ba7d64bd0f34fbe783ed0866785725066c8d4b8aa8f74856500
28b5e037ab5e28b317464d9a731abc030f4608490b33424e2535fc63d409b8f1ca578d7ce79d9023
1c51647f00dc3847a612dd74bf7a429290e7e592079c6fdc3730b3ff2244252560761698cee18d26
300a239bb7d4761292a6bc0ca7aa72509c1f473fbbb4c396df2f463ae98290aafd866cc516294917
f8c261f5e58b11f560646369370555eab470da275e4fbd34a171755af01c55d600bb95336510c033
9202bd0c970cafda7de3e0c01f23db012830284b05217a03f494802fc87cac802b5c5aa7c0314595
39488cae02913afe4ad0540ede64a34e06ec59cb744c4b200a0b5fed584b71c44dbf51013345fd4f
c17ba73a7569a8b5aa66e194938933e243e1103f028db6f7db191d08f2b577360e768edc2d9d40ce
eedd7c4c449d4389372ca4da060d407567d05b1a52c4fe88c99170a35f5511f72c1fba3b121a7c3c
ff6a7aec3701cc462319a6aa14d6b3594c42e501e16d1d71985226fe52dd4b80db1cedc2e31e6258
60b0746c22c49f5efca666d640420c8ec0431c29530d5a188e822f561dbbce331fb5bc3c471df03f
093f5bf1112f9fb18d940487a6dea72a2b2379b17a178d5c833ccdb6775a23f38dc99bf989e2b4b8
143a8524926751a0155a047505ad369e8e217d4f9df6ce0f1ade0f3a23234863232dc035f717d883
e9298a7cc1e2a86d0637d883e9fdb6e8228401549b2663a4ff1215b824de6c2f8811e05ecd5f91d5
72f8abd3588b33ebe790dec20866442048f26002fca62ab67b06aa676f1a92abb13fc1ac157f7b60
b8a05952bd38c3572902f5991f283bca7cf5e41caa58f6fe83e93ec641e6039b94e32ce2e0f11698
0822113b0d65701ec159c17c6e5f91a114ba3877dcbfa1d13176347e825c548a016a51fe78007b7c
aa25e8a68d10864795ce83276f3caad686dc01f64a35ced9282ba84b5d4c7bf38dbd7715af7a00f1
fdc5351128c6a66f9a7f461f849f5587227c6410e796cb36297508a5de562a11dffe2179a87b6d39
e8aa09661549d3c2518b7fedae12db4a1fc7f2951aa4ad36cfd2a537aca6ce720102ceaa52cb2e11
6ed1eb251ecb0068a61e6a8a3d56c2a668cd489010fa6b1905de8f52036cc8b38633da9eabec8991
ef3ddc8f562ab348eec5dfbec51d7fef507e1448d9f6dcd13653191949e64c958ce43cf4e4401a97
c9718d18534daf8ea12acfb57cc2a806f103dc7a7f5fa4d92e7685f52697d20ca65b534ca7440bad
d9087cace0a3df04d700110d87b2e986d488a48f9cc8413070eb148f67126995963d84fb06ec4a8f
653f958ae8bfc577c1e68ee1d796e57dea55055edd363cb12f39fa5c5225b79050b2af302d941e88
97e924396c4fae04f8dd06dabd7f7dc9d5465e901576ccfa66f771402574be2adc7d3aa0ee814da5
3b4898f08f85d211b7781c2652bdf8139c97d12a95a1b04f3aa5b703ef2e62999a798965a0bbea86
a1224586b93a33efb691d5faf487a2aa0408c0eb515e3735678d825c208e291cb9300f3ec08261ad
f056d4c262f9cb6d870a5d2fc06ab01bdb89b8b1eaa1ca49b36686e2175cbd99aa515f580a7c2118
bb2b78de78de6d273dfc94568b3b7b66b8c87606e44cd8fb02393c2a426da97586dfa679ac8b53e2
f2957ddb3f80dfa327a227531180902efb3f8dab48f6647e6e167e3a8cce7d61e94f834c3e6b2951
35605228a7c695a1383088dca7fb29547176c0f41a06f2ddf50ba9da7a98f87042ff99957b834626
fa31bcd3c3e74d8c02e02aee77f3ce44fa33051cbb4a2eb2a635741954d77efeedc88befca3ef070
14d912bf887f4e73f16d4322d649912aac1aae2ce059073ea5d6e3f9aa4df36a6661bf5f34333447
0418963b8319f470cd84d1a9c67977871b1e1133b0b08ae2288ec2f98d44dd5d89d0f39504aab458
1fbea641735e096e8156f75c742147c1e4c0738290debbd9d1df28ac2dc387e053e9128c3b32ea4a
7b4da7317039745660fc948aaa37e362b20ab6cfed4b28de92da00a173f8903e6c0682d75423d222
95b6d97ca8aebbdcd32068671fb533cdb508deb0c9fe2dca34b487d563a7e8678908380e2b283347
fe971654dc2cfc4bed66bad6f19f953b1e32f1f1d9eddb7af47a41c7abdf62e1be8aeaae03a3ad29
63df2c354dc4533b6a44cc3a83b91cc3fe688112e9a7006b8d08abd283d822dab86c826d7e2addfe
4ed2b452c080fb757e06312e87ba4702f6b19e837437a6ae7cb19e1fc479292591b695fdf33a6948
09a150ffeaf36b66f94f6451be63d4ed23b1a4e3d8dd067530bba0a0de9af691e529baf9bcac79b4
d135489b10f206202f9eef0e6236e4fe142fa317923a0c00e7ca4ee48775ad60bfa13f72b1197916
ba0eb395cdb70161c9ec2d78fe1c1cea78d0c76aeb5d88d779482f9612058146aead88fbe587b802
d45d1db13408769f838510953a5f341c52fc7e174915ca83b5c23bade1258991a1e1933698e46f55
2f5889ae456054a9f94e070911bf803776658ccf2f7bc0f2cc8fe95045555694d15c34bbaa094b13
ba837909580086e83f9016b8804c6b89316b5cd1e108fe01a77777159af45a1cad8982226f81e31a
b46e8fda4088137080edcceaa9e517a8156bba2cac4aa693aa7e3282fd95c1884c94909b756ad682
e2e07c923b0e482a7cd5d24a289f5bcc45e973d8b949aa17f3a80420b330bac1532089406215063a
fd5ab84e2f7de1471a82b56cb41f7b1f0455c1a870617678b0504cc7d1a29761fc9e903c1f47ae07
7a64f9ed813bbb8158bbd74a49cb0540b2266ed4f48d1805145e28d840c0d50b3255c65dc7be5169
dc2b9a6af0dbfafe5bd154973f01ec517ba0942139d373b98b3538cb248152ed09a454728f4610ac
9981f72efeae14dde04f87f2d2384e89f644442375113d8a13b662b2e4fa9c0c837f9144aac7d04a
c599a6750f61aaa930b746e4cbf00d5f6dae296d482b51b65641fd5d028ce29df42061f35448844b
db8bca0743b926283bc870a33cef30df5fc86078365131c01c89edd5511c99517a805c79d237aae6
1ecaa45f8dcd82bd1a50837fd72e506040066ba2361b4f9b4074802442137ac6ba7015fd5f74fd86
e81bb92ac8fd6d480308553a4b27d9586fc3c2f1637f10bd519b0f5d6c5e1570cea261e2e68806f9
da6b2ddd541ed8b362507aabe9880586011239ae8223e8d130aa8119c4170d3cecdbbdf23a7af28f
822d33959e01262a7b6c4b42c1fc2b897556a116551d07a3adaff36ffc0c715d2ad0538e073f01a0
3c8c6ba987212a4341f028cae1825f166c29c3a82ab26d9585581316b92c5b9c1746dd0e7a9562bc
c53e8e2af17981478d31bd600410155baf23b55929696b0244ded8b056e7d58b02a2cba6954b663e
3da235d37311fa6ff203477ea0228beb1ef8b1718ca57fab6983735f0770dc32528f903b27dea0f7
b6939ac5840d7ff5d535f2a6c612b64f525f07eeb9a1a7fec5d890e82e21b0c649d1946b7d53f30f
e92e836f9aac1bb434dfe066b7c012d766943a0e027221b04dbb22150de26052fc5a348dbaee6427
08071cd452810eb677e8d6e4cc5ff5d928a6160350436213f432248b41e7335f8dad4aa498d12352
a903714d2125ba0d5fab27d121be9c6c42f46f33dec46a4de752beaa56cc50fa96aa32ebb1853df7
db421f53be3e92c74172d0ffac664d9e3f9b64ef33b8a98677c14f90a136307724424ec36682d7b9
2a7226a3ea075e0d824fd78fc115f691a6af8e33b287fd39af9afe9df35e66d5085a347572656b75
d66d13765c61038a0904a209bb1ab941f387fa7925f8f9e8e2d6e95144ebc99adf893e58ebb16824
e517a661896401ba604116a2a8f293c96935a195c4fcf05df2da2b51d8117fe10843743cae932217
e31670fa2b7cde2cd8667f087ebc3f60a6ca0239f66c6c6aa8e8a661e421aa6337c30eebabd40020
95b916ff8bf77828bb0db61b861df603feed7bb9870025d342c294066d27955f1271bb82537da568
1663a48e6e7d1e3c97fc3a412c858b272ea9e73ccc60fe32028569a305e5f4cbf4fa71cbc668175c
c7e72aceaf0fd31ddae97201e12668f755618a2ae2e1f87ec66a9a6be884a7eacbc74b9f8b37bf7e
7c8224bee7dfb03d4bcfa9ed572ffc665a163f0ad6349f7a4a3a3e435528e77bf56fd22f8f0887ec
a2a827f53c8e838cd8b2ce27b371a6c5f08bfb9c2db369b7937c7babc71ce5913beea4ff146bf1a9
ff1ff74c39ee6bffe259612d2a678789523d37eacdea888c01cc280ad6bcbcd1f108a937daf51ad0
d8c60365c866302a1547dd3f1075b2687d74658d0cb39b9c655a293cc614d7096dfacfef4bd9cadf
f22dd106e2ca346bc7532395490ddb946e006ac5b31e2086ff226564af16895f25aec6cccd5bd4e0
7bb2db29e9c05e9b78d8b91fc15e814136f0e7b382cb29cbbeee60c093b898d4e44d3376f34182dc
114748afd63a7af082c01cf7a96441e883ee19e19ce244825eae961f0ae9d618629759d017178697
8777133b85561e4742833828334ecc83405e73cd3d956759197b54bb81444ca7a612173eb8055d54
4cf971264b6bc98967076d5b1a3039282c51695a34b9a201f259acb4a77ae12d7625eb0ad19046b7
d289626dd801890809618570d88ed4e43f83a8565985d209e756914ea30e7a7f717391466306a202
57f48a045ff4ead852eafbc890062f6fa0a663f39feca2524fd0842f4a202e93e448b4b871392e76
3e61ff445299f8ea700d8343640bf82034590c5adaa404a10d0b0105cf902ff8db6b59fbecec5fb0
1e5db32826fddf97d65a36eb6e36f63fd3d73afb75272f70ece72ba36839fe3d02ea058be935fb94
9af3f7d807c851c0be0bbecd3ecfbf7ce28162e94f03ccd081f2140af5b16d665a705bad22ecca16
d4eb274eef0a7482a32453afb7f37a41d93ae4ae57701b467b44968273ad01a4a1efd4740edede02
387e2bc45c403493c0dd035528e50c5b73be35e6f48b226559ea3887abd7398b8bd3b6b09e987a8a
ba73b3233b641a1a4b8e87b90b1f5661d7aa8f7474b93b8a12ec9ed20352bf18414ac2ee01dc7904
09cd04154ca1a1d100ac13df1cdf92e930309043caa66402cf4b64a594671f7caf2899808fe951fe
c8db9a6ec2063b9f59ff7b3a05d454503639cc459a86da5009c90a65c6a8c9784ff349c586ec9752
14afb7324ca82dcbcc0b76232a7672e318708ec7f37fae3287f2433fc71174a71b2a159b5d6c39a7
921d4ac3711c8722de436a07acfb1fbfd6e6f05e342330732b63c7ddfe8f1b45f9c566ec9480d065
86d2a0eb65ea167d3796453c880e7eb43f0134093626578c941c48f9378641b029bd28a640961cfb
12e7b640559d6c4cd88aeaa72169da99b195e81230f77739d4e4d7670dd35c6f8bde11b56c89f765
1d4bd854f61b4d95154884602f9f5b1e80ece5fecb86917afd73fefcf5a5a194f2f4e22b0026899e
3e70df211a9d30cebfdb74b92d1f0c8a3abef38ecb227d796c3b44fa60a789aeecaf3430def7ee60
af81634c0ebaceea2ea710410efc358fa0548acf54011c0becc7286bac72e45eb11df266557246f3
de7f8c0cc90280ab7f5b6a4bac28d5494664429d8b327d7c9cd31da48da44b41cf379cfe6ddfb4d1
399625d40d64911b0e0dee5929ce3046cf90d4533d51fa2c14790d9ecaac6f4615b8edbf81853dd0
548f74b21bce4682d520a8b7077c96f6aec52d764b67e8eea374099091c72952807efa452a6a91c8
83adb612221c133603a360d38923eefd8f3c291618ce72494c24acefa0b59c2b737cc7253c78fef8
5b79cc8577135bc405f75d404da6253144ba8821fd711393d1d0b96b0048ca0a3146cb5fbf8b521b
bc2cfe3f09944485d2d817e5a31f1dc10966b43450a4fb91498294fd4ea68eb723489529a596fc8f
d96c3c77bb4f959225c037542f163be7e80ff5281582676b0aedf9ece91366acd4f941d4397696b6
da4365d2bb7c09849336b1b09ac92e0b70e5489c7f5438d1c55e019125ea180e343bfd9b75748ec8
907e9b52fecb8112c54c28617a13ae13867ad747f60f72cd987d3014ed2ea11221bed19619aaebd3
3affd9b3d0f469bcd6d27a1d75a5db267ca3b56a6bfcc8d8a51d121506301fa4f5368d9d641ccf89
3122e286c7f64743fdac3dd650bff237c1270ca1994941db5d38e1c3bbaf680b60edbe5f4d3c7f6b
16e6313f9814e8c110782d9ecefef67e00e7d0cbd9976c877ec1ffca79cbcdfc84dbbf089597f09a
f1ddd8d609b5d4dee61aae4f9d6cae410dd77db35fa8456fc1a5d0b798a6f0e20c5c1d7c90d5d2b3
c93baa48ca889977dac690787fb143821a06d5fff997990dc32f02ab74870cfa7fa4e0ddaea790ca
2e1677a96c696d1c2fd263434927f4fd280ddd689b2336486e359d0b6db0feafd79b779019a3f92a
210a651cd05bfed72868a2e6f416d08086d3c8bb8f2272b78864e27248b0ff79ef186dff40a1390e
7938879682056972787ad7ae0e30d030e688da4fe2e18205a0a403922515d5dc4e723c95b5a82e98
b6b4ed8745093539591b2896c63b6ba375b03e7c31c45e8ef2eabc8c2c91aebb4d108f2c217010e4
51b610b1787b39d0fb74aec56b17742934777935fa7c095da55bc0325d09469d91d4454def72ad45
8a5850dd6440940d05ac947069ccc699533f9f1177417f264dcaf7583c4d5bedbce50a8b49e651eb
bdec3860395ece0080b19cc5d33306a1ed560ee505281bf4e08e0fd2ee57a5bf684e
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 SSC_Copy_State <Virtual>  0
 HBW_Pick TASK  0 -1
 HBW_Copy_State <Virtual>  0
 PID_10 PID  0
 PID_11 PID  0
 hunt_exp_light PROGRAM  0 -1
 HBW_Home <Virtual>  0
 HBW_Pick_Sto <Virtual>  0
 test TASK  0 -1
 HBW_Pickup_ST PROGRAM  0 -1
 HWB_Extend_Arm <Virtual>  0
 HBW_Retract_Arm <Virtual>  0
 HWB_PickUp TASK  0 -1
 HBW_HTO1POS <Virtual>  0
 HBW_Left_1Block <Virtual>  0
 HBW_HomeTo2_Col <Virtual>  0
 HWB_HomeTo3_Col <Virtual>  0
 HWB_HomeTo2_Row <Virtual>  0
 HWB_HomeTo3_Row <Virtual>  0
 HWB_HomeTo1_Col <Virtual>  0
 HBW_move_left_1 <Virtual>  0
 HWB_Home_to_11 <Virtual>  0
 HWB_11_DropOff <Virtual>  0
 HBW_Pickup <Virtual>  0
 HBW_PickUp_R1 <Virtual>  0
 HBW_Send_VGR <Virtual>  0
 HBW_PickUp_VGR <Virtual>  0
 HBW_Return_VGR <Virtual>  0
 HBW_MotorsOff <Virtual>  0
 HBW_ConvTo11 <Virtual>  0
 HBW_Return_Top <Virtual>  0
 HBW_MV_11_12 <Virtual>  0
 HBW_Conv_12 <Virtual>  0
 HBW_Conv_12_Lat <Virtual>  0
 HBW_RETRACT_13 <Virtual>  0
 HBW_Retract_23 <Virtual>  0
 HBW_Conv13_Lat <Virtual>  0
 HBW_Conv_2Row <Virtual>  0
 HBW_PickUp_R2 <Virtual>  0
 HBW_Conv11_Lat <Virtual>  0
 HBW_Retract_12 <Virtual>  0
 HBW_Shift_C1C2 <Virtual>  0
 HBW_Move_R1_R2 <Virtual>  0
 HBW_Retract_22 <Virtual>  0
 HBW_Retract_21 <Virtual>  0
#END

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"VGR Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC410 C410 1 0x0 MC409 C409 1 0x0 MC412 Y28 1 0x0 MC412 MC450 1 0x0 MC411 C411 1 0x0 MC408 C408 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC413 Y29 1 0x0 MC413 MC451 1 0x0 X27 MI200 1"

// Rung VGR_Copy_State#2
// Offset 27
NOP

// Rung VGR_Copy_State#3
// Offset 28
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC800 Y41 1 0x0 Y41 MI801 1 0x0 MC802 Y43 1 0x0 Y43 MI803 1 0x0 MC804 C804 1 0x0 MC805 C805 1 0x0 MC806 Y44 1 0x0 MC807 Y20 1 0x0 MC808 C811 1 0x0 MC809 C809 1 0x0 MC810 C810 1 0x0 MC812 C812 1 0x0 MC813 C813 1 0x0 MC814 C814 1 0x0 MC816 Y45 1 0x0 MC817 Y46 1 0x0 MC818 Y21 1"

// Rung MPO_Copy_State#2
// Offset 39
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC800 C1600 1 0x0 MC801 C1601 1 0x0 MC802 C1602 1 0x0 MC803 C1603 1 0x0 MC804 C1604 1 0x0 Y31 MI800 1 0x0 MC850 C1605 1"

// Rung SLD_Copy_State#2
// Offset 19
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"SSC Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC606 C1200 1 0x0 MC607 C1201 1 0x0 MC608 C1202 1 0x0 MC609 C1203 1 0x0 MC615 C1215 1 0x0 MC616 C1216 1 0x0 MC617 C1217 1 0x0 MC618 C1218 1 0x0 MC619 C1219 1 0x0 MC620 C1220 1"

// Rung SSC_Copy_State#2
// Offset 25
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block HBW_Home
$LGCMOD HBW_Home

// Rung HBW_Home#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Home#2
// Offset 8
STRN C215
ANDN X0
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 60 60
OUT Y51

// Rung HBW_Home#3
// Offset 26
STRN C215
ANDN X3
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5

// Rung HBW_Home#4
// Offset 43
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y76

// Rung HBW_Home#5
// Offset 64
NOP

// Rung HBW_Home#6
// Offset 65
RET

// End of Code Block HBW_Home
$LGCEND HBW_Home

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 Y40 1 0x0 Y80 MHR102 1 0x0 MC101 C205 1 0x0 MC102 C206 1 0x0 MC103 C207 1 0x0 MC104 C208 1 0x0 MC105 C209 1 0x0 MC106 C210 1 0x0 MC107 C211 1 0x0 MC108 C212 1 0x0 MC109 C213 1 0x0 MC110 C214 1 0x0 MC111 C215 1 0x0 MC112 C216 1 0x0 X2 MI101 1 0x0 X10 MI102 1 0x0 X11 MI103 1 0x0 X3 MI104 1 0x0 X0 MI105 1 0x0 X6 MI106 1 0x0 X7 MI107 1 0x0 X8 MI108 1 0x0 X9 MI109 1 0x0 $HBW_Encoder_X.Acc MHR1 1 0x0 $HBW_Encoder_Z.Acc MHR2 1"

// Rung HBW_Copy_State#2
// Offset 55
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block HBW_HomeTo2_Col
$LGCMOD HBW_HomeTo2_Col

// Rung HBW_HomeTo2_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_HomeTo2_Col#2
// Offset 17
STRGE -2775 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_HomeTo2_Col#3
// Offset 22
NOP

// Rung HBW_HomeTo2_Col#4
// Offset 23
NOP

// Rung HBW_HomeTo2_Col#5
// Offset 24
NOP

// Rung HBW_HomeTo2_Col#6
// Offset 25
RET

// End of Code Block HBW_HomeTo2_Col
$LGCEND HBW_HomeTo2_Col

// Beginning of Code Block HWB_HomeTo1_Col
$LGCMOD HWB_HomeTo1_Col

// Rung HWB_HomeTo1_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HWB_HomeTo1_Col#2
// Offset 17
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_HomeTo1_Col#3
// Offset 22
NOP

// Rung HWB_HomeTo1_Col#4
// Offset 23
NOP

// Rung HWB_HomeTo1_Col#5
// Offset 24
RET

// End of Code Block HWB_HomeTo1_Col
$LGCEND HWB_HomeTo1_Col

// Beginning of Code Block HWB_Home_to_11
$LGCMOD HWB_Home_to_11

// Rung HWB_Home_to_11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HWB_Home_to_11#2
// Offset 22
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_Home_to_11#3
// Offset 27
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HWB_Home_to_11#4
// Offset 49
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_Home_to_11#5
// Offset 54
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HWB_Home_to_11#6
// Offset 73
NOP

// Rung HWB_Home_to_11#7
// Offset 74
NOP

// Rung HWB_Home_to_11#8
// Offset 75
RET

// End of Code Block HWB_Home_to_11
$LGCEND HWB_Home_to_11

// Beginning of Code Block HWB_11_DropOff
$LGCMOD HWB_11_DropOff

// Rung HWB_11_DropOff#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HWB_11_DropOff#2
// Offset 8
STRGE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_11_DropOff#3
// Offset 13
STRN C215
ANDN C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51

// Rung HWB_11_DropOff#4
// Offset 31
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y4
AND ST2
OUT Y5

// Rung HWB_11_DropOff#5
// Offset 51
STRGE 2850 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_11_DropOff#6
// Offset 56
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 60 60
OUT Y7

// Rung HWB_11_DropOff#7
// Offset 73
RET

// End of Code Block HWB_11_DropOff
$LGCEND HWB_11_DropOff

// Beginning of Code Block HBW_PickUp_R1
$LGCMOD HBW_PickUp_R1

// Rung HBW_PickUp_R1#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R1#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R1#3
// Offset 41
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R1#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R1#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_PickUp_R1#6
// Offset 69
NOP

// Rung HBW_PickUp_R1#7
// Offset 70
NOP

// Rung HBW_PickUp_R1#8
// Offset 71
NOP

// Rung HBW_PickUp_R1#9
// Offset 72
NOP

// Rung HBW_PickUp_R1#10
// Offset 73
RET

// End of Code Block HBW_PickUp_R1
$LGCEND HBW_PickUp_R1

// Beginning of Code Block HBW_Send_VGR
$LGCMOD HBW_Send_VGR

// Rung HBW_Send_VGR#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Send_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_Send_VGR#3
// Offset 37
STRN C215
AND X2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y48
AND ST2
OUT Y49

// Rung HBW_Send_VGR#4
// Offset 56
NOP

// Rung HBW_Send_VGR#5
// Offset 57
NOP

// Rung HBW_Send_VGR#6
// Offset 58
RET

// End of Code Block HBW_Send_VGR
$LGCEND HBW_Send_VGR

// Beginning of Code Block HBW_PickUp_VGR
$LGCMOD HBW_PickUp_VGR

// Rung HBW_PickUp_VGR#1
// Offset 0
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_PickUp_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_PickUp_VGR#3
// Offset 37
STRN C215
AND X11
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_PickUp_VGR#4
// Offset 56
NOP

// Rung HBW_PickUp_VGR#5
// Offset 57
NOP

// Rung HBW_PickUp_VGR#6
// Offset 58
RET

// End of Code Block HBW_PickUp_VGR
$LGCEND HBW_PickUp_VGR

// Beginning of Code Block HBW_Return_VGR
$LGCMOD HBW_Return_VGR

// Rung HBW_Return_VGR#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C253
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y6

// Rung HBW_Return_VGR#2
// Offset 22
STRN C215
AND X1
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_Return_VGR#3
// Offset 41
STRN C215
AND C251
DUPBOOL
ANDN X1
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_Return_VGR#4
// Offset 63
STRLE 2575 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_VGR#5
// Offset 68
NOP

// Rung HBW_Return_VGR#6
// Offset 69
NOP

// Rung HBW_Return_VGR#7
// Offset 70
RET

// End of Code Block HBW_Return_VGR
$LGCEND HBW_Return_VGR

// Beginning of Code Block HBW_MotorsOff
$LGCMOD HBW_MotorsOff

// Rung HBW_MotorsOff#1
// Offset 0
STRN C215
ANDN ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_MotorsOff#2
// Offset 18
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_MotorsOff#3
// Offset 36
STRN C215
AND ST2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
OUT Y48

// Rung HBW_MotorsOff#4
// Offset 54
NOP

// Rung HBW_MotorsOff#5
// Offset 55
NOP

// Rung HBW_MotorsOff#6
// Offset 56
NOP

// Rung HBW_MotorsOff#7
// Offset 57
RET

// End of Code Block HBW_MotorsOff
$LGCEND HBW_MotorsOff

// Beginning of Code Block HBW_ConvTo11
$LGCMOD HBW_ConvTo11

// Rung HBW_ConvTo11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_ConvTo11#2
// Offset 22
NOP

// Rung HBW_ConvTo11#3
// Offset 23
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_ConvTo11#4
// Offset 28
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_ConvTo11#5
// Offset 50
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_ConvTo11#6
// Offset 55
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_ConvTo11#7
// Offset 74
NOP

// Rung HBW_ConvTo11#8
// Offset 75
NOP

// Rung HBW_ConvTo11#9
// Offset 76
RET

// End of Code Block HBW_ConvTo11
$LGCEND HBW_ConvTo11

// Beginning of Code Block HBW_Return_Top
$LGCMOD HBW_Return_Top

// Rung HBW_Return_Top#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Return_Top#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HBW_Return_Top#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_Top#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_Return_Top#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return_Top#6
// Offset 69
NOP

// Rung HBW_Return_Top#7
// Offset 70
NOP

// Rung HBW_Return_Top#8
// Offset 71
RET

// End of Code Block HBW_Return_Top
$LGCEND HBW_Return_Top

// Beginning of Code Block HBW_MV_11_12
$LGCMOD HBW_MV_11_12

// Rung HBW_MV_11_12#1
// Offset 0
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_MV_11_12#2
// Offset 21
NOP

// Rung HBW_MV_11_12#3
// Offset 22
NOP

// Rung HBW_MV_11_12#4
// Offset 23
NOP

// Rung HBW_MV_11_12#5
// Offset 24
RET

// End of Code Block HBW_MV_11_12
$LGCEND HBW_MV_11_12

// Beginning of Code Block HBW_Conv_12
$LGCMOD HBW_Conv_12

// Rung HBW_Conv_12#1
// Offset 0
NOP

// Rung HBW_Conv_12#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_12#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Conv_12#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 80
OUT C251

// Rung HBW_Conv_12#5
// Offset 45
NOP

// Rung HBW_Conv_12#6
// Offset 46
RET

// End of Code Block HBW_Conv_12
$LGCEND HBW_Conv_12

// Beginning of Code Block HBW_Conv_12_Lat
$LGCMOD HBW_Conv_12_Lat

// Rung HBW_Conv_12_Lat#1
// Offset 0
NOP

// Rung HBW_Conv_12_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv_12_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv_12_Lat#4
// Offset 42
STRGE 5325 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv_12_Lat#5
// Offset 47
NOP

// Rung HBW_Conv_12_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv_12_Lat
$LGCEND HBW_Conv_12_Lat

// Beginning of Code Block HBW_RETRACT_13
$LGCMOD HBW_RETRACT_13

// Rung HBW_RETRACT_13#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_RETRACT_13#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_RETRACT_13#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_RETRACT_13#4
// Offset 46
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_RETRACT_13#5
// Offset 68
STRGE 7685 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_RETRACT_13#6
// Offset 73
RET

// End of Code Block HBW_RETRACT_13
$LGCEND HBW_RETRACT_13

// Beginning of Code Block HBW_Retract_23
$LGCMOD HBW_Retract_23

// Rung HBW_Retract_23#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_23#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_23#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_23#4
// Offset 46
STRN C215
AND ST2
OUT Y51
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_Retract_23#5
// Offset 65
STRGE 7685 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_23#6
// Offset 70
RET

// End of Code Block HBW_Retract_23
$LGCEND HBW_Retract_23

// Beginning of Code Block HBW_Conv13_Lat
$LGCMOD HBW_Conv13_Lat

// Rung HBW_Conv13_Lat#1
// Offset 0
NOP

// Rung HBW_Conv13_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv13_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv13_Lat#4
// Offset 42
STRGE 7685 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv13_Lat#5
// Offset 47
NOP

// Rung HBW_Conv13_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv13_Lat
$LGCEND HBW_Conv13_Lat

// Beginning of Code Block HBW_Conv_2Row
$LGCMOD HBW_Conv_2Row

// Rung HBW_Conv_2Row#1
// Offset 0
NOP

// Rung HBW_Conv_2Row#2
// Offset 1
NOP

// Rung HBW_Conv_2Row#3
// Offset 2
NOP

// Rung HBW_Conv_2Row#4
// Offset 3
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_2Row#5
// Offset 22
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Conv_2Row#6
// Offset 42
STRGE $HBW_Encoder_Z.Acc 1380
OUT C251

// Rung HBW_Conv_2Row#7
// Offset 47
NOP

// Rung HBW_Conv_2Row#8
// Offset 48
RET

// End of Code Block HBW_Conv_2Row
$LGCEND HBW_Conv_2Row

// Beginning of Code Block HBW_PickUp_R2
$LGCMOD HBW_PickUp_R2

// Rung HBW_PickUp_R2#1
// Offset 0
NOP

// Rung HBW_PickUp_R2#2
// Offset 1
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R2#3
// Offset 20
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R2#4
// Offset 38
NOP

// Rung HBW_PickUp_R2#5
// Offset 39
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R2#6
// Offset 61
STRLE 1400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R2#7
// Offset 66
NOP

// Rung HBW_PickUp_R2#8
// Offset 67
NOP

// Rung HBW_PickUp_R2#9
// Offset 68
NOP

// Rung HBW_PickUp_R2#10
// Offset 69
RET

// End of Code Block HBW_PickUp_R2
$LGCEND HBW_PickUp_R2

// Beginning of Code Block HBW_Conv11_Lat
$LGCMOD HBW_Conv11_Lat

// Rung HBW_Conv11_Lat#1
// Offset 0
NOP

// Rung HBW_Conv11_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv11_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv11_Lat#4
// Offset 42
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv11_Lat#5
// Offset 47
NOP

// Rung HBW_Conv11_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv11_Lat
$LGCEND HBW_Conv11_Lat

// Beginning of Code Block HBW_Retract_12
$LGCMOD HBW_Retract_12

// Rung HBW_Retract_12#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_12#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_12#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_12#4
// Offset 46
RET

// End of Code Block HBW_Retract_12
$LGCEND HBW_Retract_12

// Beginning of Code Block HBW_Shift_C1C2
$LGCMOD HBW_Shift_C1C2

// Rung HBW_Shift_C1C2#1
// Offset 0
STRGE 5320 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Shift_C1C2#2
// Offset 5
NOP

// Rung HBW_Shift_C1C2#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Shift_C1C2#4
// Offset 25
NOP

// Rung HBW_Shift_C1C2#5
// Offset 26
STRN C215
AND ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_Shift_C1C2#6
// Offset 44
NOP

// Rung HBW_Shift_C1C2#7
// Offset 45
RET

// End of Code Block HBW_Shift_C1C2
$LGCEND HBW_Shift_C1C2

// Beginning of Code Block HBW_Move_R1_R2
$LGCMOD HBW_Move_R1_R2

// Rung HBW_Move_R1_R2#1
// Offset 0
STRGE 1700 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Move_R1_R2#2
// Offset 5
NOP

// Rung HBW_Move_R1_R2#3
// Offset 6
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Move_R1_R2#4
// Offset 25
NOP

// Rung HBW_Move_R1_R2#5
// Offset 26
NOP

// Rung HBW_Move_R1_R2#6
// Offset 27
RET

// End of Code Block HBW_Move_R1_R2
$LGCEND HBW_Move_R1_R2

// Beginning of Code Block HBW_Retract_22
$LGCMOD HBW_Retract_22

// Rung HBW_Retract_22#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_22#2
// Offset 22
STRGE 1700 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_22#3
// Offset 27
NOP

// Rung HBW_Retract_22#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_22#5
// Offset 47
STRLE 5300 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_22#6
// Offset 52
STRN C215
AND C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
AND ST2
OUT Y50

// Rung HBW_Retract_22#7
// Offset 72
NOP

// Rung HBW_Retract_22#8
// Offset 73
RET

// End of Code Block HBW_Retract_22
$LGCEND HBW_Retract_22

// Beginning of Code Block HBW_Retract_21
$LGCMOD HBW_Retract_21

// Rung HBW_Retract_21#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_21#2
// Offset 22
STRGE 1700 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_21#3
// Offset 27
NOP

// Rung HBW_Retract_21#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_21#5
// Offset 47
STRLE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_21#6
// Offset 52
STRN C215
AND C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
AND ST2
OUT Y50

// Rung HBW_Retract_21#7
// Offset 72
NOP

// Rung HBW_Retract_21#8
// Offset 73
RET

// Rung HBW_Retract_21#9
// Offset 74
NOP

// Rung HBW_Retract_21#10
// Offset 75
NOP

// End of Code Block HBW_Retract_21
$LGCEND HBW_Retract_21

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#2
// Offset 3
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#3
// Offset 6
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#4
// Offset 9
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#5
// Offset 12
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// Rung $Main#6
// Offset 15
#BEGIN FMT_COMMENT 
"Hunter Demo Light<br>"
#END

STR ST1
RUN hunt_exp_light

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
SG HBW_Program.S0

// Rung HBW_Program#2
// Offset 2
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#3
// Offset 10
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#4
// Offset 12
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#5
// Offset 14
STR ST1
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#6
// Offset 22
NOP

// Rung HBW_Program#7
// Offset 23
STR C213
JMP HBW_Program.S1

// Rung HBW_Program#8
// Offset 25
SG HBW_Program.S1

// Rung HBW_Program#9
// Offset 27
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#10
// Offset 35
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#11
// Offset 37
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#12
// Offset 39
STR ST1
MOVE 0 N1

// Rung HBW_Program#13
// Offset 42
STR ST1
DUPBOOL
STR C205
ANDN C206
STR C206
ANDN C205
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 500 60
POPBOOL
DUPBOOL
AND C205
OUT Y48
POPBOOL
AND C206
OUT Y49

// Rung HBW_Program#14
// Offset 71
STR ST1
DUPBOOL
STR C207
ANDN C208
STRN C207
AND C208
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
POPBOOL
DUPBOOL
AND C207
OUT Y50
POPBOOL
AND C208
OUT Y51

// Rung HBW_Program#15
// Offset 100
STR ST1
DUPBOOL
STR C209
ANDN C210
STRN C209
AND C210
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
POPBOOL
DUPBOOL
AND C209
OUT Y4
POPBOOL
AND C210
OUT Y5

// Rung HBW_Program#16
// Offset 129
STR ST1
DUPBOOL
STR C211
ANDN C212
STRN C211
AND C212
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
POPBOOL
DUPBOOL
AND C211
OUT Y6
POPBOOL
AND C212
OUT Y7

// Rung HBW_Program#17
// Offset 158
STR C213
JMP HBW_Program.S2

// Rung HBW_Program#18
// Offset 160
SG HBW_Program.S2

// Rung HBW_Program#19
// Offset 162
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#20
// Offset 170
STR X0
OUT $HBW_Encoder_X.ResetLevel

// Rung HBW_Program#21
// Offset 172
STR X3
OUT $HBW_Encoder_Z.ResetLevel

// Rung HBW_Program#22
// Offset 174
STR ST1
CALL HBW_Home 0x1 DST511 "3" "3"

// Rung HBW_Program#23
// Offset 182
STR X0
AND X11
AND X3
JMP HBW_Program.S3

// Rung HBW_Program#24
// Offset 186
STR C212
JMP HBW_Program.S3

// Rung HBW_Program#25
// Offset 188
NOP

// Rung HBW_Program#26
// Offset 189
SG HBW_Program.S3

// Rung HBW_Program#27
// Offset 191
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#28
// Offset 199
STR ST1
CALL HWB_Home_to_11 0x1 DST511 "3" "3"

// Rung HBW_Program#29
// Offset 207
STRN C250
ANDN C251
JMP HBW_Program.S4

// Rung HBW_Program#30
// Offset 210
SG HBW_Program.S4

// Rung HBW_Program#31
// Offset 212
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#32
// Offset 220
STR ST1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#33
// Offset 228
STR X10
ANDN C251
JMP HBW_Program.S5

// Rung HBW_Program#34
// Offset 231
SG HBW_Program.S5

// Rung HBW_Program#35
// Offset 233
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#36
// Offset 241
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#37
// Offset 249
STRN C251
AND C250
JMP HBW_Program.S6

// Rung HBW_Program#38
// Offset 252
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#39
// Offset 254
SG HBW_Program.S6

// Rung HBW_Program#40
// Offset 256
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#41
// Offset 264
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#42
// Offset 272
STRN X2
INC N1

// Rung HBW_Program#43
// Offset 274
STRN X2
JMP HBW_Program.S7

// Rung HBW_Program#44
// Offset 276
SG HBW_Program.S7

// Rung HBW_Program#45
// Offset 278
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#46
// Offset 286
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#47
// Offset 294
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#48
// Offset 303
SG HBW_Program.S8

// Rung HBW_Program#49
// Offset 305
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#50
// Offset 313
STR ST1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#51
// Offset 321
STRN C250
JMP HBW_Program.S9

// Rung HBW_Program#52
// Offset 323
SG HBW_Program.S9

// Rung HBW_Program#53
// Offset 325
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#54
// Offset 333
STR ST1
CALL HBW_Return_Top 0x1 DST511 "3" "3"

// Rung HBW_Program#55
// Offset 341
STR X10
ANDN C251
JMP HBW_Program.S10
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#56
// Offset 351
SG HBW_Program.S10

// Rung HBW_Program#57
// Offset 353
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#58
// Offset 361
STR ST1
CALL HBW_MV_11_12 0x1 DST511 "3" "3"

// Rung HBW_Program#59
// Offset 369
STRN C250
JMP HBW_Program.S11

// Rung HBW_Program#60
// Offset 371
SG HBW_Program.S11

// Rung HBW_Program#61
// Offset 373
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#62
// Offset 381
STRE N1 1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#63
// Offset 392
STRE N1 2
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#64
// Offset 403
STRE N1 3
CALL HBW_Move_R1_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#65
// Offset 414
STRE N1 3
ANDLE 1650 $HBW_Encoder_Z.Acc
JMP HBW_Program.S51

// Rung HBW_Program#66
// Offset 423
STRE N1 4
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#67
// Offset 434
STRE N1 5
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#68
// Offset 445
STRE N1 6
AND ST2
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#69
// Offset 457
STRE N1 7
AND ST2
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#70
// Offset 469
NOP

// Rung HBW_Program#71
// Offset 470
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#72
// Offset 473
STR C215
JMP HBW_Program.S1

// Rung HBW_Program#73
// Offset 475
SG HBW_Program.S51

// Rung HBW_Program#74
// Offset 477
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#75
// Offset 485
STR ST1
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#76
// Offset 493
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#77
// Offset 496
SG HBW_Program.S12

// Rung HBW_Program#78
// Offset 498
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#79
// Offset 506
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#80
// Offset 514
STRN C251
AND C250
JMP HBW_Program.S13

// Rung HBW_Program#81
// Offset 517
SG HBW_Program.S13

// Rung HBW_Program#82
// Offset 519
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#83
// Offset 527
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#84
// Offset 535
STRN X2
INC N1

// Rung HBW_Program#85
// Offset 537
STRN X2
JMP HBW_Program.S14

// Rung HBW_Program#86
// Offset 539
SG HBW_Program.S14

// Rung HBW_Program#87
// Offset 541
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#88
// Offset 549
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#89
// Offset 557
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#90
// Offset 566
SG HBW_Program.S15

// Rung HBW_Program#91
// Offset 568
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#92
// Offset 576
STRE N1 1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#93
// Offset 587
STRE N1 2
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#94
// Offset 598
STRE N1 3
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#95
// Offset 609
STRE N1 4
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#96
// Offset 620
STRE N1 5
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#97
// Offset 631
STRE N1 6
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#98
// Offset 642
STRE N1 7
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#99
// Offset 653
STRE N1 8
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#100
// Offset 664
STRE N1 9
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#101
// Offset 675
NOP

// Rung HBW_Program#102
// Offset 676
STRN C251
JMP HBW_Program.S16
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#103
// Offset 685
SG HBW_Program.S16

// Rung HBW_Program#104
// Offset 687
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#105
// Offset 695
STRE N1 1
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#106
// Offset 706
STRE N1 2
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#107
// Offset 717
STRE N1 3
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#108
// Offset 728
STRE N1 4
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#109
// Offset 739
STRE N1 5
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#110
// Offset 750
STRE N1 6
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#111
// Offset 761
STRE N1 7
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#112
// Offset 772
STRE N1 8
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#113
// Offset 783
STRE N1 9
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#114
// Offset 794
NOP

// Rung HBW_Program#115
// Offset 795
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#116
// Offset 797
STRN C250
AND X10
JMP HBW_Program.S17

// Rung HBW_Program#117
// Offset 800
SG HBW_Program.S17

// Rung HBW_Program#118
// Offset 802
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#119
// Offset 810
STRE N1 1
CALL HBW_Retract_12 0x1 DST511 "3" "3"

// Rung HBW_Program#120
// Offset 821
STRE N1 2
CALL HBW_RETRACT_13 0x1 DST511 "3" "3"

// Rung HBW_Program#121
// Offset 832
STRE N1 3
CALL HBW_Retract_23 0x1 DST511 "3" "3"

// Rung HBW_Program#122
// Offset 843
STRE N1 4
CALL HBW_Retract_22 0x1 DST511 "3" "3"

// Rung HBW_Program#123
// Offset 854
STRE N1 5
CALL HBW_Retract_21 0x1 DST511 "3" "3"

// Rung HBW_Program#124
// Offset 865
STRE N1 6
CALL HBW_Retract_21 0x1 DST511 "3" "3"

// Rung HBW_Program#125
// Offset 876
NOP

// Rung HBW_Program#126
// Offset 877
STR C215
JMP HBW_Program.S1

// Rung HBW_Program#127
// Offset 879
STR X11
ANDN C251
ANDN C250
JMP HBW_Program.S11

// Rung HBW_Program#128
// Offset 883
STR X11
ANDE N1 1
JMP HBW_Program.S50

// Rung HBW_Program#129
// Offset 889
SG HBW_Program.S50

// Rung HBW_Program#130
// Offset 891
STR ST1
CALL HBW_Shift_C1C2 0x1 DST511 "3" "3"

// Rung HBW_Program#131
// Offset 899
STRN Y50
ANDN C250
JMP HBW_Program.S11

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#2
// Offset 8
STR ST1
DUPBOOL
STR C410
ANDN C409
STRN C410
AND C409
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
POPBOOL
DUPBOOL
AND C410
OUT Y27
POPBOOL
AND C409
OUT Y26

// Rung VGR_Program#3
// Offset 37
STR ST1
DUPBOOL
STR C408
ANDN C411
STRN C408
AND C411
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
POPBOOL
DUPBOOL
AND C408
OUT Y24
POPBOOL
AND C411
OUT Y25

// Rung VGR_Program#4
// Offset 66
STR ST1
DUPBOOL
STR C406
ANDN C407
STRN C406
AND C407
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
POPBOOL
DUPBOOL
AND C406
OUT Y23
POPBOOL
AND C407
OUT Y22

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STR C813
OUT Y18

// Rung MPO_Program#4
// Offset 12
STR C810
OUT Y17

// Rung MPO_Program#5
// Offset 14
STR C811
OUT Y52

// Rung MPO_Program#6
// Offset 16
STR ST1
DUPBOOL
STR C804
ANDN C805
STR C805
ANDN C804
ORSTR
ANDSTR
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 100
POPBOOL
DUPBOOL
AND C804
OUT Y53
POPBOOL
AND C805
OUT Y15

// Rung MPO_Program#7
// Offset 45
STR C814
OUT Y19

// Rung MPO_Program#8
// Offset 47
STR C809
JMP MPO_Program.S2

// Rung MPO_Program#9
// Offset 49
SG MPO_Program.S1

// Rung MPO_Program#10
// Offset 51
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#11
// Offset 59
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#12
// Offset 61
STRN X24
SET Y17

// Rung MPO_Program#13
// Offset 63
STR Y17
OUT Y20
ANDN X17
ONDTMR T0 1000 Y44

// Rung MPO_Program#14
// Offset 69
SG MPO_Program.S2

// Rung MPO_Program#15
// Offset 71
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#16
// Offset 79
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#17
// Offset 81
STRN X19
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y53

// Rung MPO_Program#18
// Offset 97
STR X19
JMP MPO_Program.S3

// Rung MPO_Program#19
// Offset 99
SG MPO_Program.S3

// Rung MPO_Program#20
// Offset 101
STR ST1
SET Y17

// Rung MPO_Program#21
// Offset 103
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#22
// Offset 111
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#23
// Offset 113
STR X19
SET Y19

// Rung MPO_Program#24
// Offset 115
STR X19
ONDTMR T100 2000 Y18

// Rung MPO_Program#25
// Offset 119
STR T100.DN
JMP MPO_Program.S4

// Rung MPO_Program#26
// Offset 121
SG MPO_Program.S4

// Rung MPO_Program#27
// Offset 123
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#28
// Offset 131
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#29
// Offset 133
STR X19
RST Y19

// Rung MPO_Program#30
// Offset 135
STRN X16
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y15

// Rung MPO_Program#31
// Offset 151
STR X16
JMP MPO_Program.S5

// Rung MPO_Program#32
// Offset 153
SG MPO_Program.S5

// Rung MPO_Program#33
// Offset 155
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#34
// Offset 163
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#35
// Offset 165
STR X16
SET Y19

// Rung MPO_Program#36
// Offset 167
STR Y19
ONDTMR T101 2000 C815

// Rung MPO_Program#37
// Offset 171
STR C815
RST Y18

// Rung MPO_Program#38
// Offset 173
STRN Y18
JMP MPO_Program.S6

// Rung MPO_Program#39
// Offset 175
SG MPO_Program.S6

// Rung MPO_Program#40
// Offset 177
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#41
// Offset 185
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#42
// Offset 187
STR X16
RST Y19

// Rung MPO_Program#43
// Offset 189
STRN Y19
ONDTMR T102 1000 C818

// Rung MPO_Program#44
// Offset 193
STR C818
JMP MPO_Program.S7

// Rung MPO_Program#45
// Offset 195
SG MPO_Program.S7

// Rung MPO_Program#46
// Offset 197
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#47
// Offset 205
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#48
// Offset 207
STRN X15
OUT Y45

// Rung MPO_Program#49
// Offset 209
STR X15
TMRDOWN T102 1000
OUT Y43

// Rung MPO_Program#50
// Offset 213
STR T102.Done
JMP MPO_Program.S8

// Rung MPO_Program#51
// Offset 215
SG MPO_Program.S8

// Rung MPO_Program#52
// Offset 217
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#53
// Offset 225
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#54
// Offset 227
STRN X13
OUT Y45

// Rung MPO_Program#55
// Offset 229
STR X13
TMRDOWN T103 1000
OUT Y21

// Rung MPO_Program#56
// Offset 233
STR T103.Done
JMP MPO_Program.S9

// Rung MPO_Program#57
// Offset 235
SG MPO_Program.S9

// Rung MPO_Program#58
// Offset 237
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#59
// Offset 245
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#60
// Offset 247
STR ST1
OUT Y47

// Rung MPO_Program#61
// Offset 249
STRN X12
ONDTMR T104 1000 Y46

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
SG SLD_Program.S0

// Rung SLD_Program#2
// Offset 2
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#3
// Offset 10
STR C1600
OUT Y30

// Rung SLD_Program#4
// Offset 12
STR C1601
OUT Y31

// Rung SLD_Program#5
// Offset 14
STR C1602
OUT Y32

// Rung SLD_Program#6
// Offset 16
STR C1603
OUT Y33

// Rung SLD_Program#7
// Offset 18
STR C1604
OUT Y34

// Rung SLD_Program#8
// Offset 20
STR C1605
JMP SLD_Program.S1

// Rung SLD_Program#9
// Offset 22
SG SLD_Program.S1

// Rung SLD_Program#10
// Offset 24
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#11
// Offset 32
STRN C1605
JMP SLD_Program.S0

// Rung SLD_Program#12
// Offset 34
STRN X35
OFFDTMR T200 1750 C1651

// Rung SLD_Program#13
// Offset 38
STR C1651
OUT Y30

// Rung SLD_Program#14
// Offset 40
STRGE T200.Acc 1750
FLASHER 500 500 Y899

// Rung SLD_Program#15
// Offset 48
SG SLD_Program.S2

// Rung SLD_Program#16
// Offset 50
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#17
// Offset 58
STRN C1605
JMP SLD_Program.S0

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STR C1200
OUT Y39

// Rung SSC_Program#4
// Offset 12
STR C1201
OUT Y40

// Rung SSC_Program#5
// Offset 14
STR C1202
OUT Y41

// Rung SSC_Program#6
// Offset 16
STR C1215
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y35

// Rung SSC_Program#7
// Offset 32
STR C1216
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y36

// Rung SSC_Program#8
// Offset 48
STR C1217
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#9
// Offset 64
STR C1218
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#10
// Offset 80
STR ST2
ANDPD X47
ANDPDPF
STR ST2
AND CT150.Done
CNT CT150 100

// Rung SSC_Program#11
// Offset 88
STR C1203
JMP SSC_Program.S1

// Rung SSC_Program#12
// Offset 90
SG SSC_Program.S1

// Rung SSC_Program#13
// Offset 92
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#14
// Offset 100
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#15
// Offset 102
STRN X41
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#16
// Offset 118
STRN X40
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y36

// Rung SSC_Program#17
// Offset 134
STR X40
AND X41
JMP SSC_Program.S2

// Rung SSC_Program#18
// Offset 137
SG SSC_Program.S2

// Rung SSC_Program#19
// Offset 139
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#20
// Offset 147
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#21
// Offset 149
STR X44
ANDPDPF
STR ST2
CNT CT150 300

// Rung SSC_Program#22
// Offset 154
STRN CT150.Done
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y35

// Rung SSC_Program#23
// Offset 170
STR X46
STR ST2
CNT CT151 1300

// Rung SSC_Program#24
// Offset 174
STRN CT151.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#25
// Offset 190
STR CT150.Done
AND CT151.Done
JMP SSC_Program.S3

// Rung SSC_Program#26
// Offset 193
SG SSC_Program.S3

// Rung SSC_Program#27
// Offset 195
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#28
// Offset 203
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#29
// Offset 205
STR X46
STR ST2
CNT CT152 300

// Rung SSC_Program#30
// Offset 209
STRN CT152.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// End of Code Block SSC_Program
$PGMEND SSC_Program

// Beginning of Code Block hunt_exp_light
$PRGRM hunt_exp_light

// Rung hunt_exp_light#1
// Offset 0
STR ST2
COPY 0x1 "4 0x0 MC402 Y39 1"

// End of Code Block hunt_exp_light
$PGMEND hunt_exp_light

// Beginning of Code Block HWB_PickUp
$TSK HWB_PickUp

// Rung HWB_PickUp#1
// Offset 0
NOP

// End of Code Block HWB_PickUp
$TSKEND HWB_PickUp

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"C1","copy","",""
"C11","C11_Interlock","","Used to delay logic by one scan"
"C12","C12_Interlock_2","","Used to delay logic by one scan"
"C20","HBW_Has_Pallet","","True when carrying a pallet"
"C51","X_Direction","","True: Left False: Right"
"C52","Z_Direction","","True: Down False: Up"
"C80","Conveyor_Timeout","","Bit high when Conveyor Timeout timer active"
"C90","HBW_XY_PID_EN","","Enables PID control in HBW_Move_XZ"
"C101","HBW_T1_Send","Modbus MC101","Task to deliver a pallet to conveyor"
"C102","HBW_T2_Receive","Modbus MC102","Task to pickup a pallet from conveyor"
"C103","HBW_T3_Reset","Modbus MC103","Reinitialize and home all axises"
"C104","HBW_T4_Manual","Modbus MC104","Switch to manual mode"
"C110","HBW_Move_X_L","Modbus MC110","Move Horizontal Axis towards bay"
"C111","HBW_Move_X_R","Modbus MC111","Move Horizontal Axis towards Conveyor"
"C112","HBW_Move_Y_In","Modbus MC112","Move Cantilever In"
"C113","HBW_Move_Y_Out","Modbus MC113","Move Cantilever Out"
"C114","HBW_Move_Z_Up","Modbus MC114","Move Vertical Axis Up"
"C115","HBW_Move_Z_Down","Modbus MC115","Move Vertical Axis Down"
"C116","HBW_Conveyor_In","Modbus MC116","Move Conveyor In"
"C117","HBW_Conveyor_Out","Modbus MC117","Move Conveyor Out"
"C130","HBW_Status_Ready","Modbus MC130","On when ready for a task"
"C133","HBW_Mov_Conveyor","Modbus MC133","Status Conveyor Moving"
"C134","HBW_Moving_X","Modbus MC134","Status GantryMovingX"
"C135","HBW_Moving_Y","Modbus MC135","Status GantryMovingY"
"C136","HBW_Moving_Z","Modbus MC136","Status GantryMovingZ"
"C138","HBW_Status_Y_Pos","Modbus MC138","Current Y position"
"C141","HBW_Target_Y_Pos","Modbus MC141","Target Y position"
"C150","HBW_MoveComplete","","HBW_Move_XZ completion interlock."
"C180","HBW_Fault","Modbus MC180","Status in Fault State"
"C182","Fault_X_Target","","Active when X target out of range"
"C183","Fault_Z_target","","Active when Z target out of range"
"C400","VGR_T0","",""
"C410","VGR_T1","",""
"C420","VGR_T2","",""
"C430","VGR_T3","",""
"C440","VGR_T4","",""
"C500","VGR_Man_Control","",""
"C799","VGR_RESET","",""
"V105","HBW_Task_X_slot","Modbus MHR105","Value for slot X coord"
"V106","HBW_Task_Y_slot","Modbus MHR106","Value for slot y coord"
"V118","HBW_PWM_Set_X","Modbus MHR118","Set Horizontal Axis PWM Duty Cycle %"
"V119","HBW_PWM_Set_Y","Modbus MHR119","Set Cantilever Axis PWM Duty Cycle %"
"V120","HBW_PWM_Set_Z","Modbus MHR120","Set Vertical Axis PWM Duty cycle %"
"V131","HBW_Cur_Progress","Modbus MHR131","0 to 100 percent job completion"
"V132","HBW_Cur_Stage","Modbus MHR132","Current stage number"
"V137","HBW_Status_X_Pos","Modbus MHR137","Current X encoder position"
"V139","HBW_Status_Z_Pos","Modbus MHR139","Current Z encoder position"
"V140","HBW_Target_X_Pos","Modbus MHR140","Target X encoder position"
"V142","HBW_Target_Z_Pos","Modbus MHR142","Target Z encoder position"
"V181","HBW_Fault_code","Modbus MHR181","Current Fault code"
"V801","VGR_Fault_Code","",""
"N810","VGR_Rot_Target","",""
"N811","VGR_X_Target","",""
"N812","VGR_Y_Target","",""
"D0","MC","",""
"D1","Feeder_Extend","",""
"D140","X_Start_Position","","Distance to target"
"D142","Y_Start_Position","","Distance to target"
"D143","HBW_PWM_Cur_X","","PWM value for X for XZ movement task"
"D144","HBW_PWM_Cur_Z","","PWM value for Z for XZ movement task"
"T3","T_HBW_S6","",""
"T4","T_Conveyor_Timer","","Used to detect conveyor faults"
"MPO_Program.S2","Vaccum_MO","",""
"MPO_Program.S3","Vaccum","",""
"MPO_Program.S4","Vacumm_MO","",""
"MPO_Program.S5","Vaccum_Load","",""
"US0","_CP_Strogram_A","","CP_State_Program"
"US1","_VGR_Movement","","VGR_Movement"
"US2","_SSC_Check_InOut","","SSC_Check_InOut"
"UB0","_VGR_MisScan_A","","VGR_Movement.Done ThisScan"
#END

