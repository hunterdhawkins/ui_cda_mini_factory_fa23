// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\brent\Desktop\factory\ui_cda_mini_factory_fa23\fa23_plc.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
46b737ba2980f0c93b21fc5d2e2cd9167871afe6238eb15e66e3087e2a6bd169b1a6d01ade1f94c1
ea0088fef6081390e3eb58b15331e7ed076a4fe56446e936c46686308a2b633b6d31ace2dfc79fc6
b21b383f317558789ad8873bbd7390fce27568fe742a1e10ed54570c95f9d0d02cd4bacd56113e2b
6f7631b0426cd9bc853adff74612c6b4d2a62b0ced7b1c3f0ec8d5d5c55bcc0a4b6190d35412fe5e
a88eb2de3a98ca0f45176176a38ecc98b52499756e7a3dcbc1e4f6a2b71b7fd49e79e31f7ad6d14a
5727550069cb7c376b416e4a445a657ee2b911fc6151211e63d0d1afa8e21b4d83eed809c4f8fe62
b9e780ccfe8bd3eb72550e40b131ab15c0585dac44569a159534683ea9e983cb1484448f3e44fe03
f40bdee93e376d8935293f9861bbe6f8350f6a526dd71bb7f332bdc9ef68f8a47e5d6b84685b40b6
8d70b799ea82b4ff46f9bc9482d6eb2a97952cc7fe7d12f468e44203f253c3e4ddc2aeaadc5e4b25
5c4c33dacdb5f0cd13c8e4358c76f3824e3fe6fc29e244c649c5757ecdb2cde1754329e470156a60
3636dc7fc21edf52d33f9fb0bfb19b794c932e0e055bb3d2c6d6447144359f2487744d6495175221
3c7c30ed50b8be6c4d8557a063ab91097825ed309f12ca493e00be7318953c9822ca6c5161d22ed5
2f60fb1a9ab6dcf6c55e171cf266882be9157f9d949c4f1d5c846dca34b5c971c1ac23031975a26e
6da13e515230a55b9af89e3911bac77b27a1001a0c6ee56bcc7b524523a2ecd1f67fa930feec9ff3
f8eb29b73fcacef489a22d639c58127250e1ff98e2215c02c39ac401046d783c0c5bf26dd6020ecc
6864804506eaf6a58d484bc225e7b690d8a3efa6ddb51c5f251ab51be0576d1c59f54039565972cc
d0063c6db6848f2a350bbb734c0e8f44f8b016d1f158fe5d05966d6a34625c75ea7fcff9a9325327
260543693759e0ce748ca12b3190d51259335624eb7f4d8515529e778442a3a79ea7a24bff95ac27
36c53b48efb40f06db45a54670a9a5a9cce633c6cdc9af1e978aa94ffd7db6e74f626e55dcc9c75a
175befe7240057a445163dc4227953279b5b904bbd0e9bf6e712518fa26092781c2ce3361487dce8
6409ccb07284061e0248882dc24b2c89da9ffac5126d54eb478cded4b9b9062da27d3ebe9765f650
9a7d6847058735e420989cca46ddeeb91406f8059c6c780370dfb90ffe26d66d7c8bf9cb1be8514d
ccd13a3d657d8dde99d8fa8592080c0f17c642ec7fd62b9b777f96591c4665bf13220026f5257da5
b18aa8b16c6dad42e2c8dd1ff3898936ac6a3cce8022e33049224e5a71c967e613161aa2fc875123
628462da9b9e5eb49b14a2c9f568b271b6813723626ea1d7f8f2dce6c4a2793e595397f497cffb61
72fe7e44ff3e3bd667fff5b4211b2fbd8024d1cedb5cdf2d1e135d2dc2ab7456dbad3c28e350535f
651f7b32acb4ae96d0ce153cee9823ba96da4e4279730df0790255a7626f660f4163ef4b06b35eb3
593b8dbb8a11892f7de637df6f49e4adae43b414f84aea38a0842e8b62207982aca89b8f5fd89908
58ed0c12aa4fa7c60ac52741c81cdbd5d6b6d47717afba96215c2504b2e17c313f5057548ee3bb15
afcc205265d208f33f4cafe9305bf4fca530889fc111045b0ddbe0993c769f75ef79a1d092d02c9e
069d06cce5ef928acffa203db8ea1ee2dd5eed7e0a3dd32e05e442cced9b2f60644da570357e7283
04b550b9e5bfe4f962f8ba47db9047314d9eee184416595ef34bab3bf8fc0dabe8a99580ed178aba
f7c27b6e3385a69ce8efa1132ce90ed25bcc9339577f5b293d3568defd47313678caf530d74874e9
dd56f0022a4aa8cf64959eb3ef70a2e734f748db612c041628cfda12ca9ff2cd7d2941ed89fd2133
8c1f7d2de8b804b64eff09daec6d7f3f124951ba982eb3b47ce30a12932c2ef15f406d71dae31db9
31dcab7a284056a2bc8d5d43e3938140cb5ef4d30f9c5594e249ab3c145a62dc08561eda1844ee22
e85013d1c232c2f17e413fc23e7c5608f5ee0b6a4ec4ff83b4953cc463ea85f09675af741d1eecbd
d7c25b855fd0ce70ade8c9a01f0cfd9b7b84bc35651b0868b9c50bc1408bbcc9180b788f358ca191
7acb3b2ed03873605e4d60b63c3ba76df2c97347f91ba2bbe128966fc64cef39db16654af6df714a
f0a70e8d4e71af000d14b9e78ff601be628d159c73e5f6404761dd7ea60d26551936b9ffc9f0945c
e86a75e7366546a578f10e22a23605cddbc125f16ed17b67cbc97e697f11b7240995bdafedc2d4ec
42bc2fd6bc96cf3e832e05c1298b72f1620b6ba7e0735ee674fd2797d1c8fb10cf00d613fe6089b5
eb6c4664b8a8f5207b700d854f60408c38facd637f757e59addc52024f338b122a63f9d381fe6b2d
12b009df3ccf18ef49ba0295155801a8373e7f97f1f0160e8e0c3f7d27324b4872fa5f150811596e
5588be5b5fff30928992bffbec08cd07b318334f260e13771bac97129ed5d5504f2fa1b7d67a40e9
1050ae47984f84730492718dff90d467c5c8ce502712d5145783974ebcf601e1f1f5e3c6836a0462
f499e3b2e414b83387a6cd85d60971b75c6ab111f51fa5b57989ed36d0619d650eb0a6f08c639bed
ac636ed5b9f82035f19060dbaba0f797406659111f7390114ecf8d7904625059a14fb62f084c587a
b9f3b4e4e3b7e6c82439a589b85166862567ad973b65d357a265fad3509a9d2fca20ff55caa6d198
5d510695bab1bd3b22e4dffd0705e8349046350e46f1243c06b851aa34a5a5a7d957bcadeef91a62
223fb0b03a840165a43f2b29b6ddbed8673889f75901ee7ef64a694b292b1ac42bcb1e3fef1871c9
ad65d9f8d76284bff004aa19edeeef3b97049c6cc363d9c78b16b53d4cdf7cc8b0b6b32fb403fe60
192270f3ecb7d8c1f99deebd37c3052a9c1bdbf997b87e55c93581850a8a82df523c0cd85936e32b
d3134b851b4a9f90c833037c31b907303b73c8e3aa42daaf956223c2fdebfb69e861166fccc1ceb1
3a549a8067c589c7a0f2be1548bf2a5144c7a01dc3a49b5394d26b82876a79936f010a75d0bd117b
f8ea55355a0f8bf1cc991426c5280ab46c808a8ca3dfc69fc8ca33a93c03085ed2ef9da5349df230
c8b8378e71cb1a5ef41e4fad6ca0ef76c0d8d1323adcf33b52e7f6c3fcafa07fbf8065c5a5667d02
ed52666029155f61c430e0d303c920addcb5e56b73f6c24c385200bb9a745f997e1399fbed67f438
744ed015c09b54570d26e080dc5919a70cc29ad715f2e7f2b62043dcf02cdc163c7609f38a290920
f524085fefa0258c72d6e695a0b5a3f0d2af616452326c730a130673deb4aaf04bfb98a2de2e29c5
a5050d3d615d0394ac3de3e40e9f80b859780219956d75c35c36956c0802e7a78ab2f7f2490a3f0e
4f1978b5d845504e3c5ee234d2921b5d35925c0459a67fd99b193783d34ae6dd9909476a9cf97fb7
535d534cb46275d81f2ef653fb9808b43f91bf62f65612f0c98d0947621b34019ff2ce4c1a80e3bc
6187d04782d1d9f8ccd75b83992f516a1c93f87ac51efc47ef28675ad89e84e925533123e62f48fb
7fa711f1a630ea3d589cae5bf7b460e7fb753e52e693da180e6ca3ce91c76f6979ba738bf678e470
d094f6c8ccc773992a3376db38bd591f4e8a1e15da133b36c68a68417ae40e29e7b8a59e94d6d037
a8680aefe18cb032a43e9dc01dfbac3d38d372e964e4c81bb21abe0f34ba9b1d6af67dacac3c4e70
244b38f9be888d6a5fabb7ee4b41a40509023c3d0c15bb51fbb0389a2a6b793d6f301827f05094fd
de102b9b0cd8a4a8c12a4dff5d27790d3fd3156a69b039063892d2f3c77854c708c1e924d40873f0
50759a27353efe1976e40597a4211a09f3bd3686ed81b63a2eacb0554dbd994b373bb25a27af0d77
291e5c2d72a73fbd3991707dd843ce20dc335a79b70cbc8b68417aa44e73bee1fcc7f4ded433ac6c
2a6f52d8ce2d7a79770bd40ca75d94e1baeea94dc169eaf613d3a2ad15c3a1a663d89e6f8a9e97b3
7b63a05e660e5f771a069252410f97100df74922c3c41a8077a16a8132fd574bbf49d9f7bfe98edd
1a48173f00d777fa35fcd459a81cffd6ed33dfa2140ace9c63be6438b07cb11b486f0cbe54f12770
b9a410fd55136bb5cde7a98ba5369443323de63a410b862048a784ac515b444a326dee9a021b79f1
8b60bd41f43b06db453977058244449d9a9002305124e1f7aee1948a43e7427d449d8cfcabc3efeb
2d802317266f79d339e169390bfb1fc745fda9999eb70e3f21006c70f0af0d31b8e44d9624e750e7
3cc4af2775d01b96664778f93a45064f3cb5e19192329fb1f4788dfc4972f6b650df1f22175ff3b0
65756f42b638b56d9cf56b427cd64b1b2d0180206587bebae90edc05e2f562bd6a3347008408000e
b8c7bcc81dc11ac037ede5db138a392eb5cfeeaa22f151c184aa52ac0d6f23763287d7508d741c3f
8a0bd93d2631f17ef73e8df60e24ea960c3a30a88c2a4f0d1ce950a3f868c58da94a3e37aada7d0f
c3897be4f4401646c8468c7e4e15378e646547e32b6e838db4f9640f3c5d661d9b17a72032cf1d55
cd24ca968c1cdc96d9fddf50c232ad0d0e673219058c5905760077ebc0fd244d0a66294e546ea9c2
6a5bab707787e9d240081ce64d0df7b3b3107c0fc0308714944faee1a32bd18fd82b21f127ef4ffd
91e25d441bb02f182e11cf3737480a4e05a82fabb92f6dce6ef96a4927a9dbc389b69e889011095c
5b697a31fb8dd28489ec6494ac19a9bd75696defb8edeac46d4f215d93bf943006c6b9b85d7d28e7
8d0635326993579d9e9634e30f4170389f7b1bf711103da218fc237b8dfb1450ac25781efe8e5bd4
0c49081233fa77513600e3efef766223fd354a96a01807d9e76e00848cda7f982c9ce64527bc2fc4
ee9f3d516f74c0e7260ee594f69a14515186083b339e1e38c7b6f30012a48ff24e787d5a6e3a1f23
55a851e20eb2dd1c9237ea0e7520bc26897a4a16f457f075b592f1c9035477e5303f6b9359e76cd3
19ba7a3a3fb2d11ecf905fa2089cf214fc9991562ff791f3f73345f7744e2909d7498f59e8415951
51dc0f71cec010d8d9f8eab2d15d0b4ce56478a314fa74a3882aa17440a5c1378152724f668f5f71
a359b96686e9b415fd580fb5e0f172219b645b05ee4bb4edd17307c6224543e71900bd63390282f5
093df577df40e72575b3085c68c542850ae497da3767115584d51993a8055e6c64fa8df4c2f7450f
1a3303bdd229ca1b69d21629c00f40c0e2e4b189aac3ae4e859880df01a31d0f84f39e8af8046b6d
21b4ca8842fda89cc835f8bcdf8096b99e0e3131a5cb71ecd41584a4534fe1ce56e834a52c39973d
301eb1c12bcead7668472187837b5d4b69ff65eb925f6b9d2a7cee728523ff625bcc0b1f230f0791
6784c6bbfc4b17cd5e05107aec118b9e0672a46d80fccc0806ae14be77cd4265a0fdb79f524a0f18
36d8609c2477c46aa83445a9a82cc529ea5e9ac99afb0f1e16f4a6ea88a8dfcbcbc292eb290adf46
5ee9279692bba999a4e9248e061a94c9d1f7bf4a00a8061bde01adc94ea8392ee7d932ef6844857a
366426cb46dc31042f398ead95a7ec9b3d6db9cd9a83a5629edd286e184982b10b6ec82967a1c630
1b78e70f56e9c2e5153f0111ab8144b9ebae7d8a498765ff8a72269623a8f14bc681ea36cd9bdec7
f453a7c204f10ff331f16554b34d125834db2672715f47f8740034ab97a9ab82bc9cd9cc81b0ae75
23d410aba06aa7f46a3de851dfdac18e66b030d67cb2be21c78e29735a273426e204cc3cc8999042
cd5bdbc495b6f621f20083cc40fd94d4f0a8c0db64b5f52b4c798cc3efa9cbbe799925c94c91bc40
3b5a0261e321187476e2586fabce6410011b9d6aef33ce5bd2cdd53e7015ce9f6e70ab021950ead6
fd58e7c8a3c20a3f4b64e87c5a132a455093ff19a56fea570e9f95bb866d8260f6b1fe48adfd4dc0
3c8147deb1c078821d35834f7bc1f03495d02bc48e5c710b0585ea06fec7d2828d9a386870fb3863
af24d344b71607feb6bc091c27c3067de6b4b2e7574e6897c9026a25fe10a38bc6ea2915bee5de08
32ecb4365ca6e3d7e99411690cb52199e10b6a4a26a3db9b799bf8265ca422121765ba6e68714fff
1419b91c2022aa4d45eb6607522c9450025acc7e279124760e3a36481be7bf14fd5e47b96d0de27c
8a4f326e05b69265dbc2d93ab175c4c28d93e5c25fe208721dc7302bcaa60b56aeaf964a35e429b4
3c9cc9564a27d8cc4ca0dd9e6a5e4f10e1808fa41746b91c022ce44fe2a2f0aef20a4f4590aeb09f
d6f7ca1395700f18fabd53e51f08b9f316d74e76ffc6a8931407f3f6d2f9af5b6da08e56eddf4e71
0a02e61f1f8867870eac0b9733412e7de20ff2194a59ea3ac9a851ed9cafe3f81df1ddcf1be22cba
d09381b5ce0b5e811c207fdb117c0694acbd99a43a3618246f1146801bf0a633e30357262ae20326
1b32170883c32c331eac895744b666945e46e8b46c9a7ea3cfe484e73aa1b151b34a5c42ad6d6d1d
11d832d47e665a88e3ab397b01ffc6ac5d0c52b742ed244deb6cbef27358029aa22ed6f86c4641bf
0b7d6ef66c1776df254c306de74fd68354c8ed3d46cfa05465022b764648f586cd4f2d48e4602d74
4d557c595ee014ec3cacaa7552e483c93dba61215032e90ecfe139825213c594abdaaf12ebf1a5a8
fa1ba9ca1bfc3d3fde0dd2a8bebefdcf0350e178d36aa018819581ef2f3b247035c69fa2fc8f80a9
e0c2cb98154a659c0278b53a2ab2de60282c03a9420b0bea395a792f3b784ae6b405cc1492779f37
71b11665b5959c325f65fcc48ddffaa90544ce857ac7814de4b3a2e01258ac358d17568cf043d11c
18d6d55c4af0e5ebc2b64245220b9a1dd14647422c94994ca854f0ba13dfe9da04fd111914025d8f
33fc9c62332f6936071d80e060b529543a2bc3fde2533fc41ccbbcd7971794577c454d35e17bebe1
20fca7879d37bf43d35bc170d52acf62b09861c2925c264143bf29e8dc97b7787b5ccf64c707b0fc
39cea3500c9691dd3198f83ce50c8e154e911d1aee3b500eb99362d5d47c609a5fa5a08e854763db
fdd370cb55a961f99dab81f007dda65cbba4c3542440c9ee227164838d16389d562371651c9b1966
0262b0d43f8903a34f3976763bb6c6d30028088c9ebd08090e93e32de7b17b242e6f1c9899fa54b6
374a79023408c5cc96ac274e4e96deccb7fda18077cd39ce75160277985b9b1fcff7a78b94bbf600
534684071d1260535ef9e4ec0751f80236879f48045d326208221d991b24c63f9175923cb0e47a87
7d05fae82c8d6eaad36945c96761fc54e4897b440b916af8e37a16a196ae3288d7dca6710e8da6c6
7d3a26a9c9c2f93db579f01017cf2089b13da837b3767d058a2545706dca8769585879a1f8c42326
c9c426835ba201fad399e4294865722f3413754a6642acaca71e9338ac8aadd4d918de7c043f5706
4d791209053bba23feefebd460949d58b000a0a69498af813b18cb1a1986aae5db6b1d4dd0dfc2e4
1dff6c7b94cb7cfb2d40c4250fa85898d0a26951e4f36b69553c3f93bd9041bf9c748b23c3d96d65
281a070b0f70f5d1af10052e5f62d4bf114cb75cee7ab9762efbef18738cc58c4e00322f232758dd
b149ccbbe67bee2222ef5488dc366a64f5a464be642fb2cfbbc7e2313f7a14475178686242f383bd
0bcfec276799edeafd18a85bfb42159d1ceb747a85144d0e100651663873e810d4250a96e9636eef
5a86b654dbac16d7858692e7fd6dade6284b6fb86fc5114f1616962a3b19254a7e2c12a451fae8be
2e0337a5a26ed6cbe86b15e4d5d08c0fb5a707284a4b6c4c57555375285f57ffdf44b3c394bb7afd
dce4e48781f37b85a1c615e1560b7236c58cce879375f35882fbc7f39df11a7a0ca18c14cb3a8c98
4b92b33ba72151e7ef55f0c15007a044205adaf8a74cccca39c0306e94f686b62b1078a07fe9acdf
c1b299366b4017cd905255d6f9124c9c5db3975f13eabe5c664b664613a183538aa8cd966e7685ba
8429e24a6ed46663f6ca4c36051055bc7bc90d5b6a626561363b0b4bd62ad4703d779e35a566e523
7d98c50f094d628003f357443172bf0b636bb225d1362c6a42a75113a4b301d6b73dac875a3cca07
45a2857ac1da579462e91893b586ab1126ff8b504f9a65bd0b1319e548570214f7a04f7caef7267a
5a33e4c1f8e7bf714e7b9f04a7ae1e8d9df3f364e1a34919b17c8e64beaf40ee531d28770b8c1d2d
2218bc644e314dffa10f9ca9cd4b0a0a8cc9032670fcea1ea3fe80b334b2b8fb162d0eac79932307
7d20c93ea8ccecde7a3c01d5d659d87ce99552825cf6f613a5a8ecddf02f3ee154b3c9287946f638
52e381c8b5dd5a31554b10ab26aae686250db5800273075403376850df4baf233a4fb804c2a9f052
064bbf6e2c4796bdbe148f2ed18a47681641f760a1fb54feb816e5fa8f397a5ecb472cc04dd93f5e
a5b3fab9dca9c302917fb7a69534586cda0b644463456fbda43330782618d44afc90ecd77c7f8266
1847fa763f3890028296c934525e8c95f04d9cc515173240560f66451f5f3f03ec1dea3a7506fef1
ea9130c3c3899cf94153ff73fd4ae3688c6521dbb7aa9e03b6d106d76c4a43694eee2be5b0ed47ef
0849fcfbccb8aaf58de5fe6d500a261929b5cc34b717b1b048863e3897498fabf6197d55373d37a1
1d828ba3c1f9db4a65b3421c4f3c142a3c47b4931af6bd6f98e221786455785a23950aa5e62f2225
5fd054384eedf0baf428fc8676b64b7bc5c40102008f6559e2557e506ef719862f083940f02eec5e
f1d5f80fb0e1e1fe89fc20690e4b5ca92128c2fd89ee17c5f16559c29181f695b3b36fd8da2391c7
6e66eac86a8d735f0b76b3c37a57c564bb2059a39e3480b559ada1f9e31705aacef30fd8ce0e48e7
81862e23706c1f59fca18cc28b59307ca9314f9a34edd15e493c58da9f424a528d2a58a4c7611036
ae085d13e0e77c408000c4df02d6ba968e1004b6fb28ca9580a97919ae9a95db44c2168aff4524db
1e639d543b10a5e0ae860a37ee2025223230bf88b9584cac0c9c1855bcf19870e36361491f6d17d4
afb0ace3f13f3983d950ae1bdb9e6cf4aecab912385d93f15b93f001fd1e4fddb5fa7c5345d1ea11
f62105e4213237ff34c5ebdbaa99fe72993f9c8e6dab9b806c784742400627f1b809cd867990f775
e828e872dd62bf43f291c80adae7483049cb0ebd0a2858543642413221bbc6c184ad246a11622a32
e672bc74435fccf588eb1a2083af7a1beb807c1d6c05793040d6b59b2ebd21fc10109468988d4519
931cad53bcac376b14cd5bf72e6a8038342b497d4ba1680a6efd7ca9903aca32a2f7e58e80107f92
b8721b1d46e98ed845c1c625def33b181d8209177dbc8431fd3764f87e5a841f465178055c629041
9093ee7f0be82ba54e56209f7e683464d5141070750d2026d0e740f16c341868312c362d97b4f5fe
a1ce8dda02d0bfe9de23cdae8e522c527e59341ef313975cc5b174e9a8fbba8104ecd38ed1d5cfae
0c77382ba0cd7e901aa5ab22cea013df890788a510030bec882ce2fedd5acc1c60e81012469c5b67
bc205e44bcf4564200597497cf21d81da42a17c17c061ffa3b9b4f1ac3dc353cd52013f6438b8e1f
bd411f40519978abc89c9d9b0ab37d5d59093da0fc65715b2b2416b6ba3393af87eb25d1d7a47cb0
090b3b5853b17aa6ed4bb307dbbafa036f1d2723870786f1569112b008e644ded96aca51bd7897e9
f08cf5e502a2ff0d17e67d3a4e7bb49d8b671b39ec6abac1314acf087b8cd47f1499e2279d0173d5
b923905f24fd7c43c4296ebfe6952a4c658f66a5f0d134132e1d0ff9898a24931645e8f2cd31870e
da65d7fa9493b6c720d0e36d7d928d7ed1073d89fdc86fb3cef05a0abe9117cb647d521e871c9b78
9f959ad1b9bcb1f433859da72cf18261087c0b98c7e0b35cbb17e994a9ec8ca48004ca3e351165af
a0727266aa4ece54dfcca12066d50452fc16dc2e94595eb3e1fbabeb276b8f64ac074fd402a6aca2
b971f782c664298a142e4b364159ba2713c7fafad3b1907ed76465025fd5047f844afdeefcd58e87
ccceb0850734c9722fe67c989c6120b04923539f03c04db23f44895b408e1355e6d1f01876d54500
389a1f61846cb0cee543640a914383b1b1dcf0f21c3150e262f7e1ef03b54e25c12014af1fdffb06
7ade95d141f07dbd4c209e66489f15e4894600b0a9943aaf7f7d99ae4a4fb95439c807f25f526783
86266f61d6559b009e26a3874d4e09cdae2d9dc4cba55fee94fa9a8f411165846df8f63f94bbcd57
771036f1a0929ab3f127ae80c51aa19eca77d445e30b280f3f26f48e143862d234392f8c85b95f0e
e81837f9dfda9223e405ee582c7216739a398a1dddb4d0d1dcc4eba4c82a17cbd3a345e8f3ee03bf
1be209b2034483e66a881cf9ccea1b99c6fd12fe1fd87e8ea39de22af6bf7d78cb1032e860ea3af7
900ad7401b8432680675a0962e6920bc17f892b8d7e48925c10ae3d6d0bc396ab853dc327b89dcdb
2b477fe308d92e2a756da12b470029e2d752173560c54b24fcabed6f526e5cfa4bd3fa7dfd0328d5
7dce28c932e7f438af56b0d7720dc902337451baa5eac03a13d3f6b56925276561c278a24330baa9
75ebe26b42baeaf202da3bfc1a38c72dbcd78b9268862b7454bb7680206416083c731767c7dffa8f
294bdf26d1fdf72533a709d4e646056b0f0247a7490985743031fb5e06c747f0f8dfb0556cf2918f
229c77d22f9e4f118f171af13aa2a18ed6c516dbac0be6d08bf3e6206e12c6c492620e162565137f
f7c11bc20ad11f7f6ee59502d4d2d71b3a277ee213c3c09ed33eb74e3c24016e07e7e0441c0d3e9d
87e7fd463e368204ddd320af67634a8da86671dc31833ba6d849747f6e53587bd4f347bed735edef
19d46140977388ecd3647697e340e0661d25ebdb8cc3614092e4d4a97434c0af7e1abf900c55372e
85a12cc4be739b406886628fb729251ab6b2e0127ae305bd34d67235185033d3f0345fa364ec7009
8f7ebebde95b83414de0c87da0032d5d894dabb97a63e0d16bce22149e5b3316821390e379079983
800bae2f0f3bc1fb38e6ad7c22ce83fbc8b393eeae60ad8bece5091607671bd48bcd665ff60171c6
a01f5c929be413ce0ef15dc3b5e60e4cd4a01af02a14cc508df2256886e307121a6d119044267fe8
b13cba1cc74ef0e384e713ba4b96e3ebccbadb83ce2a7608263a68d047c9abf6a7acb1feb64c5f6b
30839f72daecfa4a670fe56785b06a2c0ecd7a58ed3053951b67b98011582a88078a680203c6e134
7d0f2dee7fa161a652ba2f80728dcb129138bc72e558ce46a12b24e7814930629b692fafb500c880
8a56c7ef7fd41e34fee03a5fb9c8e707e3cac0c35b5552fac7d6caabcd420e8cf2e4549f77775825
5aeb2d49c02c3731ca0e08104c680fe447e76e98a216ca29c2fec784d4ae72ee22fc6fa6f3fb7f04
cf2af8831035d1cce1c82095745791651ba88ff89032a85c6e4fb493a00d585f2e31cffd1095901e
44e49e484894aee8b9a232fbc0f8d78ff6a12f1dcc6e6a0584ee3f2d3b12a2ab2f6c0c9f47c26836
571b40025521a105598bbf50ec1b5435ae96c5e5c8d6e1e6ba48e5dce61db8ccb9ecb694fa99393e
cb947e5710c4494bcadfaa081d42f88d98121ab506466425bad48232fdbab446bba8bfd72b05f742
8e763418f404244815539b5d1c54d594dfffee3f61f4727aca8e7dc99259d1adafde5b820b392c26
0a32903d44135728b2d88a337dfff0b7b787f8dfc92ff59f129a8ed729902014b0cbe59875401706
73d779a5db825c77ebf7db22b39e7dea16042dfcf0040c57062edeea27ed6a542168bb882031710b
5a7e806954a6a64c46aaf91df0df2b183b3af98c8196777fb77a8bb33ab74c278d54961cbef65d17
f25815c7547adab7e6e63fef43421ea575acc96f737742661197a02c1dd0bb0c3c6fb8c1563f288d
aed1a61fef85b959f450e848475b0f976915043ae9fd240508c0dfe0ecb9a0e5945a51f883375bda
a762e57bfe8a7d3499c094e0eeaeddbd5282796b1afddbf5f52e4160445cc4fbd70f885601f57d7c
b555bfcbb7c845fe3992bf0ca0f157818f05852001e6f1790ad3801dc8750daca99a367194d33778
34dfe00370ebd49861ed02e9010cbfad4b61da9603e941a59726a616ecaaaf0b0f5dae1caef6914a
2ed672b6719e13e027d67eb25cab7107f38a98aed2e8c7b0a75c79c069399e7deea23c7967e0f511
532a3920c0c2772ebe8527f4acfc12d38da6414e1a77d811a86ef043266667de9e33b41668572e53
fce7a2c39e7dd683cd1a96340cae91fc5f731b7a079bcf72202ba4d095cabce10b95c8422e2509b8
03094e59ded0049c796cfbd8d89816b44b3e543da63260871cb197196ea564a92c7bc3d2c14ce003
fa4d43f7a4810064cfcf2b03965e19c9241bddddb90cb3864c8b66346087deda03b42e66c927dd58
c53b48cddf84a98e92f52fe0e9e8cdba4a1410f319cc8d4c91ec863948b0aacafc898e43d726cb5b
0e4d402dcad08ddedb49a792d7f5cd43d48423c15321ea7aa370f1c1dd38a35fd6b5838a14a1dc56
075bd5caada9bfe907daae5166c5c6e68b634489fd7af697ed42e2ef7198f3375ec1e1ebd9bdd7f3
eb3ea7d20cfb2b9eca8271a4698eb7523b56397d44fb9e21675b3e16a5b74c047c0c79ec9364649e
df2c4fd194a6a06edf8f7429a9d0336fe33420b70dea1bbe5783db9ebedae5fd56165972ccbe8dcc
43fe39ebc03bedc5e0604531f4538a75a02c5e210dbb5b9f5a4a7bda3094ff7ebd992ae1eb3d6832
1b918e3322cdf60350310e43d89a2702efa00dbab90325532fd96a8843f27a09abe72a85c0b26a7f
f8d6cd769470282d38a7def4cda499bcd9a2617ae1a755686c76dc611bcdcd153abbd6c5ee502210
d1e7ad53c362fe34f8463cf2af7acb01de8957420e95f6a493b22c970a98f2e1c78822375e0c21c7
9f3b6acda3c7f00777e64ed50876b775e82035fe3b457e84204bb735424d9110410f7a2f2f7338c6
8b4eb85e3599a6767ee46207eeccb4a0610299d4867c1b0c79addf8bde52595680e93b5306f5a292
9a127196819a88d62dc63f8042f644f690a1d986e205989afd97fcd0d5db04b8d9d3eb17a3429c6d
aa4509d379b70bfc113b95f184e3ccf2a4b658084928a4e0e78664b81b3ffc76e7d19eeeb883a549
a77ad7cb183e385638ac628ea009d625ae58dd06427f0c057229cd156c3232726ca7bb94f5a833db
8604e5b43b2a783b0c7f84c80917b1b500fa38bcf38861857bcbf3dfd417937b44fa959f1fb9e746
f944c7d91562410d8777dd37268849f37db8d07f2610b91be9ea398e9faaadd9d5d1d952bcb56452
846abd7527b21f1c148b8b94f5843e6ded71e1626f76213442fa958db0d08ac6faf696c83b8ada27
61c9af6c67dd3d020db0c60254a5aec3938f7924bf1c114030c4b156f051989bd9301b945dfedea4
77f8beb71f3db2f326a1ebc2877f6f731630a33f1e756460fb25095cec85ccac7e9db6f806fa368d
93fa41e277530221286027620f7bcbbca3d3fff551c00ea7272860f0c490cf28b9771c60401503e3
d6713d86de35d5f8cb256bcb89c975ce3c265f1f
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 SSC_Copy_State <Virtual>  0
 HBW_Pick TASK  0 -1
 HBW_Copy_State <Virtual>  0
 PID_10 PID  0
 PID_11 PID  0
 hunt_exp_light PROGRAM  0 -1
 HBW_Home <Virtual>  0
 HBW_Pick_Sto <Virtual>  0
 test TASK  0 -1
 HBW_Pickup_ST PROGRAM  0 -1
 HWB_Extend_Arm <Virtual>  0
 HBW_Retract_Arm <Virtual>  0
 HWB_PickUp TASK  0 -1
 HBW_HTO1POS <Virtual>  0
 HBW_Left_1Block <Virtual>  0
 HBW_HomeTo2_Col <Virtual>  0
 HWB_HomeTo3_Col <Virtual>  0
 HWB_HomeTo2_Row <Virtual>  0
 HWB_HomeTo3_Row <Virtual>  0
 HWB_HomeTo1_Col <Virtual>  0
 HBW_move_left_1 <Virtual>  0
 HWB_Home_to_11 <Virtual>  0
 HWB_11_DropOff <Virtual>  0
 HBW_Pickup <Virtual>  0
 HBW_PickUp_R1 <Virtual>  0
 HBW_Send_VGR <Virtual>  0
 HBW_PickUp_VGR <Virtual>  0
 HBW_Return_VGR <Virtual>  0
 HBW_MotorsOff <Virtual>  0
 HBW_ConvTo11 <Virtual>  0
 HBW_Return_Top <Virtual>  0
 HBW_MV_11_12 <Virtual>  0
 HBW_Conv_12 <Virtual>  0
 HBW_Conv_12_Lat <Virtual>  0
 HBW_RETRACT_13 <Virtual>  0
 HBW_Retract_23 <Virtual>  0
 HBW_Conv13_Lat <Virtual>  0
 HBW_Conv_2Row <Virtual>  0
 HBW_PickUp_R2 <Virtual>  0
 HBW_Conv11_Lat <Virtual>  0
 HBW_Retract_12 <Virtual>  0
 HBW_Shift_C1C2 <Virtual>  0
 HBW_Move_R1_R2 <Virtual>  0
 HBW_Retract_22 <Virtual>  0
 HBW_Retract_21 <Virtual>  0
 HBW_Retract_31 <Virtual>  0
 HBW_Move_R2_R3 <Virtual>  0
 HBW_PickUp_R3 <Virtual>  0
 HBW_Conv_3Row <Virtual>  0
 HBW_Retract_32 <Virtual>  0
 HBW_Retract_33 <Virtual>  0
 HBW_Retract_Done PROGRAM  0 -1
 HBW_Retract_DN <Virtual>  0
 oneOperation <Virtual>  0
 HBW_Check1Puck <Virtual>  0
 HBW_OneTime_R1 <Virtual>  0
 HBW_OneTime_R2 <Virtual>  0
 HBW_OneTime_R3 <Virtual>  0
 HBW_OneTime_C1 <Virtual>  0
 HBW_OneTime_C2 <Virtual>  0
 HBW_OneTime_C3 <Virtual>  0
#END

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"VGR Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC410 C410 1 0x0 MC409 C409 1 0x0 MC412 Y28 1 0x0 MC412 MC450 1 0x0 MC411 C411 1 0x0 MC408 C408 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC413 Y29 1 0x0 MC413 MC451 1 0x0 X27 MI200 1 0x0 X26 MI454 1 0x0 X25 MI453 1 0x0 MC452 C452 1"

// Rung VGR_Copy_State#2
// Offset 33
NOP

// Rung VGR_Copy_State#3
// Offset 34
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC800 Y41 1 0x0 Y41 MI801 1 0x0 MC802 Y43 1 0x0 Y43 MI803 1 0x0 MC804 C804 1 0x0 MC805 C805 1 0x0 MC806 Y44 1 0x0 MC807 Y20 1 0x0 MC808 C811 1 0x0 MC809 C809 1 0x0 MC810 C810 1 0x0 MC812 C812 1 0x0 MC813 C813 1 0x0 MC814 C814 1 0x0 MC816 Y45 1 0x0 MC817 Y46 1 0x0 MC818 Y21 1 0x0 MC819 Y20 1 0x0 MC820 Y44 1 0x0 MC822 Y52 1"

// Rung MPO_Copy_State#2
// Offset 45
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC800 C1600 1 0x0 MC801 C1601 1 0x0 MC802 C1602 1 0x0 MC803 C1603 1 0x0 MC804 C1604 1 0x0 Y31 MI800 1 0x0 MC850 C1605 1 0x0 MC805 C1610 1"

// Rung SLD_Copy_State#2
// Offset 21
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"SSC Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC606 C1200 1 0x0 MC607 C1201 1 0x0 MC608 C1202 1 0x0 MC609 C1203 1 0x0 MC615 C1215 1 0x0 MC616 C1216 1 0x0 MC617 C1217 1 0x0 MC618 C1218 1 0x0 MC619 C1219 1 0x0 MC620 C1220 1"

// Rung SSC_Copy_State#2
// Offset 25
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block HBW_Home
$LGCMOD HBW_Home

// Rung HBW_Home#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Home#2
// Offset 8
STRN C215
ANDN X0
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 60 60
OUT Y51

// Rung HBW_Home#3
// Offset 26
STRN C215
ANDN X3
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5

// Rung HBW_Home#4
// Offset 43
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y76

// Rung HBW_Home#5
// Offset 64
NOP

// Rung HBW_Home#6
// Offset 65
RET

// End of Code Block HBW_Home
$LGCEND HBW_Home

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 Y40 1 0x0 Y80 MHR102 1 0x0 MC101 C205 1 0x0 MC102 C206 1 0x0 MC103 C207 1 0x0 MC104 C208 1 0x0 MC105 C209 1 0x0 MC106 C210 1 0x0 MC107 C211 1 0x0 MC108 C212 1 0x0 MC109 C213 1 0x0 MC110 C214 1 0x0 MC111 C215 1 0x0 MC112 C216 1 0x0 MC113 C300 1 0x0 MC114 C217 1 0x0 MC115 C218 1 0x0 MC116 C219 1 0x0 MC117 C220 1 0x0 MC118 C221 1 0x0 MC119 C222 1 0x0 MC120 C223 1 0x0 MC121 C224 1 0x0 MC122 C225 1 0x0 X2 MI101 1 0x0 X10 MI102 1 0x0 X11 MI103 1 0x0 X3 MI104 1 0x0 X0 MI105 1 0x0 X6 MI106 1 0x0 X7 MI107 1 0x0 X8 MI108 1 0x0 X9 MI109 1 0x0 $HBW_Encoder_X.Acc MHR1 1 0x0 $HBW_Encoder_Z.Acc MHR2 1"

// Rung HBW_Copy_State#2
// Offset 75
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block HBW_HomeTo2_Col
$LGCMOD HBW_HomeTo2_Col

// Rung HBW_HomeTo2_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_HomeTo2_Col#2
// Offset 17
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_HomeTo2_Col#3
// Offset 22
NOP

// Rung HBW_HomeTo2_Col#4
// Offset 23
NOP

// Rung HBW_HomeTo2_Col#5
// Offset 24
NOP

// Rung HBW_HomeTo2_Col#6
// Offset 25
RET

// End of Code Block HBW_HomeTo2_Col
$LGCEND HBW_HomeTo2_Col

// Beginning of Code Block HWB_HomeTo1_Col
$LGCMOD HWB_HomeTo1_Col

// Rung HWB_HomeTo1_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HWB_HomeTo1_Col#2
// Offset 17
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_HomeTo1_Col#3
// Offset 22
NOP

// Rung HWB_HomeTo1_Col#4
// Offset 23
NOP

// Rung HWB_HomeTo1_Col#5
// Offset 24
RET

// End of Code Block HWB_HomeTo1_Col
$LGCEND HWB_HomeTo1_Col

// Beginning of Code Block HWB_Home_to_11
$LGCMOD HWB_Home_to_11

// Rung HWB_Home_to_11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HWB_Home_to_11#2
// Offset 22
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_Home_to_11#3
// Offset 27
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HWB_Home_to_11#4
// Offset 49
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_Home_to_11#5
// Offset 54
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HWB_Home_to_11#6
// Offset 73
NOP

// Rung HWB_Home_to_11#7
// Offset 74
NOP

// Rung HWB_Home_to_11#8
// Offset 75
RET

// End of Code Block HWB_Home_to_11
$LGCEND HWB_Home_to_11

// Beginning of Code Block HWB_11_DropOff
$LGCMOD HWB_11_DropOff

// Rung HWB_11_DropOff#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HWB_11_DropOff#2
// Offset 8
STRGE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_11_DropOff#3
// Offset 13
STRN C215
ANDN C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51

// Rung HWB_11_DropOff#4
// Offset 31
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y4
AND ST2
OUT Y5

// Rung HWB_11_DropOff#5
// Offset 51
STRGE 2730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_11_DropOff#6
// Offset 56
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 60 60
OUT Y7

// Rung HWB_11_DropOff#7
// Offset 73
RET

// End of Code Block HWB_11_DropOff
$LGCEND HWB_11_DropOff

// Beginning of Code Block HBW_PickUp_R1
$LGCMOD HBW_PickUp_R1

// Rung HBW_PickUp_R1#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R1#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R1#3
// Offset 41
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R1#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R1#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_PickUp_R1#6
// Offset 69
NOP

// Rung HBW_PickUp_R1#7
// Offset 70
NOP

// Rung HBW_PickUp_R1#8
// Offset 71
NOP

// Rung HBW_PickUp_R1#9
// Offset 72
NOP

// Rung HBW_PickUp_R1#10
// Offset 73
RET

// End of Code Block HBW_PickUp_R1
$LGCEND HBW_PickUp_R1

// Beginning of Code Block HBW_Send_VGR
$LGCMOD HBW_Send_VGR

// Rung HBW_Send_VGR#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Send_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_Send_VGR#3
// Offset 37
STRN C215
AND X2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y48
AND ST2
OUT Y49

// Rung HBW_Send_VGR#4
// Offset 56
NOP

// Rung HBW_Send_VGR#5
// Offset 57
NOP

// Rung HBW_Send_VGR#6
// Offset 58
RET

// End of Code Block HBW_Send_VGR
$LGCEND HBW_Send_VGR

// Beginning of Code Block HBW_PickUp_VGR
$LGCMOD HBW_PickUp_VGR

// Rung HBW_PickUp_VGR#1
// Offset 0
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_PickUp_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_PickUp_VGR#3
// Offset 37
STRN C215
AND X11
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_PickUp_VGR#4
// Offset 56
NOP

// Rung HBW_PickUp_VGR#5
// Offset 57
NOP

// Rung HBW_PickUp_VGR#6
// Offset 58
RET

// End of Code Block HBW_PickUp_VGR
$LGCEND HBW_PickUp_VGR

// Beginning of Code Block HBW_Return_VGR
$LGCMOD HBW_Return_VGR

// Rung HBW_Return_VGR#1
// Offset 0
STRN C215
ANDN C251
DUPBOOL
AND C299
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y6

// Rung HBW_Return_VGR#2
// Offset 22
STRN C215
AND X1
DUPBOOL
AND C299
AND C251
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
POPBOOL
AND ST2
OUT Y48

// Rung HBW_Return_VGR#3
// Offset 45
STRN C215
DUPBOOL
AND C299
ANDN X1
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_Return_VGR#4
// Offset 68
STRLE 2550 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_VGR#5
// Offset 73
NOP

// Rung HBW_Return_VGR#6
// Offset 74
NOP

// Rung HBW_Return_VGR#7
// Offset 75
RET

// End of Code Block HBW_Return_VGR
$LGCEND HBW_Return_VGR

// Beginning of Code Block HBW_MotorsOff
$LGCMOD HBW_MotorsOff

// Rung HBW_MotorsOff#1
// Offset 0
STRN C215
ANDN ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_MotorsOff#2
// Offset 18
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_MotorsOff#3
// Offset 36
STRN C215
AND ST2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
OUT Y48

// Rung HBW_MotorsOff#4
// Offset 54
NOP

// Rung HBW_MotorsOff#5
// Offset 55
NOP

// Rung HBW_MotorsOff#6
// Offset 56
NOP

// Rung HBW_MotorsOff#7
// Offset 57
RET

// End of Code Block HBW_MotorsOff
$LGCEND HBW_MotorsOff

// Beginning of Code Block HBW_ConvTo11
$LGCMOD HBW_ConvTo11

// Rung HBW_ConvTo11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_ConvTo11#2
// Offset 22
NOP

// Rung HBW_ConvTo11#3
// Offset 23
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_ConvTo11#4
// Offset 28
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_ConvTo11#5
// Offset 50
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_ConvTo11#6
// Offset 55
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_ConvTo11#7
// Offset 74
NOP

// Rung HBW_ConvTo11#8
// Offset 75
NOP

// Rung HBW_ConvTo11#9
// Offset 76
RET

// End of Code Block HBW_ConvTo11
$LGCEND HBW_ConvTo11

// Beginning of Code Block HBW_Return_Top
$LGCMOD HBW_Return_Top

// Rung HBW_Return_Top#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Return_Top#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HBW_Return_Top#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_Top#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_Return_Top#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return_Top#6
// Offset 69
NOP

// Rung HBW_Return_Top#7
// Offset 70
NOP

// Rung HBW_Return_Top#8
// Offset 71
RET

// End of Code Block HBW_Return_Top
$LGCEND HBW_Return_Top

// Beginning of Code Block HBW_MV_11_12
$LGCMOD HBW_MV_11_12

// Rung HBW_MV_11_12#1
// Offset 0
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_MV_11_12#2
// Offset 21
NOP

// Rung HBW_MV_11_12#3
// Offset 22
NOP

// Rung HBW_MV_11_12#4
// Offset 23
NOP

// Rung HBW_MV_11_12#5
// Offset 24
RET

// End of Code Block HBW_MV_11_12
$LGCEND HBW_MV_11_12

// Beginning of Code Block HBW_Conv_12
$LGCMOD HBW_Conv_12

// Rung HBW_Conv_12#1
// Offset 0
NOP

// Rung HBW_Conv_12#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_12#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Conv_12#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 80
OUT C251

// Rung HBW_Conv_12#5
// Offset 45
NOP

// Rung HBW_Conv_12#6
// Offset 46
RET

// End of Code Block HBW_Conv_12
$LGCEND HBW_Conv_12

// Beginning of Code Block HBW_Conv_12_Lat
$LGCMOD HBW_Conv_12_Lat

// Rung HBW_Conv_12_Lat#1
// Offset 0
NOP

// Rung HBW_Conv_12_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv_12_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv_12_Lat#4
// Offset 42
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv_12_Lat#5
// Offset 47
NOP

// Rung HBW_Conv_12_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv_12_Lat
$LGCEND HBW_Conv_12_Lat

// Beginning of Code Block HBW_RETRACT_13
$LGCMOD HBW_RETRACT_13

// Rung HBW_RETRACT_13#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_RETRACT_13#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_RETRACT_13#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_RETRACT_13#4
// Offset 46
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_RETRACT_13#5
// Offset 68
STRGE 7650 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_RETRACT_13#6
// Offset 73
RET

// End of Code Block HBW_RETRACT_13
$LGCEND HBW_RETRACT_13

// Beginning of Code Block HBW_Retract_23
$LGCMOD HBW_Retract_23

// Rung HBW_Retract_23#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_23#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_23#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_23#4
// Offset 46
STRN C215
AND ST2
OUT Y51
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_Retract_23#5
// Offset 65
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_23#6
// Offset 70
RET

// End of Code Block HBW_Retract_23
$LGCEND HBW_Retract_23

// Beginning of Code Block HBW_Conv13_Lat
$LGCMOD HBW_Conv13_Lat

// Rung HBW_Conv13_Lat#1
// Offset 0
NOP

// Rung HBW_Conv13_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv13_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv13_Lat#4
// Offset 42
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv13_Lat#5
// Offset 47
NOP

// Rung HBW_Conv13_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv13_Lat
$LGCEND HBW_Conv13_Lat

// Beginning of Code Block HBW_Conv_2Row
$LGCMOD HBW_Conv_2Row

// Rung HBW_Conv_2Row#1
// Offset 0
NOP

// Rung HBW_Conv_2Row#2
// Offset 1
NOP

// Rung HBW_Conv_2Row#3
// Offset 2
NOP

// Rung HBW_Conv_2Row#4
// Offset 3
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_2Row#5
// Offset 22
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Conv_2Row#6
// Offset 42
STRGE $HBW_Encoder_Z.Acc 1380
OUT C251

// Rung HBW_Conv_2Row#7
// Offset 47
NOP

// Rung HBW_Conv_2Row#8
// Offset 48
RET

// End of Code Block HBW_Conv_2Row
$LGCEND HBW_Conv_2Row

// Beginning of Code Block HBW_PickUp_R2
$LGCMOD HBW_PickUp_R2

// Rung HBW_PickUp_R2#1
// Offset 0
NOP

// Rung HBW_PickUp_R2#2
// Offset 1
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R2#3
// Offset 20
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R2#4
// Offset 38
NOP

// Rung HBW_PickUp_R2#5
// Offset 39
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R2#6
// Offset 61
STRLE 1400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R2#7
// Offset 66
NOP

// Rung HBW_PickUp_R2#8
// Offset 67
NOP

// Rung HBW_PickUp_R2#9
// Offset 68
NOP

// Rung HBW_PickUp_R2#10
// Offset 69
RET

// End of Code Block HBW_PickUp_R2
$LGCEND HBW_PickUp_R2

// Beginning of Code Block HBW_Conv11_Lat
$LGCMOD HBW_Conv11_Lat

// Rung HBW_Conv11_Lat#1
// Offset 0
NOP

// Rung HBW_Conv11_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv11_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv11_Lat#4
// Offset 42
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv11_Lat#5
// Offset 47
NOP

// Rung HBW_Conv11_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv11_Lat
$LGCEND HBW_Conv11_Lat

// Beginning of Code Block HBW_Retract_12
$LGCMOD HBW_Retract_12

// Rung HBW_Retract_12#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_12#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_12#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_12#4
// Offset 46
RET

// End of Code Block HBW_Retract_12
$LGCEND HBW_Retract_12

// Beginning of Code Block HBW_Shift_C1C2
$LGCMOD HBW_Shift_C1C2

// Rung HBW_Shift_C1C2#1
// Offset 0
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Shift_C1C2#2
// Offset 5
NOP

// Rung HBW_Shift_C1C2#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Shift_C1C2#4
// Offset 25
NOP

// Rung HBW_Shift_C1C2#5
// Offset 26
STRN C215
AND ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_Shift_C1C2#6
// Offset 44
NOP

// Rung HBW_Shift_C1C2#7
// Offset 45
RET

// End of Code Block HBW_Shift_C1C2
$LGCEND HBW_Shift_C1C2

// Beginning of Code Block HBW_Move_R1_R2
$LGCMOD HBW_Move_R1_R2

// Rung HBW_Move_R1_R2#1
// Offset 0
STRGE 1760 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Move_R1_R2#2
// Offset 5
NOP

// Rung HBW_Move_R1_R2#3
// Offset 6
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Move_R1_R2#4
// Offset 25
NOP

// Rung HBW_Move_R1_R2#5
// Offset 26
NOP

// Rung HBW_Move_R1_R2#6
// Offset 27
RET

// End of Code Block HBW_Move_R1_R2
$LGCEND HBW_Move_R1_R2

// Beginning of Code Block HBW_Retract_22
$LGCMOD HBW_Retract_22

// Rung HBW_Retract_22#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_22#2
// Offset 22
STRGE 1730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_22#3
// Offset 27
NOP

// Rung HBW_Retract_22#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_22#5
// Offset 47
STRLE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_22#6
// Offset 52
STRN C215
AND C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
AND ST2
OUT Y50

// Rung HBW_Retract_22#7
// Offset 72
NOP

// Rung HBW_Retract_22#8
// Offset 73
RET

// End of Code Block HBW_Retract_22
$LGCEND HBW_Retract_22

// Beginning of Code Block HBW_Retract_21
$LGCMOD HBW_Retract_21

// Rung HBW_Retract_21#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_21#2
// Offset 22
STRGE 1730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_21#3
// Offset 27
NOP

// Rung HBW_Retract_21#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_21#5
// Offset 47
STRLE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_21#6
// Offset 52
STRN C215
AND C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
AND ST2
OUT Y50

// Rung HBW_Retract_21#7
// Offset 72
NOP

// Rung HBW_Retract_21#8
// Offset 73
RET

// End of Code Block HBW_Retract_21
$LGCEND HBW_Retract_21

// Beginning of Code Block HBW_Retract_31
$LGCMOD HBW_Retract_31

// Rung HBW_Retract_31#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_31#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_31#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_31#4
// Offset 46
STRN C215
AND ST2
OUT Y51
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_Retract_31#5
// Offset 65
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_31#6
// Offset 70
RET

// End of Code Block HBW_Retract_31
$LGCEND HBW_Retract_31

// Beginning of Code Block HBW_Move_R2_R3
$LGCMOD HBW_Move_R2_R3

// Rung HBW_Move_R2_R3#1
// Offset 0
STRGE 3600 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Move_R2_R3#2
// Offset 5
NOP

// Rung HBW_Move_R2_R3#3
// Offset 6
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Move_R2_R3#4
// Offset 25
NOP

// Rung HBW_Move_R2_R3#5
// Offset 26
NOP

// Rung HBW_Move_R2_R3#6
// Offset 27
RET

// End of Code Block HBW_Move_R2_R3
$LGCEND HBW_Move_R2_R3

// Beginning of Code Block HBW_PickUp_R3
$LGCMOD HBW_PickUp_R3

// Rung HBW_PickUp_R3#1
// Offset 0
NOP

// Rung HBW_PickUp_R3#2
// Offset 1
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R3#3
// Offset 20
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R3#4
// Offset 38
NOP

// Rung HBW_PickUp_R3#5
// Offset 39
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R3#6
// Offset 61
STRLE 2920 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R3#7
// Offset 66
NOP

// Rung HBW_PickUp_R3#8
// Offset 67
NOP

// Rung HBW_PickUp_R3#9
// Offset 68
NOP

// Rung HBW_PickUp_R3#10
// Offset 69
RET

// End of Code Block HBW_PickUp_R3
$LGCEND HBW_PickUp_R3

// Beginning of Code Block HBW_Conv_3Row
$LGCMOD HBW_Conv_3Row

// Rung HBW_Conv_3Row#1
// Offset 0
NOP

// Rung HBW_Conv_3Row#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_3Row#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Conv_3Row#4
// Offset 40
STRLE $HBW_Encoder_Z.Acc 2950
OUT C251

// Rung HBW_Conv_3Row#5
// Offset 45
NOP

// Rung HBW_Conv_3Row#6
// Offset 46
RET

// End of Code Block HBW_Conv_3Row
$LGCEND HBW_Conv_3Row

// Beginning of Code Block HBW_Retract_32
$LGCMOD HBW_Retract_32

// Rung HBW_Retract_32#1
// Offset 0
STRGE 3300 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_32#2
// Offset 5
NOP

// Rung HBW_Retract_32#3
// Offset 6
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_32#4
// Offset 28
NOP

// Rung HBW_Retract_32#5
// Offset 29
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_32#6
// Offset 48
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_32#7
// Offset 53
NOP

// Rung HBW_Retract_32#8
// Offset 54
STRN C215
AND C250
DUPBOOL
ANDN C251
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_Retract_32#9
// Offset 77
NOP

// Rung HBW_Retract_32#10
// Offset 78
RET

// End of Code Block HBW_Retract_32
$LGCEND HBW_Retract_32

// Beginning of Code Block HBW_Retract_33
$LGCMOD HBW_Retract_33

// Rung HBW_Retract_33#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_33#2
// Offset 22
STRGE 3300 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_33#3
// Offset 27
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_33#4
// Offset 46
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_33#5
// Offset 51
NOP

// Rung HBW_Retract_33#6
// Offset 52
STRN C215
AND C250
DUPBOOL
ANDN C251
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_Retract_33#7
// Offset 75
NOP

// Rung HBW_Retract_33#8
// Offset 76
RET

// End of Code Block HBW_Retract_33
$LGCEND HBW_Retract_33

// Beginning of Code Block HBW_Retract_DN
$LGCMOD HBW_Retract_DN

// Rung HBW_Retract_DN#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_DN#2
// Offset 22
STRGE 3200 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_DN#3
// Offset 27
NOP

// Rung HBW_Retract_DN#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_DN#5
// Offset 47
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_DN#6
// Offset 52
STRN C215
AND C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
AND ST2
OUT Y50

// Rung HBW_Retract_DN#7
// Offset 72
NOP

// Rung HBW_Retract_DN#8
// Offset 73
RET

// End of Code Block HBW_Retract_DN
$LGCEND HBW_Retract_DN

// Beginning of Code Block oneOperation
$LGCMOD oneOperation

// Rung oneOperation#1
// Offset 0
NOP

// Rung oneOperation#2
// Offset 1
NOP

// Rung oneOperation#3
// Offset 2
RET

// End of Code Block oneOperation
$LGCEND oneOperation

// Beginning of Code Block HBW_Check1Puck
$LGCMOD HBW_Check1Puck

// Rung HBW_Check1Puck#1
// Offset 0
STR C217
MOVE 1 C300
MOVE 1 N2

// Rung HBW_Check1Puck#2
// Offset 5
STR C218
MOVE 1 C300
MOVE 2 N2

// Rung HBW_Check1Puck#3
// Offset 10
STR C219
MOVE 1 C300
MOVE 3 N2

// Rung HBW_Check1Puck#4
// Offset 15
STR C220
MOVE 1 C300
MOVE 4 N2

// Rung HBW_Check1Puck#5
// Offset 20
STR C221
MOVE 1 C300
MOVE 5 N2

// Rung HBW_Check1Puck#6
// Offset 25
STR C222
MOVE 1 C300
MOVE 6 N2

// Rung HBW_Check1Puck#7
// Offset 30
STR C223
MOVE 1 C300
MOVE 7 N2

// Rung HBW_Check1Puck#8
// Offset 35
STR C224
MOVE 1 C300
MOVE 8 N2

// Rung HBW_Check1Puck#9
// Offset 40
STR C225
MOVE 1 C300
MOVE 9 N2

// Rung HBW_Check1Puck#10
// Offset 45
RET

// End of Code Block HBW_Check1Puck
$LGCEND HBW_Check1Puck

// Beginning of Code Block HBW_OneTime_R1
$LGCMOD HBW_OneTime_R1

// Rung HBW_OneTime_R1#1
// Offset 0
STRGE 375 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneTime_R1#2
// Offset 5
NOP

// Rung HBW_OneTime_R1#3
// Offset 6
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_OneTime_R1#4
// Offset 25
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneTime_R1#5
// Offset 45
NOP

// Rung HBW_OneTime_R1#6
// Offset 46
RET

// Rung HBW_OneTime_R1#7
// Offset 47
NOP

// End of Code Block HBW_OneTime_R1
$LGCEND HBW_OneTime_R1

// Beginning of Code Block HBW_OneTime_R2
$LGCMOD HBW_OneTime_R2

// Rung HBW_OneTime_R2#1
// Offset 0
STRGE 1650 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneTime_R2#2
// Offset 5
NOP

// Rung HBW_OneTime_R2#3
// Offset 6
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_OneTime_R2#4
// Offset 25
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneTime_R2#5
// Offset 45
NOP

// Rung HBW_OneTime_R2#6
// Offset 46
RET

// Rung HBW_OneTime_R2#7
// Offset 47
NOP

// End of Code Block HBW_OneTime_R2
$LGCEND HBW_OneTime_R2

// Beginning of Code Block HBW_OneTime_R3
$LGCMOD HBW_OneTime_R3

// Rung HBW_OneTime_R3#1
// Offset 0
STRGE 3200 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneTime_R3#2
// Offset 5
NOP

// Rung HBW_OneTime_R3#3
// Offset 6
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_OneTime_R3#4
// Offset 25
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneTime_R3#5
// Offset 45
NOP

// Rung HBW_OneTime_R3#6
// Offset 46
RET

// Rung HBW_OneTime_R3#7
// Offset 47
NOP

// End of Code Block HBW_OneTime_R3
$LGCEND HBW_OneTime_R3

// Beginning of Code Block HBW_OneTime_C1
$LGCMOD HBW_OneTime_C1

// Rung HBW_OneTime_C1#1
// Offset 0
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_OneTime_C1#2
// Offset 5
NOP

// Rung HBW_OneTime_C1#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_OneTime_C1#4
// Offset 25
NOP

// Rung HBW_OneTime_C1#5
// Offset 26
RET

// Rung HBW_OneTime_C1#6
// Offset 27
NOP

// Rung HBW_OneTime_C1#7
// Offset 28
NOP

// End of Code Block HBW_OneTime_C1
$LGCEND HBW_OneTime_C1

// Beginning of Code Block HBW_OneTime_C2
$LGCMOD HBW_OneTime_C2

// Rung HBW_OneTime_C2#1
// Offset 0
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_OneTime_C2#2
// Offset 5
NOP

// Rung HBW_OneTime_C2#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_OneTime_C2#4
// Offset 25
NOP

// Rung HBW_OneTime_C2#5
// Offset 26
RET

// Rung HBW_OneTime_C2#6
// Offset 27
NOP

// Rung HBW_OneTime_C2#7
// Offset 28
NOP

// Rung HBW_OneTime_C2#8
// Offset 29
NOP

// End of Code Block HBW_OneTime_C2
$LGCEND HBW_OneTime_C2

// Beginning of Code Block HBW_OneTime_C3
$LGCMOD HBW_OneTime_C3

// Rung HBW_OneTime_C3#1
// Offset 0
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_OneTime_C3#2
// Offset 5
NOP

// Rung HBW_OneTime_C3#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_OneTime_C3#4
// Offset 25
NOP

// Rung HBW_OneTime_C3#5
// Offset 26
RET

// Rung HBW_OneTime_C3#6
// Offset 27
NOP

// Rung HBW_OneTime_C3#7
// Offset 28
NOP

// Rung HBW_OneTime_C3#8
// Offset 29
NOP

// End of Code Block HBW_OneTime_C3
$LGCEND HBW_OneTime_C3

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#2
// Offset 3
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#3
// Offset 6
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#4
// Offset 9
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#5
// Offset 12
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// Rung $Main#6
// Offset 15
#BEGIN FMT_COMMENT 
"Hunter Demo Light<br>"
#END

STR ST1
RUN hunt_exp_light

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
SG HBW_Program.S0

// Rung HBW_Program#2
// Offset 2
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#3
// Offset 10
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#4
// Offset 12
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#5
// Offset 14
STR ST1
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#6
// Offset 22
STR ST1
CALL HBW_Check1Puck 0x1 DST511 "3" "3"

// Rung HBW_Program#7
// Offset 30
STR C300
JMP HBW_Program.S19

// Rung HBW_Program#8
// Offset 32
NOP

// Rung HBW_Program#9
// Offset 33
STR C216
JMP HBW_Program.S1

// Rung HBW_Program#10
// Offset 35
STR C213
JMP HBW_Program.S1

// Rung HBW_Program#11
// Offset 37
SG HBW_Program.S1

// Rung HBW_Program#12
// Offset 39
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#13
// Offset 47
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#14
// Offset 49
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#15
// Offset 51
STR ST1
MOVE 0 N1

// Rung HBW_Program#16
// Offset 54
STR ST1
MOVE 0 C299

// Rung HBW_Program#17
// Offset 57
NOP

// Rung HBW_Program#18
// Offset 58
STR ST1
DUPBOOL
STR C205
ANDN C206
STR C206
ANDN C205
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 500 60
POPBOOL
DUPBOOL
AND C205
OUT Y48
POPBOOL
AND C206
OUT Y49

// Rung HBW_Program#19
// Offset 87
STR ST1
DUPBOOL
STR C207
ANDN C208
STRN C207
AND C208
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
POPBOOL
DUPBOOL
AND C207
OUT Y50
POPBOOL
AND C208
OUT Y51

// Rung HBW_Program#20
// Offset 116
STR ST1
DUPBOOL
STR C209
ANDN C210
STRN C209
AND C210
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
POPBOOL
DUPBOOL
AND C209
OUT Y4
POPBOOL
AND C210
OUT Y5

// Rung HBW_Program#21
// Offset 145
STR ST1
DUPBOOL
STR C211
ANDN C212
STRN C211
AND C212
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
POPBOOL
DUPBOOL
AND C211
OUT Y6
POPBOOL
AND C212
OUT Y7

// Rung HBW_Program#22
// Offset 174
STR C213
JMP HBW_Program.S2

// Rung HBW_Program#23
// Offset 176
SG HBW_Program.S2

// Rung HBW_Program#24
// Offset 178
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#25
// Offset 186
STR X0
OUT $HBW_Encoder_X.ResetLevel

// Rung HBW_Program#26
// Offset 188
STR X3
OUT $HBW_Encoder_Z.ResetLevel

// Rung HBW_Program#27
// Offset 190
STR ST1
CALL HBW_Home 0x1 DST511 "3" "3"

// Rung HBW_Program#28
// Offset 198
STR X0
AND X11
AND X3
JMP HBW_Program.S3

// Rung HBW_Program#29
// Offset 202
STR C212
JMP HBW_Program.S3

// Rung HBW_Program#30
// Offset 204
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#31
// Offset 206
SG HBW_Program.S3

// Rung HBW_Program#32
// Offset 208
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#33
// Offset 216
STR ST1
CALL HWB_Home_to_11 0x1 DST511 "3" "3"

// Rung HBW_Program#34
// Offset 224
STRN C250
ANDN C251
JMP HBW_Program.S4

// Rung HBW_Program#35
// Offset 227
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#36
// Offset 229
SG HBW_Program.S4

// Rung HBW_Program#37
// Offset 231
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#38
// Offset 239
STR ST1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#39
// Offset 247
STR X10
ANDN C251
JMP HBW_Program.S5

// Rung HBW_Program#40
// Offset 250
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#41
// Offset 252
NOP

// Rung HBW_Program#42
// Offset 253
SG HBW_Program.S5

// Rung HBW_Program#43
// Offset 255
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#44
// Offset 263
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#45
// Offset 271
STRN C251
AND C250
JMP HBW_Program.S6

// Rung HBW_Program#46
// Offset 274
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#47
// Offset 276
SG HBW_Program.S6

// Rung HBW_Program#48
// Offset 278
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#49
// Offset 286
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#50
// Offset 294
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#51
// Offset 296
STRN X2
JMP HBW_Program.S7
INC N1

// Rung HBW_Program#52
// Offset 299
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#53
// Offset 301
NOP

// Rung HBW_Program#54
// Offset 302
SG HBW_Program.S7

// Rung HBW_Program#55
// Offset 304
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#56
// Offset 312
STR C300
MOVE 1 C299

// Rung HBW_Program#57
// Offset 315
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#58
// Offset 323
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#59
// Offset 332
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#60
// Offset 334
NOP

// Rung HBW_Program#61
// Offset 335
SG HBW_Program.S8

// Rung HBW_Program#62
// Offset 337
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#63
// Offset 345
STR ST1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#64
// Offset 353
STR ST1
MOVE 0 C299

// Rung HBW_Program#65
// Offset 356
STRN C250
JMP HBW_Program.S9

// Rung HBW_Program#66
// Offset 358
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#67
// Offset 360
NOP

// Rung HBW_Program#68
// Offset 361
SG HBW_Program.S9

// Rung HBW_Program#69
// Offset 363
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#70
// Offset 371
STR ST1
CALL HBW_Return_Top 0x1 DST511 "3" "3"

// Rung HBW_Program#71
// Offset 379
STR X10
ANDN C251
JMP HBW_Program.S10
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#72
// Offset 389
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#73
// Offset 391
NOP

// Rung HBW_Program#74
// Offset 392
SG HBW_Program.S10

// Rung HBW_Program#75
// Offset 394
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#76
// Offset 402
STR ST1
CALL HBW_MV_11_12 0x1 DST511 "3" "3"

// Rung HBW_Program#77
// Offset 410
STRN C250
JMP HBW_Program.S11

// Rung HBW_Program#78
// Offset 412
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#79
// Offset 414
NOP

// Rung HBW_Program#80
// Offset 415
SG HBW_Program.S11

// Rung HBW_Program#81
// Offset 417
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#82
// Offset 425
STRE N1 1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#83
// Offset 436
STRE N1 2
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#84
// Offset 447
STRE N1 3
CALL HBW_Move_R1_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#85
// Offset 458
STRE N1 3
ANDLE 1650 $HBW_Encoder_Z.Acc
JMP HBW_Program.S51

// Rung HBW_Program#86
// Offset 467
STRE N1 4
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#87
// Offset 478
STRE N1 5
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#88
// Offset 489
STRE N1 6
CALL HBW_Move_R2_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#89
// Offset 500
STRE N1 6
ANDLE 3200 $HBW_Encoder_Z.Acc
JMP HBW_Program.S51

// Rung HBW_Program#90
// Offset 509
STRE N1 7
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#91
// Offset 520
STRE N1 8
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#92
// Offset 531
STRE N1 9
JMP HBW_Program.S18

// Rung HBW_Program#93
// Offset 536
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#94
// Offset 538
NOP

// Rung HBW_Program#95
// Offset 539
NOP

// Rung HBW_Program#96
// Offset 540
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#97
// Offset 543
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#98
// Offset 545
SG HBW_Program.S51

// Rung HBW_Program#99
// Offset 547
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#100
// Offset 555
STRE N1 3
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#101
// Offset 566
STRE N1 6
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#102
// Offset 577
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#103
// Offset 579
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#104
// Offset 582
SG HBW_Program.S12

// Rung HBW_Program#105
// Offset 584
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#106
// Offset 592
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#107
// Offset 600
STRN C251
AND C250
JMP HBW_Program.S13

// Rung HBW_Program#108
// Offset 603
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#109
// Offset 605
SG HBW_Program.S13

// Rung HBW_Program#110
// Offset 607
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#111
// Offset 615
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#112
// Offset 623
STR C300
MOVE 1 C299

// Rung HBW_Program#113
// Offset 626
STRN X2
AND C299
JMP HBW_Program.S14
INC N1

// Rung HBW_Program#114
// Offset 630
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#115
// Offset 632
SG HBW_Program.S14

// Rung HBW_Program#116
// Offset 634
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#117
// Offset 642
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#118
// Offset 650
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#119
// Offset 659
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#120
// Offset 661
SG HBW_Program.S15

// Rung HBW_Program#121
// Offset 663
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#122
// Offset 671
STR ST1
MOVE 0 C299

// Rung HBW_Program#123
// Offset 674
STRE N1 1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#124
// Offset 685
STRE N1 2
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#125
// Offset 696
STRE N1 3
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#126
// Offset 707
STRE N1 4
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#127
// Offset 718
STRE N1 5
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#128
// Offset 729
STRE N1 6
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#129
// Offset 740
STRE N1 7
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#130
// Offset 751
STRE N1 8
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#131
// Offset 762
STRE N1 9
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#132
// Offset 773
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#133
// Offset 775
STRN C251
JMP HBW_Program.S16
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#134
// Offset 784
SG HBW_Program.S16

// Rung HBW_Program#135
// Offset 786
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#136
// Offset 794
STRE N1 1
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#137
// Offset 805
STRE N1 2
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#138
// Offset 816
STRE N1 3
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#139
// Offset 827
STRE N1 4
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#140
// Offset 838
STRE N1 5
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#141
// Offset 849
STRE N1 6
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#142
// Offset 860
STRE N1 7
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#143
// Offset 871
STRE N1 8
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#144
// Offset 882
STRE N1 9
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#145
// Offset 893
NOP

// Rung HBW_Program#146
// Offset 894
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#147
// Offset 896
STRN C250
AND X10
JMP HBW_Program.S17

// Rung HBW_Program#148
// Offset 899
SG HBW_Program.S17

// Rung HBW_Program#149
// Offset 901
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#150
// Offset 909
STRE N1 1
CALL HBW_Retract_12 0x1 DST511 "3" "3"

// Rung HBW_Program#151
// Offset 920
STRE N1 2
CALL HBW_RETRACT_13 0x1 DST511 "3" "3"

// Rung HBW_Program#152
// Offset 931
STRE N1 3
CALL HBW_Retract_23 0x1 DST511 "3" "3"

// Rung HBW_Program#153
// Offset 942
STRE N1 4
CALL HBW_Retract_22 0x1 DST511 "3" "3"

// Rung HBW_Program#154
// Offset 953
STRE N1 5
CALL HBW_Retract_21 0x1 DST511 "3" "3"

// Rung HBW_Program#155
// Offset 964
STRE N1 6
CALL HBW_Retract_21 0x1 DST511 "3" "3"

// Rung HBW_Program#156
// Offset 975
STRE N1 7
CALL HBW_Retract_32 0x1 DST511 "3" "3"

// Rung HBW_Program#157
// Offset 986
STRE N1 8
CALL HBW_Retract_33 0x1 DST511 "3" "3"

// Rung HBW_Program#158
// Offset 997
STRE N1 9
CALL HBW_Retract_33 0x1 DST511 "3" "3"

// Rung HBW_Program#159
// Offset 1008
NOP

// Rung HBW_Program#160
// Offset 1009
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#161
// Offset 1011
STR X11
ANDN C251
ANDN C250
JMP HBW_Program.S11

// Rung HBW_Program#162
// Offset 1015
STR X11
ANDE N1 1
JMP HBW_Program.S50

// Rung HBW_Program#163
// Offset 1021
SG HBW_Program.S18

// Rung HBW_Program#164
// Offset 1023
STR ST1
JMP HBW_Program.S0

// Rung HBW_Program#165
// Offset 1025
SG HBW_Program.S50

// Rung HBW_Program#166
// Offset 1027
STR ST1
CALL HBW_Shift_C1C2 0x1 DST511 "3" "3"

// Rung HBW_Program#167
// Offset 1035
STRN Y50
ANDN C250
JMP HBW_Program.S11

// Rung HBW_Program#168
// Offset 1038
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#169
// Offset 1040
NOP

// Rung HBW_Program#170
// Offset 1041
SG HBW_Program.S19

// Rung HBW_Program#171
// Offset 1043
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#172
// Offset 1051
STR X0
OUT $HBW_Encoder_X.ResetLevel

// Rung HBW_Program#173
// Offset 1053
STR X3
OUT $HBW_Encoder_Z.ResetLevel

// Rung HBW_Program#174
// Offset 1055
NOP

// Rung HBW_Program#175
// Offset 1056
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#176
// Offset 1058
STR ST1
CALL HBW_Home 0x1 DST511 "3" "3"

// Rung HBW_Program#177
// Offset 1066
STR X0
AND X11
AND X3
JMP HBW_Program.S20

// Rung HBW_Program#178
// Offset 1070
SG HBW_Program.S20

// Rung HBW_Program#179
// Offset 1072
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#180
// Offset 1080
NOP

// Rung HBW_Program#181
// Offset 1081
STRE N2 1
CALL HBW_OneTime_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#182
// Offset 1092
STRE N2 2
CALL HBW_OneTime_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#183
// Offset 1103
STRE N2 3
CALL HBW_OneTime_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#184
// Offset 1114
STRE N2 4
CALL HBW_OneTime_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#185
// Offset 1125
STRE N2 5
CALL HBW_OneTime_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#186
// Offset 1136
STRE N2 6
CALL HBW_OneTime_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#187
// Offset 1147
STRE N2 7
CALL HBW_OneTime_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#188
// Offset 1158
STRE N2 8
CALL HBW_OneTime_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#189
// Offset 1169
STRE N2 9
CALL HBW_OneTime_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#190
// Offset 1180
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#191
// Offset 1182
STRN C251
JMP HBW_Program.S21

// Rung HBW_Program#192
// Offset 1184
SG HBW_Program.S21

// Rung HBW_Program#193
// Offset 1186
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#194
// Offset 1194
NOP

// Rung HBW_Program#195
// Offset 1195
STRE N2 1
CALL HBW_OneTime_C1 0x1 DST511 "3" "3"

// Rung HBW_Program#196
// Offset 1206
STRE N2 2
CALL HBW_OneTime_C2 0x1 DST511 "3" "3"

// Rung HBW_Program#197
// Offset 1217
STRE N2 3
CALL HBW_OneTime_C3 0x1 DST511 "3" "3"

// Rung HBW_Program#198
// Offset 1228
STRE N2 4
CALL HBW_OneTime_C1 0x1 DST511 "3" "3"

// Rung HBW_Program#199
// Offset 1239
STRE N2 5
CALL HBW_OneTime_C2 0x1 DST511 "3" "3"

// Rung HBW_Program#200
// Offset 1250
STRE N2 6
CALL HBW_OneTime_C3 0x1 DST511 "3" "3"

// Rung HBW_Program#201
// Offset 1261
STRE N2 7
CALL HBW_OneTime_C1 0x1 DST511 "3" "3"

// Rung HBW_Program#202
// Offset 1272
STRE N2 8
CALL HBW_OneTime_C2 0x1 DST511 "3" "3"

// Rung HBW_Program#203
// Offset 1283
STRE N2 9
CALL HBW_OneTime_C3 0x1 DST511 "3" "3"

// Rung HBW_Program#204
// Offset 1294
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#205
// Offset 1296
STRN C250
JMP HBW_Program.S22

// Rung HBW_Program#206
// Offset 1298
SG HBW_Program.S22

// Rung HBW_Program#207
// Offset 1300
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#208
// Offset 1308
STRE N2 1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#209
// Offset 1319
STRE N2 2
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#210
// Offset 1330
STRE N2 3
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#211
// Offset 1341
STRE N2 4
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#212
// Offset 1352
STRE N2 5
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#213
// Offset 1363
STRE N2 6
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#214
// Offset 1374
STRE N2 7
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#215
// Offset 1385
STRE N2 8
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#216
// Offset 1396
STRE N2 9
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#217
// Offset 1407
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#218
// Offset 1409
STRN C251
JMP HBW_Program.S23

// Rung HBW_Program#219
// Offset 1411
SG HBW_Program.S23

// Rung HBW_Program#220
// Offset 1413
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#221
// Offset 1421
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#222
// Offset 1429
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#223
// Offset 1431
STRN C251
AND C250
JMP HBW_Program.S24

// Rung HBW_Program#224
// Offset 1434
SG HBW_Program.S24

// Rung HBW_Program#225
// Offset 1436
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#226
// Offset 1444
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#227
// Offset 1452
STRN X2
AND C299
JMP HBW_Program.S25

// Rung HBW_Program#228
// Offset 1455
STR C300
MOVE 1 C299

// Rung HBW_Program#229
// Offset 1458
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#230
// Offset 1460
SG HBW_Program.S25

// Rung HBW_Program#231
// Offset 1462
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#232
// Offset 1470
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#233
// Offset 1478
STR X11
JMP HBW_Program.S26
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#234
// Offset 1487
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#235
// Offset 1489
NOP

// Rung HBW_Program#236
// Offset 1490
SG HBW_Program.S26

// Rung HBW_Program#237
// Offset 1492
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#238
// Offset 1500
NOP

// Rung HBW_Program#239
// Offset 1501
STR ST1
CALL HWB_Home_to_11 0x1 DST511 "3" "3"

// Rung HBW_Program#240
// Offset 1509
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#241
// Offset 1511
NOP

// Rung HBW_Program#242
// Offset 1512
NOP

// Rung HBW_Program#243
// Offset 1513
NOP

// Rung HBW_Program#244
// Offset 1514
NOP

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
SG VGR_Program.S0

// Rung VGR_Program#2
// Offset 2
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#3
// Offset 10
STR ST1
DUPBOOL
STR C410
ANDN C409
STRN C410
AND C409
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
POPBOOL
DUPBOOL
AND C410
OUT Y27
POPBOOL
AND C409
OUT Y26

// Rung VGR_Program#4
// Offset 39
STR ST1
DUPBOOL
STR C408
ANDN C411
STRN C408
AND C411
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
POPBOOL
DUPBOOL
AND C408
OUT Y24
POPBOOL
AND C411
OUT Y25

// Rung VGR_Program#5
// Offset 68
STR ST1
DUPBOOL
STR C406
ANDN C407
STRN C406
AND C407
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
POPBOOL
DUPBOOL
AND C406
OUT Y23
POPBOOL
AND C407
OUT Y22

// Rung VGR_Program#6
// Offset 97
STR C452
JMP VGR_Program.S1

// Rung VGR_Program#7
// Offset 99
SG VGR_Program.S1

// Rung VGR_Program#8
// Offset 101
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#9
// Offset 103
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#10
// Offset 111
STRN X25
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
OUT Y22

// Rung VGR_Program#11
// Offset 127
STRN X26
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
OUT Y24

// Rung VGR_Program#12
// Offset 143
STRN X27
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
OUT Y26

// Rung VGR_Program#13
// Offset 159
STR X27
OUT $VGR_Encoder_Rot.ResetLevel

// Rung VGR_Program#14
// Offset 161
STR X26
OUT $VGR_Encoder_X.ResetLevel

// Rung VGR_Program#15
// Offset 163
STR X25
OUT $VGR_Encoder_Y.ResetLevel

// Rung VGR_Program#16
// Offset 165
STR X25
AND X26
AND X27
JMP VGR_Program.S2

// Rung VGR_Program#17
// Offset 169
SG VGR_Program.S2

// Rung VGR_Program#18
// Offset 171
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#19
// Offset 179
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#20
// Offset 181
STR ST1
OUT $VGR_Encoder_Rot.EnableCapture

// Rung VGR_Program#21
// Offset 183
STR ST1
OUT $VGR_Encoder_X.EnableCapture

// Rung VGR_Program#22
// Offset 185
STR ST1
OUT $VGR_Encoder_Y.EnableCapture

// Rung VGR_Program#23
// Offset 187
STRGE 5350 $VGR_Encoder_Rot.Acc
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
OUT Y27

// Rung VGR_Program#24
// Offset 206
STRGE 700 $VGR_Encoder_X.Acc
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
OUT Y25

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STR C813
OUT Y18

// Rung MPO_Program#4
// Offset 12
STR C810
OUT Y17

// Rung MPO_Program#5
// Offset 14
STR C811
OUT Y52

// Rung MPO_Program#6
// Offset 16
STR ST1
DUPBOOL
STR C804
ANDN C805
STR C805
ANDN C804
ORSTR
ANDSTR
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 100
POPBOOL
DUPBOOL
AND C804
OUT Y53
POPBOOL
AND C805
OUT Y15

// Rung MPO_Program#7
// Offset 45
STR C814
OUT Y19

// Rung MPO_Program#8
// Offset 47
STR C809
JMP MPO_Program.S1

// Rung MPO_Program#9
// Offset 49
SG MPO_Program.S1

// Rung MPO_Program#10
// Offset 51
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#11
// Offset 59
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#12
// Offset 61
STRN X24
SET Y17

// Rung MPO_Program#13
// Offset 63
STR Y17
OUT Y20
ANDN X17
ONDTMR T105 1000 Y44

// Rung MPO_Program#14
// Offset 69
STR X17
JMP MPO_Program.S10

// Rung MPO_Program#15
// Offset 71
SG MPO_Program.S10

// Rung MPO_Program#16
// Offset 73
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#17
// Offset 81
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#18
// Offset 83
STR X17
RST Y20

// Rung MPO_Program#19
// Offset 85
STR X17
ONDTMR T106 1000 Y16

// Rung MPO_Program#20
// Offset 89
STR T106.Done
JMP MPO_Program.S11

// Rung MPO_Program#21
// Offset 91
SG MPO_Program.S11

// Rung MPO_Program#22
// Offset 93
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#23
// Offset 101
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#24
// Offset 103
STRN X18
OUT Y52

// Rung MPO_Program#25
// Offset 105
STR X18
RST Y20

// Rung MPO_Program#26
// Offset 107
STR X18
RST Y16

// Rung MPO_Program#27
// Offset 109
STRN Y16
ONDTMR T107 1000 C819

// Rung MPO_Program#28
// Offset 113
STR C819
JMP MPO_Program.S2

// Rung MPO_Program#29
// Offset 115
SG MPO_Program.S2

// Rung MPO_Program#30
// Offset 117
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#31
// Offset 125
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#32
// Offset 127
NOP

// Rung MPO_Program#33
// Offset 128
STRN X19
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y53

// Rung MPO_Program#34
// Offset 144
STR X19
JMP MPO_Program.S3

// Rung MPO_Program#35
// Offset 146
SG MPO_Program.S3

// Rung MPO_Program#36
// Offset 148
STR ST1
SET Y17

// Rung MPO_Program#37
// Offset 150
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#38
// Offset 158
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#39
// Offset 160
STR X19
SET Y19

// Rung MPO_Program#40
// Offset 162
STR X19
ONDTMR T100 2000 Y18

// Rung MPO_Program#41
// Offset 166
STR T100.DN
JMP MPO_Program.S4

// Rung MPO_Program#42
// Offset 168
SG MPO_Program.S4

// Rung MPO_Program#43
// Offset 170
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#44
// Offset 178
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#45
// Offset 180
STR X19
RST Y19

// Rung MPO_Program#46
// Offset 182
STRN X16
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y15

// Rung MPO_Program#47
// Offset 198
STR X16
JMP MPO_Program.S5

// Rung MPO_Program#48
// Offset 200
SG MPO_Program.S5

// Rung MPO_Program#49
// Offset 202
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#50
// Offset 210
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#51
// Offset 212
STR X16
SET Y19

// Rung MPO_Program#52
// Offset 214
STR Y19
ONDTMR T101 1000 C815

// Rung MPO_Program#53
// Offset 218
STR C815
RST Y18

// Rung MPO_Program#54
// Offset 220
STRN Y18
JMP MPO_Program.S6

// Rung MPO_Program#55
// Offset 222
SG MPO_Program.S6

// Rung MPO_Program#56
// Offset 224
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#57
// Offset 232
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#58
// Offset 234
STR X16
RST Y19

// Rung MPO_Program#59
// Offset 236
STRN Y19
ONDTMR T102 1000 C818

// Rung MPO_Program#60
// Offset 240
STR C818
JMP MPO_Program.S7

// Rung MPO_Program#61
// Offset 242
SG MPO_Program.S7

// Rung MPO_Program#62
// Offset 244
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#63
// Offset 252
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#64
// Offset 254
STRN X15
OUT Y45

// Rung MPO_Program#65
// Offset 256
STR X15
TMRDOWN T102 1000
OUT Y43

// Rung MPO_Program#66
// Offset 260
STR T102.Done
JMP MPO_Program.S8

// Rung MPO_Program#67
// Offset 262
SG MPO_Program.S8

// Rung MPO_Program#68
// Offset 264
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#69
// Offset 272
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#70
// Offset 274
STRN X13
OUT Y45

// Rung MPO_Program#71
// Offset 276
STR X13
TMRDOWN T103 1000
OUT Y21

// Rung MPO_Program#72
// Offset 280
STR T103.Done
JMP MPO_Program.S9

// Rung MPO_Program#73
// Offset 282
SG MPO_Program.S9

// Rung MPO_Program#74
// Offset 284
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#75
// Offset 292
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#76
// Offset 294
STRN X12
ONDTMR T104 1000 Y46

// Rung MPO_Program#77
// Offset 298
STR X12
AND ST1
OUT Y47

// Rung MPO_Program#78
// Offset 301
STR X12
JMP MPO_Program.S12

// Rung MPO_Program#79
// Offset 303
SG MPO_Program.S12

// Rung MPO_Program#80
// Offset 305
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#81
// Offset 313
STRN C809
JMP MPO_Program.S0

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
SG SLD_Program.S0

// Rung SLD_Program#2
// Offset 2
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#3
// Offset 10
STR C1600
OUT Y30

// Rung SLD_Program#4
// Offset 12
STR C1601
OUT Y31

// Rung SLD_Program#5
// Offset 14
STR C1602
OUT Y32

// Rung SLD_Program#6
// Offset 16
STR C1603
OUT Y33

// Rung SLD_Program#7
// Offset 18
STR C1604
OUT Y34

// Rung SLD_Program#8
// Offset 20
STR C1605
JMP SLD_Program.S1

// Rung SLD_Program#9
// Offset 22
SG SLD_Program.S1

// Rung SLD_Program#10
// Offset 24
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#11
// Offset 32
STRN C1605
JMP SLD_Program.S0

// Rung SLD_Program#12
// Offset 34
STRN X35
OFFDTMR T200 1750 C1651

// Rung SLD_Program#13
// Offset 38
STR C1651
OUT Y30

// Rung SLD_Program#14
// Offset 40
STRGE T200.Acc 1750
FLASHER 500 500 Y899

// Rung SLD_Program#15
// Offset 48
SG SLD_Program.S2

// Rung SLD_Program#16
// Offset 50
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#17
// Offset 58
STRN C1605
JMP SLD_Program.S0

// Rung SLD_Program#18
// Offset 60
STR ST1
SGSET SLD_Program.S3

// Rung SLD_Program#19
// Offset 62
SG SLD_Program.S3

// Rung SLD_Program#20
// Offset 64
STR C1610
OUT Y30

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STR C1200
OUT Y39

// Rung SSC_Program#4
// Offset 12
STR C1201
OUT Y40

// Rung SSC_Program#5
// Offset 14
STR C1202
OUT Y41

// Rung SSC_Program#6
// Offset 16
STR C1215
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y35

// Rung SSC_Program#7
// Offset 32
STR C1216
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y36

// Rung SSC_Program#8
// Offset 48
STR C1217
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#9
// Offset 64
STR C1218
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#10
// Offset 80
STR ST2
ANDPD X47
ANDPDPF
STR ST2
AND CT150.Done
CNT CT150 100

// Rung SSC_Program#11
// Offset 88
STR C1203
JMP SSC_Program.S1

// Rung SSC_Program#12
// Offset 90
SG SSC_Program.S1

// Rung SSC_Program#13
// Offset 92
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#14
// Offset 100
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#15
// Offset 102
STRN X41
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#16
// Offset 118
STRN X40
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y36

// Rung SSC_Program#17
// Offset 134
STR X40
AND X41
JMP SSC_Program.S2

// Rung SSC_Program#18
// Offset 137
SG SSC_Program.S2

// Rung SSC_Program#19
// Offset 139
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#20
// Offset 147
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#21
// Offset 149
STR X44
ANDPDPF
STR ST2
CNT CT150 300

// Rung SSC_Program#22
// Offset 154
STRN CT150.Done
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y35

// Rung SSC_Program#23
// Offset 170
STR X46
STR ST2
CNT CT151 1300

// Rung SSC_Program#24
// Offset 174
STRN CT151.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#25
// Offset 190
STR CT150.Done
AND CT151.Done
JMP SSC_Program.S3

// Rung SSC_Program#26
// Offset 193
SG SSC_Program.S3

// Rung SSC_Program#27
// Offset 195
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#28
// Offset 203
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#29
// Offset 205
STR X46
STR ST2
CNT CT152 300

// Rung SSC_Program#30
// Offset 209
STRN CT152.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#31
// Offset 225
STR CT152.Done
JMP SSC_Program.S4

// Rung SSC_Program#32
// Offset 227
SG SSC_Program.S4

// Rung SSC_Program#33
// Offset 229
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#34
// Offset 237
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#35
// Offset 239
STR X46
STR ST2
CNT CT153 135

// Rung SSC_Program#36
// Offset 243
STRN CT153.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#37
// Offset 259
STR X44
STR ST2
CNT CT154 210

// Rung SSC_Program#38
// Offset 263
STRN CT154.Done
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y36

// Rung SSC_Program#39
// Offset 279
STR CT153.Done
AND CT154.Done
JMP SSC_Program.S5

// Rung SSC_Program#40
// Offset 282
SG SSC_Program.S5

// Rung SSC_Program#41
// Offset 284
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#42
// Offset 292
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#43
// Offset 294
STR X46
STR ST2
CNT CT155 1100

// Rung SSC_Program#44
// Offset 298
STRN CT155.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// End of Code Block SSC_Program
$PGMEND SSC_Program

// Beginning of Code Block hunt_exp_light
$PRGRM hunt_exp_light

// Rung hunt_exp_light#1
// Offset 0
STR ST2
COPY 0x1 "4 0x0 MC402 Y39 1"

// End of Code Block hunt_exp_light
$PGMEND hunt_exp_light

// Beginning of Code Block HWB_PickUp
$TSK HWB_PickUp

// Rung HWB_PickUp#1
// Offset 0
NOP

// End of Code Block HWB_PickUp
$TSKEND HWB_PickUp

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"C1","copy","",""
"C11","C11_Interlock","","Used to delay logic by one scan"
"C12","C12_Interlock_2","","Used to delay logic by one scan"
"C20","HBW_Has_Pallet","","True when carrying a pallet"
"C51","X_Direction","","True: Left False: Right"
"C52","Z_Direction","","True: Down False: Up"
"C80","Conveyor_Timeout","","Bit high when Conveyor Timeout timer active"
"C90","HBW_XY_PID_EN","","Enables PID control in HBW_Move_XZ"
"C101","HBW_T1_Send","Modbus MC101","Task to deliver a pallet to conveyor"
"C102","HBW_T2_Receive","Modbus MC102","Task to pickup a pallet from conveyor"
"C103","HBW_T3_Reset","Modbus MC103","Reinitialize and home all axises"
"C104","HBW_T4_Manual","Modbus MC104","Switch to manual mode"
"C110","HBW_Move_X_L","Modbus MC110","Move Horizontal Axis towards bay"
"C111","HBW_Move_X_R","Modbus MC111","Move Horizontal Axis towards Conveyor"
"C112","HBW_Move_Y_In","Modbus MC112","Move Cantilever In"
"C113","HBW_Move_Y_Out","Modbus MC113","Move Cantilever Out"
"C114","HBW_Move_Z_Up","Modbus MC114","Move Vertical Axis Up"
"C115","HBW_Move_Z_Down","Modbus MC115","Move Vertical Axis Down"
"C116","HBW_Conveyor_In","Modbus MC116","Move Conveyor In"
"C117","HBW_Conveyor_Out","Modbus MC117","Move Conveyor Out"
"C130","HBW_Status_Ready","Modbus MC130","On when ready for a task"
"C133","HBW_Mov_Conveyor","Modbus MC133","Status Conveyor Moving"
"C134","HBW_Moving_X","Modbus MC134","Status GantryMovingX"
"C135","HBW_Moving_Y","Modbus MC135","Status GantryMovingY"
"C136","HBW_Moving_Z","Modbus MC136","Status GantryMovingZ"
"C138","HBW_Status_Y_Pos","Modbus MC138","Current Y position"
"C141","HBW_Target_Y_Pos","Modbus MC141","Target Y position"
"C150","HBW_MoveComplete","","HBW_Move_XZ completion interlock."
"C180","HBW_Fault","Modbus MC180","Status in Fault State"
"C182","Fault_X_Target","","Active when X target out of range"
"C183","Fault_Z_target","","Active when Z target out of range"
"C400","VGR_T0","",""
"C410","VGR_T1","",""
"C420","VGR_T2","",""
"C430","VGR_T3","",""
"C440","VGR_T4","",""
"C500","VGR_Man_Control","",""
"C799","VGR_RESET","",""
"V105","HBW_Task_X_slot","Modbus MHR105","Value for slot X coord"
"V106","HBW_Task_Y_slot","Modbus MHR106","Value for slot y coord"
"V118","HBW_PWM_Set_X","Modbus MHR118","Set Horizontal Axis PWM Duty Cycle %"
"V119","HBW_PWM_Set_Y","Modbus MHR119","Set Cantilever Axis PWM Duty Cycle %"
"V120","HBW_PWM_Set_Z","Modbus MHR120","Set Vertical Axis PWM Duty cycle %"
"V131","HBW_Cur_Progress","Modbus MHR131","0 to 100 percent job completion"
"V132","HBW_Cur_Stage","Modbus MHR132","Current stage number"
"V137","HBW_Status_X_Pos","Modbus MHR137","Current X encoder position"
"V139","HBW_Status_Z_Pos","Modbus MHR139","Current Z encoder position"
"V140","HBW_Target_X_Pos","Modbus MHR140","Target X encoder position"
"V142","HBW_Target_Z_Pos","Modbus MHR142","Target Z encoder position"
"V181","HBW_Fault_code","Modbus MHR181","Current Fault code"
"V801","VGR_Fault_Code","",""
"N810","VGR_Rot_Target","",""
"N811","VGR_X_Target","",""
"N812","VGR_Y_Target","",""
"D0","MC","",""
"D1","Feeder_Extend","",""
"D140","X_Start_Position","","Distance to target"
"D142","Y_Start_Position","","Distance to target"
"D143","HBW_PWM_Cur_X","","PWM value for X for XZ movement task"
"D144","HBW_PWM_Cur_Z","","PWM value for Z for XZ movement task"
"T3","T_HBW_S6","",""
"T4","T_Conveyor_Timer","","Used to detect conveyor faults"
"MPO_Program.S2","Vaccum_MO","",""
"MPO_Program.S3","Vaccum","",""
"MPO_Program.S4","Vacumm_MO","",""
"MPO_Program.S5","Vaccum_Load","",""
"US0","_CP_Strogram_A","","CP_State_Program"
"US1","_VGR_Movement","","VGR_Movement"
"US2","_SSC_Check_InOut","","SSC_Check_InOut"
"UB0","_VGR_MisScan_A","","VGR_Movement.Done ThisScan"
#END

