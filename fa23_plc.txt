// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\brent\Desktop\factory\ui_cda_mini_factory_fa23\fa23_plc.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
cecb96d23c37b22188f8cad5528fb301dd216d0bc20c10010f46685410a4f5156813bbe8f92b68a7
907d0f7d9d13cd83afa65f24ecf4c46a708dec74de26e5e8ba585aeb5342079a03ab9c984d79f042
dcfb34dc5b45b86c582c9fb67ee8d5956aabb559f8671651b7fea52e1b738e46ea3c2f9af0bfd1d8
bd07cb791393c56efad355909c61291647a39ac6d6f1c1f537b6c4ee3d6579ac3244659396edef84
1d70fc94d319d8c531ac22f8eef847a7aac417ddce1c4f8dd2544f5e3bf6d9db7791731c037b9470
aa7286a1ce9ececdc2bb03c1402c78ebe3e24634757adb2da8439aca56c4b3a9129ae24c8b687e1f
f7b09e06c1da70086d69d3054717571a605d8344fae395ea9bda6b16c79159d9d4cf327547cb9b0b
c5bd96460b80654861a5593c8a12a6c43a978464ce36f6c97319d16f5798eccc4bdb875d7e48a74b
7e6592c96cab9be408634d86e2aca124ca0e1375d1b654755e7075bc62e29e55334be1cedcae4b21
e257bbebb30f2abaaff25c9b4615830dfe4ba0e7cd6a9c46b3eb3de953bf04b094d3c9d5a1607614
281e8d793b393ed59040b3c0dca8a1f2cfb6f8c6d423c92e4be9d306bff06e4f133c6d68ba7524de
af60d039c6ac9007776a03bab389739763c83a249096b0c443b9a6407374b010474cdc9bf5c21d1a
dd5927e91dd93f7811a7a4fdb03899711a1d080bdfb95a029ef6b30b797c67680280e9f5af136c2a
fa77bf151d3b55a5109e0e84dc459d8f0cdd8f6aed0e3c48e0a2e45587223f6ed80e65bf3267396c
85d94419f0945e772ac723473c1f5411d55191b7673669ecd02836035e77ff7adc7c4ea648d65473
c24af902d46d27886853f2c2ad843e15db80b3ee3342b39e96564bf6500ab1089f45feecc46ae5f9
5a275cdde7c6fb7416c835b656a3656aa2639799e91e60f97527357759fcace3d52dd3ab94aebf73
bb5b0159d326661f32bde87f67e6fb8639dce9dfccd80ef382a38054b750a0814f5a1f430df4f40f
07f59607c7c9cb2f252fb2f8b72c59f6bd99e9f86b7188340556b88293e63535652d60d4cd0ab2dd
fb540a5775b7c17ebed8523e399be838101fe98cb9b9dcaaca1149d309a152a5d42cb7748cec9aa8
c08f6c9c8a17a49bf2ca184faa6e4b9f5b015fd7c78dad970724232b677d3f71cfbdc3a3077bb165
98213867e2f27a18f7e969819c16dcda38df27f66ea6e4a06cf001431e1141ed61ddf7a99f92e550
88a5bc7396f3b7262580d7f4211398f1ef09d90bc2ede098f371847a33caa674cccb2b697e3c1e6a
51d56c6d78ab8ad38416527327663f1b0468c215cbf750873f5e8311f9fd5c589725032c01025eee
ecba5f996b7e8163add4639262c37088db9e8a185a23e84dd3f01fa119185ad7a9892876d8981b08
f1611b7a2edffba824071d3491525023da3fe83903f88fdaafce1337a87c69f97d61fb56c13ddeb1
9dd471cada0c3c10c59af7d7e63a8861b49e991ab06fbb2f64a920965390df7781774db2ad5c1fd5
823e238ac0738bc2a595642d90e4b5b23d09f6b97038473cb836d53b532ebb8e4f793207cff61e0d
44d695f9d7c29ea84984562ea974fa67aaa55225c2f250eae60298ecd0c9b154c7c9b5b3baa1948d
4637d05444563c4350ad7e49b491ec942411679a585b712a2eb052633ecdbf115050eab15090f129
cd5d81712326cf22b8decf43668cb5d989d4c5f4441475a319611e94f948bc2b401203ac12cfa847
3a3f6d7a322145c4e8741206315d4874b465fe0d9fc7b4844ab91e0be1def0e3c5ed31c14351022b
a88361c0a2f9ab5a7d8d029e1dfd030aadf0d2cc4b5eab48fe34510a58a94ebe31ad2ece30f91eee
0e4ac592a4c2f5c23c9aa5a123d9700bb5b18e462eff2b2881582e44d96012f545ae320520368443
1c85f90fcd062765efe9af6c5850e48ef53bdd2084d2d9c4e5e637f8706da47d36bef358c19c88bc
85ab6f71967291e95faf0249d5f826bb2d32980552825dfa1be571a29fa0c1d5e9de37c60f2a8932
91e044a732b6917f24fb1247b834d7ffaaecdf5a3852d9162a179fc32e3bc71ba34dde9d6842b439
13475c6a9f5d4b428e05839e6cdd133b0202e56ab4c35550ccde61f210a0c045c072477a0ac92dd1
0a08cd006e63927ac5c986bd8fc166329470062a4f3274dd7f728411669005304ea8525bbdf019fd
8bbf61940298112845d585c70c5380f6777bbbf7d35c675ef7acc4bd0a134e97cc11e1419b1b5e6f
8e9bbf163d29a7d6b0aa244445b91dfbc480cce278f6e4010f64a39c051c7c7e68b5502e47e1dbfa
e1e2f5b3b52b389c73518bc6b7e5a16168b858f2830f42f3904aa7a24e7c2420417a7171e1ddc157
52a96cf0d8158179807ea97ada1a84bbd2d9939f76feaee3f8374d40c5c4deb22032cc09e56e26a9
eb0b473b831a226b301e0f60ff6447f3419763fa1a94c09ae7a9603cc39d1c4edd3e33abaab69554
7b2df460438ae015c6769124c02d334c80b3a4ee0284e9115e1edadae0f6a3b4bf4604e550711ead
8e0b8274e2f690c0d713f25099d409c44d5a761be7f09c799fa682dff7883f26fb5707b8e53e4429
e1f08fc20a23be919db43a5d0335729e310a307936189b1507e2c666e9c997808e9c93a7a1872d86
584a68d230aafb2448454f6dd0f392e5da32e46b7dd0a8299fab0e52856290660a949004f743f58f
7446b1eccfde7381005f921d245c4efcc0a08a3de084dd3548a50d2925df8ba708e4f9051d9c658d
c7c38179d9a9e7ea85db0c20e72d442c9b7b607e44ac14e15e31a68602282a99252f675c98a92f33
d56b445dfc9ce880401e866413fb3a984c93842e68db66d780ca52fd44cc67ce93e407896b849c58
e8e808d4c754732b8cfd098639214610f672ef933abd01f2d1aa72d61fd399221baafddaa5c010a9
2b96d2e7f9178931983e12c8a6c06d055ffc6da5ff251fd0f3007f44ad02f9014362e9b79f3145dc
af51ea6828aecedb151441c39c5fc143f3ab8413fef06ee8ec4a2328a60a703f11d363ad2e369d5d
d00470c93c01ba8c3a88d8cc84d78668739fb4f453c19f4f7544148d5ccfa028dbd98fedd91d828b
46315c26f781cbabd1177100e35c4bb955dccca88276290771e7c574b01d270124312774d6f196a3
501cb7a2c5a90f8d33f0835f0014183c24d1c1872929245145934fd8bb51a2054157208d27280fc3
c48d9b82229f155782efd449ffd2bac9fc2da4ed8c282b5a97c8892e90b04829056e33e1c891e241
764a49950082e750582aff760aa4f1cea6ef5d1d8b67fbb3c1d9c5e3727beb81c8b2611cf8bf0988
e3ad6026af4beb4a9542897c21d8404ae1f779afadc4f358c12d27c1ade2826dcac23df2302d6f03
67b295cc892061cffbca20e0cce966de403f4510dbf0e5994b4da432aa1910dec77d14cb03b6993d
9586168a3d09dc673760c5763f1bd3407f175e0dae0b9c654149acecc1e7020c611de765646a1c00
b05cd876de9d0db13a143a07923276142a6ee5ab8ef7f8cd137e42c0168d365cd405a53336cd6cf7
7aba9623a0bc5999ec63048639e238836b3cd9124f3d4a3b45c41535abdadf229c3d5f10451021a1
0e1d8926c0103e76209dbe0abecb82c0d6f43e530c5af5f3d91ad32b6937a1e03f2d99200f5943bb
1e09543c1df4bb001ab7c4ff83d568889816f4dde638d409c19e83b88ac8fe198646e0a544291597
c15a7925f81e099be4df2a6c3df00cdcb596582bda166fc3c9e527f131d1fecc5ac1cc1434ed53a3
96623e67ee7c330956dc845d38fc4ebf49a987cf997e2d72101a050ddc2647d4383c9151b3c84beb
ee02b2b4bf7f98b5f710020257e86dc52c901da495f3be3ad61e363bcafe1e370cd23da002f78451
654f14a04af9282ca2199400337101c6371af9b09cefcd1d616de40875747fbfd8fad05745451023
661b908665b2ae94f0eb91b27c37873843c060658bbb78273a012a0012f56aaa886d5d300c8ec8d2
bf681e7c6eab62718c3293e12cd75448adcdbd9f4a363ad330e362c0bae4300296cbb6c903de16a8
e79fa10fd2990198857fc1ba5b80f888991b7002811b865daf0e4f9b1c801d3e6c9434b023f60170
e30f0ba66650b29ba07e94a9653a271c2f051cfe0463704ad95b398b61c41265c6e10669c2de6dc7
19377e48774358007b72175547f318cbc249573d88cfa285901c0660e42d2ed303df26aa0ec16633
b50522c43dd1409e49cda891810291f3293d8ab1e94adfa1f458727905d7ddf445746a4b2739b9e0
427ef72b83a8813f12c8eb04f9cc3f2c3d7ca50f436f3b51ac25d4f9f0dff51f5012387b5c735ebd
cfe0334c4e971c6346018fadae93373bbf32c7b64379b081cfe21b1b46ec84f87a508a421b39828c
1c591e23e214d09f8714f1e410827bb785cbe69f90a53919981d8e03f10decec0f44c8bde84b6174
16d51ea51425349a3e448dd4f64d830a7bccf130c682cfd7ade97664a098910fb973c0111533e85e
3db67299d6eb1eaa4ea18adaa130154a9a64a39d71667c70971894b830e687d47081f1b0b7282ad1
9a08b55f3594e06b1e3639af6eb6186d40099d6755658f8a8c699ed47bd14cfd0e98e0597f7ac5f8
f7bd48f621c7d69c78a6174a37422038666866f7b644fe4445cd9a15b0cfd3e89589316c2d565c47
c423cb573d0fa852ef0f5618a7dea360607ff4cc1fddbc8eb12d8fb7d138e41e8dcad4e882d10d01
0b4d2b2091110f141ff53380216a43fd3472af32fc1ffeb796fbf1d99b3d2505a007950b6cf94c4a
4cd171aea61051735a017c7f31ec5c8b1cf4912194929ada4ec34eb0cc7b34bae8ee998807853dc8
058ce76818ea8a3186c041932f284985e3568acad3af4402e13ff2f9c50899fed0507817aadf84ed
f56672084895182e2a4fccc639ea20eb14345fdb1399cced30ed0b149047abe5383fddf5d3bed05a
6799bbcd0eb4f6e90c330514d7833a3cde36137e101adafd96d7af7c9affcf23c470211b66ab7325
75a4cd5cbab93e750eb00e6c8c7935d7b378c6fa45d7d95ed260e74daf0525e4ecd647b0f534c306
8670773df186bae43a11999bfa36c493151dd55535df2d40bd318ab043bfc894f15b9a895e90fbb1
f0a2f988f7968ac49ad35b40645b21eec2ef34e3c5c0a1cf3f8911a67494c7b4040b944cac945203
13c8d7be187d0a6fc67f128cd055912775b6a6891f1026597a3c2f6d7a7262399b465526cfbda0da
bb81df99a7842045d7e49c294f7dac5b8af80433dfcf0f8178eec6eb2faba1fc72f34082d3927c2d
ba00d0396ce31e05f42f7f167ea22666d825fca1908ab7433e96db81f3afd8914e8f8e935ca12603
87623bfb9271dc7e8833d43a4f469709d8af3d15d0c8435f89dbf63696411255ed033baf3ab971a1
2e099410a68754235a8ad96cb4af5a040c6d3111933e8628a390e919205d259358b06b3736d87d71
b985960b6723a14545d6833fa4605bb95da181b85ca0656734962ad807a25745fe280f4d984b43ec
e68fa3940f0ea17896ffe175161ce373c7a07c94716bf99657ef1c1abb56c5893c8375186ce238ad
3dbd404c139af800e4e76d140b3a2eab189e15c250e2dec22baa33e600c660a9920b921be3cafb22
1d8b3f7266cca25178d9383f5835a8f745e053098d1272113dd01c6c96971c3916f81da855d95438
79b1e22cf3663971e48b8ba7241e73b7dfc1d3d093473cb020758d73063283f8d22417abf5f79439
4d080bbba0c2328598d68db18974dd321aa75ad39d6f8e239503ead712a1bb6fdd25a6d1a47413ab
63988647765249aebda741b90eebc96c5bf0babd6df5fac051aaf039889ee4a1d25632580a2d1d8e
51c638668f6f5b4466c55d80fc5ed2fd326ce016363ad1fab5239115d1ef1cd4217891da13b7c8f7
252d2e4c37236478548209fc2d50785fc6b86434dbc68e4220e107b87cad28fac60a6d708d0ef2e6
75cbbd828240fd1164ef0b6e4ebcedcc45b4c9957ca09d1e0cba1d64e82412a0bde2c6318ed28a43
fd4b1be566b3c8ced11819202c7655c91c4000496c290bb030c77009fa6b8f29a118e6985db026ac
b71a920ab9c15bd6e16b698955e9a713202b83288357c2869b9b6b6ee2ae2e65f86eb10d8d222544
472e29f5be8f6d9e28d982025ccbbb7b7a7d8cce67441204c897748f00f1f34b4054ec27d60943a4
5f3c07af4656a05d59cbc4c2844fa1f3fa2a793a0fd1654039523608ee0275ea386995ce5e2f4b58
408ea2b43413755266d4b11111b10289c9852fa867580c794f9bb58f232b593751167110e2baac85
7472cad38a0f1fb13ff386f80dde10bdff5ab1f053708eaf5e6f0821ec377612e99816b2cd320cea
cd8f5eb62162cc4e6e0a51567fc6b5fefc10547a54a28a1fdcb20bbf7443dac031b559f3b9378106
d82489552bb8beb0678868b8f852d4bb89696bd3bd0b93f81ef2af19253d7be5099b49dc3971e3ae
7bc84fb522eda83399943a94184e8a755382bbaca847586bdfe80d284ec448c2f109b3a86a9059cc
dcd4b94e4ee0bbc0f4c82ea04a5a41dca8c733b46f371d9dfcea647ef1e63b824b020ea222cfae41
a17505adb682289d51321f89782b78dc9daf876fc82848fb7f919401457f37b13f967650025ec000
119f949aaebef49d7b474b8286a1a875025187adeedc9042f0cd1492b72cac0a6e6a0c157a8ebfd8
4b830fc72d64be4ef545772153223922aff8eca84ce9f04ea72a3a6fe2bb05aec9ff4d14c2b9c281
923e1d894c7fae634ca78b7e205ad4d46805b2d2cfbac9c7d4bb054564ea23ac80a7d357775e5bcb
c7d698d95bdbb49801cce08e5a8e899999cf5f407db11c9e56aaa90872237e8eeabf5fa6a627092b
0b6280467698ce5f11e369dbd7a0f5807c954671ba511643d4de34cacdd856847ed3992966fe1ac7
59b4c9ff8a9cccc85af881828ff16615904222c7be4fedaf27fc18ace3869cbc224519c8ed1da722
f88d9c48feb1d7d984606e68b448df14907533edf3b1fd4106e78d85135e3f6d7e27e14da7305e8c
d5bab2a02ac4121da1909e01596b17b16a081fc8251b75255963f350e754db80535df4961f4d0e98
988f8817a904de47d38d1c7f6bc32b4053176d4db3dd974cc67ba5bc128ed2b94e09a7883cee1956
4bb715338566a2851b4e6c2d2e434e2a3accc895133fba0704fce65304cd3262b30364c5870e5abb
d6bf58cf70d41b41bc08b6fd6e01d0a95bb845604a6308058d8865d519d33eed846817622cd7102b
751c5f7500f9c6bf74f6ab0137c1fc95bfedabd83e92ea21ce03cd210f3389180063bb8ac4b79420
314656191512d1381fbdd7dffa37263d00ddd16f608d18088c2c8ae84c656d3e8ae6dd6fe3a5c154
79330a15f17c7d3f36554b669890257646a40f1a3919ca66706874e25995bae6217ec8022cd53d13
0ce2df4af44e65b9bb225f5fb6d6e3435488090ab6f6dff950f5d446edaedb047cfb371eaa37a83a
01d61c76c9276219362c5ce3a9b50caa87a19c1dd7171b11d53db250b246067a79d0e5da4ad3fce6
31900a706c7f688d8f6d8e96950a37ab66118f1ae5740a76bdac0a960fcfd0c4fd8d4ce9119e5ce2
4440b5fc2ef79a563e35a87c53c9bcb63e53be1c769963bfd080d0a1f3d5b3d5967f13a0cd041ed9
865ec9eaa45daee11861173449f6545ec7725c5c6f49689ce3cd016aca474362c51d784882e05a8f
f5d43e9e75421882f85a076431f3b39bf89e45b791721b27f60daaac9c05ad4690eab23315db337d
a351cd7654b0a275b120bbd05640ebecca6d5b49b6ac243b79ae5e2cb8d16c5df087d5257b6e7267
fb520208168224a35b5ba06831f0602d0b49a3efd162a5179fd1a751eef1961eea9f3c1eae70f59e
9b7562beaa1506e0b76b8c3ff563ac42d28eef48db48d71321a3dfa6c0ad7bf3bf76861cdd3ec25c
98654b534f34f32848356a12aa5f4d0b6c22f9209ae2b486af1257b6b4c9dde5e70e0e6625511bf1
e5083c8f84ccd2beb21afa824212c6ab30296b71b67114f873662464f73c159b7a42efe3fae07080
8a5bfb43dee598fd44aef029f4c881ecc645039d5c0152e4ce623a39694d4cc9848689b279d14fc1
3ac3dadc3adc3a255157e5de6f0cfacf6bdb0c2df344787cadf36f5656f2ad0bf7a780ae6055f9a9
03346c5c1df6e57cd75a6e43f67e0626b373b853ff1c8859157daf46864a33c98528ac95ad31ba03
d68f4be73c8e327ee2620eb63cdd7826ed307707f54567ceac04b03a6eddf9044964c2120b7c0660
5469a90a899d26aaf70ee5e2f599530c64a84b8e29afac63c5300661ae54b287d7b3d72816e4ded5
160b599d5f91b99f5d12ade57e80606df596ddccdab195c92be0fda8f1e8f75fc63de7c3f2b440de
07c1ade856b23397027eb969b71d9d2e9f80ac73bfade329261d1d60da4b536b21b1251c353c5d71
cd6592b263a0328b6b19e8dd5f2e5a095e6a350d8216f27e6712e5599ff4ad0f0f62965f1d76a78c
8f25be1fe0bb76592770c651904ae54f09a7544b3e88cbef7ae68d61ec789eff0610591a7f0a60a1
32dc140556f79baf19c8a797b0b7f06fe6192c5c6fa7d567414edc7f6e33e31d3b49eee0fe93bdc4
9127c5ed79fe4a17f3b089aacfa5ef28833aa55cbac412c4edf525d431c656e7f47f5e00be0b548e
2e76703fd73fdf8d4cf6239238b53f4ab222166a37716fb6a45b1a05c36bcddd9fa2069635b2df32
0ea07f6fa2bb840790c4b58909387e42d366fa87bf548a15d3b21bcbcd9be498fb58716337ec155f
9f907399397b6b8fed7013f396c0f861b1e8396464ee26f939bf1cad11e865086d4f0a8a22730a90
436446239dc91a486d65c31024694dc17a80bfda32e482c71e0eb506e309dd191553dd780930663e
737b0590d1feeab0ec5dd2bc71653fa841601f0c15bda8bcaa594b964fe15c153bd3bc41a56a9933
f4348351076531c8ff4243f633ce3f3f511381b302ef1eccb40b47c79461a5bc44197302cf8017c1
5e474ef2229b493ead8b527f3c770f4b72e81be81b9f2886a66ef3b560b36ca0120195a120e8d91a
ac759612b9514635006023b7b9263bbf440403b9420345702f5e7c1f9785295207794377bb778309
586b5083a59d6a2a0c83a66bcf5d1da972d3aa08323d5c9d22910c59908556cfa2e096e6c89c252e
35dd9b13b548ed68f46479fe2fd3e47d0c87b03f25b19fc0664495da39727e18ac1344f976ff1918
ae043e97b4f921363be25999dc65c77f99137497e2f4fb09a48465ce72714d2545c29efee2d52fc0
d06b0162c3f444c6b968848f36ba1f08af8ddb312b5de2c46701c3f31d7c926d138a2750ead0684a
1b5987a36f67d4ab957cf8fd330c6808a6ed62f6fc8fa978a87252e17cc7aec0377920c149d3e42c
c89ee19bad66beda1731539b6367d916955b14fc11a36b0a36d353c0eced0373b2c392789c8cf2cc
465d177aa7d30337956f54f6f9302a8b97e0f40735832c749dff121ca5b97a6861346f4f16d19da9
c1d215ee944d6a0fc649bdf3f580c2415865137afa0d6e91d296d3faa24e6af9677e6bf83c3a223e
8e900621a46d2d2ee2732c0352c36026162c1e50b546fc6269bfc0c7c0030728ca1032377cc675e6
5e96a5eec72f4f0c5e3ce15626c3bad4dc3ebf684a4fd58ee216e4414de2fc47e2da24a836ce6c6b
8e92c0845fe264436052af3a517ccc3baf9815b1e3a0e5752d767743c0c55a59404b13ef6dfe25b5
687c23a1e8bacb8bb12c95bc5442003e356f218d306ca3a63fb7ae071a18bcc39cd9ceb22301cb2f
e89e10ec40a654c760dd31d0ce520e4a71b5006799f71966fde1780a9d79c80fe2fbd3718d32a69d
b0ac8609e04d33096d606c8508b45f92d6db894348b924f00344906c218e34f9a85f02894ded8097
bb013966ec00686582cc5581eff56af980a3b377e10f7c68e94e44885d4a0de6f87405f85e0e457a
0296bb5476c1aed0cd19cda9af96d8a914095c0886ec0b14c71089373a9790e168a623804bd8163d
e691ffd6c0b6ce4dde29b24977934ecb09c4d7cb32e39c3b2640e4cc128ac5d144e0622654b0bd16
a6ee5874d672d816feed7a0b8ea7986e3b952716c50fbaef4edc2a3399b26e565fdc184d6c3a3de8
e2cb9309f2c85e16e58f23c5e5e42f13948d8e84c9f862b995cb170e0c54e87903937405bbcb967c
ba4c3a936de538eb95e0dd6ef19ffa4601dbee2044f9bcdf186793451bcd533247d4700c8de6789e
d9305a9735542401bda5f2074c89a7012f1363fbe3355aa8080429a716a1be6e9a0dd8408c936ce2
fe86e1de8690ed4a62c33ce3bb6a14e72caa4c6a7e44ba81ad7c6677490cf55a1c0c2598ad468b8e
fdaf8da6776396973c20a63949b11a39c8a4e6d5478b1f73c2b85d75d69ef6d2a9f9d865a453258f
f25f5b22ddf58fd95d792810f1011de98184c52c20481984f2fd2ab3af163961ac58bf73f4d1fb74
5165a6e88256b4e110b44646729b97c1bae94416b74000e094728c0533dec8f14aaa49dba83f6dba
ffb718a6b2e9db175604d1b402eb52c11ea67ca3ea13b942fc8eaa8f9393a1e23a3d215706efb9f8
9ec95cdaf516b85ca9b68992c72a7cb0ebd871e8ca923fde1910fa754d9607f69e5859d29c0a87af
33f3052a869116f8c54ca517651a24c236a610ed0415aee207f9cebc6fbd4d28a2d0c13193500e6d
8691fe75d9b81e046a0f73a00c373c311672f0df7a006461889d4af498d2e0a747dfe686ea998e72
6c857cbb00861bc0d1f129f11d5f8a9dbbcc39a8d67c1270ad8260699053b7b220165cd3dde06725
727193d75ca87c37adb1602d9f928fdeb8821c6bc04d083164855f53bd103717d08332ca2cddcb5f
a24b046b5162f0f000e8084f5af742d3499a6f13151b3b7580732baefaaf73175cce4833f8d6108a
a287b7982baad7747d4d5e6e43eb0ac0a803beb43f1dd3f1bc57fad3c83c7c45e1145f712293b8c7
0a94ef8771ef4aff27f594fb724409f9d3825976cf4f5a691c50259cf4ca854696663eb3a8fb3964
76d96304b78b73c656ef65908fe9fd7e950ded676c883d9ad7d2cca039784e3ae45700f76401e341
1adefec49ddd5be10c140ebbda508d15eb6812f4cf29aad9da8f53500291cd64270a5636ea258048
bc4c249bf84c3691d2b8f9145372445ca4d236b50deb3e1b7ac8a9f2801b6c5bb53aba42b283d3e1
9ccc23b23b35978db4425da0a50fc640052f824bfe3d4dd16b8d7c3810ee46b3c06e3c94c8ee8921
63564ad767004557287b5afad6b98522b01726a035fc6e796b3a54fc753bcb0378e3aa8763443b63
176c473e3a2317ef449384d5989185b71a44a8bb3de38d03e36a7a9de34157f07d45c175e91f2edc
a8ca0cdf08f5269fcc226a55b36f50243e82ab192506690429b7ed2dc37a45ca93bac465c8f66ef1
b871766bcf813b48e217c222b29669081a6965fc15f0f5a602f49b61591613d091dbfd1bb1e41a0a
851a1daf02c8d4d88e0e1b75ea2388fe5657a4e4b482fd6bae59567fedc27cd52ece827feac06bd9
7a8c9a3d523f5482869b6c387a970c888ad9ad5da5b8cb7befa366b3aa5e9324ae87d688ab200c44
40cf7461c7bd9513b74378d8124a0f43baf4e43563f5ac272271e4c52d62b92f22181a6bad4d7a9b
88a763d73e579eca4607e98cab5d179e2ddb5c08fa32695ad2703de506df0d2039e2bff2db7edc4b
e54658dccfd39c5c190ce1d295b0d8aa11e185cf4e0b2e7aaccab806d0dc3aae4a0f82bda78b32ba
2496bb1d44594295e1e677fbcd63da57f22d95012bbf79e95aa9394e34508718ae9f6e85e5a5f9bc
fd53d6b70f62c5469765ac9795cc1ce45b5d6c6bdf24f291beba60ddc6d07ba1f991af00c563d16c
281b60509296338f2402098e1f6a096c9532ffd6736f3a2474a7fe882c48e5064b57ce834fcb2485
3da15b684b129ea1756064d283d2b819913b453d1b34f155e70a5d15f5bbd48b02c2337b94e5ac4f
aaa1d7571ba6425221f4e48b065ad896147248c4ca399896d4b7348d343d8a4a8cfe84b8737bd356
78b320dba1fce1dded56359c2fad8dfb3eca7e20b72a9f2a5ee3a990b5d332bead1d6e29901ba155
6e34af8a52e2289db89954f6000fc7dd6ea8da3e4225a766b64cc547d10db6f265c2c57c1ab2ee4f
067e51612c9e431a91420ab471dec70ab6bad6d24493f73f4c6f1b9f859f9e2960b24463f34624b4
8ce6872cc6fbff3eaf69a4d0f5d3c8b8ea6330de84195318b1b294c178b3c0299a7f2658cdcda69a
3e9776d61c89649a5f774b86c641ed180dbeeed2d66217f02f0a2e2f5d4c38c3a8b78a5f975b4cf6
73b3e30c7e6827686d25fcd1613ca275bdf854212c762ee66c6857b87870667b252c2c1eacd234e4
3690f76c8a4ea9c2b2bfc04a5e4b184d9b166a4242104306da79983dd771aec51d97f0cd6d9db52c
10d69b34f1290eb8a069ad07f3ec0cf62ee3280af1584f79346115e81eaef1db6d426c73ff1230a4
090db43e29cf60f0867b11ad36d17ae59b7d3183a647a7a1d1a8cb90d1cd834e9338d95ebb908fb3
899a53262076e24945577c4c49fce562effcd7697bfb4fd01a5a6d6a2b65ff2a393bf2461784e903
701dcf429029f83a6616a268f4fa618031dce14cc11f9cd0c32d59cb690909279b7083212fae684f
635599d4ea00e6b3e21c1c2d0dc63ee7506ceed14e749c25bb5be588b9563064e1ce4578a3ed33a2
c1d717bcb50460d49b07a13bfbe9cb88888fff345c2bf8bce9e199c240f6334be7ced8ea31129885
ad710fdde3210db41f9476951d1067c717e86e669a95ef7a71cae3bb30266f212e9a01772fa03cc1
d4f8b1eaddae561adbbd64f1dae87f7843932398cbe68f8338c82ed0ecb99480fd1a96a3a17d32c2
d4faddd47b5fcb8a1456bbbff33ce51afdd7be50840db9418a2072e053759bafbf1b8bd126b2738e
4b8ad9eaf26e1726abaf27551ef82eed49bfe2a18c68f16e91050502b7a40693cb6d1b5e6cca8e43
30ae468a6cc86af3fe7c782d4a73eebe42f505ec390f59b760b868139470a759c7f5b029950c6de3
1f893b96fb962b542d48f61a462938398a382cb5287f28920d961da86183909ffb30d65610961e9e
27ac71361d078b3d38f06f1a4267bd532529a5b1ddda4dc7427e60926cd95d8e1f3d095e6f0bac6a
297d72fe25d67199bc000ef4f152d228d16577bece96d15cf6b5b4b945478efed712beca79aac276
fd25df113450eb8231d8858053995512e0fa3a20
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 SSC_Copy_State <Virtual>  0
 HBW_Pick TASK  0 -1
 HBW_Copy_State <Virtual>  0
 PID_10 PID  0
 PID_11 PID  0
 hunt_exp_light PROGRAM  0 -1
 HBW_Home <Virtual>  0
 HBW_Pick_Sto <Virtual>  0
 test TASK  0 -1
 HBW_Pickup_ST PROGRAM  0 -1
 HWB_Extend_Arm <Virtual>  0
 HBW_Retract_Arm <Virtual>  0
 HWB_PickUp TASK  0 -1
 HBW_HTO1POS <Virtual>  0
 HBW_Left_1Block <Virtual>  0
 HBW_HomeTo2_Col <Virtual>  0
 HWB_HomeTo3_Col <Virtual>  0
 HWB_HomeTo2_Row <Virtual>  0
 HWB_HomeTo3_Row <Virtual>  0
 HWB_HomeTo1_Col <Virtual>  0
 HBW_move_left_1 <Virtual>  0
 HWB_Home_to_11 <Virtual>  0
 HWB_11_DropOff <Virtual>  0
 HBW_Pickup <Virtual>  0
 HBW_PickUp_R1 <Virtual>  0
 HBW_Send_VGR <Virtual>  0
 HBW_PickUp_VGR <Virtual>  0
 HBW_Return_VGR <Virtual>  0
 HBW_MotorsOff <Virtual>  0
 HBW_ConvTo11 <Virtual>  0
 HBW_Return_Top <Virtual>  0
 HBW_MV_11_12 <Virtual>  0
 HBW_Conv_12 <Virtual>  0
 HBW_Conv_12_Lat <Virtual>  0
 HBW_RETRACT_13 <Virtual>  0
#END

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"VGR Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC410 C410 1 0x0 MC409 C409 1 0x0 MC412 Y28 1 0x0 MC412 MC450 1 0x0 MC411 C411 1 0x0 MC408 C408 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC413 Y29 1 0x0 MC413 MC451 1 0x0 X27 MI200 1"

// Rung VGR_Copy_State#2
// Offset 27
NOP

// Rung VGR_Copy_State#3
// Offset 28
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC800 Y41 1 0x0 Y41 MI801 1 0x0 MC802 Y43 1 0x0 Y43 MI803 1 0x0 MC804 C804 1 0x0 MC805 C805 1 0x0 MC806 Y44 1 0x0 MC807 Y20 1 0x0 MC808 C811 1 0x0 MC809 C809 1 0x0 MC810 C810 1 0x0 MC812 C812 1 0x0 MC813 C813 1 0x0 MC814 C814 1 0x0 MC816 Y45 1 0x0 MC817 Y46 1 0x0 MC818 Y21 1"

// Rung MPO_Copy_State#2
// Offset 39
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC800 C1600 1 0x0 MC801 C1601 1 0x0 MC802 C1602 1 0x0 MC803 C1603 1 0x0 MC804 C1604 1 0x0 Y31 MI800 1 0x0 MC850 C1605 1"

// Rung SLD_Copy_State#2
// Offset 19
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"SSC Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC606 C1200 1 0x0 MC607 C1201 1 0x0 MC608 C1202 1 0x0 MC609 C1203 1 0x0 MC615 C1215 1 0x0 MC616 C1216 1 0x0 MC617 C1217 1 0x0 MC618 C1218 1 0x0 MC619 C1219 1 0x0 MC620 C1220 1"

// Rung SSC_Copy_State#2
// Offset 25
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block HBW_Home
$LGCMOD HBW_Home

// Rung HBW_Home#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Home#2
// Offset 8
STRN C215
ANDN X0
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 60 60
OUT Y51

// Rung HBW_Home#3
// Offset 26
STRN C215
ANDN X3
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5

// Rung HBW_Home#4
// Offset 43
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y76

// Rung HBW_Home#5
// Offset 64
NOP

// Rung HBW_Home#6
// Offset 65
RET

// End of Code Block HBW_Home
$LGCEND HBW_Home

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 Y40 1 0x0 Y80 MHR102 1 0x0 MC101 C205 1 0x0 MC102 C206 1 0x0 MC103 C207 1 0x0 MC104 C208 1 0x0 MC105 C209 1 0x0 MC106 C210 1 0x0 MC107 C211 1 0x0 MC108 C212 1 0x0 MC109 C213 1 0x0 MC110 C214 1 0x0 MC111 C215 1 0x0 MC112 C216 1 0x0 X2 MI101 1 0x0 X10 MI102 1 0x0 X11 MI103 1 0x0 X3 MI104 1 0x0 X0 MI105 1 0x0 X6 MI106 1 0x0 X7 MI107 1 0x0 X8 MI108 1 0x0 X9 MI109 1 0x0 $HBW_Encoder_X.Acc MHR1 1 0x0 $HBW_Encoder_Z.Acc MHR2 1"

// Rung HBW_Copy_State#2
// Offset 55
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block HBW_HomeTo2_Col
$LGCMOD HBW_HomeTo2_Col

// Rung HBW_HomeTo2_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_HomeTo2_Col#2
// Offset 17
STRGE -2775 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_HomeTo2_Col#3
// Offset 22
NOP

// Rung HBW_HomeTo2_Col#4
// Offset 23
NOP

// Rung HBW_HomeTo2_Col#5
// Offset 24
NOP

// Rung HBW_HomeTo2_Col#6
// Offset 25
RET

// End of Code Block HBW_HomeTo2_Col
$LGCEND HBW_HomeTo2_Col

// Beginning of Code Block HWB_HomeTo1_Col
$LGCMOD HWB_HomeTo1_Col

// Rung HWB_HomeTo1_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HWB_HomeTo1_Col#2
// Offset 17
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_HomeTo1_Col#3
// Offset 22
NOP

// Rung HWB_HomeTo1_Col#4
// Offset 23
NOP

// Rung HWB_HomeTo1_Col#5
// Offset 24
RET

// End of Code Block HWB_HomeTo1_Col
$LGCEND HWB_HomeTo1_Col

// Beginning of Code Block HWB_Home_to_11
$LGCMOD HWB_Home_to_11

// Rung HWB_Home_to_11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HWB_Home_to_11#2
// Offset 22
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_Home_to_11#3
// Offset 27
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HWB_Home_to_11#4
// Offset 49
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_Home_to_11#5
// Offset 54
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HWB_Home_to_11#6
// Offset 73
NOP

// Rung HWB_Home_to_11#7
// Offset 74
NOP

// Rung HWB_Home_to_11#8
// Offset 75
RET

// End of Code Block HWB_Home_to_11
$LGCEND HWB_Home_to_11

// Beginning of Code Block HWB_11_DropOff
$LGCMOD HWB_11_DropOff

// Rung HWB_11_DropOff#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HWB_11_DropOff#2
// Offset 8
STRGE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_11_DropOff#3
// Offset 13
STRN C215
ANDN C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51

// Rung HWB_11_DropOff#4
// Offset 31
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y4
AND ST2
OUT Y5

// Rung HWB_11_DropOff#5
// Offset 51
STRGE 2850 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_11_DropOff#6
// Offset 56
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 60 60
OUT Y7

// Rung HWB_11_DropOff#7
// Offset 73
RET

// End of Code Block HWB_11_DropOff
$LGCEND HWB_11_DropOff

// Beginning of Code Block HBW_PickUp_R1
$LGCMOD HBW_PickUp_R1

// Rung HBW_PickUp_R1#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R1#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R1#3
// Offset 41
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R1#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R1#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_PickUp_R1#6
// Offset 69
NOP

// Rung HBW_PickUp_R1#7
// Offset 70
NOP

// Rung HBW_PickUp_R1#8
// Offset 71
NOP

// Rung HBW_PickUp_R1#9
// Offset 72
NOP

// Rung HBW_PickUp_R1#10
// Offset 73
RET

// End of Code Block HBW_PickUp_R1
$LGCEND HBW_PickUp_R1

// Beginning of Code Block HBW_Send_VGR
$LGCMOD HBW_Send_VGR

// Rung HBW_Send_VGR#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Send_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_Send_VGR#3
// Offset 37
STRN C215
AND X2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y48
AND ST2
OUT Y49

// Rung HBW_Send_VGR#4
// Offset 56
NOP

// Rung HBW_Send_VGR#5
// Offset 57
NOP

// Rung HBW_Send_VGR#6
// Offset 58
RET

// End of Code Block HBW_Send_VGR
$LGCEND HBW_Send_VGR

// Beginning of Code Block HBW_PickUp_VGR
$LGCMOD HBW_PickUp_VGR

// Rung HBW_PickUp_VGR#1
// Offset 0
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_PickUp_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_PickUp_VGR#3
// Offset 37
STRN C215
AND X11
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_PickUp_VGR#4
// Offset 56
NOP

// Rung HBW_PickUp_VGR#5
// Offset 57
NOP

// Rung HBW_PickUp_VGR#6
// Offset 58
RET

// End of Code Block HBW_PickUp_VGR
$LGCEND HBW_PickUp_VGR

// Beginning of Code Block HBW_Return_VGR
$LGCMOD HBW_Return_VGR

// Rung HBW_Return_VGR#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C253
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y6

// Rung HBW_Return_VGR#2
// Offset 22
STRN C215
AND X1
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_Return_VGR#3
// Offset 41
STRN C215
AND C251
DUPBOOL
ANDN X1
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_Return_VGR#4
// Offset 63
STRLE 2575 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_VGR#5
// Offset 68
NOP

// Rung HBW_Return_VGR#6
// Offset 69
NOP

// Rung HBW_Return_VGR#7
// Offset 70
RET

// End of Code Block HBW_Return_VGR
$LGCEND HBW_Return_VGR

// Beginning of Code Block HBW_MotorsOff
$LGCMOD HBW_MotorsOff

// Rung HBW_MotorsOff#1
// Offset 0
STRN C215
ANDN ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_MotorsOff#2
// Offset 18
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_MotorsOff#3
// Offset 36
STRN C215
AND ST2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
OUT Y48

// Rung HBW_MotorsOff#4
// Offset 54
NOP

// Rung HBW_MotorsOff#5
// Offset 55
NOP

// Rung HBW_MotorsOff#6
// Offset 56
NOP

// Rung HBW_MotorsOff#7
// Offset 57
RET

// End of Code Block HBW_MotorsOff
$LGCEND HBW_MotorsOff

// Beginning of Code Block HBW_ConvTo11
$LGCMOD HBW_ConvTo11

// Rung HBW_ConvTo11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_ConvTo11#2
// Offset 22
NOP

// Rung HBW_ConvTo11#3
// Offset 23
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_ConvTo11#4
// Offset 28
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_ConvTo11#5
// Offset 50
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_ConvTo11#6
// Offset 55
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_ConvTo11#7
// Offset 74
NOP

// Rung HBW_ConvTo11#8
// Offset 75
NOP

// Rung HBW_ConvTo11#9
// Offset 76
RET

// End of Code Block HBW_ConvTo11
$LGCEND HBW_ConvTo11

// Beginning of Code Block HBW_Return_Top
$LGCMOD HBW_Return_Top

// Rung HBW_Return_Top#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Return_Top#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HBW_Return_Top#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_Top#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_Return_Top#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return_Top#6
// Offset 69
NOP

// Rung HBW_Return_Top#7
// Offset 70
NOP

// Rung HBW_Return_Top#8
// Offset 71
RET

// End of Code Block HBW_Return_Top
$LGCEND HBW_Return_Top

// Beginning of Code Block HBW_MV_11_12
$LGCMOD HBW_MV_11_12

// Rung HBW_MV_11_12#1
// Offset 0
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_MV_11_12#2
// Offset 21
NOP

// Rung HBW_MV_11_12#3
// Offset 22
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_MV_11_12#4
// Offset 44
STRGE 5325 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_MV_11_12#5
// Offset 49
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
OUT Y4

// Rung HBW_MV_11_12#6
// Offset 67
STRGE 5325 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_MV_11_12#7
// Offset 72
NOP

// Rung HBW_MV_11_12#8
// Offset 73
NOP

// Rung HBW_MV_11_12#9
// Offset 74
RET

// End of Code Block HBW_MV_11_12
$LGCEND HBW_MV_11_12

// Beginning of Code Block HBW_Conv_12
$LGCMOD HBW_Conv_12

// Rung HBW_Conv_12#1
// Offset 0
NOP

// Rung HBW_Conv_12#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_12#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Conv_12#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 80
OUT C251

// Rung HBW_Conv_12#5
// Offset 45
NOP

// Rung HBW_Conv_12#6
// Offset 46
RET

// Rung HBW_Conv_12#7
// Offset 47
NOP

// End of Code Block HBW_Conv_12
$LGCEND HBW_Conv_12

// Beginning of Code Block HBW_Conv_12_Lat
$LGCMOD HBW_Conv_12_Lat

// Rung HBW_Conv_12_Lat#1
// Offset 0
NOP

// Rung HBW_Conv_12_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv_12_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv_12_Lat#4
// Offset 42
STRGE 5325 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv_12_Lat#5
// Offset 47
NOP

// Rung HBW_Conv_12_Lat#6
// Offset 48
RET

// Rung HBW_Conv_12_Lat#7
// Offset 49
NOP

// End of Code Block HBW_Conv_12_Lat
$LGCEND HBW_Conv_12_Lat

// Beginning of Code Block HBW_RETRACT_13
$LGCMOD HBW_RETRACT_13

// Rung HBW_RETRACT_13#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_RETRACT_13#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_RETRACT_13#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_RETRACT_13#4
// Offset 46
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_RETRACT_13#5
// Offset 68
STRGE 7685 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_RETRACT_13#6
// Offset 73
RET

// End of Code Block HBW_RETRACT_13
$LGCEND HBW_RETRACT_13

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#2
// Offset 3
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#3
// Offset 6
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#4
// Offset 9
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#5
// Offset 12
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// Rung $Main#6
// Offset 15
#BEGIN FMT_COMMENT 
"Hunter Demo Light<br>"
#END

STR ST1
RUN hunt_exp_light

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
SG HBW_Program.S0

// Rung HBW_Program#2
// Offset 2
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#3
// Offset 10
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#4
// Offset 12
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#5
// Offset 14
STR ST1
MOVE 0 N1

// Rung HBW_Program#6
// Offset 17
STR ST1
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#7
// Offset 25
NOP

// Rung HBW_Program#8
// Offset 26
STR C213
ANDE N1 0
JMP HBW_Program.S1

// Rung HBW_Program#9
// Offset 32
SG HBW_Program.S1

// Rung HBW_Program#10
// Offset 34
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#11
// Offset 42
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#12
// Offset 44
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#13
// Offset 46
STR ST1
DUPBOOL
STR C205
ANDN C206
STR C206
ANDN C205
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 500 60
POPBOOL
DUPBOOL
AND C205
OUT Y48
POPBOOL
AND C206
OUT Y49

// Rung HBW_Program#14
// Offset 75
STR ST1
DUPBOOL
STR C207
ANDN C208
STRN C207
AND C208
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
POPBOOL
DUPBOOL
AND C207
OUT Y50
POPBOOL
AND C208
OUT Y51

// Rung HBW_Program#15
// Offset 104
STR ST1
DUPBOOL
STR C209
ANDN C210
STRN C209
AND C210
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
POPBOOL
DUPBOOL
AND C209
OUT Y4
POPBOOL
AND C210
OUT Y5

// Rung HBW_Program#16
// Offset 133
STR ST1
DUPBOOL
STR C211
ANDN C212
STRN C211
AND C212
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
POPBOOL
DUPBOOL
AND C211
OUT Y6
POPBOOL
AND C212
OUT Y7

// Rung HBW_Program#17
// Offset 162
STR C213
JMP HBW_Program.S2

// Rung HBW_Program#18
// Offset 164
SG HBW_Program.S2

// Rung HBW_Program#19
// Offset 166
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#20
// Offset 174
STR X0
OUT $HBW_Encoder_X.ResetLevel

// Rung HBW_Program#21
// Offset 176
STR X3
OUT $HBW_Encoder_Z.ResetLevel

// Rung HBW_Program#22
// Offset 178
STR ST1
CALL HBW_Home 0x1 DST511 "3" "3"

// Rung HBW_Program#23
// Offset 186
STR X0
AND X11
AND X3
JMP HBW_Program.S3

// Rung HBW_Program#24
// Offset 190
STR C212
JMP HBW_Program.S3

// Rung HBW_Program#25
// Offset 192
NOP

// Rung HBW_Program#26
// Offset 193
SG HBW_Program.S3

// Rung HBW_Program#27
// Offset 195
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#28
// Offset 203
STR ST1
CALL HWB_Home_to_11 0x1 DST511 "3" "3"

// Rung HBW_Program#29
// Offset 211
STRN C250
ANDN C251
JMP HBW_Program.S4

// Rung HBW_Program#30
// Offset 214
SG HBW_Program.S4

// Rung HBW_Program#31
// Offset 216
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#32
// Offset 224
STR ST1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#33
// Offset 232
STR X10
ANDN C251
JMP HBW_Program.S5

// Rung HBW_Program#34
// Offset 235
SG HBW_Program.S5

// Rung HBW_Program#35
// Offset 237
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#36
// Offset 245
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#37
// Offset 253
STRN C251
AND C250
JMP HBW_Program.S6

// Rung HBW_Program#38
// Offset 256
SG HBW_Program.S6

// Rung HBW_Program#39
// Offset 258
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#40
// Offset 266
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#41
// Offset 274
STRN X2
INC N1

// Rung HBW_Program#42
// Offset 276
STRN X2
JMP HBW_Program.S7

// Rung HBW_Program#43
// Offset 278
SG HBW_Program.S7

// Rung HBW_Program#44
// Offset 280
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#45
// Offset 288
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#46
// Offset 296
STR X11
JMP HBW_Program.S8
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#47
// Offset 305
SG HBW_Program.S8

// Rung HBW_Program#48
// Offset 307
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#49
// Offset 315
STR ST1
CALL HBW_ConvTo11 0x1 DST511 "3" "3"

// Rung HBW_Program#50
// Offset 323
STRN C250
ANDN C251
JMP HBW_Program.S9

// Rung HBW_Program#51
// Offset 326
SG HBW_Program.S9

// Rung HBW_Program#52
// Offset 328
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#53
// Offset 336
STRLE N1 1
JMP HBW_Program.S10

// Rung HBW_Program#54
// Offset 341
STRE N1 2
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#55
// Offset 352
STRN C250
JMP HBW_Program.S10

// Rung HBW_Program#56
// Offset 354
SG HBW_Program.S10

// Rung HBW_Program#57
// Offset 356
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#58
// Offset 364
STRE N1 1
CALL HBW_Return_Top 0x1 DST511 "3" "3"

// Rung HBW_Program#59
// Offset 375
STRN C251
AND X10
JMP HBW_Program.S4

// Rung HBW_Program#60
// Offset 378
SG HBW_Program.S11

// Rung HBW_Program#61
// Offset 380
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#62
// Offset 388
STR ST1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#63
// Offset 396
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#64
// Offset 399
SG HBW_Program.S12

// Rung HBW_Program#65
// Offset 401
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#66
// Offset 409
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#67
// Offset 417
STRN C251
AND C250
JMP HBW_Program.S13

// Rung HBW_Program#68
// Offset 420
SG HBW_Program.S13

// Rung HBW_Program#69
// Offset 422
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#70
// Offset 430
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#71
// Offset 438
STRN X2
JMP HBW_Program.S14

// Rung HBW_Program#72
// Offset 440
SG HBW_Program.S14

// Rung HBW_Program#73
// Offset 442
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#74
// Offset 450
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#75
// Offset 458
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#76
// Offset 467
SG HBW_Program.S15

// Rung HBW_Program#77
// Offset 469
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#78
// Offset 477
STR ST1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#79
// Offset 485
STRN C251
JMP HBW_Program.S16
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#80
// Offset 494
SG HBW_Program.S16

// Rung HBW_Program#81
// Offset 496
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#82
// Offset 504
STR ST1
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#83
// Offset 512
STRN C250
AND X10
JMP HBW_Program.S17

// Rung HBW_Program#84
// Offset 515
SG HBW_Program.S17

// Rung HBW_Program#85
// Offset 517
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#86
// Offset 525
STR ST1
CALL HBW_RETRACT_13 0x1 DST511 "3" "3"

// Rung HBW_Program#87
// Offset 533
STR C215
JMP HBW_Program.S0

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#2
// Offset 8
STR ST1
DUPBOOL
STR C410
ANDN C409
STRN C410
AND C409
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
POPBOOL
DUPBOOL
AND C410
OUT Y27
POPBOOL
AND C409
OUT Y26

// Rung VGR_Program#3
// Offset 37
STR ST1
DUPBOOL
STR C408
ANDN C411
STRN C408
AND C411
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
POPBOOL
DUPBOOL
AND C408
OUT Y24
POPBOOL
AND C411
OUT Y25

// Rung VGR_Program#4
// Offset 66
STR ST1
DUPBOOL
STR C406
ANDN C407
STRN C406
AND C407
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
POPBOOL
DUPBOOL
AND C406
OUT Y23
POPBOOL
AND C407
OUT Y22

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STR C813
OUT Y18

// Rung MPO_Program#4
// Offset 12
STR C810
OUT Y17

// Rung MPO_Program#5
// Offset 14
STR C811
OUT Y52

// Rung MPO_Program#6
// Offset 16
STR ST1
DUPBOOL
STR C804
ANDN C805
STR C805
ANDN C804
ORSTR
ANDSTR
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 100
POPBOOL
DUPBOOL
AND C804
OUT Y53
POPBOOL
AND C805
OUT Y15

// Rung MPO_Program#7
// Offset 45
STR C814
OUT Y19

// Rung MPO_Program#8
// Offset 47
STR C809
JMP MPO_Program.S2

// Rung MPO_Program#9
// Offset 49
SG MPO_Program.S1

// Rung MPO_Program#10
// Offset 51
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#11
// Offset 59
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#12
// Offset 61
STRN X24
SET Y17

// Rung MPO_Program#13
// Offset 63
STR Y17
OUT Y20
ANDN X17
ONDTMR T0 1000 Y44

// Rung MPO_Program#14
// Offset 69
SG MPO_Program.S2

// Rung MPO_Program#15
// Offset 71
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#16
// Offset 79
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#17
// Offset 81
STRN X19
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y53

// Rung MPO_Program#18
// Offset 97
STR X19
JMP MPO_Program.S3

// Rung MPO_Program#19
// Offset 99
SG MPO_Program.S3

// Rung MPO_Program#20
// Offset 101
STR ST1
SET Y17

// Rung MPO_Program#21
// Offset 103
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#22
// Offset 111
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#23
// Offset 113
STR X19
SET Y19

// Rung MPO_Program#24
// Offset 115
STR X19
ONDTMR T100 2000 Y18

// Rung MPO_Program#25
// Offset 119
STR T100.DN
JMP MPO_Program.S4

// Rung MPO_Program#26
// Offset 121
SG MPO_Program.S4

// Rung MPO_Program#27
// Offset 123
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#28
// Offset 131
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#29
// Offset 133
STR X19
RST Y19

// Rung MPO_Program#30
// Offset 135
STRN X16
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y15

// Rung MPO_Program#31
// Offset 151
STR X16
JMP MPO_Program.S5

// Rung MPO_Program#32
// Offset 153
SG MPO_Program.S5

// Rung MPO_Program#33
// Offset 155
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#34
// Offset 163
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#35
// Offset 165
STR X16
SET Y19

// Rung MPO_Program#36
// Offset 167
STR Y19
ONDTMR T101 2000 C815

// Rung MPO_Program#37
// Offset 171
STR C815
RST Y18

// Rung MPO_Program#38
// Offset 173
STRN Y18
JMP MPO_Program.S6

// Rung MPO_Program#39
// Offset 175
SG MPO_Program.S6

// Rung MPO_Program#40
// Offset 177
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#41
// Offset 185
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#42
// Offset 187
STR X16
RST Y19

// Rung MPO_Program#43
// Offset 189
STRN Y19
ONDTMR T102 1000 C818

// Rung MPO_Program#44
// Offset 193
STR C818
JMP MPO_Program.S7

// Rung MPO_Program#45
// Offset 195
SG MPO_Program.S7

// Rung MPO_Program#46
// Offset 197
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#47
// Offset 205
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#48
// Offset 207
STRN X15
OUT Y45

// Rung MPO_Program#49
// Offset 209
STR X15
TMRDOWN T102 1000
OUT Y43

// Rung MPO_Program#50
// Offset 213
STR T102.Done
JMP MPO_Program.S8

// Rung MPO_Program#51
// Offset 215
SG MPO_Program.S8

// Rung MPO_Program#52
// Offset 217
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#53
// Offset 225
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#54
// Offset 227
STRN X13
OUT Y45

// Rung MPO_Program#55
// Offset 229
STR X13
TMRDOWN T103 1000
OUT Y21

// Rung MPO_Program#56
// Offset 233
STR T103.Done
JMP MPO_Program.S9

// Rung MPO_Program#57
// Offset 235
SG MPO_Program.S9

// Rung MPO_Program#58
// Offset 237
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#59
// Offset 245
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#60
// Offset 247
STR ST1
OUT Y47

// Rung MPO_Program#61
// Offset 249
STRN X12
ONDTMR T104 1000 Y46

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
SG SLD_Program.S0

// Rung SLD_Program#2
// Offset 2
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#3
// Offset 10
STR C1600
OUT Y30

// Rung SLD_Program#4
// Offset 12
STR C1601
OUT Y31

// Rung SLD_Program#5
// Offset 14
STR C1602
OUT Y32

// Rung SLD_Program#6
// Offset 16
STR C1603
OUT Y33

// Rung SLD_Program#7
// Offset 18
STR C1604
OUT Y34

// Rung SLD_Program#8
// Offset 20
STR C1605
JMP SLD_Program.S1

// Rung SLD_Program#9
// Offset 22
SG SLD_Program.S1

// Rung SLD_Program#10
// Offset 24
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#11
// Offset 32
STRN C1605
JMP SLD_Program.S0

// Rung SLD_Program#12
// Offset 34
STRN X35
OFFDTMR T200 1750 C1651

// Rung SLD_Program#13
// Offset 38
STR C1651
OUT Y30

// Rung SLD_Program#14
// Offset 40
STRGE T200.Acc 1750
FLASHER 500 500 Y899

// Rung SLD_Program#15
// Offset 48
SG SLD_Program.S2

// Rung SLD_Program#16
// Offset 50
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#17
// Offset 58
STRN C1605
JMP SLD_Program.S0

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STR C1200
OUT Y39

// Rung SSC_Program#4
// Offset 12
STR C1201
OUT Y40

// Rung SSC_Program#5
// Offset 14
STR C1202
OUT Y41

// Rung SSC_Program#6
// Offset 16
STR C1215
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y35

// Rung SSC_Program#7
// Offset 32
STR C1216
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y36

// Rung SSC_Program#8
// Offset 48
STR C1217
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#9
// Offset 64
STR C1218
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#10
// Offset 80
STR ST2
ANDPD X47
ANDPDPF
STR ST2
AND CT150.Done
CNT CT150 100

// Rung SSC_Program#11
// Offset 88
STR C1203
JMP SSC_Program.S1

// Rung SSC_Program#12
// Offset 90
SG SSC_Program.S1

// Rung SSC_Program#13
// Offset 92
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#14
// Offset 100
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#15
// Offset 102
STRN X41
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#16
// Offset 118
STRN X40
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y36

// Rung SSC_Program#17
// Offset 134
STR X40
AND X41
JMP SSC_Program.S2

// Rung SSC_Program#18
// Offset 137
SG SSC_Program.S2

// Rung SSC_Program#19
// Offset 139
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#20
// Offset 147
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#21
// Offset 149
STR X44
ANDPDPF
STR ST2
CNT CT150 300

// Rung SSC_Program#22
// Offset 154
STRN CT150.Done
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y35

// Rung SSC_Program#23
// Offset 170
STR X46
STR ST2
CNT CT151 1300

// Rung SSC_Program#24
// Offset 174
STRN CT151.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#25
// Offset 190
STR CT150.Done
AND CT151.Done
JMP SSC_Program.S3

// Rung SSC_Program#26
// Offset 193
SG SSC_Program.S3

// Rung SSC_Program#27
// Offset 195
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#28
// Offset 203
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#29
// Offset 205
STR X46
STR ST2
CNT CT152 300

// Rung SSC_Program#30
// Offset 209
STRN CT152.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// End of Code Block SSC_Program
$PGMEND SSC_Program

// Beginning of Code Block hunt_exp_light
$PRGRM hunt_exp_light

// Rung hunt_exp_light#1
// Offset 0
STR ST2
COPY 0x1 "4 0x0 MC402 Y39 1"

// End of Code Block hunt_exp_light
$PGMEND hunt_exp_light

// Beginning of Code Block HWB_PickUp
$TSK HWB_PickUp

// Rung HWB_PickUp#1
// Offset 0
NOP

// End of Code Block HWB_PickUp
$TSKEND HWB_PickUp

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"C1","copy","",""
"C11","C11_Interlock","","Used to delay logic by one scan"
"C12","C12_Interlock_2","","Used to delay logic by one scan"
"C20","HBW_Has_Pallet","","True when carrying a pallet"
"C51","X_Direction","","True: Left False: Right"
"C52","Z_Direction","","True: Down False: Up"
"C80","Conveyor_Timeout","","Bit high when Conveyor Timeout timer active"
"C90","HBW_XY_PID_EN","","Enables PID control in HBW_Move_XZ"
"C101","HBW_T1_Send","Modbus MC101","Task to deliver a pallet to conveyor"
"C102","HBW_T2_Receive","Modbus MC102","Task to pickup a pallet from conveyor"
"C103","HBW_T3_Reset","Modbus MC103","Reinitialize and home all axises"
"C104","HBW_T4_Manual","Modbus MC104","Switch to manual mode"
"C110","HBW_Move_X_L","Modbus MC110","Move Horizontal Axis towards bay"
"C111","HBW_Move_X_R","Modbus MC111","Move Horizontal Axis towards Conveyor"
"C112","HBW_Move_Y_In","Modbus MC112","Move Cantilever In"
"C113","HBW_Move_Y_Out","Modbus MC113","Move Cantilever Out"
"C114","HBW_Move_Z_Up","Modbus MC114","Move Vertical Axis Up"
"C115","HBW_Move_Z_Down","Modbus MC115","Move Vertical Axis Down"
"C116","HBW_Conveyor_In","Modbus MC116","Move Conveyor In"
"C117","HBW_Conveyor_Out","Modbus MC117","Move Conveyor Out"
"C130","HBW_Status_Ready","Modbus MC130","On when ready for a task"
"C133","HBW_Mov_Conveyor","Modbus MC133","Status Conveyor Moving"
"C134","HBW_Moving_X","Modbus MC134","Status GantryMovingX"
"C135","HBW_Moving_Y","Modbus MC135","Status GantryMovingY"
"C136","HBW_Moving_Z","Modbus MC136","Status GantryMovingZ"
"C138","HBW_Status_Y_Pos","Modbus MC138","Current Y position"
"C141","HBW_Target_Y_Pos","Modbus MC141","Target Y position"
"C150","HBW_MoveComplete","","HBW_Move_XZ completion interlock."
"C180","HBW_Fault","Modbus MC180","Status in Fault State"
"C182","Fault_X_Target","","Active when X target out of range"
"C183","Fault_Z_target","","Active when Z target out of range"
"C400","VGR_T0","",""
"C410","VGR_T1","",""
"C420","VGR_T2","",""
"C430","VGR_T3","",""
"C440","VGR_T4","",""
"C500","VGR_Man_Control","",""
"C799","VGR_RESET","",""
"V105","HBW_Task_X_slot","Modbus MHR105","Value for slot X coord"
"V106","HBW_Task_Y_slot","Modbus MHR106","Value for slot y coord"
"V118","HBW_PWM_Set_X","Modbus MHR118","Set Horizontal Axis PWM Duty Cycle %"
"V119","HBW_PWM_Set_Y","Modbus MHR119","Set Cantilever Axis PWM Duty Cycle %"
"V120","HBW_PWM_Set_Z","Modbus MHR120","Set Vertical Axis PWM Duty cycle %"
"V131","HBW_Cur_Progress","Modbus MHR131","0 to 100 percent job completion"
"V132","HBW_Cur_Stage","Modbus MHR132","Current stage number"
"V137","HBW_Status_X_Pos","Modbus MHR137","Current X encoder position"
"V139","HBW_Status_Z_Pos","Modbus MHR139","Current Z encoder position"
"V140","HBW_Target_X_Pos","Modbus MHR140","Target X encoder position"
"V142","HBW_Target_Z_Pos","Modbus MHR142","Target Z encoder position"
"V181","HBW_Fault_code","Modbus MHR181","Current Fault code"
"V801","VGR_Fault_Code","",""
"N810","VGR_Rot_Target","",""
"N811","VGR_X_Target","",""
"N812","VGR_Y_Target","",""
"D0","MC","",""
"D1","Feeder_Extend","",""
"D140","X_Start_Position","","Distance to target"
"D142","Y_Start_Position","","Distance to target"
"D143","HBW_PWM_Cur_X","","PWM value for X for XZ movement task"
"D144","HBW_PWM_Cur_Z","","PWM value for Z for XZ movement task"
"T3","T_HBW_S6","",""
"T4","T_Conveyor_Timer","","Used to detect conveyor faults"
"MPO_Program.S2","Vaccum_MO","",""
"MPO_Program.S3","Vaccum","",""
"MPO_Program.S4","Vacumm_MO","",""
"MPO_Program.S5","Vaccum_Load","",""
"US0","_CP_Strogram_A","","CP_State_Program"
"US1","_VGR_Movement","","VGR_Movement"
"US2","_SSC_Check_InOut","","SSC_Check_InOut"
"UB0","_VGR_MisScan_A","","VGR_Movement.Done ThisScan"
#END

