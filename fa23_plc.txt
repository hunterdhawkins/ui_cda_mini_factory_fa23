// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\aaron\Documents\classes\uidaho\2023-spring-and-fall\466\ui_cda_mini_factory_fa23\fa23_plc.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
26aa88f0c93b21f7bb55553d339191f4d1b2bb386f93f86011649d588273c7b9f6fadbf7dadf6535
474fa3e37473d2a05babcdf3de585a831092cf80d3b432da1fcfba82e5adc51a3b9cedee3d3185e5
218bf031cfed10c0cc8cef5520e883f2136f2891744e442fe665222347ee754242a54558b9a190e2
2e2ed93d2bf0d42b8fc34581eb074009c7ce1a37e772ec09164a47e6a5323b8ae7c3e0aaf8c71385
83abc23441fcb4da12583f7a2bd819caf0d774c7008a4b85b227a5d1fdd9985752ab0c8687cc5439
9c7a59877762d7320f01308d308b262a6787bdfd0b8d5385c7c5a3b6cfc386e9db2c68112f530084
f287decf77502dac5617480070478ebcfd173068936f87cacc04ca8b8d2275b058dd1222996a0641
7691ffca19a03296c0341f83aa7726da16cc56c9577841e11e91c74b05434854046dae31f75f8299
22a66ee2fea6d3493b663f7d661cc67a088971099ecea5fbcc35c99d0463817869984d6eab9e4460
f99d3dfdeb9634f101ab7aea5e80cd769416a4ce8a35d862f0262c801c60f20bb3221958d1f5ddf0
6be2d4cc555e299eb3181614c932d1681d966bb19097b79d261379dcd628a2e4b50e495306862aa7
a59cf8c2d8e8805fa1940f1ca9d8c5f1fdbaaa88ef9bb2fcf7eb31186f8017598ff87ef4c14a110e
71679570f8d71f794ec7c08306611babdae122cd805d1ab4e38b60b656b5669d59ac6037fac39a13
5aa4d0957526f36268d3f70b5f8e2ffbe24e7e6c63bfb11283bebce8a43359854ca61a594b5be029
f2d90d2efb487bcdb5bdc7919d37c3baa9d48be8dd127f8d3bbc9d7fdb6da0c0f8662342d3792cf2
de134520c40ecd1dc12d75daf01c3821984a06676de593e4095778b29db6315ff1b349be08946cf9
2564c8b01579a9b8e84135a9755768f875513b07007e7fda812a6761aa9183bb048342ed2b8ed2fb
ad7f528376bf28a81ad060a98375616219ab67ce988934dd999744f8c7c3e3ec13cff52f16a87ecc
bf9e30605646bb579043c31966b41697b957713b24676c6ae9d8f973072388de38eb15d04471ba71
7fec19f99f2682c5f3b70f27e6619689c5dd3edbd6aa06f711b2e97c0cc06f834725ea5cefa83731
9d6c0c889d911e7f3cf80ebd996c8276d6ad4c1fcfc5eda679148e4838fbad2262432a0da303a418
2883d7673d63307d94584e740d90eae94e2a3acc42709fc27cadcd3a8307b12535a5c730b02ec38e
9e96d86955d0aa7de460dcb1451e7d671fb4c33230ffc50e088bf43b921ee3650e369bdfb9eb5375
c9ce12d75736e2d78014be0437c556a6a4a3aacd4a7e2576aa777948ee4ca6d79f812e5718216313
f0676e2ce241bc81cb00f12e90c91e5260c3c35e1b59b8d384b7bef72b2e47b13299735484de58ae
1588c347f1ef9778698773bc0ca9f54af6ff7177dfa37b1b53975358c749febc2f2d728c2d310ba0
10f07fe3e2eef72036b318ab15c41ae569b6eba88007c99eaa6b4e18fc90600805433fa6532a8364
ed61e4f2db455d3da1d4bd73bf20447eef4409dfd41152afcc9fdc556d806014b1e0519e5ca9e1c4
e486af21f61044b93a3b6905e16f19e2f2f3be9813fee44f75d96b9518ae0b4082332d558258e9ed
270e8bccfadb38f22a3600fd7a87fe52bb0f476477354fa291509a53bd14149c4e7e6b8fd1138e81
ad15c1bf5be129f4e03c017762fb379c335674ca630e83aa677b54cd246e2141e2a3fbb31e597bb2
8dbeefd3148c36d40f53f85b845a667cf0e7e3ef30542e1860b5c9d0c984ff803b47c2fb62b37b52
704ecdd7694d9c794525e5c05013de7ea3b100d22f89b6bfe82897b362071474b49101428f1f9c25
24e09fe9274d7b449dc60c3481636a36a9833e6a8233ffaa5c0f50ba263a807b1211e332581f434b
aeeec3fb325541b2d2e3c94b20607acc53b9bc67e0e0a5df7b17377efc661b33500535c03f6fbda8
d6179c156d489417da34726295033205ae2dd4fca66f2d5dd2279142650e598b5fc099d407072b9c
e4b1951a318314030c2e53f5b392bda1172c0c6b8b44947a5bdc80d22ecd4d86142231975caaf2f8
e41e3913145231153dd2a8abfb562398b133a9d52fea931c73fbe8eb177fbd62e8910d48066286cb
82461d53d7c841b6558fc98ef90ae2a5a088364cb025d56b36f489bf9eb8c901945e55b2ce786149
77bccb569b1609785c1af937e3fc63104ccbabcd708e64df0f788a697506b141d2a68101feda5ace
32518c702be2d04587f27dc123230f88e3fbaab4c230c233f705de8d13306cde50a4d504fe118209
32457723091ba1091b704ce5b199fd696ff36da55c62cb19c8c035d3deded94bc2b80785073c0abc
2d275b4d076ea8032e1713dcfc900e64f0a2a634f5ea49b654d098707ec872676968629e93f44157
b30d693034d506aeffb9c35e58c2f9a1310d90b70fa93d0df82807d8b5ed580d131a008af0e1cd29
ca234a547af6dbde9189bccb87ff0500447bb11a08fe6f33fedebeb4b381f28fdd9871101f0041da
69ec7d50a6b5f94107d3429532f90d118e214acfb254e51bf14ab1d0e65ff4c6dac4f73f7ffbb337
bb25945084a4c53e24768574a047a34652a6756d3cea9c6e9c3da014355eb6e5bac305ee58930797
9bd92b71a4ae8e6e9f0633400f2557ae89e41c329363f21492f410cc283914ba6cd2209ff740f20b
9ab99fa0b3893fff010da1ebb0ea5f2695e690ffbfae6adf7d3f80b340284857e881fbf5d88e9feb
0614b06d6e07abf69f772adc88a039049b8d581201e5877a61008239a490922553dc044317a0de27
f51289a268c9ec35451dc05a83deeb817da513a0a0842c0b0bea5996b533e097e4da37712d6547a7
78fe87d06dcb584103a2bb9dde7a0015a816d95de263247d3e3437c0b4c1ea25caad117290366225
ea00a83f95e4ba3e2ed15207fb92b1b82433be4d0581db0a9108f13e5b4fade0b9b388c8dfa0edeb
d12ba4f2e3288197436de5d0f79b3d9a90e83781701be6e70d126ad5b30120d47fb0e064f289432f
ed511f280ef2dd3e88c262440408e0fabf7a2a339167830f88b853de92c3297d87c9a62343b29f68
592748c409c6138a1d8d87e4d01415b0716784a378c493804300de2ac95345da4dfb7caf79f2c159
1a39643b6436a6958d446e6dba81d25c439a4be40060c5da49f9490c3f39b0444965df7d7b0af376
9bd45682045056c699b7495afabc25804a66f3e8d2c64b68f1a04d39b093fa7445ffa0e1d16c6fba
896bd01dde5e0573cb301c2d7ae780e9da15436a562ecfec46acfdaf6f7ba10ae8667f25a0b0a0e8
85c0557b2a470aee78417053c62b1a75c132f23082b941576b4b104db3a8dc55913976f38f441b41
8ed8aa59a8dee9303771b9904d64604ec0a7f96726b9d3535e1c5341012cd75e7d01b580b15bbb97
12910d1850cd341018fdbd90c20ca8cca5963de402d23fdf7e8b3accae9c3c62375fb5062579eda3
82b66e9271be775f32c296403c3059b9de48ea90cefe6cedb267ffbd3a729925a811018ff42bf358
e68f4962a354501694843070f7eeb79e0d42785f540ad814ba378e8fe93e58ca39c36d6be17b469c
16a2126ed0bd810381fb16d3a4d9edfe8ab045039249e931587bb5001092e86bcb0ee15149428265
6426cb0c7370e96c09de04d286c185090922c1880471e49113ac778fe438c9c6eb88fb045a8f1755
d3ab2731d2051c66a5d3b1a306cf42bf01a0c28d78638ba1c9e1620bf72de434ec47c8b9d7849dcb
a6b29c61f65612003a73fab491686439f79aa6241288b3dc548525b87d323a1b2ff0dc455deb95ae
da9568434624e3880a1121277784e8ae7afd61b2416bcf38513da2ed1831d29b176471cc1a787f8a
31f7a0458e03f2d3299f2aa29649d798e3dd73aee53d7a33143643964c676200d8639d87b7b1f98b
4cdd5d0747ce851d875de342509dfee5532d16662947c57aa16bd004f5fad7bc8e520cd94123a742
d4957fa3140288ef7d8e54fea58c4dbafeb36b21684fadc64ff48cfcedd9534bc80250eaa905bd8f
f3608c08af331edd14ecb6e83071aebc14ed013b8b1d363c4ffc64c7d01369b0ed30d641d58acac2
e3d70824d5fe1d54d8a1f48c0eb16a902be912d7b4bc302babc33b01fa68b7412016f427b369d3de
bc1edefe6e65500b85a0948fd7ac258ea51d6492f298ed378398ac998f25420c05c9e005b403951c
d003226187948504f503e469f33b4ec5dc1e470f74da8abc35d0f9313902a8f711805e69e5da59b1
e60c885ca660f31893e49643c01bb936287590365e5aa0a28cea1c9223c72c83abd1afdc07f0aaa0
4ed718b02cc3018ead2d8731740cb117f5234502eb965dfe94cae5a74e1a4fd76d69877e3ec4180c
6a599102e6e253938d7a536937de2387d570bba6d4b33dfdf4f2cc7b535e23e138c0a52b6b6ce639
20181c57400055ea6d0534249b34fcea9858cb2f2b8e4e38c2beb059ba69cb5dc75bb04cfab9c6fe
3f4934c42ce39e3f5acc6828f1fec848d83d4db6c3b64d273b90f6d1bf3736dd756931281f09b732
2650ccbe2bd8a0c3829df77d219e16e7fc7d668364ef46ec0d974a621436b8432e6c3dc1cdaf104a
d571e08737c25b2c419d5376dfa4bdcb239a37a101f5d7d8fe9864e2d61052e92926c9a5a5703223
3de055227e45f6c34015ae712891a56c96a8b6e965a21473c0f7fdcee3de8e8b7ea9d3d068452117
fd4988c9ea860c75eadf27b06bbb82ea46fe338c90e174f80b91f47f1ff9361d46097bc5b73e91f3
38f30c2c46cd45c53949005376f2294d8f3a70f85745660b656f412039b1a6e88813570d7f614abf
3841a0f6c60ed70ce36f614e56c4f5e084a3c2d2b4758bd4b985f8d7bc54b247dc510d7c83fb7ebf
413f69f0d388a6d5de0a5cc2875b9fa88a49385fc66824177fd3e510370357724e3865ac685f7d48
5e1e5c9e638fa64233e067851d62b92762bd794e6cafdeb9260c572ae95866f262cbe9877b0eb3a6
93baf4ad4c9b2f0be4f826d78eb6fc8167162dc76b036fd213ce8acbda918f4af6c2928e6859851c
070ec0a50a7d0eb4f51e8ec3e4c9caa3072cec80e2b38d6ebb019bd9223ea0fecd025be18e51f6f8
32b1bfd894fc220f5af590c3d1f2552f8d070ce77df288a7b74f5804a1bb06497cc34f077eaffe59
616e44c882b1ef907fdd4264019d4dc427af8918300ea65bcd8b40f318c267f86873cfe4249096d8
ab1a150ad2322a68e5eaf4b4b4e6dfcc7708d0af12d978571c58bbdb4667d007ca9e5d0cef0235e6
0786cf53f4cbb290ab98b309bb468fecd3a233627a409bafe01deeee89b2c3ce474bfc2e1297c8ce
be8dfcd5532743720750fdccbd897c312d8be26cc6fc68645f646f2f9f1b9cb4181d193fbf96d607
523ce62a4a52fda6ec605bf2091479be6e8f8380f5e998acac5e798a0e61b35e13b75c90fe8ee8b8
c5823569b3207b6ec4c647a7be92f44c256f7d0baccb4e09435f5ebbe52588301a0b089e3fd731d1
6334bca0289f3a6f03e079e12e86c5990ca2efb362e353f047f96ce39637ce81b67a2baee7035fde
320fa411026edb38b99abf2c23e934ec106a44814072ec821fb0f08dc2298165c24aa7dfb163d972
5a0e33a1e796c1af3d5d16fac1bf0225782c8f8810c63b04bb4b6644d93cbce60aedb449b9611887
6f36e9c2e5153f89d973599c603277a45310dd3fa5d0287ccc79f2ab717676145628ce520ff24990
46a5ae5a1bccf5d79f7c86a5bfd3f79d7f6f1c56911d695dccf0cecce5dbfbbed7facbd50e58af6b
d0db519ccf4d1acf76f8fd36d0d54a5715f473f88d55e9ddbddd3b1280f22ef601c71ed94f4cee5b
9eadc08354cf3dbef17dc0a9e9cd95fdf64998d8066154a1eec284e69354b4b31f20c6f5802aa761
49861036fd284f19154a125e6a25720c3e597c94f35d472fc494f12a7b8a9417a93d859f5b33a973
6fc14cc2c1f5a9b50259d8bf23141f30352e90af15f41e00a8b851a37f6b39866c1b931ce08a6c79
68b080992992fb0922e6ec17e5a1c77750218a14c3a4bb2334fdfd64534fdf3e360766ba1ba6d8c6
fcd575557c8f70b87628d845a2d0b8cf21168e520fe59d57aec181e83a487420c92a4138084ac05d
067623171a2f250ca8160864847dc2ff2f277aa95f97b308de4285ddd548b55bd15be79f3f497977
8bf5be496a6b1f64ca12ed34bab57942e53f335a530eb48806fdf160050daeab03607e0be4b2d647
f6e7265fe7c406ac2c361f60fc98ea353c736a971fc3c8c2c136a34aa74b1706c8d08da80980ecf8
6ce68858a28ef781d2ea711afbc2e6db4478c0fc9ab906c5826c3acbcf77f34dd9c95f5422439969
d27cd1a370ec19b0ab4c9c4c6254fa66784becbd7788e4b8934f124be07f70fc4c48954880dc237c
51851f5a61ea95f101cd9665b285402b53aa79c92ed234c5c71b32a450fc34fedfe5ad2bfd46283a
6ca8e9122606bf98ec339c55f9a72868026a93631c6bfda0874584357ace79e86c3eb469a4935ba7
d115669dc5ef6e448978cb4cb6b3053080c6358b25c4f6b437888acafd232c4a9a6e4a020c33c30f
57bcea13fb5c9688b6275098e2c9ef3d56cac69a6e620b9aef992171e438f4b45c1cdc77ad108202
3db73791a9df690ee216fa809c9fcd5aa04928fb90be2f7960b04302c97ddc9c165d6ede9830509b
0bbfafd20eec93723af059145ea1a4426de389e3f48ee9f36720d38a9703fe196814e2a07df51e91
011a010c584c08c05c2d7b971a47ba45fe643fe60116ae799c4f0fe733c247b634526056e07135c1
46b319b221291c86a55ef2c497ac23d8de44ffe4f7ebc85c996ebdf0da311dc4661d85ffd4203b0d
6bc392a911e2fce42392c0ffb287255905cb8d04ad82ab1efcf10dea557db2df0ae418ab3a40510c
fc1844a75e5abba8c3bbc1c96d9bb9e4c0f8366b71e378e0c5829b58a21399dbf8242b31f369d8ce
545340978f6d0d6429badb5ba7e4ac46840ec7bcbccd91c3ddfdf4eaaa4c6430c640e8b428383772
1876e2202cda7f2a2d85b159a926afae75125d6d9991c3a0be3a658bc118458aea3e9a289cbb9dfb
044e92ee3bb18742a245fbc465e42d573a35ddd54d39f51cc8ab5384b318758bbd6cec3a9d1eb1a6
7966eca7651fed9972c60626caca75cb7d47c38c3bca45f24faf78aa236f458d71f4f59b074dfc49
26f2c336aba74bdd6b11e0b0b54c61b65fa6eb9ed6e360f99ae5dad6295d0787e2cf17831ecf5d30
547cd4621f123e849e8211df0137e225c76cc0f5351cec31e5e4bb1692c77c4a003294f006001e3f
5318c4630a52a27ea88def29b98e6b45be721d3eab7a9a3bbaa82d797188803f91b48b0fc164b6fa
4b2e85faa9403d0acf0cc443603ef7d30616333efa6a27a70c0c1c268a49ab33f53b606db10e4214
ef41f3ad424536d504a257639daac9b7d34db18ea19cd61a494ad5ac82a3843aacdc70274b972090
d97be1f981f612126fa0719fc807d9d13e557e3714e91736acb8039d9a01a5f6e2d3ccc89911713e
1dc0cdb48c9940778c12eea5b9a5bcb35e291b676540141d8add4670e05016bed823719c410c4bc2
354b7f31ccac8c289aad3804615a228beb4395b31846869e2c4255ba20c7e282d8b4db26aee3696d
c5dc44773ec1347015b3e8491aa280517fd2282f1d0685e67def4229acd794c6630575d72ff640b8
8a3aa9c03258ee30ef3bc56ad1bae30520865a245fe396e96cdaa5153fa5b80eb6da411c87727841
765041ec6d226c0e948e04c5b55c6390b2449352a85aadcafcf6d03d18635146cbbfb4e0433eb090
a9430d1adf8163fa80353c7937afcc2601380df89f556ab6997469b175cad22482394f187ffe1496
caf64af408f2f7fe6927889c437b3b0c2501f87c2f0b1caa0125a88fe8cd8f6b5a401c672488d15c
f39829ed955ee3c00c6587f1241bc1fe17ea271afa93c7ed3567790397e9744a8c9c26811f2b2be5
a57be91795f25e5ed2d0450e091a3d4bad8a4f1853c14130bb579713d65d9b995c7c2cd42e1ac633
3cb2e68abff3d4862c1bdaee076f7fce7d920969defd53ffeeb3c8cff84435c6b171191130ec1c1c
9e08e9e75d023dab50af9f8f071aa0f20d579efde946a51d3f59189105c3cf5290973020f3a0e376
7dfe5a1aa0e038d80fa0657ef77af6273ded251683d146d7180ad42ebeaf76d6231e8184df2df86b
bd631f24bfb0bb80d3bc4226dc010abedd5731ccf875551f0336ac5a4ec2bf74185925cfe1233713
3c8791a89f46feb5c7a2c06ae47fdd053a8f17ce2644b5c27e318897419d96b4ba7e6e4bbc8ea918
3bbc7c2617113766da83e3504266e5ae014a2116dd507f0e2f0e0ce465cfaf9acc371e404abc4cf5
c4c4ca540895b9a96eb50dffbf89b620aed3cabb5a71211950f9d6eda7a6c903f368187b53b931be
c9ff1808f998c97cc371af1dbb169ebd0e43ad5cc3c774ffd22e507d1654208f9aa6d47f30e3d3d5
a9fa03e4cd1c1a97f4572372d189c48ed3ee2f486ba508fa8396a910015f2ce792f8e179b76bd4e1
b465f001959e334176f35ee7da8af6687ab7e9a00ff44646ba6602a66de94ced46777a70723e278c
ce8a4b960513f228e37de12e42b5d584b2cf44f4de9d6921a362e655fe03669a4cc7e8301769a987
06a8612146a23444c4141b25d3c68fe96a363d83aa9f56f9ab9199df36e01a03e40a6d5a4cf3f797
b1677b43563b0e89959818dc646dda67f26623f1d5ab1ed9822ca59b232a7488916ff58db4ffc574
8a4d09a37be10c7e13e4900ccf489a070a9b4520a184ad8af92294dece7e7c1aeb4613e874f46f2e
e2fef88633b4f0e7849e7fcadd494eb45a1d08ef5e0a1caf82c4463ff686b3f8f4f8417f15f883af
09f17a7f02e7f0a1c3a6a343e0ddee3d91ffec8339f711daca5d5310089ec59584394cb4d55e56a5
c07adda2a739019746db033692849adf1e0dfb8a2f4d489ce8844ab313a2be64c393cfa074963b78
4f73c3f4ba2b613ba49907223c2a151fac22d3a24db0c25f8445348586097e24dd294db2d5c94d06
356101fecb13509a692608e391ae67ecdc800dfb104922c9fa02180372ff20b78f32e34d9a851857
7b26e22f4ff01d88580c42a8ba34774c168bc8d236e8b16f443fa64d15db4b222647eee129bb6bef
5d6ae883b4b29ff73d91cb91686c7779b05314f8fe96a81430d2ffc0ae1b76307c243c7a3d9a52b7
70685a7a82fbaf16594b0fcfc9b739bb03efe51f33a4fec0f843381080f9d8d5f8529ff31f096ce0
97ba2fa653c587d64c44c02c1a5457f014017e0fd22069130a96033a3fd28fcc1a1158229d3bc772
7f0a96a9e6131aaf954b9ed725e785bb6e3341940de670fbf0283ab611aa777ff4812e1140f93ae2
6bb38a55d324abc439b33759165c1a704aa25ebfa88ec9927353d7a35f3e2c8395045c2d5ced79db
7820f7930ecf853645c4d4c6a540925c2d6fb88d0a31431cdf06affaa0678371c35517c1b9bb8503
4228a09671a2b7e3bcd25283bd5f2ea3b09bc3185209200627e2002543bfbd9e864c648075e22a58
40306136e3e221d836c4aba3dd6bd7c7ccfdb70fc3c719826820f4d4ec11a994aa008d342e14e52f
07f0e64fc4e91736b1475634de49eb6a50acec5c0134603819013b25ae6c5e9522dd6c5165b7a788
cd78bc2239e69846975de3777070b5749a23e6d28c2334cd01af7fe6fd8038f214b06c7ff6961ab8
f3de00fcdd52cc179fe8c10ac8a40a37944b5a1fb39dc34c6441e4570c1a4bca2e43b856818fb901
50d2bc4511c0c1195b9d01104194002455ab686d68fb6a034072ec31c401a308e8b7139df6f3755b
5f2585dc0211acaa379291405a18a6aae555afebbcd140496b54a20d31822b204cdb3b1b9161ce18
bae087ccc9a6c0565751c2e088f5e9d7fe269fd12287d48ea87948674ad36144220f67cc55020668
e7e8b1543b4492a5410c333859290cee952ae50126b2de3d4227053173367b386e7378c63ae015eb
2b0488b9878dd7ebb36274670759b6da2e4fabe055a559bf4bebbb01d5d2f6d642ef096a1edf7925
c4fa426e30e4ffbb4ddcdf701e645cf2435ba84c9e9ea7cb86a86225926e51c715c37332264905e4
2b38a51224de44a215ca6805d4729a3a32e73b6ac33b7c60fb2433573b662cfdbf387d6f604abb19
f5727d67bbe322804261f387bd2c39a991f0517da76627b5061a4dd4bf8e0f5aec50fddfb3c7a15c
12f02f807476414e5f6c4ed82342451b517e7357d73ffd0000ac7e239dd5610ef7b535d785028858
87cc449604f22c1c1dd66c302d1ebb910b7f44060b554ea006d283b6f537a98de927023192afacf4
cdaa0b540ecf340c67cafb2daca86e77ae13610ebf393e79949d8e8c418024d8f4481d9f9a82763f
b02c58ca85ebeb3329db595afb0f1eda8236727ccd54e7c4c014d05df0f758d5f6cffe0e16ae3808
ecfd434eada8d1ea973137222c2f4c2f65d50b4f13991a03e5488be31fe17d205b12fff4d5c285f2
81f40d0a7369516bb0f2c6b03e434ee1ff97d12c00ba4344b0f26c285642e5064ff16c7f87555aab
02f1f4568327aaae868d2c2a1a6eafe11de62ce88afe492de93f95f9ad6a85d723ca16a5a86f47e2
3afdf7462f9d42b0d60aea2d53766941f51367880447c97afc9d3e2f21a50b8f58d3ced6b22cda88
2da3ccd449036eed7eefaa05bb0c5cc1583d6611b6a15b16e39e37fda7863c98c4513a5e089b44e8
265d33001adcd8828688a5c6a9fe65b579dd1880c30ccbca70630898e132a5f1b536fff605583d3d
b7948e25e0f81c09f0933f4cb635c60e0562671e29d40a8755ac1e131440b085c9c22fb8fa478076
2faad0cc5a6b8f438bd0546d8d9d7b9d90d7d0a3a1309d2c4a6b6c53bcf35d7fdc506f54e591c918
42b95ffd7085579bcd8b58a42f9797af8dff5d8f16b6f3b958580cfc1c1229e62c711668606d5304
1ad05fe01f023e8803d5c78acb42f0b274b5596b23dfc2c3ac5a57b4956600b1d734a006aeaf5b7a
66ed5ce393ec3a4dba777aa93e5bf1d73ded37d8e507967bf11a6478af29926b794c4eca694619d0
dd3236065d5a8fd128ca57af34e86f344bffa781a51af2b8cca4fb738c06a57055923478b390de3b
6529788fe95a1dc86b26d6124e999750ecf1de6953f71f7480242053beb90876db552977c99d14f1
00a67675caf2a0b1c50044ffcb9fbb403c0629b3b0b08320dffb01cb414e8ce184a0e6e2d76d7135
4efb18e5a87159c638c51dc7a2ca4bf2baee4249366519cac6d1fec539e0c88c82550c4a8678791c
260cd789c682543089adfc6423cea481d1a396eef5679a408f2b2eb0c6d2f9b42c89466f19916912
6710b22be8028e271497107fe6e7e18cf785deb665e96c547bbf40aa4a92a83d22303b70f47ae0f6
b6d0c8e76e3b244d88387714a84576b622cebb480e72921fcc27ac4535eabaa35eff2ec7583f11eb
08ab554813648e6fc901eb3e8ca1d69024b869ec35d60fe7bb4d86c2c00444023b5adea5d124fcb6
c1d51c0473b2e52797b846cae8c295dabf0c2b714549bc43208085900f639ecc211e8da0f9adf824
4032ef29604547c6e352cb4c4e195c7390a7840e469e4450be23aa5e23c0516d3c92118a018121a8
19b149736576c13cb3850784d088684181aee045adb845fba72c108e2bbac2aa5169bc09f8bc75ad
cf2d8d370dc99ddbe99d811811d02da8d08b59c3a18ee4e3225aa9bb7939fa04793554c540efd883
f1b72108cd13e38b8a91f9ad9523a04ce41742db7fd70a6f2d9ad458a9c8fa3b8cd7a7ece6da0463
e5266d12006532b1473191dd03431897d9e769bb1ea08a137e0758679bff1b6a0f27a6078bb4a1d8
2548a16ee2f3854b1d3368bfe1fce84b4a1bedc3cc60aff3a442d94a53cdf76db1a60a8cf7356462
6fb5df202bba33eb76cd2796d79f583ebdf014066f6b67adefedf2a8eeba9c5f4aa1db6dad587313
fbd3617e43201ec931c7dfcbda64bfd9c303b3eea3acbaa01250912e19c4992d7a9d73cfb241461f
241d1b1ecf2a99d43b3b15873ce61f7cd5afa274094617bb7aa44d62409290e0805fd9dc901ebcb3
c71a7b1851d5bab273e0c7f146f6e46615d8e8f379423359f3b03f5e0873e0c63cc6482e2314e127
ca679cbb80643c44050eb9f6ad0ed48d31f4cced90e91cfb921c1eb885d9455903bae13813bf8cbe
93a819d850f72e9d8842c3ce537cdbf6141eaab84c30423077fd94d607703e1886e6a2896857339d
876783604415844f04a79c8bbcf9438c7f09d63f17edea98bce7f1042f3849a3b3c10c3b3547098f
adbe9d4774680dab843a881c2b30cfff3182b9ff8e9d2031dea59a0f897c5344c19cb0a2b31421a1
a3d409c418f1e35a0ad21a2caf78e657bc386dd11894dcbf488672fe00fe3772b2189b0c0f9979fd
d8566fd7a90affd4b340a78d4905e191c1a314b8ba9e67b7665f502251536315c09afff085ba5502
0c103e9b73107119240154e5ebacf77ad893b37b035385ca4e16cffc12dab222840ee08509d4b86a
9e8b06e146cebbbebe3118b8301dd9aa083e54ef1939856d9ab8b637f1a689bf733e00f99fcb9a64
645575ae568f380486b926d8338c1afa442918f7510683ac477aa16fba2b485eb8131aabcffbb12d
8b11d1f3edaeaea9d9127a0dd692c7cfb7ec6ed81d65c9e0f6c41f3c564ae23e4092ac6e42f358d3
31d25a57208050af2921ddd268e1ea517820abbdf47e70c4592f77f864998ca0e9b2850ef5b9b8c1
188d586afdfac111a11a49640d01ba0aec121e4b66720f169aaf5d86c9b990be996cc2e692dc4200
9296daed37c82f056c8256df6b9358f2a03281a7497d6dc95b931fc29f0bf896783bcacc55469728
06a60d3988148e50b503a830e5a49c8cf1ba45c701f6b0facfaae9472dee5c04cdc1ab77e1778c05
a28327062011e1fc5e57f5cb6b8b5d5baa999d35e31e80b2f76ed14829a7db4cf65b365be699e084
3ad681eefffe4dffeb72efb9ee54cb50db6ea74556593df61090d61c9414ad26fbbc978d0fc1c50e
512870459f710735b9adc1c4d360e5dbc557a91e9948d9cafea998fc1bdd92d6d9558efd5ab28f33
3dc7c221a15bba0e1cd5a5cd8a07a9ea6b6599db12622bee423685769aee76737c7070aef75eed0c
1cdbc81a2e699b81e063
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 SSC_Copy_State <Virtual>  0
 HBW_Pick TASK  0 -1
 HBW_Copy_State <Virtual>  0
 PID_10 PID  0
 PID_11 PID  0
 hunt_exp_light PROGRAM  0 -1
 HBW_Home <Virtual>  0
 HBW_Pick_Sto <Virtual>  0
 test TASK  0 -1
 HBW_Pickup_ST PROGRAM  0 -1
 HWB_Extend_Arm <Virtual>  0
 HBW_Retract_Arm <Virtual>  0
 HWB_PickUp TASK  0 -1
 HBW_HTO1POS <Virtual>  0
 HBW_Left_1Block <Virtual>  0
 HBW_HomeTo2_Col <Virtual>  0
 HWB_HomeTo3_Col <Virtual>  0
 HWB_HomeTo2_Row <Virtual>  0
 HWB_HomeTo3_Row <Virtual>  0
 HWB_HomeTo1_Col <Virtual>  0
 HBW_move_left_1 <Virtual>  0
 HWB_Home_to_11 <Virtual>  0
 HWB_11_DropOff <Virtual>  0
 HBW_Pickup <Virtual>  0
 HBW_PickUp_R1 <Virtual>  0
 HBW_Send_VGR <Virtual>  0
 HBW_PickUp_VGR <Virtual>  0
 HBW_Return_VGR <Virtual>  0
 HBW_MotorsOff <Virtual>  0
 HBW_ConvTo11 <Virtual>  0
 HBW_Return_Top <Virtual>  0
 HBW_MV_11_12 <Virtual>  0
#END

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"VGR Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC410 C410 1 0x0 MC409 C409 1 0x0 MC412 Y28 1 0x0 MC412 MC450 1 0x0 MC411 C411 1 0x0 MC408 C408 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC413 Y29 1 0x0 MC413 MC451 1 0x0 X27 MI200 1"

// Rung VGR_Copy_State#2
// Offset 27
NOP

// Rung VGR_Copy_State#3
// Offset 28
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC800 Y41 1 0x0 Y41 MI801 1 0x0 MC802 Y43 1 0x0 Y43 MI803 1 0x0 MC804 C804 1 0x0 MC805 C805 1 0x0 MC806 Y44 1 0x0 MC807 Y20 1 0x0 MC808 C811 1 0x0 MC809 C809 1 0x0 MC810 C810 1 0x0 MC812 C812 1 0x0 MC813 C813 1 0x0 MC814 C814 1 0x0 MC816 Y45 1 0x0 MC817 Y46 1 0x0 MC818 Y21 1"

// Rung MPO_Copy_State#2
// Offset 39
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
NOP

// Rung SLD_Copy_State#2
// Offset 1
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"SSC Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC606 C1200 1 0x0 MC607 C1201 1 0x0 MC608 C1202 1 0x0 MC609 C1203 1 0x0 MC615 C1215 1 0x0 MC616 C1216 1 0x0 MC617 C1217 1 0x0 MC618 C1218 1 0x0 MC619 C1219 1 0x0 MC620 C1220 1"

// Rung SSC_Copy_State#2
// Offset 25
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block HBW_Home
$LGCMOD HBW_Home

// Rung HBW_Home#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Home#2
// Offset 8
STRN C215
ANDN X0
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 60 60
OUT Y51

// Rung HBW_Home#3
// Offset 26
STRN C215
ANDN X3
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5

// Rung HBW_Home#4
// Offset 43
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y76

// Rung HBW_Home#5
// Offset 64
NOP

// Rung HBW_Home#6
// Offset 65
RET

// End of Code Block HBW_Home
$LGCEND HBW_Home

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 Y40 1 0x0 Y80 MHR102 1 0x0 MC101 C205 1 0x0 MC102 C206 1 0x0 MC103 C207 1 0x0 MC104 C208 1 0x0 MC105 C209 1 0x0 MC106 C210 1 0x0 MC107 C211 1 0x0 MC108 C212 1 0x0 MC109 C213 1 0x0 MC110 C214 1 0x0 MC111 C215 1 0x0 MC112 C216 1 0x0 X2 MI101 1 0x0 X10 MI102 1 0x0 X11 MI103 1 0x0 X3 MI104 1 0x0 X0 MI105 1 0x0 X6 MI106 1 0x0 X7 MI107 1 0x0 X8 MI108 1 0x0 X9 MI109 1 0x0 $HBW_Encoder_X.Acc MHR1 1 0x0 $HBW_Encoder_Z.Acc MHR2 1"

// Rung HBW_Copy_State#2
// Offset 55
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block HBW_HomeTo2_Col
$LGCMOD HBW_HomeTo2_Col

// Rung HBW_HomeTo2_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_HomeTo2_Col#2
// Offset 17
STRGE -2775 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_HomeTo2_Col#3
// Offset 22
NOP

// Rung HBW_HomeTo2_Col#4
// Offset 23
NOP

// Rung HBW_HomeTo2_Col#5
// Offset 24
NOP

// Rung HBW_HomeTo2_Col#6
// Offset 25
RET

// End of Code Block HBW_HomeTo2_Col
$LGCEND HBW_HomeTo2_Col

// Beginning of Code Block HWB_HomeTo1_Col
$LGCMOD HWB_HomeTo1_Col

// Rung HWB_HomeTo1_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HWB_HomeTo1_Col#2
// Offset 17
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_HomeTo1_Col#3
// Offset 22
NOP

// Rung HWB_HomeTo1_Col#4
// Offset 23
NOP

// Rung HWB_HomeTo1_Col#5
// Offset 24
RET

// End of Code Block HWB_HomeTo1_Col
$LGCEND HWB_HomeTo1_Col

// Beginning of Code Block HWB_Home_to_11
$LGCMOD HWB_Home_to_11

// Rung HWB_Home_to_11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HWB_Home_to_11#2
// Offset 22
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_Home_to_11#3
// Offset 27
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HWB_Home_to_11#4
// Offset 49
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_Home_to_11#5
// Offset 54
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HWB_Home_to_11#6
// Offset 73
NOP

// Rung HWB_Home_to_11#7
// Offset 74
NOP

// Rung HWB_Home_to_11#8
// Offset 75
RET

// End of Code Block HWB_Home_to_11
$LGCEND HWB_Home_to_11

// Beginning of Code Block HWB_11_DropOff
$LGCMOD HWB_11_DropOff

// Rung HWB_11_DropOff#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HWB_11_DropOff#2
// Offset 8
STRGE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_11_DropOff#3
// Offset 13
STRN C215
ANDN C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51

// Rung HWB_11_DropOff#4
// Offset 31
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y4
AND ST2
OUT Y5

// Rung HWB_11_DropOff#5
// Offset 51
STRGE 2850 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_11_DropOff#6
// Offset 56
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 60 60
OUT Y7

// Rung HWB_11_DropOff#7
// Offset 73
RET

// End of Code Block HWB_11_DropOff
$LGCEND HWB_11_DropOff

// Beginning of Code Block HBW_PickUp_R1
$LGCMOD HBW_PickUp_R1

// Rung HBW_PickUp_R1#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R1#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R1#3
// Offset 41
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R1#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R1#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_PickUp_R1#6
// Offset 69
NOP

// Rung HBW_PickUp_R1#7
// Offset 70
NOP

// Rung HBW_PickUp_R1#8
// Offset 71
NOP

// Rung HBW_PickUp_R1#9
// Offset 72
NOP

// Rung HBW_PickUp_R1#10
// Offset 73
RET

// End of Code Block HBW_PickUp_R1
$LGCEND HBW_PickUp_R1

// Beginning of Code Block HBW_Send_VGR
$LGCMOD HBW_Send_VGR

// Rung HBW_Send_VGR#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Send_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_Send_VGR#3
// Offset 37
STRN C215
AND X2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y48
AND ST2
OUT Y49

// Rung HBW_Send_VGR#4
// Offset 56
NOP

// Rung HBW_Send_VGR#5
// Offset 57
NOP

// Rung HBW_Send_VGR#6
// Offset 58
RET

// End of Code Block HBW_Send_VGR
$LGCEND HBW_Send_VGR

// Beginning of Code Block HBW_PickUp_VGR
$LGCMOD HBW_PickUp_VGR

// Rung HBW_PickUp_VGR#1
// Offset 0
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_PickUp_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_PickUp_VGR#3
// Offset 37
STRN C215
AND X11
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_PickUp_VGR#4
// Offset 56
NOP

// Rung HBW_PickUp_VGR#5
// Offset 57
NOP

// Rung HBW_PickUp_VGR#6
// Offset 58
RET

// End of Code Block HBW_PickUp_VGR
$LGCEND HBW_PickUp_VGR

// Beginning of Code Block HBW_Return_VGR
$LGCMOD HBW_Return_VGR

// Rung HBW_Return_VGR#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C253
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y6

// Rung HBW_Return_VGR#2
// Offset 22
STRN C215
AND X1
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_Return_VGR#3
// Offset 41
STRN C215
AND C251
DUPBOOL
ANDN X1
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_Return_VGR#4
// Offset 63
STRLE 2575 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_VGR#5
// Offset 68
NOP

// Rung HBW_Return_VGR#6
// Offset 69
NOP

// Rung HBW_Return_VGR#7
// Offset 70
RET

// End of Code Block HBW_Return_VGR
$LGCEND HBW_Return_VGR

// Beginning of Code Block HBW_MotorsOff
$LGCMOD HBW_MotorsOff

// Rung HBW_MotorsOff#1
// Offset 0
STRN C215
ANDN ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_MotorsOff#2
// Offset 18
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_MotorsOff#3
// Offset 36
STRN C215
AND ST2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
OUT Y48

// Rung HBW_MotorsOff#4
// Offset 54
NOP

// Rung HBW_MotorsOff#5
// Offset 55
NOP

// Rung HBW_MotorsOff#6
// Offset 56
NOP

// Rung HBW_MotorsOff#7
// Offset 57
RET

// End of Code Block HBW_MotorsOff
$LGCEND HBW_MotorsOff

// Beginning of Code Block HBW_ConvTo11
$LGCMOD HBW_ConvTo11

// Rung HBW_ConvTo11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_ConvTo11#2
// Offset 22
NOP

// Rung HBW_ConvTo11#3
// Offset 23
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_ConvTo11#4
// Offset 28
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_ConvTo11#5
// Offset 50
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_ConvTo11#6
// Offset 55
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_ConvTo11#7
// Offset 74
NOP

// Rung HBW_ConvTo11#8
// Offset 75
NOP

// Rung HBW_ConvTo11#9
// Offset 76
RET

// End of Code Block HBW_ConvTo11
$LGCEND HBW_ConvTo11

// Beginning of Code Block HBW_Return_Top
$LGCMOD HBW_Return_Top

// Rung HBW_Return_Top#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Return_Top#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HBW_Return_Top#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_Top#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_Return_Top#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return_Top#6
// Offset 69
NOP

// Rung HBW_Return_Top#7
// Offset 70
NOP

// Rung HBW_Return_Top#8
// Offset 71
RET

// End of Code Block HBW_Return_Top
$LGCEND HBW_Return_Top

// Beginning of Code Block HBW_MV_11_12
$LGCMOD HBW_MV_11_12

// Rung HBW_MV_11_12#1
// Offset 0
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_MV_11_12#2
// Offset 21
NOP

// Rung HBW_MV_11_12#3
// Offset 22
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_MV_11_12#4
// Offset 44
STRGE 5325 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_MV_11_12#5
// Offset 49
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
OUT Y4

// Rung HBW_MV_11_12#6
// Offset 67
STRGE 5325 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_MV_11_12#7
// Offset 72
NOP

// Rung HBW_MV_11_12#8
// Offset 73
NOP

// Rung HBW_MV_11_12#9
// Offset 74
RET

// Rung HBW_MV_11_12#10
// Offset 75
NOP

// End of Code Block HBW_MV_11_12
$LGCEND HBW_MV_11_12

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#2
// Offset 3
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#3
// Offset 6
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#4
// Offset 9
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#5
// Offset 12
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// Rung $Main#6
// Offset 15
#BEGIN FMT_COMMENT 
"Hunter Demo Light<br>"
#END

STR ST1
RUN hunt_exp_light

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
SG HBW_Program.S0

// Rung HBW_Program#2
// Offset 2
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#3
// Offset 10
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#4
// Offset 12
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#5
// Offset 14
STR ST1
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#6
// Offset 22
NOP

// Rung HBW_Program#7
// Offset 23
STR C213
JMP HBW_Program.S1

// Rung HBW_Program#8
// Offset 25
SG HBW_Program.S1

// Rung HBW_Program#9
// Offset 27
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#10
// Offset 35
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#11
// Offset 37
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#12
// Offset 39
STR ST1
DUPBOOL
STR C205
ANDN C206
STR C206
ANDN C205
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 500 60
POPBOOL
DUPBOOL
AND C205
OUT Y48
POPBOOL
AND C206
OUT Y49

// Rung HBW_Program#13
// Offset 68
STR ST1
DUPBOOL
STR C207
ANDN C208
STRN C207
AND C208
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
POPBOOL
DUPBOOL
AND C207
OUT Y50
POPBOOL
AND C208
OUT Y51

// Rung HBW_Program#14
// Offset 97
STR ST1
DUPBOOL
STR C209
ANDN C210
STRN C209
AND C210
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
POPBOOL
DUPBOOL
AND C209
OUT Y4
POPBOOL
AND C210
OUT Y5

// Rung HBW_Program#15
// Offset 126
STR ST1
DUPBOOL
STR C211
ANDN C212
STRN C211
AND C212
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
POPBOOL
DUPBOOL
AND C211
OUT Y6
POPBOOL
AND C212
OUT Y7

// Rung HBW_Program#16
// Offset 155
STR C213
JMP HBW_Program.S2

// Rung HBW_Program#17
// Offset 157
SG HBW_Program.S2

// Rung HBW_Program#18
// Offset 159
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#19
// Offset 167
STR X0
OUT $HBW_Encoder_X.ResetLevel

// Rung HBW_Program#20
// Offset 169
STR X3
OUT $HBW_Encoder_Z.ResetLevel

// Rung HBW_Program#21
// Offset 171
STR ST1
CALL HBW_Home 0x1 DST511 "3" "3"

// Rung HBW_Program#22
// Offset 179
STR X0
AND X11
AND X3
JMP HBW_Program.S3

// Rung HBW_Program#23
// Offset 183
STR C212
JMP HBW_Program.S3

// Rung HBW_Program#24
// Offset 185
NOP

// Rung HBW_Program#25
// Offset 186
SG HBW_Program.S3

// Rung HBW_Program#26
// Offset 188
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#27
// Offset 196
STR ST1
CALL HWB_Home_to_11 0x1 DST511 "3" "3"

// Rung HBW_Program#28
// Offset 204
STRN C250
ANDN C251
JMP HBW_Program.S4

// Rung HBW_Program#29
// Offset 207
SG HBW_Program.S4

// Rung HBW_Program#30
// Offset 209
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#31
// Offset 217
STR ST1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#32
// Offset 225
STR X10
ANDN C251
JMP HBW_Program.S5

// Rung HBW_Program#33
// Offset 228
SG HBW_Program.S5

// Rung HBW_Program#34
// Offset 230
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#35
// Offset 238
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#36
// Offset 246
STRN C251
AND C250
JMP HBW_Program.S6

// Rung HBW_Program#37
// Offset 249
SG HBW_Program.S6

// Rung HBW_Program#38
// Offset 251
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#39
// Offset 259
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#40
// Offset 267
STRN X2
JMP HBW_Program.S7

// Rung HBW_Program#41
// Offset 269
SG HBW_Program.S7

// Rung HBW_Program#42
// Offset 271
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#43
// Offset 279
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#44
// Offset 287
STR X11
JMP HBW_Program.S8
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#45
// Offset 296
SG HBW_Program.S8

// Rung HBW_Program#46
// Offset 298
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#47
// Offset 306
STR ST1
CALL HBW_ConvTo11 0x1 DST511 "3" "3"

// Rung HBW_Program#48
// Offset 314
STRN C250
ANDN C251
JMP HBW_Program.S9

// Rung HBW_Program#49
// Offset 317
SG HBW_Program.S9

// Rung HBW_Program#50
// Offset 319
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#51
// Offset 327
STR ST1
CALL HBW_Return_Top 0x1 DST511 "3" "3"

// Rung HBW_Program#52
// Offset 335
STR X10
ANDN C251
JMP HBW_Program.S10

// Rung HBW_Program#53
// Offset 338
SG HBW_Program.S10

// Rung HBW_Program#54
// Offset 340
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#55
// Offset 348
STR ST1
CALL HBW_MV_11_12 0x1 DST511 "3" "3"

// Rung HBW_Program#56
// Offset 356
STRN C250
JMP HBW_Program.S11

// Rung HBW_Program#57
// Offset 358
SG HBW_Program.S11

// Rung HBW_Program#58
// Offset 360
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#59
// Offset 368
STR ST1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#60
// Offset 376
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#61
// Offset 379
SG HBW_Program.S12

// Rung HBW_Program#62
// Offset 381
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#63
// Offset 389
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#64
// Offset 397
STRN C251
AND C250
JMP HBW_Program.S13

// Rung HBW_Program#65
// Offset 400
SG HBW_Program.S13

// Rung HBW_Program#66
// Offset 402
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#67
// Offset 410
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#68
// Offset 418
STRN X2
JMP HBW_Program.S14

// Rung HBW_Program#69
// Offset 420
SG HBW_Program.S14

// Rung HBW_Program#70
// Offset 422
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#71
// Offset 430
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#72
// Offset 438
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#73
// Offset 447
SG HBW_Program.S15

// Rung HBW_Program#74
// Offset 449
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#75
// Offset 457
STRN ST1
CALL HBW_ConvTo11 0x1 DST511 "3" "3"

// Rung HBW_Program#76
// Offset 465
STRN C250
ANDN C251
JMP HBW_Program.S16

// Rung HBW_Program#77
// Offset 468
STR C213
JMP HBW_Program.S16

// Rung HBW_Program#78
// Offset 470
SG HBW_Program.S16

// Rung HBW_Program#79
// Offset 472
NOP

// Rung HBW_Program#80
// Offset 473
STR C213
JMP HBW_Program.S1

// Rung HBW_Program#81
// Offset 475
NOP

// Rung HBW_Program#82
// Offset 476
NOP

// Rung HBW_Program#83
// Offset 477
NOP

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#2
// Offset 8
STR ST1
DUPBOOL
STR C410
ANDN C409
STRN C410
AND C409
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
POPBOOL
DUPBOOL
AND C410
OUT Y27
POPBOOL
AND C409
OUT Y26

// Rung VGR_Program#3
// Offset 37
STR ST1
DUPBOOL
STR C408
ANDN C411
STRN C408
AND C411
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
POPBOOL
DUPBOOL
AND C408
OUT Y24
POPBOOL
AND C411
OUT Y25

// Rung VGR_Program#4
// Offset 66
STR ST1
DUPBOOL
STR C406
ANDN C407
STRN C406
AND C407
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
POPBOOL
DUPBOOL
AND C406
OUT Y23
POPBOOL
AND C407
OUT Y22

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STR C813
OUT Y18

// Rung MPO_Program#4
// Offset 12
STR C810
OUT Y17

// Rung MPO_Program#5
// Offset 14
STR C811
OUT Y52

// Rung MPO_Program#6
// Offset 16
STR ST1
DUPBOOL
STR C804
ANDN C805
STR C805
ANDN C804
ORSTR
ANDSTR
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 100
POPBOOL
DUPBOOL
AND C804
OUT Y53
POPBOOL
AND C805
OUT Y15

// Rung MPO_Program#7
// Offset 45
STR C814
OUT Y19

// Rung MPO_Program#8
// Offset 47
STR C809
JMP MPO_Program.S2

// Rung MPO_Program#9
// Offset 49
SG MPO_Program.S1

// Rung MPO_Program#10
// Offset 51
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#11
// Offset 59
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#12
// Offset 61
STRN X24
SET Y17

// Rung MPO_Program#13
// Offset 63
STR Y17
OUT Y20
ANDN X17
ONDTMR T0 1000 Y44

// Rung MPO_Program#14
// Offset 69
SG MPO_Program.S2

// Rung MPO_Program#15
// Offset 71
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#16
// Offset 79
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#17
// Offset 81
STRN X19
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y53

// Rung MPO_Program#18
// Offset 97
STR X19
JMP MPO_Program.S3

// Rung MPO_Program#19
// Offset 99
SG MPO_Program.S3

// Rung MPO_Program#20
// Offset 101
STR ST1
SET Y17

// Rung MPO_Program#21
// Offset 103
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#22
// Offset 111
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#23
// Offset 113
STR X19
SET Y19

// Rung MPO_Program#24
// Offset 115
STR X19
ONDTMR T100 2000 Y18

// Rung MPO_Program#25
// Offset 119
STR T100.DN
JMP MPO_Program.S4

// Rung MPO_Program#26
// Offset 121
SG MPO_Program.S4

// Rung MPO_Program#27
// Offset 123
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#28
// Offset 131
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#29
// Offset 133
STR X19
RST Y19

// Rung MPO_Program#30
// Offset 135
STRN X16
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y15

// Rung MPO_Program#31
// Offset 151
STR X16
JMP MPO_Program.S5

// Rung MPO_Program#32
// Offset 153
SG MPO_Program.S5

// Rung MPO_Program#33
// Offset 155
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#34
// Offset 163
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#35
// Offset 165
STR X16
SET Y19

// Rung MPO_Program#36
// Offset 167
STR Y19
ONDTMR T101 2000 C815

// Rung MPO_Program#37
// Offset 171
STR C815
RST Y18

// Rung MPO_Program#38
// Offset 173
STRN Y18
JMP MPO_Program.S6

// Rung MPO_Program#39
// Offset 175
SG MPO_Program.S6

// Rung MPO_Program#40
// Offset 177
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#41
// Offset 185
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#42
// Offset 187
STR X16
RST Y19

// Rung MPO_Program#43
// Offset 189
STRN Y19
ONDTMR T102 1000 C818

// Rung MPO_Program#44
// Offset 193
STR C818
JMP MPO_Program.S7

// Rung MPO_Program#45
// Offset 195
SG MPO_Program.S7

// Rung MPO_Program#46
// Offset 197
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#47
// Offset 205
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#48
// Offset 207
STRN X15
OUT Y45

// Rung MPO_Program#49
// Offset 209
STR X15
TMRDOWN T102 1000
OUT Y43

// Rung MPO_Program#50
// Offset 213
STR T102.Done
JMP MPO_Program.S8

// Rung MPO_Program#51
// Offset 215
SG MPO_Program.S8

// Rung MPO_Program#52
// Offset 217
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#53
// Offset 225
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#54
// Offset 227
STRN X13
OUT Y45

// Rung MPO_Program#55
// Offset 229
STR X13
TMRDOWN T103 1000
OUT Y21

// Rung MPO_Program#56
// Offset 233
STR T103.Done
JMP MPO_Program.S9

// Rung MPO_Program#57
// Offset 235
SG MPO_Program.S9

// Rung MPO_Program#58
// Offset 237
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#59
// Offset 245
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#60
// Offset 247
STR ST1
OUT Y47

// Rung MPO_Program#61
// Offset 249
STRN X12
ONDTMR T104 1000 Y46

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"SLD Program"
#END

STR ST2
COPY 0x1 "4 0x0 MC404 Y40 1"

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STR C1200
OUT Y39

// Rung SSC_Program#4
// Offset 12
STR C1201
OUT Y40

// Rung SSC_Program#5
// Offset 14
STR C1202
OUT Y41

// Rung SSC_Program#6
// Offset 16
STR C1215
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y35

// Rung SSC_Program#7
// Offset 32
STR C1216
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y36

// Rung SSC_Program#8
// Offset 48
STR C1217
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#9
// Offset 64
STR C1218
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#10
// Offset 80
STR ST2
ANDPD X47
ANDPDPF
STR ST2
AND CT150.Done
CNT CT150 100

// Rung SSC_Program#11
// Offset 88
STR C1203
JMP SSC_Program.S1

// Rung SSC_Program#12
// Offset 90
SG SSC_Program.S1

// Rung SSC_Program#13
// Offset 92
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#14
// Offset 100
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#15
// Offset 102
STRN X41
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// End of Code Block SSC_Program
$PGMEND SSC_Program

// Beginning of Code Block hunt_exp_light
$PRGRM hunt_exp_light

// Rung hunt_exp_light#1
// Offset 0
STR ST2
COPY 0x1 "4 0x0 MC402 Y39 1"

// End of Code Block hunt_exp_light
$PGMEND hunt_exp_light

// Beginning of Code Block HWB_PickUp
$TSK HWB_PickUp

// Rung HWB_PickUp#1
// Offset 0
NOP

// End of Code Block HWB_PickUp
$TSKEND HWB_PickUp

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"C1","copy","",""
"C11","C11_Interlock","","Used to delay logic by one scan"
"C12","C12_Interlock_2","","Used to delay logic by one scan"
"C20","HBW_Has_Pallet","","True when carrying a pallet"
"C51","X_Direction","","True: Left False: Right"
"C52","Z_Direction","","True: Down False: Up"
"C80","Conveyor_Timeout","","Bit high when Conveyor Timeout timer active"
"C90","HBW_XY_PID_EN","","Enables PID control in HBW_Move_XZ"
"C101","HBW_T1_Send","Modbus MC101","Task to deliver a pallet to conveyor"
"C102","HBW_T2_Receive","Modbus MC102","Task to pickup a pallet from conveyor"
"C103","HBW_T3_Reset","Modbus MC103","Reinitialize and home all axises"
"C104","HBW_T4_Manual","Modbus MC104","Switch to manual mode"
"C110","HBW_Move_X_L","Modbus MC110","Move Horizontal Axis towards bay"
"C111","HBW_Move_X_R","Modbus MC111","Move Horizontal Axis towards Conveyor"
"C112","HBW_Move_Y_In","Modbus MC112","Move Cantilever In"
"C113","HBW_Move_Y_Out","Modbus MC113","Move Cantilever Out"
"C114","HBW_Move_Z_Up","Modbus MC114","Move Vertical Axis Up"
"C115","HBW_Move_Z_Down","Modbus MC115","Move Vertical Axis Down"
"C116","HBW_Conveyor_In","Modbus MC116","Move Conveyor In"
"C117","HBW_Conveyor_Out","Modbus MC117","Move Conveyor Out"
"C130","HBW_Status_Ready","Modbus MC130","On when ready for a task"
"C133","HBW_Mov_Conveyor","Modbus MC133","Status Conveyor Moving"
"C134","HBW_Moving_X","Modbus MC134","Status GantryMovingX"
"C135","HBW_Moving_Y","Modbus MC135","Status GantryMovingY"
"C136","HBW_Moving_Z","Modbus MC136","Status GantryMovingZ"
"C138","HBW_Status_Y_Pos","Modbus MC138","Current Y position"
"C141","HBW_Target_Y_Pos","Modbus MC141","Target Y position"
"C150","HBW_MoveComplete","","HBW_Move_XZ completion interlock."
"C180","HBW_Fault","Modbus MC180","Status in Fault State"
"C182","Fault_X_Target","","Active when X target out of range"
"C183","Fault_Z_target","","Active when Z target out of range"
"C400","VGR_T0","",""
"C410","VGR_T1","",""
"C420","VGR_T2","",""
"C430","VGR_T3","",""
"C440","VGR_T4","",""
"C500","VGR_Man_Control","",""
"C799","VGR_RESET","",""
"V105","HBW_Task_X_slot","Modbus MHR105","Value for slot X coord"
"V106","HBW_Task_Y_slot","Modbus MHR106","Value for slot y coord"
"V118","HBW_PWM_Set_X","Modbus MHR118","Set Horizontal Axis PWM Duty Cycle %"
"V119","HBW_PWM_Set_Y","Modbus MHR119","Set Cantilever Axis PWM Duty Cycle %"
"V120","HBW_PWM_Set_Z","Modbus MHR120","Set Vertical Axis PWM Duty cycle %"
"V131","HBW_Cur_Progress","Modbus MHR131","0 to 100 percent job completion"
"V132","HBW_Cur_Stage","Modbus MHR132","Current stage number"
"V137","HBW_Status_X_Pos","Modbus MHR137","Current X encoder position"
"V139","HBW_Status_Z_Pos","Modbus MHR139","Current Z encoder position"
"V140","HBW_Target_X_Pos","Modbus MHR140","Target X encoder position"
"V142","HBW_Target_Z_Pos","Modbus MHR142","Target Z encoder position"
"V181","HBW_Fault_code","Modbus MHR181","Current Fault code"
"V801","VGR_Fault_Code","",""
"N810","VGR_Rot_Target","",""
"N811","VGR_X_Target","",""
"N812","VGR_Y_Target","",""
"D0","MC","",""
"D1","Feeder_Extend","",""
"D140","X_Start_Position","","Distance to target"
"D142","Y_Start_Position","","Distance to target"
"D143","HBW_PWM_Cur_X","","PWM value for X for XZ movement task"
"D144","HBW_PWM_Cur_Z","","PWM value for Z for XZ movement task"
"T3","T_HBW_S6","",""
"T4","T_Conveyor_Timer","","Used to detect conveyor faults"
"MPO_Program.S2","Vaccum_MO","",""
"MPO_Program.S3","Vaccum","",""
"MPO_Program.S4","Vacumm_MO","",""
"MPO_Program.S5","Vaccum_Load","",""
"US0","_CP_Strogram_A","","CP_State_Program"
"US1","_VGR_Movement","","VGR_Movement"
"US2","_SSC_Check_InOut","","SSC_Check_InOut"
"UB0","_VGR_MisScan_A","","VGR_Movement.Done ThisScan"
#END

