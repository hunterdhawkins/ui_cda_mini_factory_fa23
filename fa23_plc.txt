// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\brent\Desktop\factory\ui_cda_mini_factory_fa23\fa23_plc.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
86a0d9cb1d51bfb431a2009d39c2a822a93ed2eca072714988923c63b17bbd3ce048b34d591d4384
1e5b58f5a01b694395d625a8abf85212f96b773bf438560a1bd7dc5841d6d608f551bf9bde237011
41bde46dc538dc0814c16e2d525490458bae2c723051f33740079e3ee7ecb4dc99476c9edf0b5f0b
21355901cd00cbe6efcab0c6096f6a8be31144904657cfc91ecd1179c3fa2ec8322d346f9a634526
09f2b4fe49ff5bfe1dee5a4fc8b0ec1202e30e7bb09998bf08659bda25295da72533cde0b086771c
6d3299ed7cb15290ad7f1f1dcc78275c2dc1e4af91df20a61de941961ab4c9320d77b4ce9265bdb7
7fe674c75d49635d710e04c002a1feb6f688c1f932df3c7e22fda819a668f27449cc20db217cde17
6c2d6112632cb3dded9a2ac76a83fe462e987dedae4f66906c89a350b4a03f16fbfec1025d2d2128
a682cd73eb9fc7c86093b5ecc2a992546cc5f37224aa8fa5413e5b307a61a0859a2fe2f3091a59ea
35f2134ebad7ce6e992c8c1399556c2bd71ee3621b3a0cb5af5f5ba6d0ca2b7e2f2351ce0e203a3e
639c07352f30b645a39f0ea0a1b29f3af74cde7a8fe3d531164f0ac7aca71684b3a5c9940f6b39fa
39d2a802884644795462c2c4a6d1b4f509bc55cf3628709298f479ff27447699f5cd65fb8b1cfa02
8e70e026ce72430792bb27509987960e9b9f6acd39af424f877fdd40c8507135bb06b2861d25d291
6a2baa030765d536653f96453d314a91a1b9deb4b28d46f3d5376d2642cd8d79493be946d3cb2662
883d56611b9bb07cbd96c1f44a7710cdb92f7d6650f8421d745d116b3cfe233f6c377f940a3cde89
7dfd9749b0b92c0bbbd86806c750ff1782aa6b0bb94b04bf1ec23787459c48b169da7d339eb47edf
67b8312307f35b5e047e91ee9281e03af36d3fe0441754e2bf1b36d7e62b94f3932aaac3058e3d61
5ab19d1d4129570715abbe94be1bdb2ca926aa1a462173474db84ca070e5b8813afefd9a057de60b
3fcd1e00eb3d23b9f2c87b333357eb130f9cca41a26875e62226445a29361b20124d7b4b0ed3e6ae
163db3c6f81dcef0fd09cd8f9af60ba0d9d6d0bff9a6d4eb25d4cae44f390adb78e2d515bf9b8509
d7c40c9593338564e0b108723bcb7942c67c98ef5072c2eb81ea539fec83aa9fb5fba287f4be0e82
c712f9de4d6cdb32d2e018ef48f32af406768f2621122d60c54861ad4d32538bf518c1db5084f2bd
b4fdce21afa3f82981e8d85495d7af1531f02c4b8782256534b03fde685762af999d2fe8d71fe62d
3f5df7aca1dd413d5b7beaf3ee082ff1b1157a8243b28bd8b8b3cc27069f1b9f92b6bb50da9967c8
252d5161cd242931f1966b246910039201a2a700faadfd788a6f0099d230149bce7e3d186359bc1e
072c99e4e9d46fc7f9f4cc099335cc619d7057193b7b65cebf28f806897b8a1d3a4818f90da52706
6e8011902ca154fe57d34e9af09d1d2cb4ea3acab4fbe471ab9adc261e4fabc4dc99a5c40f4e7ebf
34ff4e92d4c3691b47f8b90631a664440836b8bf1b397e2643b1bfb2e19155d56f700b037249de8e
45d75b4e65618566b5bae06407d22ba9cd629432d014f82e6441da49e1966511c1a61ca1e16481a3
9b58339d965aef67a88e28c2f8fbf7a3663d8a95aea67da43db08ccc18c35e4ca521873ce1580f19
b05c1f497fd534ee9ea1228da8d5d6d481cbc7f624549bdfb168da2ca3888263d40eac6054645e20
ceb843f6e77a478930632ffe8a0563c740a263e4d09be90410a33c1f206099f6511dfe5faaf66953
e29cb99977e77325df5fcd7e5f11cd2c6fc2e3836a987d684a6a84144016ec6cfe4d6ce24e028374
5d7f552a4ea61fc241a496ca1671de8969e6f5982d9d922e443ff197a2beb2381786d6dcbffc28a7
b4af5d56c9edd7d7876abe44fb5933731ecb0f7904832bda1310dd46fa440f7453ef2be753e73547
c2a307735e58433eb98e98ceaefe6ebb1f53601c0362ac8dcfd544cd78cc68a65ab4fbdb20bd0d99
4d56ddfab8b8646758048d0813e266e55f3e467899b155f343d403f46763f8d28299af5a988e07c4
4fc9d4269759615858bf30ee993f3aa6b40b987a8aea6fa02979209dfcd8de6767a0aadb65006bce
6afcfd8cd3e8600e0ca662d093e6c1b5b21da0c696640f1929693b3de1fd9d8dd8e52463daaea936
fd8a7beed3adabe0fc92f33b013092a5286d4eed70f5d0fbf7a5e5dbbd646e3e281e37eac18d42b5
9679c41b700f1f8bb975ab38cceb639c98188cbf9781f79cf870359a86222097801679df5d68c218
963435d5996c59e724231df950dd12d9a51a0e6166d8bf25f324974f15ea5fb57fdfd1a54106b0ac
d09e53159c43bd9c5842e99fd536388e34212f554939f81178be143900044bd3dda10f84c977dc91
d5468b52d4310d8d0fffcc270bde510b953a279a1db294634c1f16dca2da5cb5a34f27227317f369
247d584b22f5f2f8860555ca8334303d63037b00f2d1c6cd97a18bbda13579c60fa27fb23b34b8e4
0bb1b12191dacce9ac254bb5a0cc295fe51ade43f12c7ef932840dfb6d3e8839330711270e93beb2
7b8caf40fd33583e2eba88e4398a7d5ad2ad029395e49bcd5c9a6d8fac33236117f228b252351f0f
4585052516a91865846cc38f23fe48dd44796b16a0fee61c82bad28f46d5afb6ff6d8b52c31c33fa
6ed03d2254b6bb8e8e73973fbf17befc7dab96319635cab675bc4e8ed72da4d4a119b3d76a0b0813
5084c505d4380eff3b9dfb2d269bf05706b86a5552a0dfe7a276f52f70ea71e4fba1c5b55412ac15
6add154f6c6a97b1d14bbafb8a5ca6d823ad487013d06f4341622f2f8d105f6b3e4b219e66c605fe
2e6d7dab952ad002211b190c96abd7f260485ce140236c175a324d35a3266ba7e40e55f03df19ab6
cce652dcfb9d5e2542ed5b37dcdcf13b14de46963e87c6df6540d9e4b73e2b5fc66daf9bc0dbe598
091e6496cde6d3235beb99cd3953178d778b19beec563c6e5dc6e90d9d18baf9f1cad66cf4ae40a1
f9e2ed8c1bac6336eccecbaff525745a077882483cfbd382a1e527bbbb38fb6c99740784f4fe9454
ff2328db0ad8a9146cf590af4d5d7fce9a18c52ad7dbaa46d21ec57b0cb3d47fb1e9a419653079bc
688bb1ac5f156139596a361a3416a9c119a99e65ddd7fa04e023fff3ec964d2f35d0cfb0f65736fe
093fefa07b2189999a142008b7fcf5f2f23c48ab29200e0ed44c377cbfce63650ed9697048dd2ecd
aa8a7bef86c356642121c7caa702c3cda174648e27618d8e31814dffaf599c009909ea8ab8f052f1
398185a3da17b58b90c0ff97dec49e55e50e9895d05936dcc5f7ee4d10eb912a02df47e7f5e90afe
40cc18822dd13ab19e5960c9f5cfeab4e90c54741da2b1c2741375676416a6b6a4dfdc8c21a269ba
38a2de240d96ed870f1c1f3f005efd3c32569c1320a287b85008e29641e62c41dcc9bb0be48742d9
2ef83360e07ae7cc3d91c6129509b497b307723b055372bed38c3a9a868c4f867e1b95c3825d4f8b
b29bc3d92184a491afc2fe7c2ab10a65ed3c9c0cc9822ea56c94b59b3e9b6e1dc8ecc6493dec3221
cfb1faddf534c3d71a1932d198f486c90e2520429a21cfd4e4e2aad89f0282d898115a8632470ed0
87b6d043afab06c6f05136d7760a05f658c06374afd5de56f44475e684e6ecf33be7872ee9d800b3
9bad6ea75f0a843273acbe7a425b62d2440f19c4e82992a6925ad1a92003727ba435cc48038ea591
5fd8fdcf277792939ddcf6b18f244d534eda1ae9a3212591d156570e87145b61c6cdf3e9d8c16fb9
135e9bec915dcfbd8a7f3968b5495a955c74691b396b070ff752431ead3596816a10bf91d98fd0c3
77277850ef24b01fc59f163326a5af9420ca794a7fcd06d0b46a104184f38ebaa8dcee1b5dcc19b9
01684b854efe49ebee5fc90207eee5d4cd63953f4ac260d0716347272d32ba6e14b077469e3cfc1e
64e7476289b47728350e2d871c52770e093cde15c3a78f158ed20fe9be23668eaf4e4d17ee758fe9
be5b90d94b7628fd65dfdad4594fac9b8727508f57fc61783382e985da97c25a47bd83cb420b99d6
ec4b403ea53d9e8932480d852797b6a5d1ecb6df4d6a2d735a6e752d56df7ea054de1fd4f7ec00fc
9ae8bf7abd4bff7a9aba8f3a970d16d24deda962b0d771a6aa4d7f90ad6fd01b97acf2ac56786a63
0a871fc12bd40dc6eaf3f2d15976c1781f0005446981c4b11dbe8abbb2a4c2ae4c4f3dddcda192fc
e955af1494c61ba86185ffde9bd3c3c0e44f94a4f0f1a14a25fb7b3b9f2c261414a0a025f6d648b9
9a93a296ad2181f1079fab6add01650c20481ea3801ae8c84ce7b1609b5c6971d549714254394d63
56f9f23addfcbea3700f0d1496f36bdaefa698ceff4dcaa8362470c80739775a233c09dfb7cb490f
1538f07ef32be2ca8792f883c2bae4a02fdaabfec4da93c7920a68ee8b4bfacf8628fddad1566607
12193a6e893c9efc41169729bea02ede8d9bfe3bf897c546ff8895e44c57f5e17769bb250ef5bef1
37082a1f6aa0eb9586769e922539141aeebbf09d95f544647c995bd24904ee1f854aed1019fe3c08
ccbccf69f789b67c83e4be7ab35f8829df0afe862ffad7cab9cc3a2fe0e18763b326a983fc77b34f
b7068447904f7afad525b80532131a2d3414642769c067d5779f4cdc6d8483544de68ce992eaf72d
b6d3debc9dcfca6838c2a88469581e5ee9b68642f015926e8e4e1d460c8659f27a02d448febf6539
b18492888c4d202c824d5d22aac15cfc232b9ddc3e164d30330bfa6f98f1e03bcf80f7c8e83c43ad
630505e46dcb20f8fffdc7b9669526f9c0f651a346947959acab512e5c00bbc3a874dace8b240e77
e70d44f8af2efc404726ef624b2c1af90eddd7f6eb63d5a073c5b5b0c1d2adf94425bf43337ad7ed
4e9cda04ccb36f59e1fe304ba4f54829bc403079227ffbf45e267fea631ae56de928d6a8fe672429
4762a36e5a7ed8142ca46d7320f2a3a64ff63fb78fdb208acfa705a46d5cbd575b4c3bddc0fff667
4da79403150d2f424a4a858188d504e8a8f0b031f00ccc3dd17376e561d26fcc81fb655cbb5b3e53
fc11e628649ee588606ea59b5b6c9415bbe635e80ceeed1e76e39cdd90151d4364c46f86d5a7244a
7d10e9243b86298404bfcf9249f2e32c47f1e2e9f30dc8193467f8f0ba9d2195d85c307b5779d437
0428139d451a33a68479e96b1a0742c1f946ad341c2d80ee8e3860baf0df240ace8ffd3a818e1a90
89ec93a419434528234f8ea4755fac1143f631112c9c30534d2eace8f7d0e52b4c639d42578aaffb
9ed7b954b8f01cf92ca2b7909c2e087cf67c624a53e3b9bac6a67ee2859238b796c4da1d5f47ba0c
722bc480ce59755440571d70efa142c4fdb5dd301082a627f6f510ac843d48296e175948dfad8013
c28fca9e3addd12beb2ef38d8dd5c099f6899d0f39d687b451687712f40d1000b5c61b20ed1328f7
7376fd14bd793837abad67af3aa6251dd29f881d97722c366c8b3e92296ca6f7171093326db1e77a
5de4746b72e99d709317b50b83a7cd1c6072bd2f21858b283592836595ec6c29864918650a647021
bdd18e4647017c332c483b0bc60ef661a63d38db710ab8957b062e8db5f371c6b0313d53d4d1f34d
e7a773e5b0d7d2914db59de5e3006cba6918027621173b4cd79796091c77ffb3fa8fee611acad528
b20e99739e2d7d5c008f88ee611e61163149695b6f43b2433065e25907129d9beb98aeae4f327fe3
630b9fa00a189f85446955238c3129e3aa74fbc7041b8499db3ec13064c02bff5d347ac3d46e0d82
51e1ef45a175c6f75a3d640e1a996c6c9e84b2363ccb7b5ae381b5223355602f80e4f4a559ec6d2e
7933f6adfabecc96f1eec96506b2dc6d29a81728c190be79ca3f6614c18932cb34023413ebf38ab2
6adf167ed2a25d7aa301428887cb8feadc822d15d71951c196107a8a79bb86cf9c42f54e4f3108fa
b2003aae4312a7e8b4928ae82e6bff8ec72bde91da1e1683694d828dd62d5470a2530d8f163e1865
a79f93593a47ac464e863cafcedd3b1df16a0656499287dcdee1dba2967a0d1fa83b621e28a6e071
aedcbbb75fcbd23c59135cc3034a84f867ae23a7b4d82a5792b4eb76bf7753489d71b483619c2865
a00ae7958f7a21a0febd6762cbcbdb5914514d556d39f5d20fc39928bf0b213d0e49028f2ba4c6b6
cbf3a8f444d348b5ff7c367fd1a4647dde8b80bdef7262527258c0e86be7bca3763a93ab30bc7222
f7533568e3fb9f6f9063fd877ecb89d51b4708ae92ff10af0ae595c93d694300327651c46442fa09
b7ba358cdd042e5bff807f6187a0e22f7b4cadab0d504b4a989f05b6ef676f9121e8a11d5e5c3daf
4d1e1445d4149a6aa6db31d83f574418c111e28372cebf8cc0db3ed2feec3855588a14e0132d5f99
02e92d3d3fdfc9a5b8b04903d67a831557fc99c57c3a92b402f8d92818f3732de2e5369f895b3084
88cc6eb5f298ff1cbd481e6fc7fcfd8e6bbfbba4f5c9c96c442bb8be3056d8ea5a97a4effb08f97e
d13e5ed61d1b716756d173ffeb34c99a014f9d6110f0ab027c5570f917e476ce7d8491b6943597bf
c1d3f6b5200e93137e04a6f4e12d09851445bae91662a5844c9963bf445e5bec2c4033d6b40cd86b
5bf2ab44eb07ad4ea3b2bb760ca48fada5f0473d63a6f31fbc4fb7f25da51d6ca540f73fe2d4db66
165ddf97fa56ca87de377851004087568053e8e88798d86891aa37d8a28bd2e98c5ba4cab498f557
bf8b1584b84b9523b3bcdba9dbd7c6c38cd492e22e1f71f8e7577ef0ea61b98bd887f26f5021def0
6913421fef8bdc3fe68bc0cc25317e3197bc661e84967acc470aabcb599a33414c87aceabfd845b0
46aa2bbaf00f5c85aa0c38c93bb7004f79c4ab9570dbc6ad0fdbae83c01cec8315ba2da66e8fcd51
ed9954e524e435b047bc7316e5d2f6301dcb4b254a7566780d331255fce5296c97525bc4379ef144
29e704ae9f5c84c9a042984153e82871bdb3463636fdb826f1c1328936af04fd599b775d0b90baec
bbf2ca7e5cf2c0e166c09b70e78ac59da544e79e9ff8985ba3c6368d03a2d08d7100659c1b39e9e6
d405b5d27133d313ea8273de584ccc0e0a6c778c51c792b0f32dea75569c8308300d14dad33fe9e7
42d045fbd3e5c30a59c3398d928b98284fd82c508b4d3680b026c8c1c6c13ce9ca4b6a760e0e2e20
067c9bb5a1ee92408c44f5b9ec33bb74454972523f750abf2f2a1cd94793d58fe3209279e3e07e7a
ad44c01234c98b13ad00a0cd9933958fb8c90abb2de6192ffee70f726f151672ee7d1302169c950d
a3f6837286751b009ce819d4d5cf457656e17b9b1347b6ed68ae2ec0036749d8b9f0c689b218314e
91cf7ea1cdbffc51c79dfb518e452e9c99dfe6ace6a92052df0ba96b63169ea7bd33cda019f3f0eb
332bd2d936b348dca2897e1294a3b041f77e6f9721d37d750862b54dca6d88101f68a7696b7a9d13
83a99ab086eefb954ad24af7e5d41a2a9f31b3fc57342a5abafdbff509d7df018ae1da75f38bf0f7
21ae632d069b0dcc1f4409ade5b6205c0c568b7cc0bf4453a2a122c1d7c6f1790737fd9f25f08a7b
7149b99da44a2a63997c451c879c56842d736b1fe899c439366a17bac149350ee0c11e4697445206
d79536592a76ecfd6eb440d2912de47520f8cdaa259b9209f0ec9b099298f04c3f3cf0946cf5102f
50efd5e3d90cc7af61d9adcd7a1185e12f8a0fd757bd2c5e4299c815442b8ff4c1749dd9ecabced9
a77594c71e62fb00a68d97f68d5537a619375d0190bf95987f1a505000af05dcc5ad75bdad0953de
8038c4511a04e6c7e86386fc358be14fb84a95333616ed90673fccbc6fde9b45ef121a05ee0d42e4
904135e5a9ea964d9e495844cefba0cf9dc1edc6d541cbbafa619e05ed98e31f1cb70e718c66c005
efb51f0062354ffd4b6c046b5d0c7fe770cf9fc447aca62bb5a360c6c8bf2d0aca2835aab70e8492
82fc312c795abb11edc813cfa86a68dcc0534b850063d9ef73e264553061ab3fc9682fb5fb9458b0
2e5d8de59a90c704a26d093347a8ed76f9f2b44ff0c4d52a5fc0d2668a4b077c7f9c6c80455e0f63
44c7a0635cdfd60a5374301f1162474fe1ed250eb4bbd2d0826867b9c56acdf85dd4ebda24668549
12b43620801b298f65e8bfcd228852f9396b5a53084328ab51846400f5be5f7b48b3bd5a0b7d2019
ba2a79df79df6c263cfd95578a3a7a67b9c97707e54dd9fa03383d2b436ca87487dea778ad8a52e3
f3947cda3e81dea226a326521081912ffa3e8caa49f7657f6f177f3b8dcf7c60e84e824d3f6a2850
34615329a6c794a0393189dda6fa28557077c1f56b77fb5c9d2a79b18b9b68648e4077fe698c2893
fe5b5c0c982aef272cc6297574619535b2b096b2d34a565c69c0f7d7dc91d4fba6398d599cc0a737
b53981a01ac6b94cfc3ff37a84945ffdc2b355e4876593f7ee73ccca7031f831b9fc56b815cef208
018d6ba19bb84c3f913086ffb531bd36193d5bcafee31874fa26f4b4739b7f4cf9cd3f09baac8572
a73033a14ba6faf11e892883affa9c1a3f1ba8594b0560020a04f377f6185c3b8832c957e0e93191
a0967ceaabe2af8dbb274f5171ec38b969d16d143690f3054901db7aa8234be5b7dd590c8ff809f9
4e6d02a77375600700f3bbb4cc66e01e66db0d631a2dfe19e7675406b0743bb45adbebddf8fbe094
2d44c5870fff2f983eb569053a646ec0e5c90a0a221620810e80bb3d5125981b44701054f9599793
d864978ef67fe880d1ff77813802a77845d33aa9521cbbd036b310693863996103d739d6c5916645
f5690fe97b3b40cec5bd8a8d1429d49165220d906724b5bd6fa28d0cd76a3a3682a586eea0693a1b
5af203acb9a03835aa1c3702ed3087be70e2f7b08b8e552663e8f3f38dc9a5c2b67ae9aaefff2ae3
86621fcc47a54f6966d7a6472b7fadb75d66ea5edb734549ae8307adce3ce429f6e8763bf850305f
f347fadc84fe482880a56431b75555a331998e23a214c19e300166df5b4cc811f9fadfacb2d0ef55
830a4ae6635f59b0acaa3fba15701b337dd35138663ae5ac9aed1482ce0aa6be8ecebc19b7cb407a
0077a6816a4f7b86d66128263e90af18594aa3e00054efdde3a0c67f6a7a79bbfe731b948526643c
95ac5626772fa9c710bf3997af6344a61e4473fece27c13e9848482aa5cb652392b6bd1d50bedc25
8b51b0e57fb72c4fbfd2f3d5965aaf10add3029414f21e2b12c68a3a452d7930f42c2823cdd26e3a
5a58c42a83b6f092c46d6af29026e275fc50ca6100f013ae421995f162e16b1082f15891b3c4d7eb
2e8d7f89e8ba2680dd4572ab73d8bd190352c6af7766717fb7574bc0d6a59066fb99973b20789138
455bc6d2be0484be6784e87576f43a7f8d1951ebcbb2273a2b6117e77fffea340d6af9627894a73b
b8c22fcc02c4cdd3b6d907b2ff0d63e226dba4e1a8a9da53b97190e7732ea6a3bfd62be9a7cef2c1
bca33552c17c87a021ee34c9a608308c6f8432063bb8f6b7fe60fb4664ecda6b3fd022f3fb12209b
30739c7192618d5f5f4c20d174932291da26fc471158182c7c187618dd14fb194458219490bf48ad
59ca54417c72dc8aba73780d00bb8be01ba5bf982b9f8a5aff5b26ac35e5f9456849c2954c33f2fa
41fe0c80f043c130caa5922067bb3c89fb6b3e18cb01e25cc4d7ea91406d0b89e13ee31c23a1816a
396bd462ec919eafecc86e3f09eb86ceb7c0b90a001544aa8f8be95a17094ab2d284b64bd3444c84
f94ef10d81a0d690790a71a9f9090f873ce126420b668b2dfdbf803d44b90ef0c190771d188a768f
085818f151529b8f5ada49df0fc3eaef62ba42ec3f11ca8686ff010f16b0d6ba6932e1adff93f427
712261656c20345126841d5fadaba51e3e76e9d0eab21a710904af776c0cd6c705ddaa296ae4b125
269b368f07ec27f55642446525ac183c305809a8ddbd624c357b1bf6caa0c0c3ea2308494eeb2be5
1a17590ec4b7c6f5cdecc4e3e7032ce42934e7b1f2b286d135400a0be0c6f129212f248006039302
94ea0ef916a9cfff3651447e28220b2339a300875eb61a86f117b28544591dc998c0b8ef57c23621
75878fc2f1120674943d306223fb42f02a126c2cb8ca3275ff6231dfb3c43657d4823a9708353382
f76b46f4a1f0e806973d64fa5e329492d6c7695894a3a4c806c79227150930023c35e96b7e540be2
13d8195747818dd3254a4bd4cf64dd53c185aa2d8a43215146c9a9d76c6d75691453daf68e60d302
60234f3d686c119e50580155b6a6adbe2f58083cc502b49433e48e7cd472b0f0be754227c8035787
6446339cada8830175a79ec28cf8bf6fc8ee491a0be6d03c6c2fc22576171c254bb3fddbd4021247
c0fb0ae89be2f11d8b82575af1e07f20a4df72eff6963cad6693f51d76fd799272a15534b7c9f70a
64e626e8d38cd8dba513516eab49267fa211ec5a9f0eec5a1a4b7bf3fbbc416fc7df21929f38c958
a8320fdb8f629d8d060e1e8b65c82bbe624f066a5b2540a4078429d7da2ec3249a66fca621ac349b
7bf8cbd93298951916d328db7bde8a41db471f28e7b54190784deb8514c2eeabb71a43acacc0e1b9
fb31c825648d3e697b2a04e12b1171b494a3544b7409c7303e6db9f1fecd874145191d5b5dd83881
cfaa2a50f79e1d73cea31d758d556e1c2aa97a23228d8a3f04707e254c6940f10ead5aef968ffddb
36b278faee93501e54bf78414d4ff68b6efd3709eaa66f9e9743ea3cd796e218dc38cf6da477f1a4
8a5eda9c1110b384221eb77b7d4aa56a82d108c19b69c9897784cc8807bcb059c3945559256d6660
7d503a6337429d1b185f5d0cc2143906fc62382cb342d078ae3b4186652991756d9f8339aeb0cef6
f88c6ba6dc2e8de3e33f105716f75a772004c1ebc54762c1e4ac1e03976ef4281fc74ff90ca79470
742dd0d536693e763272ce7c1c617f2c5903126505675810ba17c4e1e4cf95f6ee8caf39539db548
4c54c2518bbc6e55c718b7660dfab66eb9eee807c3e576d98d3f0faca669cdde6f4b207d9c61f12d
82465297bee8ecfd008c787f3e3ad3f6cd11d2887cabb87c61d8e0d280042f871b36773a17ad3c2f
5b8eea43db4e12b351c076c8acd6c1459f22470c86039ca68e9a164a35d3e8d9cd07093260d2f7b3
86606a1878ab22188626518226039b3eaad1662f627d8006bd6887dd47a661066bebb9249038893f
509c87a84d617d6ff2a74a24d11561d1d599287f553e73bcff38f6bde135ca480313499915fc8d06
56dee1ad27e8ac5a4c73e9d2e4546654da1819a0de69a4151f453cf307702344be730c96ac101e39
6d2c7e462723ea67f6551cc50c49fe7b83877a2f343256b6b5aa6612ef1e0149a5471f68ff63bf0f
778f08253227573caa9c55b17a4bbb963dfcbe2d073e736e79d7d45f65c1672d7e30ae2cca4af1e9
b06413c630ab90ee791fd463548f6570638a635fa6a5f58f5364584a499c5dce4833f613c1ba697d
9904a981a011b2acac7039288c614cbae7aff5aa854fe46c4bd46f55095338c0189a2fe350f963d7
a8f6b9360384693582f4504bae209bd6f7536be1eb27c1f3f498ff62ca4d141f4e2306d059a6d59f
7e1d87553ccbdc2a50199a0cb70e1204bab26c472386f6500969533f4c85ec495efda247df39738a
0de17c49a3693dd90e609111c2f7b1d2c85cf728d26fd4939c7e496a79a43e2b559ee846f3a54cad
4c787f38aa7df01c736fd68ed95fbc6dafafcae3255feb14d730db572f97fa5574c0b0fa03a48dc5
3e826dd979f7d706ccfe731b37dd63bfce86902a7a7839b93f0ed1f93565deb73272edb61ec4c03d
74c688a0f9f243f3420043cf612e6fa58e074e1b668382c9e3b7465bebf3015d33c88185dc2e984c
7d86766abe3a5c322182c157a51bb82fe9af2d4b0f8d9694cca6deb1f439f75c4407ebd7144a5d8b
c5299175e0db12b6c4973c3bead51c2d1f88f16630ec316c0f80b90f772ae7a548c7817a61366d9f
a5f2bdda214e979295f8e80fc1bfba30710f18a246409f1e1a5c55fad47ec03cb08cd964c89a2ef5
df361840f4b614509e68297234a84e84bc8dfbfe1c473f7f4f8bb732cc242cf811b1dc28dae22e14
655dbc911aaf3d0ff67a3426efe9f46f3543986e7343837a507d007b05c8b2412b59503b0d667937
2791aba572176b43486f6f917d42f5db00e551db8e79452a3ab6d6c62f5a6e927311f7b2abee8573
5f2764caadbfe1bc7134bd9dcf5939be7aa73f43a0028bf5d6436739ad0328c93289ec08c4fc3795
1adc55d455b2833360237d115332c2381b9a10c341f303343c5933a61368927312a40b7b7f03ca54
31c97f55d4189095bd06f5f70edf160f48432a05ba1be3a5814557397b6f0f0cb95c3e76e92a3837
dda7f7c709224329bc760acbab57a4d1eccb1ea14fda98d8ac1dae3a100fb3839007ece6706d2b77
32778c0d0f278b286598042902303f77d9ea74022c0e6c14eaf3b20339cc26db3577c643a03435ce
37327f05d66d3ad81cf2d6bed276197c2d27e9f4c38060f29638ed3672770cd0cbb274d13e6d0b17
d924779419a54269762a151dbe090031d9dbdff9a37b34709e6df8f7b1975b0534595dde50433c40
0fcbf170fd9a12406d16feb49788ddac000a0db4e5ee9c2e8565a681ab9173cfbdf3bb94f25aa6f1
4d5fc9369d69def9b1e0396a2f126f2a766a5160cf7c2676088e461fac302bd4356bb465ed0388b9
e3c1e3523542ae09330e4918e9055aed598dfbaffa766d62b49dea09bf2633a92833d93813f0e626
5f3c35dbed91d8c71f4fa392ee7ad09e46bd119ca4a4955861e4df3177cebe6ff6a68bc501d718d8
79f99742275df914f3c132e9be4ee2e65c6401ae9b718ed8c868bc31672662e822db3f348e54ecca
4724af5978ff72891148b99f5d31f8902bad7987f1b7adedf33e220d5c019af2ae2ccd901f0e3c7f
483bc38f4e28f36681f634b0e79c75916fdfe7cbc000841ce34a25d755f3adbc03be3d23ef98bbf7
798923c9d876b7bdb3f4c30392632ef14f948093a69394e0ece8e06b858c5d6bbd53848c1a2cf84b
77e8e8f796cf7526ba26b6353821766315adc2dae7871911222cc33d0e4ff287b2d8e424af0aead5
d26f191d4bbab1dc8cdce56c4e8629713f9c6181b620819a91f75ad5ab681b988b03252c84e66920
dd5ab890956c3ca0c4e3b12d204b8a83207e550282d3b6d06287a4ea1468a17a248c3794012eff1c
d49cdb9ef38231061868444266f43ab3f3fc8414a09294a011c7d09cbc9b8559bd4724c339f91736
85690bbaf92ba7e11309cc3f
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 SSC_Copy_State <Virtual>  0
 HBW_Pick TASK  0 -1
 HBW_Copy_State <Virtual>  0
 PID_10 PID  0
 PID_11 PID  0
 hunt_exp_light PROGRAM  0 -1
 HBW_Home <Virtual>  0
 HBW_Pick_Sto <Virtual>  0
 test TASK  0 -1
 HBW_Pickup_ST PROGRAM  0 -1
 HWB_Extend_Arm <Virtual>  0
 HBW_Retract_Arm <Virtual>  0
 HWB_PickUp TASK  0 -1
 HBW_HTO1POS <Virtual>  0
 HBW_Left_1Block <Virtual>  0
 HBW_HomeTo2_Col <Virtual>  0
 HWB_HomeTo3_Col <Virtual>  0
 HWB_HomeTo2_Row <Virtual>  0
 HWB_HomeTo3_Row <Virtual>  0
 HWB_HomeTo1_Col <Virtual>  0
 HBW_move_left_1 <Virtual>  0
 HWB_Home_to_11 <Virtual>  0
 HWB_11_DropOff <Virtual>  0
 HBW_Pickup <Virtual>  0
 HBW_PickUp_R1 <Virtual>  0
 HBW_Send_VGR <Virtual>  0
 HBW_PickUp_VGR <Virtual>  0
 HBW_Return_VGR <Virtual>  0
 HBW_MotorsOff <Virtual>  0
 HBW_ConvTo11 <Virtual>  0
 HBW_Return_Top <Virtual>  0
 HBW_MV_11_12 <Virtual>  0
 HBW_Conv_12 <Virtual>  0
 HBW_Conv_12_Lat <Virtual>  0
 HBW_RETRACT_13 <Virtual>  0
 HBW_Retract_23 <Virtual>  0
 HBW_Conv13_Lat <Virtual>  0
 HBW_Conv_2Row <Virtual>  0
 HBW_PickUp_R2 <Virtual>  0
 HBW_Conv11_Lat <Virtual>  0
 HBW_Retract_12 <Virtual>  0
 HBW_Shift_C1C2 <Virtual>  0
 HBW_Move_R1_R2 <Virtual>  0
#END

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"VGR Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC410 C410 1 0x0 MC409 C409 1 0x0 MC412 Y28 1 0x0 MC412 MC450 1 0x0 MC411 C411 1 0x0 MC408 C408 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC413 Y29 1 0x0 MC413 MC451 1 0x0 X27 MI200 1"

// Rung VGR_Copy_State#2
// Offset 27
NOP

// Rung VGR_Copy_State#3
// Offset 28
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC800 Y41 1 0x0 Y41 MI801 1 0x0 MC802 Y43 1 0x0 Y43 MI803 1 0x0 MC804 C804 1 0x0 MC805 C805 1 0x0 MC806 Y44 1 0x0 MC807 Y20 1 0x0 MC808 C811 1 0x0 MC809 C809 1 0x0 MC810 C810 1 0x0 MC812 C812 1 0x0 MC813 C813 1 0x0 MC814 C814 1 0x0 MC816 Y45 1 0x0 MC817 Y46 1 0x0 MC818 Y21 1"

// Rung MPO_Copy_State#2
// Offset 39
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC800 C1600 1 0x0 MC801 C1601 1 0x0 MC802 C1602 1 0x0 MC803 C1603 1 0x0 MC804 C1604 1 0x0 Y31 MI800 1 0x0 MC850 C1605 1"

// Rung SLD_Copy_State#2
// Offset 19
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"SSC Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC606 C1200 1 0x0 MC607 C1201 1 0x0 MC608 C1202 1 0x0 MC609 C1203 1 0x0 MC615 C1215 1 0x0 MC616 C1216 1 0x0 MC617 C1217 1 0x0 MC618 C1218 1 0x0 MC619 C1219 1 0x0 MC620 C1220 1"

// Rung SSC_Copy_State#2
// Offset 25
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block HBW_Home
$LGCMOD HBW_Home

// Rung HBW_Home#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Home#2
// Offset 8
STRN C215
ANDN X0
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 60 60
OUT Y51

// Rung HBW_Home#3
// Offset 26
STRN C215
ANDN X3
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5

// Rung HBW_Home#4
// Offset 43
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y76

// Rung HBW_Home#5
// Offset 64
NOP

// Rung HBW_Home#6
// Offset 65
RET

// End of Code Block HBW_Home
$LGCEND HBW_Home

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 Y40 1 0x0 Y80 MHR102 1 0x0 MC101 C205 1 0x0 MC102 C206 1 0x0 MC103 C207 1 0x0 MC104 C208 1 0x0 MC105 C209 1 0x0 MC106 C210 1 0x0 MC107 C211 1 0x0 MC108 C212 1 0x0 MC109 C213 1 0x0 MC110 C214 1 0x0 MC111 C215 1 0x0 MC112 C216 1 0x0 X2 MI101 1 0x0 X10 MI102 1 0x0 X11 MI103 1 0x0 X3 MI104 1 0x0 X0 MI105 1 0x0 X6 MI106 1 0x0 X7 MI107 1 0x0 X8 MI108 1 0x0 X9 MI109 1 0x0 $HBW_Encoder_X.Acc MHR1 1 0x0 $HBW_Encoder_Z.Acc MHR2 1"

// Rung HBW_Copy_State#2
// Offset 55
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block HBW_HomeTo2_Col
$LGCMOD HBW_HomeTo2_Col

// Rung HBW_HomeTo2_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_HomeTo2_Col#2
// Offset 17
STRGE -2775 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_HomeTo2_Col#3
// Offset 22
NOP

// Rung HBW_HomeTo2_Col#4
// Offset 23
NOP

// Rung HBW_HomeTo2_Col#5
// Offset 24
NOP

// Rung HBW_HomeTo2_Col#6
// Offset 25
RET

// End of Code Block HBW_HomeTo2_Col
$LGCEND HBW_HomeTo2_Col

// Beginning of Code Block HWB_HomeTo1_Col
$LGCMOD HWB_HomeTo1_Col

// Rung HWB_HomeTo1_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HWB_HomeTo1_Col#2
// Offset 17
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_HomeTo1_Col#3
// Offset 22
NOP

// Rung HWB_HomeTo1_Col#4
// Offset 23
NOP

// Rung HWB_HomeTo1_Col#5
// Offset 24
RET

// End of Code Block HWB_HomeTo1_Col
$LGCEND HWB_HomeTo1_Col

// Beginning of Code Block HWB_Home_to_11
$LGCMOD HWB_Home_to_11

// Rung HWB_Home_to_11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HWB_Home_to_11#2
// Offset 22
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_Home_to_11#3
// Offset 27
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HWB_Home_to_11#4
// Offset 49
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_Home_to_11#5
// Offset 54
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HWB_Home_to_11#6
// Offset 73
NOP

// Rung HWB_Home_to_11#7
// Offset 74
NOP

// Rung HWB_Home_to_11#8
// Offset 75
RET

// End of Code Block HWB_Home_to_11
$LGCEND HWB_Home_to_11

// Beginning of Code Block HWB_11_DropOff
$LGCMOD HWB_11_DropOff

// Rung HWB_11_DropOff#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HWB_11_DropOff#2
// Offset 8
STRGE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_11_DropOff#3
// Offset 13
STRN C215
ANDN C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51

// Rung HWB_11_DropOff#4
// Offset 31
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y4
AND ST2
OUT Y5

// Rung HWB_11_DropOff#5
// Offset 51
STRGE 2850 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_11_DropOff#6
// Offset 56
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 60 60
OUT Y7

// Rung HWB_11_DropOff#7
// Offset 73
RET

// End of Code Block HWB_11_DropOff
$LGCEND HWB_11_DropOff

// Beginning of Code Block HBW_PickUp_R1
$LGCMOD HBW_PickUp_R1

// Rung HBW_PickUp_R1#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R1#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R1#3
// Offset 41
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R1#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R1#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_PickUp_R1#6
// Offset 69
NOP

// Rung HBW_PickUp_R1#7
// Offset 70
NOP

// Rung HBW_PickUp_R1#8
// Offset 71
NOP

// Rung HBW_PickUp_R1#9
// Offset 72
NOP

// Rung HBW_PickUp_R1#10
// Offset 73
RET

// End of Code Block HBW_PickUp_R1
$LGCEND HBW_PickUp_R1

// Beginning of Code Block HBW_Send_VGR
$LGCMOD HBW_Send_VGR

// Rung HBW_Send_VGR#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Send_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_Send_VGR#3
// Offset 37
STRN C215
AND X2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y48
AND ST2
OUT Y49

// Rung HBW_Send_VGR#4
// Offset 56
NOP

// Rung HBW_Send_VGR#5
// Offset 57
NOP

// Rung HBW_Send_VGR#6
// Offset 58
RET

// End of Code Block HBW_Send_VGR
$LGCEND HBW_Send_VGR

// Beginning of Code Block HBW_PickUp_VGR
$LGCMOD HBW_PickUp_VGR

// Rung HBW_PickUp_VGR#1
// Offset 0
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_PickUp_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_PickUp_VGR#3
// Offset 37
STRN C215
AND X11
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_PickUp_VGR#4
// Offset 56
NOP

// Rung HBW_PickUp_VGR#5
// Offset 57
NOP

// Rung HBW_PickUp_VGR#6
// Offset 58
RET

// End of Code Block HBW_PickUp_VGR
$LGCEND HBW_PickUp_VGR

// Beginning of Code Block HBW_Return_VGR
$LGCMOD HBW_Return_VGR

// Rung HBW_Return_VGR#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C253
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y6

// Rung HBW_Return_VGR#2
// Offset 22
STRN C215
AND X1
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_Return_VGR#3
// Offset 41
STRN C215
AND C251
DUPBOOL
ANDN X1
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_Return_VGR#4
// Offset 63
STRLE 2575 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_VGR#5
// Offset 68
NOP

// Rung HBW_Return_VGR#6
// Offset 69
NOP

// Rung HBW_Return_VGR#7
// Offset 70
RET

// End of Code Block HBW_Return_VGR
$LGCEND HBW_Return_VGR

// Beginning of Code Block HBW_MotorsOff
$LGCMOD HBW_MotorsOff

// Rung HBW_MotorsOff#1
// Offset 0
STRN C215
ANDN ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_MotorsOff#2
// Offset 18
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_MotorsOff#3
// Offset 36
STRN C215
AND ST2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
OUT Y48

// Rung HBW_MotorsOff#4
// Offset 54
NOP

// Rung HBW_MotorsOff#5
// Offset 55
NOP

// Rung HBW_MotorsOff#6
// Offset 56
NOP

// Rung HBW_MotorsOff#7
// Offset 57
RET

// End of Code Block HBW_MotorsOff
$LGCEND HBW_MotorsOff

// Beginning of Code Block HBW_ConvTo11
$LGCMOD HBW_ConvTo11

// Rung HBW_ConvTo11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_ConvTo11#2
// Offset 22
NOP

// Rung HBW_ConvTo11#3
// Offset 23
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_ConvTo11#4
// Offset 28
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_ConvTo11#5
// Offset 50
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_ConvTo11#6
// Offset 55
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_ConvTo11#7
// Offset 74
NOP

// Rung HBW_ConvTo11#8
// Offset 75
NOP

// Rung HBW_ConvTo11#9
// Offset 76
RET

// End of Code Block HBW_ConvTo11
$LGCEND HBW_ConvTo11

// Beginning of Code Block HBW_Return_Top
$LGCMOD HBW_Return_Top

// Rung HBW_Return_Top#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Return_Top#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HBW_Return_Top#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_Top#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_Return_Top#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return_Top#6
// Offset 69
NOP

// Rung HBW_Return_Top#7
// Offset 70
NOP

// Rung HBW_Return_Top#8
// Offset 71
RET

// End of Code Block HBW_Return_Top
$LGCEND HBW_Return_Top

// Beginning of Code Block HBW_MV_11_12
$LGCMOD HBW_MV_11_12

// Rung HBW_MV_11_12#1
// Offset 0
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_MV_11_12#2
// Offset 21
NOP

// Rung HBW_MV_11_12#3
// Offset 22
NOP

// Rung HBW_MV_11_12#4
// Offset 23
NOP

// Rung HBW_MV_11_12#5
// Offset 24
RET

// End of Code Block HBW_MV_11_12
$LGCEND HBW_MV_11_12

// Beginning of Code Block HBW_Conv_12
$LGCMOD HBW_Conv_12

// Rung HBW_Conv_12#1
// Offset 0
NOP

// Rung HBW_Conv_12#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_12#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Conv_12#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 80
OUT C251

// Rung HBW_Conv_12#5
// Offset 45
NOP

// Rung HBW_Conv_12#6
// Offset 46
RET

// End of Code Block HBW_Conv_12
$LGCEND HBW_Conv_12

// Beginning of Code Block HBW_Conv_12_Lat
$LGCMOD HBW_Conv_12_Lat

// Rung HBW_Conv_12_Lat#1
// Offset 0
NOP

// Rung HBW_Conv_12_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv_12_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv_12_Lat#4
// Offset 42
STRGE 5325 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv_12_Lat#5
// Offset 47
NOP

// Rung HBW_Conv_12_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv_12_Lat
$LGCEND HBW_Conv_12_Lat

// Beginning of Code Block HBW_RETRACT_13
$LGCMOD HBW_RETRACT_13

// Rung HBW_RETRACT_13#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_RETRACT_13#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_RETRACT_13#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_RETRACT_13#4
// Offset 46
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_RETRACT_13#5
// Offset 68
STRGE 7685 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_RETRACT_13#6
// Offset 73
RET

// End of Code Block HBW_RETRACT_13
$LGCEND HBW_RETRACT_13

// Beginning of Code Block HBW_Retract_23
$LGCMOD HBW_Retract_23

// Rung HBW_Retract_23#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_23#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_23#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_23#4
// Offset 46
STRN C215
AND ST2
OUT Y51
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_Retract_23#5
// Offset 65
STRGE 7685 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_23#6
// Offset 70
RET

// End of Code Block HBW_Retract_23
$LGCEND HBW_Retract_23

// Beginning of Code Block HBW_Conv13_Lat
$LGCMOD HBW_Conv13_Lat

// Rung HBW_Conv13_Lat#1
// Offset 0
NOP

// Rung HBW_Conv13_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv13_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv13_Lat#4
// Offset 42
STRGE 7685 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv13_Lat#5
// Offset 47
NOP

// Rung HBW_Conv13_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv13_Lat
$LGCEND HBW_Conv13_Lat

// Beginning of Code Block HBW_Conv_2Row
$LGCMOD HBW_Conv_2Row

// Rung HBW_Conv_2Row#1
// Offset 0
NOP

// Rung HBW_Conv_2Row#2
// Offset 1
NOP

// Rung HBW_Conv_2Row#3
// Offset 2
NOP

// Rung HBW_Conv_2Row#4
// Offset 3
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_2Row#5
// Offset 22
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Conv_2Row#6
// Offset 42
STRGE $HBW_Encoder_Z.Acc 1380
OUT C251

// Rung HBW_Conv_2Row#7
// Offset 47
NOP

// Rung HBW_Conv_2Row#8
// Offset 48
RET

// End of Code Block HBW_Conv_2Row
$LGCEND HBW_Conv_2Row

// Beginning of Code Block HBW_PickUp_R2
$LGCMOD HBW_PickUp_R2

// Rung HBW_PickUp_R2#1
// Offset 0
NOP

// Rung HBW_PickUp_R2#2
// Offset 1
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R2#3
// Offset 20
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R2#4
// Offset 38
NOP

// Rung HBW_PickUp_R2#5
// Offset 39
NOP

// Rung HBW_PickUp_R2#6
// Offset 40
NOP

// Rung HBW_PickUp_R2#7
// Offset 41
NOP

// Rung HBW_PickUp_R2#8
// Offset 42
RET

// End of Code Block HBW_PickUp_R2
$LGCEND HBW_PickUp_R2

// Beginning of Code Block HBW_Conv11_Lat
$LGCMOD HBW_Conv11_Lat

// Rung HBW_Conv11_Lat#1
// Offset 0
NOP

// Rung HBW_Conv11_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv11_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv11_Lat#4
// Offset 42
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv11_Lat#5
// Offset 47
NOP

// Rung HBW_Conv11_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv11_Lat
$LGCEND HBW_Conv11_Lat

// Beginning of Code Block HBW_Retract_12
$LGCMOD HBW_Retract_12

// Rung HBW_Retract_12#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_12#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_12#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_12#4
// Offset 46
RET

// End of Code Block HBW_Retract_12
$LGCEND HBW_Retract_12

// Beginning of Code Block HBW_Shift_C1C2
$LGCMOD HBW_Shift_C1C2

// Rung HBW_Shift_C1C2#1
// Offset 0
STRGE 5320 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Shift_C1C2#2
// Offset 5
NOP

// Rung HBW_Shift_C1C2#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Shift_C1C2#4
// Offset 25
NOP

// Rung HBW_Shift_C1C2#5
// Offset 26
STRN C215
AND ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_Shift_C1C2#6
// Offset 44
NOP

// Rung HBW_Shift_C1C2#7
// Offset 45
RET

// Rung HBW_Shift_C1C2#8
// Offset 46
NOP

// End of Code Block HBW_Shift_C1C2
$LGCEND HBW_Shift_C1C2

// Beginning of Code Block HBW_Move_R1_R2
$LGCMOD HBW_Move_R1_R2

// Rung HBW_Move_R1_R2#1
// Offset 0
STRGE 1700 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Move_R1_R2#2
// Offset 5
NOP

// Rung HBW_Move_R1_R2#3
// Offset 6
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Move_R1_R2#4
// Offset 25
NOP

// Rung HBW_Move_R1_R2#5
// Offset 26
NOP

// Rung HBW_Move_R1_R2#6
// Offset 27
RET

// End of Code Block HBW_Move_R1_R2
$LGCEND HBW_Move_R1_R2

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#2
// Offset 3
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#3
// Offset 6
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#4
// Offset 9
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#5
// Offset 12
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// Rung $Main#6
// Offset 15
#BEGIN FMT_COMMENT 
"Hunter Demo Light<br>"
#END

STR ST1
RUN hunt_exp_light

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
SG HBW_Program.S0

// Rung HBW_Program#2
// Offset 2
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#3
// Offset 10
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#4
// Offset 12
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#5
// Offset 14
STR ST1
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#6
// Offset 22
NOP

// Rung HBW_Program#7
// Offset 23
STR C213
JMP HBW_Program.S1

// Rung HBW_Program#8
// Offset 25
SG HBW_Program.S1

// Rung HBW_Program#9
// Offset 27
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#10
// Offset 35
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#11
// Offset 37
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#12
// Offset 39
STR ST1
MOVE 0 N1

// Rung HBW_Program#13
// Offset 42
STR ST1
DUPBOOL
STR C205
ANDN C206
STR C206
ANDN C205
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 500 60
POPBOOL
DUPBOOL
AND C205
OUT Y48
POPBOOL
AND C206
OUT Y49

// Rung HBW_Program#14
// Offset 71
STR ST1
DUPBOOL
STR C207
ANDN C208
STRN C207
AND C208
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
POPBOOL
DUPBOOL
AND C207
OUT Y50
POPBOOL
AND C208
OUT Y51

// Rung HBW_Program#15
// Offset 100
STR ST1
DUPBOOL
STR C209
ANDN C210
STRN C209
AND C210
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
POPBOOL
DUPBOOL
AND C209
OUT Y4
POPBOOL
AND C210
OUT Y5

// Rung HBW_Program#16
// Offset 129
STR ST1
DUPBOOL
STR C211
ANDN C212
STRN C211
AND C212
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
POPBOOL
DUPBOOL
AND C211
OUT Y6
POPBOOL
AND C212
OUT Y7

// Rung HBW_Program#17
// Offset 158
STR C213
JMP HBW_Program.S2

// Rung HBW_Program#18
// Offset 160
SG HBW_Program.S2

// Rung HBW_Program#19
// Offset 162
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#20
// Offset 170
STR X0
OUT $HBW_Encoder_X.ResetLevel

// Rung HBW_Program#21
// Offset 172
STR X3
OUT $HBW_Encoder_Z.ResetLevel

// Rung HBW_Program#22
// Offset 174
STR ST1
CALL HBW_Home 0x1 DST511 "3" "3"

// Rung HBW_Program#23
// Offset 182
STR X0
AND X11
AND X3
JMP HBW_Program.S3

// Rung HBW_Program#24
// Offset 186
STR C212
JMP HBW_Program.S3

// Rung HBW_Program#25
// Offset 188
NOP

// Rung HBW_Program#26
// Offset 189
SG HBW_Program.S3

// Rung HBW_Program#27
// Offset 191
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#28
// Offset 199
STR ST1
CALL HWB_Home_to_11 0x1 DST511 "3" "3"

// Rung HBW_Program#29
// Offset 207
STRN C250
ANDN C251
JMP HBW_Program.S4

// Rung HBW_Program#30
// Offset 210
SG HBW_Program.S4

// Rung HBW_Program#31
// Offset 212
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#32
// Offset 220
STR ST1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#33
// Offset 228
STR X10
ANDN C251
JMP HBW_Program.S5

// Rung HBW_Program#34
// Offset 231
SG HBW_Program.S5

// Rung HBW_Program#35
// Offset 233
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#36
// Offset 241
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#37
// Offset 249
STRN C251
AND C250
JMP HBW_Program.S6

// Rung HBW_Program#38
// Offset 252
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#39
// Offset 254
SG HBW_Program.S6

// Rung HBW_Program#40
// Offset 256
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#41
// Offset 264
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#42
// Offset 272
STRN X2
INC N1

// Rung HBW_Program#43
// Offset 274
STRN X2
JMP HBW_Program.S7

// Rung HBW_Program#44
// Offset 276
SG HBW_Program.S7

// Rung HBW_Program#45
// Offset 278
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#46
// Offset 286
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#47
// Offset 294
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#48
// Offset 303
SG HBW_Program.S8

// Rung HBW_Program#49
// Offset 305
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#50
// Offset 313
STR ST1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#51
// Offset 321
STRN C250
JMP HBW_Program.S9

// Rung HBW_Program#52
// Offset 323
SG HBW_Program.S9

// Rung HBW_Program#53
// Offset 325
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#54
// Offset 333
STR ST1
CALL HBW_Return_Top 0x1 DST511 "3" "3"

// Rung HBW_Program#55
// Offset 341
STR X10
ANDN C251
JMP HBW_Program.S10
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#56
// Offset 351
SG HBW_Program.S10

// Rung HBW_Program#57
// Offset 353
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#58
// Offset 361
STR ST1
CALL HBW_MV_11_12 0x1 DST511 "3" "3"

// Rung HBW_Program#59
// Offset 369
STRN C250
JMP HBW_Program.S11

// Rung HBW_Program#60
// Offset 371
SG HBW_Program.S11

// Rung HBW_Program#61
// Offset 373
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#62
// Offset 381
STRE N1 1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#63
// Offset 392
STRE N1 2
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#64
// Offset 403
STRE N1 3
CALL HBW_Move_R1_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#65
// Offset 414
STRE N1 3
ANDLE 1650 $HBW_Encoder_Z.Acc
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#66
// Offset 429
STR C215
JMP HBW_Program.S1

// Rung HBW_Program#67
// Offset 431
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#68
// Offset 434
SG HBW_Program.S12

// Rung HBW_Program#69
// Offset 436
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#70
// Offset 444
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#71
// Offset 452
STRN C251
AND C250
JMP HBW_Program.S13

// Rung HBW_Program#72
// Offset 455
SG HBW_Program.S13

// Rung HBW_Program#73
// Offset 457
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#74
// Offset 465
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#75
// Offset 473
STRN X2
INC N1

// Rung HBW_Program#76
// Offset 475
STRN X2
JMP HBW_Program.S14

// Rung HBW_Program#77
// Offset 477
SG HBW_Program.S14

// Rung HBW_Program#78
// Offset 479
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#79
// Offset 487
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#80
// Offset 495
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#81
// Offset 504
SG HBW_Program.S15

// Rung HBW_Program#82
// Offset 506
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#83
// Offset 514
STRE N1 1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#84
// Offset 525
STRE N1 2
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#85
// Offset 536
STRE N1 3
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#86
// Offset 547
STRE N1 4
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#87
// Offset 558
STRE N1 5
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#88
// Offset 569
STRE N1 6
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#89
// Offset 580
STRE N1 7
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#90
// Offset 591
STRE N1 8
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#91
// Offset 602
STRE N1 9
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#92
// Offset 613
NOP

// Rung HBW_Program#93
// Offset 614
STRN C251
JMP HBW_Program.S16
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#94
// Offset 623
SG HBW_Program.S16

// Rung HBW_Program#95
// Offset 625
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#96
// Offset 633
STRE N1 1
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#97
// Offset 644
STRE N1 2
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#98
// Offset 655
STRE N1 3
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#99
// Offset 666
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#100
// Offset 668
STRN C250
AND X10
JMP HBW_Program.S17

// Rung HBW_Program#101
// Offset 671
SG HBW_Program.S17

// Rung HBW_Program#102
// Offset 673
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#103
// Offset 681
STRE N1 1
CALL HBW_Retract_12 0x1 DST511 "3" "3"

// Rung HBW_Program#104
// Offset 692
STRE N1 2
CALL HBW_RETRACT_13 0x1 DST511 "3" "3"

// Rung HBW_Program#105
// Offset 703
STRE N1 3
CALL HBW_Retract_23 0x1 DST511 "3" "3"

// Rung HBW_Program#106
// Offset 714
NOP

// Rung HBW_Program#107
// Offset 715
STR X11
ANDN C251
ANDN C250
JMP HBW_Program.S11

// Rung HBW_Program#108
// Offset 719
STR X11
ANDE N1 1
JMP HBW_Program.S50

// Rung HBW_Program#109
// Offset 725
SG HBW_Program.S50

// Rung HBW_Program#110
// Offset 727
STR ST1
CALL HBW_Shift_C1C2 0x1 DST511 "3" "3"

// Rung HBW_Program#111
// Offset 735
STRN Y50
ANDN C250
JMP HBW_Program.S11

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#2
// Offset 8
STR ST1
DUPBOOL
STR C410
ANDN C409
STRN C410
AND C409
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
POPBOOL
DUPBOOL
AND C410
OUT Y27
POPBOOL
AND C409
OUT Y26

// Rung VGR_Program#3
// Offset 37
STR ST1
DUPBOOL
STR C408
ANDN C411
STRN C408
AND C411
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
POPBOOL
DUPBOOL
AND C408
OUT Y24
POPBOOL
AND C411
OUT Y25

// Rung VGR_Program#4
// Offset 66
STR ST1
DUPBOOL
STR C406
ANDN C407
STRN C406
AND C407
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
POPBOOL
DUPBOOL
AND C406
OUT Y23
POPBOOL
AND C407
OUT Y22

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STR C813
OUT Y18

// Rung MPO_Program#4
// Offset 12
STR C810
OUT Y17

// Rung MPO_Program#5
// Offset 14
STR C811
OUT Y52

// Rung MPO_Program#6
// Offset 16
STR ST1
DUPBOOL
STR C804
ANDN C805
STR C805
ANDN C804
ORSTR
ANDSTR
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 100
POPBOOL
DUPBOOL
AND C804
OUT Y53
POPBOOL
AND C805
OUT Y15

// Rung MPO_Program#7
// Offset 45
STR C814
OUT Y19

// Rung MPO_Program#8
// Offset 47
STR C809
JMP MPO_Program.S2

// Rung MPO_Program#9
// Offset 49
SG MPO_Program.S1

// Rung MPO_Program#10
// Offset 51
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#11
// Offset 59
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#12
// Offset 61
STRN X24
SET Y17

// Rung MPO_Program#13
// Offset 63
STR Y17
OUT Y20
ANDN X17
ONDTMR T0 1000 Y44

// Rung MPO_Program#14
// Offset 69
SG MPO_Program.S2

// Rung MPO_Program#15
// Offset 71
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#16
// Offset 79
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#17
// Offset 81
STRN X19
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y53

// Rung MPO_Program#18
// Offset 97
STR X19
JMP MPO_Program.S3

// Rung MPO_Program#19
// Offset 99
SG MPO_Program.S3

// Rung MPO_Program#20
// Offset 101
STR ST1
SET Y17

// Rung MPO_Program#21
// Offset 103
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#22
// Offset 111
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#23
// Offset 113
STR X19
SET Y19

// Rung MPO_Program#24
// Offset 115
STR X19
ONDTMR T100 2000 Y18

// Rung MPO_Program#25
// Offset 119
STR T100.DN
JMP MPO_Program.S4

// Rung MPO_Program#26
// Offset 121
SG MPO_Program.S4

// Rung MPO_Program#27
// Offset 123
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#28
// Offset 131
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#29
// Offset 133
STR X19
RST Y19

// Rung MPO_Program#30
// Offset 135
STRN X16
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y15

// Rung MPO_Program#31
// Offset 151
STR X16
JMP MPO_Program.S5

// Rung MPO_Program#32
// Offset 153
SG MPO_Program.S5

// Rung MPO_Program#33
// Offset 155
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#34
// Offset 163
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#35
// Offset 165
STR X16
SET Y19

// Rung MPO_Program#36
// Offset 167
STR Y19
ONDTMR T101 2000 C815

// Rung MPO_Program#37
// Offset 171
STR C815
RST Y18

// Rung MPO_Program#38
// Offset 173
STRN Y18
JMP MPO_Program.S6

// Rung MPO_Program#39
// Offset 175
SG MPO_Program.S6

// Rung MPO_Program#40
// Offset 177
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#41
// Offset 185
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#42
// Offset 187
STR X16
RST Y19

// Rung MPO_Program#43
// Offset 189
STRN Y19
ONDTMR T102 1000 C818

// Rung MPO_Program#44
// Offset 193
STR C818
JMP MPO_Program.S7

// Rung MPO_Program#45
// Offset 195
SG MPO_Program.S7

// Rung MPO_Program#46
// Offset 197
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#47
// Offset 205
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#48
// Offset 207
STRN X15
OUT Y45

// Rung MPO_Program#49
// Offset 209
STR X15
TMRDOWN T102 1000
OUT Y43

// Rung MPO_Program#50
// Offset 213
STR T102.Done
JMP MPO_Program.S8

// Rung MPO_Program#51
// Offset 215
SG MPO_Program.S8

// Rung MPO_Program#52
// Offset 217
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#53
// Offset 225
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#54
// Offset 227
STRN X13
OUT Y45

// Rung MPO_Program#55
// Offset 229
STR X13
TMRDOWN T103 1000
OUT Y21

// Rung MPO_Program#56
// Offset 233
STR T103.Done
JMP MPO_Program.S9

// Rung MPO_Program#57
// Offset 235
SG MPO_Program.S9

// Rung MPO_Program#58
// Offset 237
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#59
// Offset 245
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#60
// Offset 247
STR ST1
OUT Y47

// Rung MPO_Program#61
// Offset 249
STRN X12
ONDTMR T104 1000 Y46

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
SG SLD_Program.S0

// Rung SLD_Program#2
// Offset 2
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#3
// Offset 10
STR C1600
OUT Y30

// Rung SLD_Program#4
// Offset 12
STR C1601
OUT Y31

// Rung SLD_Program#5
// Offset 14
STR C1602
OUT Y32

// Rung SLD_Program#6
// Offset 16
STR C1603
OUT Y33

// Rung SLD_Program#7
// Offset 18
STR C1604
OUT Y34

// Rung SLD_Program#8
// Offset 20
STR C1605
JMP SLD_Program.S1

// Rung SLD_Program#9
// Offset 22
SG SLD_Program.S1

// Rung SLD_Program#10
// Offset 24
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#11
// Offset 32
STRN C1605
JMP SLD_Program.S0

// Rung SLD_Program#12
// Offset 34
STRN X35
OFFDTMR T200 1750 C1651

// Rung SLD_Program#13
// Offset 38
STR C1651
OUT Y30

// Rung SLD_Program#14
// Offset 40
STRGE T200.Acc 1750
FLASHER 500 500 Y899

// Rung SLD_Program#15
// Offset 48
SG SLD_Program.S2

// Rung SLD_Program#16
// Offset 50
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#17
// Offset 58
STRN C1605
JMP SLD_Program.S0

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STR C1200
OUT Y39

// Rung SSC_Program#4
// Offset 12
STR C1201
OUT Y40

// Rung SSC_Program#5
// Offset 14
STR C1202
OUT Y41

// Rung SSC_Program#6
// Offset 16
STR C1215
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y35

// Rung SSC_Program#7
// Offset 32
STR C1216
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y36

// Rung SSC_Program#8
// Offset 48
STR C1217
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#9
// Offset 64
STR C1218
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#10
// Offset 80
STR ST2
ANDPD X47
ANDPDPF
STR ST2
AND CT150.Done
CNT CT150 100

// Rung SSC_Program#11
// Offset 88
STR C1203
JMP SSC_Program.S1

// Rung SSC_Program#12
// Offset 90
SG SSC_Program.S1

// Rung SSC_Program#13
// Offset 92
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#14
// Offset 100
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#15
// Offset 102
STRN X41
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#16
// Offset 118
STRN X40
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y36

// Rung SSC_Program#17
// Offset 134
STR X40
AND X41
JMP SSC_Program.S2

// Rung SSC_Program#18
// Offset 137
SG SSC_Program.S2

// Rung SSC_Program#19
// Offset 139
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#20
// Offset 147
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#21
// Offset 149
STR X44
ANDPDPF
STR ST2
CNT CT150 300

// Rung SSC_Program#22
// Offset 154
STRN CT150.Done
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y35

// Rung SSC_Program#23
// Offset 170
STR X46
STR ST2
CNT CT151 1300

// Rung SSC_Program#24
// Offset 174
STRN CT151.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#25
// Offset 190
STR CT150.Done
AND CT151.Done
JMP SSC_Program.S3

// Rung SSC_Program#26
// Offset 193
SG SSC_Program.S3

// Rung SSC_Program#27
// Offset 195
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#28
// Offset 203
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#29
// Offset 205
STR X46
STR ST2
CNT CT152 300

// Rung SSC_Program#30
// Offset 209
STRN CT152.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// End of Code Block SSC_Program
$PGMEND SSC_Program

// Beginning of Code Block hunt_exp_light
$PRGRM hunt_exp_light

// Rung hunt_exp_light#1
// Offset 0
STR ST2
COPY 0x1 "4 0x0 MC402 Y39 1"

// End of Code Block hunt_exp_light
$PGMEND hunt_exp_light

// Beginning of Code Block HWB_PickUp
$TSK HWB_PickUp

// Rung HWB_PickUp#1
// Offset 0
NOP

// End of Code Block HWB_PickUp
$TSKEND HWB_PickUp

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"C1","copy","",""
"C11","C11_Interlock","","Used to delay logic by one scan"
"C12","C12_Interlock_2","","Used to delay logic by one scan"
"C20","HBW_Has_Pallet","","True when carrying a pallet"
"C51","X_Direction","","True: Left False: Right"
"C52","Z_Direction","","True: Down False: Up"
"C80","Conveyor_Timeout","","Bit high when Conveyor Timeout timer active"
"C90","HBW_XY_PID_EN","","Enables PID control in HBW_Move_XZ"
"C101","HBW_T1_Send","Modbus MC101","Task to deliver a pallet to conveyor"
"C102","HBW_T2_Receive","Modbus MC102","Task to pickup a pallet from conveyor"
"C103","HBW_T3_Reset","Modbus MC103","Reinitialize and home all axises"
"C104","HBW_T4_Manual","Modbus MC104","Switch to manual mode"
"C110","HBW_Move_X_L","Modbus MC110","Move Horizontal Axis towards bay"
"C111","HBW_Move_X_R","Modbus MC111","Move Horizontal Axis towards Conveyor"
"C112","HBW_Move_Y_In","Modbus MC112","Move Cantilever In"
"C113","HBW_Move_Y_Out","Modbus MC113","Move Cantilever Out"
"C114","HBW_Move_Z_Up","Modbus MC114","Move Vertical Axis Up"
"C115","HBW_Move_Z_Down","Modbus MC115","Move Vertical Axis Down"
"C116","HBW_Conveyor_In","Modbus MC116","Move Conveyor In"
"C117","HBW_Conveyor_Out","Modbus MC117","Move Conveyor Out"
"C130","HBW_Status_Ready","Modbus MC130","On when ready for a task"
"C133","HBW_Mov_Conveyor","Modbus MC133","Status Conveyor Moving"
"C134","HBW_Moving_X","Modbus MC134","Status GantryMovingX"
"C135","HBW_Moving_Y","Modbus MC135","Status GantryMovingY"
"C136","HBW_Moving_Z","Modbus MC136","Status GantryMovingZ"
"C138","HBW_Status_Y_Pos","Modbus MC138","Current Y position"
"C141","HBW_Target_Y_Pos","Modbus MC141","Target Y position"
"C150","HBW_MoveComplete","","HBW_Move_XZ completion interlock."
"C180","HBW_Fault","Modbus MC180","Status in Fault State"
"C182","Fault_X_Target","","Active when X target out of range"
"C183","Fault_Z_target","","Active when Z target out of range"
"C400","VGR_T0","",""
"C410","VGR_T1","",""
"C420","VGR_T2","",""
"C430","VGR_T3","",""
"C440","VGR_T4","",""
"C500","VGR_Man_Control","",""
"C799","VGR_RESET","",""
"V105","HBW_Task_X_slot","Modbus MHR105","Value for slot X coord"
"V106","HBW_Task_Y_slot","Modbus MHR106","Value for slot y coord"
"V118","HBW_PWM_Set_X","Modbus MHR118","Set Horizontal Axis PWM Duty Cycle %"
"V119","HBW_PWM_Set_Y","Modbus MHR119","Set Cantilever Axis PWM Duty Cycle %"
"V120","HBW_PWM_Set_Z","Modbus MHR120","Set Vertical Axis PWM Duty cycle %"
"V131","HBW_Cur_Progress","Modbus MHR131","0 to 100 percent job completion"
"V132","HBW_Cur_Stage","Modbus MHR132","Current stage number"
"V137","HBW_Status_X_Pos","Modbus MHR137","Current X encoder position"
"V139","HBW_Status_Z_Pos","Modbus MHR139","Current Z encoder position"
"V140","HBW_Target_X_Pos","Modbus MHR140","Target X encoder position"
"V142","HBW_Target_Z_Pos","Modbus MHR142","Target Z encoder position"
"V181","HBW_Fault_code","Modbus MHR181","Current Fault code"
"V801","VGR_Fault_Code","",""
"N810","VGR_Rot_Target","",""
"N811","VGR_X_Target","",""
"N812","VGR_Y_Target","",""
"D0","MC","",""
"D1","Feeder_Extend","",""
"D140","X_Start_Position","","Distance to target"
"D142","Y_Start_Position","","Distance to target"
"D143","HBW_PWM_Cur_X","","PWM value for X for XZ movement task"
"D144","HBW_PWM_Cur_Z","","PWM value for Z for XZ movement task"
"T3","T_HBW_S6","",""
"T4","T_Conveyor_Timer","","Used to detect conveyor faults"
"MPO_Program.S2","Vaccum_MO","",""
"MPO_Program.S3","Vaccum","",""
"MPO_Program.S4","Vacumm_MO","",""
"MPO_Program.S5","Vaccum_Load","",""
"US0","_CP_Strogram_A","","CP_State_Program"
"US1","_VGR_Movement","","VGR_Movement"
"US2","_SSC_Check_InOut","","SSC_Check_InOut"
"UB0","_VGR_MisScan_A","","VGR_Movement.Done ThisScan"
#END

