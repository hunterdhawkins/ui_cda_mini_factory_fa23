// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\brent\Desktop\factory\ui_cda_mini_factory_fa23\fa23_plc.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
940e16b7c7fe0c16c08c698f970dd4f9179c5940b5ac19917adcace290a1cfcb87c894c3113948f0
4edc92f3dc71f35eaa9416dd69cd3281040954d4f3f5f9a59d16065d24036884c4cdcc5333a55829
cc8e2e64f3c7a5fdedcfc9856c213165e881f687ee5b07d39c5c6528f05a7c5d67039f51de23dbf0
a73c154faa06850b0ddbede418a2c6f3783ca98cbdaf6477917d2f7e81cde4cb122f4d7e168cc7e7
92f728e213d6a505426eb2976c55eaf2c61a0cc4cb4ed1472cddf704de8a03adec82696286ab3f7b
ba90a5e12b4e466cd34c6ba1f8431879f65a7f3fd69d7adcf2a3e9b5bfba69b6b82d0ca530d2d1d4
17a299fee726589d1dc56764dfbf09fcefc554a36f795dc3238afff12a7a0a643fcb337d732325ed
cb0ebb2a909c71eb2f445906550c388c4983c08e456c62f5f7d6d285d4c57bbffcfe458e9006fb55
d5f18ea3f2d45451974213c032473eea925e1ae511e59e0978a979e27dea388403e9f0a6c2a3efaf
08f1b72cf3fa0c78377a3b4610e78945a808abb966e8142bef57527cd5c92c73d25e9b94a99c1858
3684056a8556349095d9be85c47b9c6c00b0a9ce00afa9681ecd49c575b8465d94c930e24b0da0ef
8eb8f9d8187d0dfb1bf3b8ba4981aba40a49083c9f1aa60b431214764a66d823b17fb2b0756f174f
431225c8acb1a7cde39d0a62d6c6a5167748148bc395f7df2b9ec493a477854bb1cbb3ce8fb67b26
3eaf013ee3bb12df9e38c8ba029527a8ae2ce78b939fd07808cf53ad06eff6eb1ed68a31322bf40c
09d3340ec58517cec5766de1a4766704177fe0a4fa6fdc5eccf63269867975484ec0b22bd54a2c8e
71e6f5b67cdf6623e04526aae0531666cdbaa1115cdbf9b33de32a7f3b53d18f9afeb9c344941c23
28cb7e18b7634a2b53ab34715543bf604e5a0d225f0ef7ef33213be2de1eaeb3a16a886204331b11
318ba18a45bbf29f6387e23e692171678b640436827dc0ce8b33c66c67c3dd9ed105c41a94d4b808
2ce2f6cc8ddfebd99b6e8a81719cfd2378a9dd796d61d68e2a1b9781d155551373b843b50e226b2f
3560a51f773c2319b2c294a54d03051702cf1cd3c1d57aa2c6621cbd6711aee09325d5b91368f218
41b8569ec92530184e2c49fa4912aaab3d787824b81094b2a8279506d270033a9603d9a2b032476a
3628e9f876169c2a9dbd95205a7ec3b14a6ed741f3b1967d8c00da4f21b82300fd458a50a3749bbf
790f7c57fa9b29868aebff6d1443627025bf8a67da1bc6a8877fc055f1c70b1f5e9aa7f1c2a0163e
b6ecd3acdb010331584d6461b09a29806ea35ab7c5d44913aac625234419c9e4e4065b3505e68f35
4b464b35d807d0597e571379dc833c99e9a042a2d20909ab061b03cc879fa6b6c88892ce7a05dfcb
29ce5d2d9722e1b0fb208e7aea95e18a4734aec6d97c608635fccc8a79bb264e060538b99cb4e884
ed9679b01a54ee4e39e588ce9a54e208255a50713be85afc3de7e050b7e4e5eafdda2af1847c4dd8
35c24060b686979006f0468b714ae3b25b5c7e577606d3d777e23f9fc871e7f78e7daf4709341829
51696cd68e9166930a1f08b3d8a10dae9bb4134f05a93504901eca39eb0db16c15d343ead6a512f8
58031ca6ffa205b89db344b2d7d7209deb8dcdef7bcf0d0d519538e375a4cb1786b853408087ac78
f5b43e452c5103280f3d441f782bf714dff20c118b8fca87bc22da37aea8d12cce33bcdff5502d8e
36d765c4592f6b2fb5f9147adcee213616a12e75dedfe590daa6fb5c4ffb70b436d58060caffc064
f2871370c3e2bc60814aed2cb946aae5a5d1fa55ad870a156c0fbc9d03c829e2458411ee1afde8c4
e40a1ac8f55a5c8c802cfc64446b70369750469302c8200a88126e148362bec3eed56cf26443f318
84b3e62edf84d6d3c2e3bbb2b377800d2980d892269d9cefd06c8a1afc77ea6fdc78a315113ae175
20ec9cb99758501aaf5dfe30f25e5cb555e0d8b7020805cb85c712a0dcdb704bafb61944dd770d78
7e2e38066aa817891c0399164482a7d9cd69c30f49e83567f5f06c9bde87deb6e4c1d06434ada19b
ffd064ae21d211ae6cd8eddc36adb981029e8bc328a0fef510507dc124ee34f8f0a7b9bf449afe0b
c25a7482946cb60e4f2e5ccc00fd6af1d9a7538109a054cf272d2f03b1408800349a5c6b84113987
ab3c3007ead0e1c7fdb0f6d5767b9316e0d95e99da0e9a5ea78fd5ee5e315025be648835f69d6295
10e725a904b13909986a3d78e14ba955f51fc1d11deda15a9f53b350837c0efc0f8372b365658cd3
390b9488b57119ae52e0768daa2d6e598efd388d3ea890d3e29156c97557573f40cea4d0c4eba9dd
f90e294eab63039cb4aff4c53a59ae3537804094826f3189e701a48866b28c92ae8abd1766edcd0a
5cda6fd100a058b240d62d27de5a4a23749647cab24ddc92e3488679f9e11abe0f0b7a5e6a5d66bb
8d684cee218398832e7d6a8e53853299b2cea78fbdd9b50239bcb0beb560d288d6c3b4b8d8c49d36
de9712e08b375660d982b0d0cffc34bcf86d2b78bed5e334d4a552b0911cdce4e4617e604eb33e52
12f27c8e4fb2028b30e31042b6708e02d2e8817a6032a919ce28cc293dc8730b5a8cfaa85d3127aa
35e61f6560a463d837d705997c8bbad403028e2f62c87eb0867060d52e6240d8798acabfdd96247f
3070921899dbc43410771a4b94d404e71466d2a56da3e9c835d41744f1e606a580d913b5eee5d7c3
08467d825fbfc5d1a45cce1479d3a3c30f974b4096615130643b923c9c52f042cef7c1d8ca5265bc
4ba2479a3d53a90a9ba5ee96ce2c9969f8d1428505c2c58a1d5e62cde0abb1a4c6736d1534f32c57
7961bd3fd8b35aa502a3a60967b0d879194608a86ff2bbeca7caf6ba086d518d5808576662b967bb
2e0b892f0cdc749d6c0379a9bcd31d45c7adbca00e376cc584b67a9498cd9009a4051af86b470106
d57822895431136ade7b3f1b8e68ae0312822360fd0ba64e46f7f7a1ea2e6c71cbf25db746db8f98
fb97dd5d8f4afd3f82e5cb17abd619655a01e8ef1d03ac313ac9c7da41142e5fab3ca23dc82e5dde
6eda76a21dd7f65ad31e096bb53a7408724d0d16f72d86d98696a7a0c18d47ec0e809ba164a4fdea
2bd10890eba063027c090e72910be7cf162d21d4331d535a086bd5f6787dcc703c9b1e510213dde9
5db1bb5d416d879f782ee56af72e40fb9d66ef8e547817bd56aa7eb1f7e2efcced9d41b29a538b09
feffa35c9bc1634af395570d8573668df218d55320d65194411a29d5efdefd68058cb53bf0d34da9
3f13752f7b0711bbd2d2258775948163302f509b59589a1cf9a1b92a831114e9bc2880728e16afb3
e912a2a1bb7fa42b3528cd755815210515afc619d164cb6f735f9c45a3d33e59e94b2161e41bd915
3b5339c46c75b04db36acc566a2cdacf24828b75889ee88f9d9eec53938414883fcb284ff79de92d
9f6e18cdb08da81cef5da4048013c651fb3c0dd57ed68919a52ef0de63f65612f0cbefb8a25affff
caf499a5276179747e5ce32da4d5d388dc9b7ff36b302c88cc6e514f73c72d9e4f4b05802a1a6bc0
c0e27272c686016d8c30483829eb80b233a9346f9e3f64b0372ba9e26577e8473f290bc2aff046e1
7d390f59345c32849ee7f5ec42943e35bd1faf8e9dc1a1abb47ca8c86daa9b43c10124e72ed6f37d
cb8a554753eaede603a29e93bab6879e30b4ce1bf5360a974f913297c40ebf29424a14cc08e5b550
414f3db11cc43bf2f5dc1deade92c75f42b886ee6768b62cdbf17be3509f3529da2cd4fab2e4f3a0
e7b1eec6f92a8a447e289511a196755c67f91d7a6f26f65542d9a336be1cac4d5e12eb4bcfbc6953
25b65a5e8191ef593c81fd856704d0f01956459fcf0a7d00342793c09fb768b88263590fb215d597
ec6fcf0ae5d51ef0c5dc72b812d5fbb3e57221c6a6acb33be99337f0c119ba1233f039c1a08e6bcd
384b9eb298ba5dc202608513d80e6aaa708044334ea232ad946127769b671a73ba4dd4729da2f730
4f4c85818f0016f5c2da7ab0c6a436becf42bf01a04ec23219fab33f499c2f5727363af16adb14be
a251a772fa58e8495bbfded4cb43972df3759d2c431ce59d43b73dfc377cfddfb731c342b2e83742
c66389d58e809882eb1329d240df847b24388d2c1f6863a8c54d715b7d1adec1c1f4756d955da40e
9f174104b629f70703db59e1b5454d9e1bfeb98cf1e865399ba72ef25b80b1e5e4b4dfb0ee6e2e8a
3953616dbe21c20ad4c75305a4383a3274361b06fb4aa49b3f32a8d331f57088a9e87cef6282ae0d
c74e667b080a1fc8330b23122d470dffdf5ba0b634d1bce1b71c1a62a07981fba5a12edbaa1f2723
b6641b190086e3cede61ce362052980befeb4686b0c92248651c33061abbad4c9b843e3be52d8638
511f0c661d5c46c8dc4a150c37143ee3304f4dd4503595241158f62196dcb7b47a09f874f428a491
a197155502034de9a817d2b74fd974281a8e5924e153400247163c1fd4dc122cc277adfb84dd635b
bd3d38a72771cd9835563dbe7ae073ce87b4f56778d78a051de8b3c4905c0d6ebc5e12f8f930e2e1
6874561a4c6c69094ccc78b0719c683d5927d8d2b5c1bd973510e8fd0e8b02c3b29271ff5f1f8e86
d0b80ff42e763e747652c2040d13dab8915c25bcb7ea6b037c8d96ddf4a46c41b032ac223746ee5d
91c17a55f53aeccf746539d88a5e7880a9696ef0b00c87b1d116eab87d944c492e1a25d8823ac888
e143e9aa41387bcf0cfb687cb1c4a6e4da005ae21e83de2e010adcb715739765cf17e1c18cd345a6
221387b811d7c2715ad305ed320ab1cd54b65a8c3c101070499f6adae97bff2466e6e564f2523706
e7372c9bfb73833b71065bfd9c0c995683f3e6a58d0a2255e89dc8a1b92a3e44040162f2676843df
ae767302116e3a87d66be923dcbae72140d0458a5f2ffa39e1a4e52799cd74ab609d8082c25b034d
5bd91f7dded881f21fde8850bcf8a92cd12b586314d1352650e6f705713c8ae789d0b8697173900e
21b6a03d8065bf496d4f1b511ac0a503add80b1e449eccb8152e95a18fc290e662c71e099a9d77ef
a17965d1f36639bbdd1abd419c58aa104fd4e1c13b39a299f6c98cf6af304a077df2e25ddadee4f9
d0867cf8a0720dd5cf326c8848d945c72f9b341f3679cecf0c9870143f768bd7aeb167546f3161df
949bb65723b3b0acf3c951ac6821b926faaa688282e63e591ff93ddd9289ad0df772f664636d8413
ced91377ed4c069b9503ffa4054539a3637f8fa410202b1c5ad4890b02561f5d17aca8365620ce8e
521402395ae8710f18c3cbbf711c3e309a6eaf472e920906b218fdf53cbc84df714b27c46aaf8b78
a58374564f52cae874cd81afb1b28444b002096ad760768b9bd1b52db3a2f2e5a8a5c122c234f6ca
89f2276587913d469ce40b230b99974abe92525c98bb583c811854e2b48f226fdeb56ae004886971
553e55776a332773df716c5bd4344c356d7a68c26ff8220ed1f0ea2983453c07d0549e7f30b0cdee
b0955e32b13d69cac54c205871d7a2d3e62bc0331855c1a20a4c8d1e6b2d7a83ac88d72793ca25c8
b75b64d2055faf5311627763677d47f50f46a8551582b60a59821f3c9d238681d5ad19ea4f991a9a
9fcad5b9345ab165093c19a82cbe2c818236f47ee0c226be326bf3a34e90e5bdcfbd204156f28215
f74fe1b46009f7f679ad0419ad79897b378302516b08b01b4cb678936ea2595f97cf95de89f9af22
0b69bb1c72e14b217e301fcbf8e04ef83dddd13184e987583fee355e40e6f303c15259802d078860
7bf83ebe852873173836ab9e7451c64fab1a3f5acff9badd3684407dcedfc5095e9fd7b7f8418ac4
f0bce1c88fad091271290b0077845b0042686fcb4de57dfe6d9117d323ba0246ff455879a44a3fd2
9d2486adc6d309ef7967c5ccc2f0fe138e40971daf5ca5d829dfaca9d2a84251717a830f693884bf
34af421ad7f25f71c43b5d5326c41cc2c4c29a8dffc5a639cec0c927f76e9f203f23a5ff063318ec
7e873d610fad9a6d9c4a6a9d7e0dfaa71c61f44530ac3e2cbfae7394f45d8d9837b1538bfadb15f0
7000cebc519d866b2c12f1e3e639ed5c10e50688ac26dfbf24ef4f032ec805e996af5ae63b563a7b
2d54b77dd347e02676a4e1c9d81c156f0e47b9b3151ce23311de42b4bdda71e9bb215f3f5b5991ff
0e9d7f96eb238bb5b9a64101e6e54098213fce71f0d96be0b4189c91b174987bb0c8479e912537d8
e7c464936501821648ab3be9401e91d17d075e0b7fb5a34562206dc6bcf25cdea13dd20625ed3802
2945bb9dc0d05fd41baa1d47b8bdd3569e5072586c0cf9456ef87da6af4684b9f4d1f3faacbd3847
7515d65c3385193aade8ec7e0bd83889cf450e7c8d4b7d2ebe969a3db85c8be518b9ba6b51827963
e660d12d61456a690c000961645be98c72c6d5a45371278d9b59c79dc01b177ea4a8fd2ad6272b0e
9b2b0dd64ef07bb8ae8b70227cf3650e88785508876aef81ef7f2a02d7ec88c1f41d4a920526d194
b3f13d6bd2956fd89777009538af7e1e13abb0935c5f17b16cd0979b39b005f6d0526f07fb046a14
95f802ebdf411e285b982edd2024589dc877a6863dd66cd24656c435d06fca2575e3886e55c3b2f3
4e0110721e8c7e19da079ddf8dd31643af0ccf77f06f4758aea992acf021e7011de8ad28600da13d
7029c099b0555258063162fd9c0ba75bc570b2de6178ec6a18c3f522020bc5a80ae2de80c1e2f1df
b85d9569e65a41f6c2fa025126eadbb53c2393ba342ea5cd0e5a3da257a151c85933ccf46489b5d1
37f61cf51281df097161aed4394051a3ea7fa07ba469ecfb97f633b4ecbb3818ed41dc63d249d2f1
83c600f704d35ccfb9261a20500eed3a5602d7ad4fe1bc76a4af64f04bc49581c76805a7fcf91006
f823a957a5a7f0f110b7ca2b1acd2d9b800364974aecb882364aa741a74a5326dbd022a1feb1d760
8607341838b5cf720a22c553b12ba643960f34c4ab3b9fcf94b271614a1c0bd359379252d553e5f5
2838aba1c4001cea5cdc3c9bdca2432fa5b2be97e539cc1ecb8ab8fcbb2efedc4728fadf80ace03a
b35ea3bcedf6e76288311421ee2e2e4c6548248efb355676e1fb41441bae5bade16f7bb34eed27f0
3ab1454f22965c5ecfd44cb20b49116514289a07ed4118075173be8e7cc56a14d35af8168fe5f187
22470d9e226ec9e22b805c44c614692ec321017f7a69f14bac37a30559da59c427a1f76d20d81745
7a83e59029da4af3c59a22eba81eba2b17eb6fb546b7f25c1759e36e777969c585a70874b229b1fa
efbaa27f28f9bd23bc814703eb1edec68ccaa63893a78b1ed9d4f712adfaf38d59c37f4fe9578c3d
f9fae23e3350efd296a521b1d384bce971490f6decf16d1619593bcfc0c042697afe449040b16237
161d15c4b620af57e8e3df831d24e97d088d78fcfc44454e8524acc22be53dc7cc422e3419aed255
058a0b82568d4effb7e73a1a91e86c0ebebc2c03a53fdaf399f87c75d7c90c7a0b78cf7f6bb33c8f
9f7d81714e8aecaa0d6631af701d62e7bae5ef868821019afc5c9e5a9d16020e71ea56434ebeb555
c03088e5368efde48226c27212a203b82c00280480755d2cc4db42422e24386364c5a875d0a719d1
225e632e82e52b8dcbf6f0060623e46f004f3928345fcbdce4b82c50f2a87555156da0b96f412e21
403a0fa20ed03089b76b92a527805f9ef8ad4f9135fada87151f11a25b4a79a2eea29da6f79a368d
442e6f928b020355039a5d308cb969095bf62fabf14cb3c47fa23d92b58194a29bcebd8c3598f134
26795729f0d18e2128ec609348982d27278834206fe07a3286898dcebdc7643ebccc5487a9d37a83
d02689698ed0632d67a1816c14a502c7d9843bf8b5bfad320b8ddbac425d40a2e4668673dff3de0e
52e339edb2593226087ea520686b4b95f55b94f3829261c901972ba94a143a1cac7ea57b19fd4f2b
3d45ca6fa1a5d32f20a6f988cc3f1e2fe35c6ae58144704df3189d891136fdcd6696b2703c4e6dcb
0bd29b4a8d9eeb80fdeeda0421dce582f4de2dbb37f01e04250f1ea6831f00e1c2331b8fb76cd53d
2e086bf5e303a4182fc63e272887723ed659010c7206074a7b812d85d7655d845a55d2aa7cff54c5
709483fb64edf582bb7d5ecf8aadfa0901449dff4a2d0c8891ec8a1cb3ea77232532404263e7414d
d29293e35f7f18897c9c15bf72e877230eba80f818ca997304fa8ec030d86ae601354689fcb09996
f2a27a684a3a53a89a62fd0cb8b9d15a471464c4d1d240f15273bf68fadd834d9a509e16c317f8f1
b6d3d5a5db67f511ee00cacd90378de00d96c4017c146f4d7c7fa77dfeb25cfa596e66b61ef183b1
1ef44099e0647cf2805a0aed22da6a7a70456c083fef1e91d34d120be8837bc4d35e1289c1103f43
3becaa376b718b1b83157fff78eb47ddda06944c87133bac9305ed7cef775b4d3ae78052b55e5dcb
0201555d097478ea1c50b08f6e7cf1a9e4fe53b054b1874c0efefdb3c41ffbb71c3bd7fa9ec3bd29
82565d28802100a638dd0fb0ffd6c2780f66fcb8f23d10e51ce21a06d4248b4b3b25fd7774356b07
12a72caad1ae0f73ba74477e252a2c64fe62813467af3ac2f445efaf5d9c318b5021eb4ba1aaae24
735c09afdb90f8c3ccb843a30614e66e7578a4bf3477a8a4bad20f022db740789eef72272e51d80c
daf1906594c3b329907b9eca805d0ab0d9ff6163209f398ad3110821b09decc5382753297081802f
0dcca253a50eb119a8796a4d4597c1832997fc9893d124f002e8f19c10138aad6212cfab76fee186
e31ab9ce1059a03a3d36f2ba18a0005a2f776b83ed2ade6a004e438d9795880903a06031bc142fcc
3a5ce8de0a2ac0e183ad661ca224b2cbfe2455235093d25d62b257bbc205c455ac39bbd81d52d3e9
3eca1365069632c94ebd8e48ef32661466971b7533abac6d4f26d5e12f2014540f74a75689607060
7e5794af8a87a08884a6da575189ed3cbe1a30eef74b8a0a4ae6a236122c5c5582de9047e9eee5b1
4c8556ef04eb9df4171cab739f8b9f06514c60db1af4ca747cb9f84d16ff02acdedbf726663ae104
1e168f560439b8d4b20697ca81a0e7d2089ee1d67b5827fc2175bb27487760dfcfe2880796a37aac
a9840dddc0a353b66e67b2a8a37d007dc2eb551272eafc5410112425b5e7b08ded828465d2c1ce59
0d16f92a68fd4c3d1893c81167cd2bd06e48cc84b4a0e73adfa03583ee78785af315097d1aee001f
19f6ac271f4a3b9375ab97d19169daf20d9fc0054416efcb1e3b3f3fc9129f6e2dc67819e94a7718
61f4aff532d4aaf87fec70e2ced97554093ee22b69e1f980a47f79a25bfe6b31524bfa763741b129
a900638653ff12324e6727ba0ab27ef35b8487784434b794a956c96d3ad194ec6e63caa7f255cd42
484efb04b1a3d0fc09b0a4f554fcba0ee7a498fe2bdcec413ad2bf62b0ea2af288813880bc64eaa8
3930d552f0d5528abb4143ea7f3525a34e0a8840164d73950e0d24ed76f6fa47ccab01d3690705c9
76d7363bdc6857197917f03a9f5075ce72c95a867a45473a1fd4fd9d2fb630c657f3ff6a016c9c30
b70f5d5c43427e1a60d73b77dde088504d3ecee716f046df4d6064f0414339eec5e5000de0bdcda6
3019a699f727602c91cea78f6d86c816c2acd705457866954d61fd394962046c9e50baa9d258127d
1bc2ddcbadfbd784cf16795264cd1afd5516591cea854c22112c79ffa4976b4315ebb2e6b68d663a
5a89451535a24273c699d1c298cbd083217127a54049d70d5baa7aebdd3e33d2c3f928aa4191a8d9
f648346d69a2517e092656b36545f1eddf928123d7634ff5e06b6f8941aeb74c03e6685f4de40e99
8e8573368ef46ab679074f0ee4f5d50ea64b558eaa2d689908a8ecbe460715b5d14432904185ae5d
d9553a188f311246c833677c5486016aa330410730bbadd09d62953662cea25c756332d60ac477ee
772ba46a19babe03a3aeab924aecc27adf35a2848fa69a2ca64014ee1b3a953acc49e618b4f7a132
4bf297a1b1a8b3aeca1b4c8979a94e2d6090221b61053df0174748bcc56c2ded49286c5b36ac9656
32ad35cab623b93c747e26fffe69dac6f16803b2eb86f7d44a3e83beb7714f61f1bf0de3b4f65d2b
8e3a0dd534931e2c3b4fe15d67f88a239c1314b00ef44e2511e95779b3246fc0ba7df43e95fcbce1
8925a10fbe8b230e46a205bfbfd1f551c71868455b5f00ca1c95c6cb68f6cf4866c7c72a955ddd83
e11a8024f013b327380c25b49dcb4e9651d442d37c3d4fd2e3e356297506b1bba7dca633a97e17ce
6a59904705e6ae06d77124bd0e74285c0bdf53e15cb9ba79c69a3b75a28f212649a01407279d4c38
2bb67fc5f8c696732957a62e44dc99073c45e08ee8349353aeaa75d6cfaac7430a445f43ee6adfdd
1b3f424beb97bd88073420507d159039e5077e2d8295b6887f98877701cc01c95146b7354bc06e63
0302dd92f73a41ca480645a664bdc41033d486d7330349cb3d8c7927dbddec08457e13533944d81b
4fce606d94e54d2cc8dd2026f8cac42fe85a5025741a960fc0db7b6d3e87a2d98404a0640e60cfde
27d4327a347a7009a9282db4e790d8500fb505c8ed720dcbe6c688a9e7d11ba8d9eafe86ceaa67f6
5f006c83ebceacd611df0585a8946e13762b68343ebde0153ca165baca97e5f9f33ea24eae802cef
da35f7701f5475dcff0bef57146213960379fed968d0b6702cb5292c13b19aefe10417a502b6444c
3a25f18b1cc04b3bfec64fac15c8701a4aefb1137e9f3a9a5966cb3bbc5777d28e13058475454c9f
2011b3ea5fee9ae2cacb80f5bd9619f2c00c657d9b54e8a0dbdf4e87677619ede53180bf7390ef8a
137be5f9f85a976ec99966a5f9cf38e4a8b281d3f78f4e20f16f9915f764fc8f046a486f83cd801d
e07f445664c11d57d6fa617b849132aa3b8f10114ab981c2583812bce0bd9e4b9f2a19c329194549
d019db7ee05b2b76a851f749403c9cc27271d33bd4eb5d111097719ecf5b3f075c8b00187aaf96a7
51327e2a40937b19d041a0d3a0c09a9d82b87d0c3eb37be1d29594116c98493083f0ca2eeb408e43
0829241a48108c4c864ed60f0a3b2428325dce33dd0762bb8c9b5bc4ae3cbc59b8f573c8dfad4488
41bdbc9127c52f1de5eb2b67c520ae9791e077085aae57d05244811e1a43160c012a8be8b9976ce6
b49dc5a9f819d817ac878562921aded2a3246e2a0dd8493484c3f7919294898772b654afd7396ee8
97373e550472f768288e62ad82f5223585cb3b3ab1abe3760995c40242f8e0263cbabfc198081132
fad7d3a55a0ec5b786fd53f309fead54cf77d9e81cd9a05ee1525ca7f86d611ed8436f71a312bf04
083b83923e0fe1383f151e9b301ee450a6ea2922c8641b6b3d9e4b5142d82f6c4dd9dfabe4f26146
9795ce8d68aabcacce128e7041e427810941ff23deddb418c9a1032cd61caa41ec4903463196ed93
a9e9ba75b706c1ab4b6e2410f98c2b4fa541f18bb12f7e06e62c723fd3ff44e93f99b83f64faf35c
e59f8eeec32bd67a8434db91e65df0ee8b57504f828459606b906faf8b5140653d5cf3562aa1b4a7
d24a730f7ec01b0c530da268eea22a90d54ed0e58a1633b5aa4a17c4777686c0397efe341b531289
dda3a3cf70ebf756d4a75fe99634c21fb37f3d463e5a340ee336a9bb16f5e05cc84c40388444893a
1d5dc370a1d3cf593ae971214d4384fb2148cee14d4d00d95fd860b371acd3163d9078292d3cfb5f
a4b9d44d2295cf6e92dd395ef3dfc747ef58e1d351bcdee4244de9c82fbef08671a287d3ad517241
10146fa387a1b0635069ca3b5fb9f437c2035da90f6fde0675dfe342b99faabc1c3d9cb5658621ca
60a0f9b667e54f74f118d554f11ba47534efa4b675703c66471cc1141c4064db6f527a3390b921f4
589e897f6c3dafd49efc74ea4c065007a229d1d91ec040d132ac495761170007f9f46b6e2f96c092
69220198fcb5e92c21952e3b7e0b61ac42eda7b9aed22d7fc949806c704981735afb701454babaab
8920309c48b47d41275b27d8fd0ca713222687e429a16a64b889030afeb4285e90301fc12db91670
6c68ae01fa668a9f60fc8f3d157906a895368d1e3a47384a31f3e7ca40f7e2ee99ed307dd71cf866
873dc822fe61f7f801fb2e992dd0ac3042563661beaa349974becef09fb1ab45f04998a9c5c4b4e8
352b2b77998bbaef56e9e77c682d77d9761002190f56d5ab947eb47cad977e6b35b7e3e73e2f4bf9
af04164fa6e48268227929bce4fcb41e55af5d6c679debc14dbaf46c1af758f5e70dd94638ded002
64d4d433cf99efb5322231d5f6c3544305236f1592c9ded2ec2d7b971e793eb2f37ad66271628905
d060e6aa84ef243acdcb22b39e608ce876355cbe004c53a2d646e404f5fd2d9ebf531c79115df798
67cf17343a5954a03792681c6ec5c4272e945094dceeac52ca2643fceaca1f35ba3ddefe4d7881af
dd1f26143f6b081cb23772e870ec061c2a08e6a00582233031762e7b5e3813cfe1f309a5faed371e
7bef387c61aec6e901fe7da167ff32c6922bbfa1b232edcd119856ca53504e1a127322ad46332e05
cb7f6ae8cf94dc4522ff28db09045e6c495cd0cdeed5e2a35e66baed339ca9b2c9b9593a5ab8510e
b84909a6f6c8096f7c83edd3b55d936c41b8150bac98d806384c7f758cd1832cadace0198a2a4af3
43b83d769f9d6280fd34ef32308306cc15d9319764ca9143006d37fd09cf863a2edba00a7733e15a
83efc3232fbebeb244df1ab74e4f3970fb029ba17a1dcb22c354111f09b8d2c07504b065dbdb3f8b
986b56f7944164d8c0ecb9c66b602eca2aff3fd3a282856d23ee37ac3cb5407ff1797f85d6ab1dc1
a1450afa73cdc437653085113b16d00162e3427d1cdef2abfeb9aaf0df37b069b1adc5ebd10ca837
a8a881482836cee24d840bafec4d6480a065fa0cea0774c7b8ae580cc91678fe9bdad536194d4f79
f9d6e1d8121ba845ce856e0b8fcb39232e88
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 SSC_Copy_State <Virtual>  0
 HBW_Pick TASK  0 -1
 HBW_Copy_State <Virtual>  0
 PID_10 PID  0
 PID_11 PID  0
 hunt_exp_light PROGRAM  0 -1
 HBW_Home <Virtual>  0
 HBW_Pick_Sto <Virtual>  0
 test TASK  0 -1
 HBW_Pickup_ST PROGRAM  0 -1
 HWB_Extend_Arm <Virtual>  0
 HBW_Retract_Arm <Virtual>  0
 HWB_PickUp TASK  0 -1
 HBW_HTO1POS <Virtual>  0
 HBW_Left_1Block <Virtual>  0
 HBW_HomeTo2_Col <Virtual>  0
 HWB_HomeTo3_Col <Virtual>  0
 HWB_HomeTo2_Row <Virtual>  0
 HWB_HomeTo3_Row <Virtual>  0
 HWB_HomeTo1_Col <Virtual>  0
 HBW_move_left_1 <Virtual>  0
 HWB_Home_to_11 <Virtual>  0
 HWB_11_DropOff <Virtual>  0
 HBW_Pickup <Virtual>  0
 HBW_PickUp_R1 <Virtual>  0
 HBW_Send_VGR <Virtual>  0
 HBW_PickUp_VGR <Virtual>  0
 HBW_Return_VGR <Virtual>  0
 HBW_MotorsOff <Virtual>  0
 HBW_ConvTo11 <Virtual>  0
#END

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"VGR Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC410 C410 1 0x0 MC409 C409 1 0x0 MC412 Y28 1 0x0 MC412 MC450 1 0x0 MC411 C411 1 0x0 MC408 C408 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC413 Y29 1 0x0 MC413 MC451 1 0x0 X27 MI200 1"

// Rung VGR_Copy_State#2
// Offset 27
NOP

// Rung VGR_Copy_State#3
// Offset 28
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC800 Y41 1 0x0 Y41 MI801 1 0x0 MC802 Y43 1 0x0 Y43 MI803 1 0x0 MC804 C804 1 0x0 MC805 C805 1 0x0 MC806 Y44 1 0x0 MC807 Y20 1 0x0 MC808 C811 1 0x0 MC809 C809 1 0x0 MC810 C810 1 0x0 MC812 C812 1 0x0 MC813 C813 1 0x0 MC814 C814 1 0x0 MC816 Y45 1 0x0 MC817 Y46 1 0x0 MC818 Y21 1"

// Rung MPO_Copy_State#2
// Offset 39
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
NOP

// Rung SLD_Copy_State#2
// Offset 1
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"SSC Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC606 C1200 1 0x0 MC607 C1201 1 0x0 MC608 C1202 1 0x0 MC609 C1203 1 0x0 MC615 C1215 1 0x0 MC616 C1216 1 0x0 MC617 C1217 1 0x0 MC618 C1218 1 0x0 MC619 C1219 1 0x0 MC620 C1220 1"

// Rung SSC_Copy_State#2
// Offset 25
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block HBW_Home
$LGCMOD HBW_Home

// Rung HBW_Home#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Home#2
// Offset 8
STRN C215
ANDN X0
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 60 60
OUT Y51

// Rung HBW_Home#3
// Offset 26
STRN C215
ANDN X3
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5

// Rung HBW_Home#4
// Offset 43
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y76

// Rung HBW_Home#5
// Offset 64
NOP

// Rung HBW_Home#6
// Offset 65
RET

// End of Code Block HBW_Home
$LGCEND HBW_Home

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 Y40 1 0x0 Y80 MHR102 1 0x0 MC101 C205 1 0x0 MC102 C206 1 0x0 MC103 C207 1 0x0 MC104 C208 1 0x0 MC105 C209 1 0x0 MC106 C210 1 0x0 MC107 C211 1 0x0 MC108 C212 1 0x0 MC109 C213 1 0x0 MC110 C214 1 0x0 MC111 C215 1 0x0 MC112 C216 1 0x0 X2 MI101 1 0x0 X10 MI102 1 0x0 X11 MI103 1 0x0 X3 MI104 1 0x0 X0 MI105 1 0x0 X6 MI106 1 0x0 X7 MI107 1 0x0 X8 MI108 1 0x0 X9 MI109 1 0x0 $HBW_Encoder_X.Acc MHR1 1 0x0 $HBW_Encoder_Z.Acc MHR2 1"

// Rung HBW_Copy_State#2
// Offset 55
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block HBW_HomeTo2_Col
$LGCMOD HBW_HomeTo2_Col

// Rung HBW_HomeTo2_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_HomeTo2_Col#2
// Offset 17
STRGE -2775 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_HomeTo2_Col#3
// Offset 22
NOP

// Rung HBW_HomeTo2_Col#4
// Offset 23
NOP

// Rung HBW_HomeTo2_Col#5
// Offset 24
NOP

// Rung HBW_HomeTo2_Col#6
// Offset 25
RET

// End of Code Block HBW_HomeTo2_Col
$LGCEND HBW_HomeTo2_Col

// Beginning of Code Block HWB_HomeTo1_Col
$LGCMOD HWB_HomeTo1_Col

// Rung HWB_HomeTo1_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HWB_HomeTo1_Col#2
// Offset 17
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_HomeTo1_Col#3
// Offset 22
NOP

// Rung HWB_HomeTo1_Col#4
// Offset 23
NOP

// Rung HWB_HomeTo1_Col#5
// Offset 24
RET

// End of Code Block HWB_HomeTo1_Col
$LGCEND HWB_HomeTo1_Col

// Beginning of Code Block HWB_Home_to_11
$LGCMOD HWB_Home_to_11

// Rung HWB_Home_to_11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HWB_Home_to_11#2
// Offset 22
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_Home_to_11#3
// Offset 27
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HWB_Home_to_11#4
// Offset 49
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_Home_to_11#5
// Offset 54
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HWB_Home_to_11#6
// Offset 73
NOP

// Rung HWB_Home_to_11#7
// Offset 74
NOP

// Rung HWB_Home_to_11#8
// Offset 75
RET

// End of Code Block HWB_Home_to_11
$LGCEND HWB_Home_to_11

// Beginning of Code Block HWB_11_DropOff
$LGCMOD HWB_11_DropOff

// Rung HWB_11_DropOff#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HWB_11_DropOff#2
// Offset 8
STRGE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_11_DropOff#3
// Offset 13
STRN C215
ANDN C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51

// Rung HWB_11_DropOff#4
// Offset 31
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y4
AND ST2
OUT Y5

// Rung HWB_11_DropOff#5
// Offset 51
STRGE 2850 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_11_DropOff#6
// Offset 56
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 60 60
OUT Y7

// Rung HWB_11_DropOff#7
// Offset 73
RET

// End of Code Block HWB_11_DropOff
$LGCEND HWB_11_DropOff

// Beginning of Code Block HBW_PickUp_R1
$LGCMOD HBW_PickUp_R1

// Rung HBW_PickUp_R1#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R1#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R1#3
// Offset 41
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R1#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R1#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_PickUp_R1#6
// Offset 69
NOP

// Rung HBW_PickUp_R1#7
// Offset 70
NOP

// Rung HBW_PickUp_R1#8
// Offset 71
NOP

// Rung HBW_PickUp_R1#9
// Offset 72
NOP

// Rung HBW_PickUp_R1#10
// Offset 73
RET

// End of Code Block HBW_PickUp_R1
$LGCEND HBW_PickUp_R1

// Beginning of Code Block HBW_Send_VGR
$LGCMOD HBW_Send_VGR

// Rung HBW_Send_VGR#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Send_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_Send_VGR#3
// Offset 37
STRN C215
AND X2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y48
AND ST2
OUT Y49

// Rung HBW_Send_VGR#4
// Offset 56
NOP

// Rung HBW_Send_VGR#5
// Offset 57
NOP

// Rung HBW_Send_VGR#6
// Offset 58
RET

// Rung HBW_Send_VGR#7
// Offset 59
NOP

// Rung HBW_Send_VGR#8
// Offset 60
NOP

// End of Code Block HBW_Send_VGR
$LGCEND HBW_Send_VGR

// Beginning of Code Block HBW_PickUp_VGR
$LGCMOD HBW_PickUp_VGR

// Rung HBW_PickUp_VGR#1
// Offset 0
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_PickUp_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_PickUp_VGR#3
// Offset 37
STRN C215
AND X11
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_PickUp_VGR#4
// Offset 56
NOP

// Rung HBW_PickUp_VGR#5
// Offset 57
NOP

// Rung HBW_PickUp_VGR#6
// Offset 58
RET

// Rung HBW_PickUp_VGR#7
// Offset 59
NOP

// Rung HBW_PickUp_VGR#8
// Offset 60
NOP

// End of Code Block HBW_PickUp_VGR
$LGCEND HBW_PickUp_VGR

// Beginning of Code Block HBW_Return_VGR
$LGCMOD HBW_Return_VGR

// Rung HBW_Return_VGR#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C253
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y6

// Rung HBW_Return_VGR#2
// Offset 22
STRN C215
AND X1
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_Return_VGR#3
// Offset 41
STRN C215
AND C251
DUPBOOL
ANDN X1
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_Return_VGR#4
// Offset 63
STRLE 2575 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_VGR#5
// Offset 68
NOP

// Rung HBW_Return_VGR#6
// Offset 69
NOP

// Rung HBW_Return_VGR#7
// Offset 70
RET

// Rung HBW_Return_VGR#8
// Offset 71
NOP

// Rung HBW_Return_VGR#9
// Offset 72
NOP

// End of Code Block HBW_Return_VGR
$LGCEND HBW_Return_VGR

// Beginning of Code Block HBW_MotorsOff
$LGCMOD HBW_MotorsOff

// Rung HBW_MotorsOff#1
// Offset 0
STRN C215
ANDN ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_MotorsOff#2
// Offset 18
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_MotorsOff#3
// Offset 36
STRN C215
AND ST2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
OUT Y48

// Rung HBW_MotorsOff#4
// Offset 54
NOP

// Rung HBW_MotorsOff#5
// Offset 55
NOP

// Rung HBW_MotorsOff#6
// Offset 56
NOP

// Rung HBW_MotorsOff#7
// Offset 57
RET

// End of Code Block HBW_MotorsOff
$LGCEND HBW_MotorsOff

// Beginning of Code Block HBW_ConvTo11
$LGCMOD HBW_ConvTo11

// Rung HBW_ConvTo11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_ConvTo11#2
// Offset 22
NOP

// Rung HBW_ConvTo11#3
// Offset 23
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_ConvTo11#4
// Offset 28
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_ConvTo11#5
// Offset 50
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_ConvTo11#6
// Offset 55
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_ConvTo11#7
// Offset 74
NOP

// Rung HBW_ConvTo11#8
// Offset 75
NOP

// Rung HBW_ConvTo11#9
// Offset 76
RET

// Rung HBW_ConvTo11#10
// Offset 77
NOP

// Rung HBW_ConvTo11#11
// Offset 78
NOP

// End of Code Block HBW_ConvTo11
$LGCEND HBW_ConvTo11

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#2
// Offset 3
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#3
// Offset 6
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#4
// Offset 9
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#5
// Offset 12
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// Rung $Main#6
// Offset 15
#BEGIN FMT_COMMENT 
"Hunter Demo Light<br>"
#END

STR ST1
RUN hunt_exp_light

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
SG HBW_Program.S0

// Rung HBW_Program#2
// Offset 2
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#3
// Offset 10
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#4
// Offset 12
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#5
// Offset 14
STR ST1
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#6
// Offset 22
NOP

// Rung HBW_Program#7
// Offset 23
STR C213
JMP HBW_Program.S1

// Rung HBW_Program#8
// Offset 25
SG HBW_Program.S1

// Rung HBW_Program#9
// Offset 27
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#10
// Offset 35
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#11
// Offset 37
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#12
// Offset 39
STR ST1
DUPBOOL
STR C205
ANDN C206
STR C206
ANDN C205
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 500 60
POPBOOL
DUPBOOL
AND C205
OUT Y48
POPBOOL
AND C206
OUT Y49

// Rung HBW_Program#13
// Offset 68
STR ST1
DUPBOOL
STR C207
ANDN C208
STRN C207
AND C208
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
POPBOOL
DUPBOOL
AND C207
OUT Y50
POPBOOL
AND C208
OUT Y51

// Rung HBW_Program#14
// Offset 97
STR ST1
DUPBOOL
STR C209
ANDN C210
STRN C209
AND C210
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
POPBOOL
DUPBOOL
AND C209
OUT Y4
POPBOOL
AND C210
OUT Y5

// Rung HBW_Program#15
// Offset 126
STR ST1
DUPBOOL
STR C211
ANDN C212
STRN C211
AND C212
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
POPBOOL
DUPBOOL
AND C211
OUT Y6
POPBOOL
AND C212
OUT Y7

// Rung HBW_Program#16
// Offset 155
STR C213
JMP HBW_Program.S2

// Rung HBW_Program#17
// Offset 157
SG HBW_Program.S2

// Rung HBW_Program#18
// Offset 159
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#19
// Offset 167
STR X0
OUT $HBW_Encoder_X.ResetLevel

// Rung HBW_Program#20
// Offset 169
STR X3
OUT $HBW_Encoder_Z.ResetLevel

// Rung HBW_Program#21
// Offset 171
STR ST1
CALL HBW_Home 0x1 DST511 "3" "3"

// Rung HBW_Program#22
// Offset 179
STR X0
AND X11
AND X3
JMP HBW_Program.S3

// Rung HBW_Program#23
// Offset 183
STR C212
JMP HBW_Program.S3

// Rung HBW_Program#24
// Offset 185
NOP

// Rung HBW_Program#25
// Offset 186
SG HBW_Program.S3

// Rung HBW_Program#26
// Offset 188
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#27
// Offset 196
STR ST1
CALL HWB_Home_to_11 0x1 DST511 "3" "3"

// Rung HBW_Program#28
// Offset 204
STRN C250
ANDN C251
JMP HBW_Program.S4

// Rung HBW_Program#29
// Offset 207
SG HBW_Program.S4

// Rung HBW_Program#30
// Offset 209
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#31
// Offset 217
STR ST1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#32
// Offset 225
STR X10
ANDN C251
JMP HBW_Program.S5

// Rung HBW_Program#33
// Offset 228
SG HBW_Program.S5

// Rung HBW_Program#34
// Offset 230
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#35
// Offset 238
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#36
// Offset 246
STRN C251
AND C250
JMP HBW_Program.S6

// Rung HBW_Program#37
// Offset 249
SG HBW_Program.S6

// Rung HBW_Program#38
// Offset 251
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#39
// Offset 259
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#40
// Offset 267
STRN X2
JMP HBW_Program.S7

// Rung HBW_Program#41
// Offset 269
SG HBW_Program.S7

// Rung HBW_Program#42
// Offset 271
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#43
// Offset 279
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#44
// Offset 287
STR X11
JMP HBW_Program.S8
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#45
// Offset 296
SG HBW_Program.S8

// Rung HBW_Program#46
// Offset 298
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#47
// Offset 306
STR ST1
CALL HBW_ConvTo11 0x1 DST511 "3" "3"

// Rung HBW_Program#48
// Offset 314
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#49
// Offset 316
NOP

// Rung HBW_Program#50
// Offset 317
NOP

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#2
// Offset 8
STR ST1
DUPBOOL
STR C410
ANDN C409
STRN C410
AND C409
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
POPBOOL
DUPBOOL
AND C410
OUT Y27
POPBOOL
AND C409
OUT Y26

// Rung VGR_Program#3
// Offset 37
STR ST1
DUPBOOL
STR C408
ANDN C411
STRN C408
AND C411
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
POPBOOL
DUPBOOL
AND C408
OUT Y24
POPBOOL
AND C411
OUT Y25

// Rung VGR_Program#4
// Offset 66
STR ST1
DUPBOOL
STR C406
ANDN C407
STRN C406
AND C407
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
POPBOOL
DUPBOOL
AND C406
OUT Y23
POPBOOL
AND C407
OUT Y22

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STR C813
OUT Y18

// Rung MPO_Program#4
// Offset 12
STR C810
OUT Y17

// Rung MPO_Program#5
// Offset 14
STR C811
OUT Y52

// Rung MPO_Program#6
// Offset 16
STR ST1
DUPBOOL
STR C804
ANDN C805
STR C805
ANDN C804
ORSTR
ANDSTR
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 100
POPBOOL
DUPBOOL
AND C804
OUT Y53
POPBOOL
AND C805
OUT Y15

// Rung MPO_Program#7
// Offset 45
STR C814
OUT Y19

// Rung MPO_Program#8
// Offset 47
STR C809
JMP MPO_Program.S2

// Rung MPO_Program#9
// Offset 49
SG MPO_Program.S1

// Rung MPO_Program#10
// Offset 51
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#11
// Offset 59
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#12
// Offset 61
STRN X24
SET Y17

// Rung MPO_Program#13
// Offset 63
STR Y17
OUT Y20
ANDN X17
ONDTMR T0 1000 Y44

// Rung MPO_Program#14
// Offset 69
SG MPO_Program.S2

// Rung MPO_Program#15
// Offset 71
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#16
// Offset 79
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#17
// Offset 81
STRN X19
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y53

// Rung MPO_Program#18
// Offset 97
STR X19
JMP MPO_Program.S3

// Rung MPO_Program#19
// Offset 99
SG MPO_Program.S3

// Rung MPO_Program#20
// Offset 101
STR ST1
SET Y17

// Rung MPO_Program#21
// Offset 103
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#22
// Offset 111
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#23
// Offset 113
STR X19
SET Y19

// Rung MPO_Program#24
// Offset 115
STR X19
ONDTMR T100 2000 Y18

// Rung MPO_Program#25
// Offset 119
STR T100.DN
JMP MPO_Program.S4

// Rung MPO_Program#26
// Offset 121
SG MPO_Program.S4

// Rung MPO_Program#27
// Offset 123
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#28
// Offset 131
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#29
// Offset 133
STR X19
RST Y19

// Rung MPO_Program#30
// Offset 135
STRN X16
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y15

// Rung MPO_Program#31
// Offset 151
STR X16
JMP MPO_Program.S5

// Rung MPO_Program#32
// Offset 153
SG MPO_Program.S5

// Rung MPO_Program#33
// Offset 155
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#34
// Offset 163
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#35
// Offset 165
STR X16
SET Y19

// Rung MPO_Program#36
// Offset 167
STR Y19
ONDTMR T101 2000 C815

// Rung MPO_Program#37
// Offset 171
STR C815
RST Y18

// Rung MPO_Program#38
// Offset 173
STRN Y18
JMP MPO_Program.S6

// Rung MPO_Program#39
// Offset 175
SG MPO_Program.S6

// Rung MPO_Program#40
// Offset 177
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#41
// Offset 185
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#42
// Offset 187
STR X16
RST Y19

// Rung MPO_Program#43
// Offset 189
STRN Y19
ONDTMR T102 1000 C818

// Rung MPO_Program#44
// Offset 193
STR C818
JMP MPO_Program.S7

// Rung MPO_Program#45
// Offset 195
SG MPO_Program.S7

// Rung MPO_Program#46
// Offset 197
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#47
// Offset 205
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#48
// Offset 207
STRN X15
OUT Y45

// Rung MPO_Program#49
// Offset 209
STR X15
TMRDOWN T102 1000
OUT Y43

// Rung MPO_Program#50
// Offset 213
STR T102.Done
JMP MPO_Program.S8

// Rung MPO_Program#51
// Offset 215
SG MPO_Program.S8

// Rung MPO_Program#52
// Offset 217
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#53
// Offset 225
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#54
// Offset 227
STRN X13
OUT Y45

// Rung MPO_Program#55
// Offset 229
STR X13
TMRDOWN T103 1000
OUT Y21

// Rung MPO_Program#56
// Offset 233
STR T103.Done
JMP MPO_Program.S9

// Rung MPO_Program#57
// Offset 235
SG MPO_Program.S9

// Rung MPO_Program#58
// Offset 237
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#59
// Offset 245
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#60
// Offset 247
STR ST1
OUT Y47

// Rung MPO_Program#61
// Offset 249
STRN X12
ONDTMR T104 1000 Y46

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"SLD Program"
#END

STR ST2
COPY 0x1 "4 0x0 MC404 Y40 1"

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STR C1200
OUT Y39

// Rung SSC_Program#4
// Offset 12
STR C1201
OUT Y40

// Rung SSC_Program#5
// Offset 14
STR C1202
OUT Y41

// Rung SSC_Program#6
// Offset 16
STR C1215
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y35

// Rung SSC_Program#7
// Offset 32
STR C1203
JMP SSC_Program.S1

// Rung SSC_Program#8
// Offset 34
STR C1216
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y36

// Rung SSC_Program#9
// Offset 50
STR C1217
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 R0
OUT Y37

// Rung SSC_Program#10
// Offset 66
STR C1218
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 R0
OUT Y38

// Rung SSC_Program#11
// Offset 82
STRPD C1219
SET C1221

// Rung SSC_Program#12
// Offset 85
STRPD X47
ANDPDPF
STR CT150.Done
CNT CT150 100

// Rung SSC_Program#13
// Offset 91
STRN C1220
ANDN CT150.Done
OUT Y38
RST C1221

// Rung SSC_Program#14
// Offset 95
SG SSC_Program.S1

// Rung SSC_Program#15
// Offset 97
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#16
// Offset 105
STRN C1203
JMP SSC_Program.S0

// End of Code Block SSC_Program
$PGMEND SSC_Program

// Beginning of Code Block hunt_exp_light
$PRGRM hunt_exp_light

// Rung hunt_exp_light#1
// Offset 0
STR ST2
COPY 0x1 "4 0x0 MC402 Y39 1"

// End of Code Block hunt_exp_light
$PGMEND hunt_exp_light

// Beginning of Code Block HWB_PickUp
$TSK HWB_PickUp

// Rung HWB_PickUp#1
// Offset 0
NOP

// End of Code Block HWB_PickUp
$TSKEND HWB_PickUp

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"C1","copy","",""
"C11","C11_Interlock","","Used to delay logic by one scan"
"C12","C12_Interlock_2","","Used to delay logic by one scan"
"C20","HBW_Has_Pallet","","True when carrying a pallet"
"C51","X_Direction","","True: Left False: Right"
"C52","Z_Direction","","True: Down False: Up"
"C80","Conveyor_Timeout","","Bit high when Conveyor Timeout timer active"
"C90","HBW_XY_PID_EN","","Enables PID control in HBW_Move_XZ"
"C101","HBW_T1_Send","Modbus MC101","Task to deliver a pallet to conveyor"
"C102","HBW_T2_Receive","Modbus MC102","Task to pickup a pallet from conveyor"
"C103","HBW_T3_Reset","Modbus MC103","Reinitialize and home all axises"
"C104","HBW_T4_Manual","Modbus MC104","Switch to manual mode"
"C110","HBW_Move_X_L","Modbus MC110","Move Horizontal Axis towards bay"
"C111","HBW_Move_X_R","Modbus MC111","Move Horizontal Axis towards Conveyor"
"C112","HBW_Move_Y_In","Modbus MC112","Move Cantilever In"
"C113","HBW_Move_Y_Out","Modbus MC113","Move Cantilever Out"
"C114","HBW_Move_Z_Up","Modbus MC114","Move Vertical Axis Up"
"C115","HBW_Move_Z_Down","Modbus MC115","Move Vertical Axis Down"
"C116","HBW_Conveyor_In","Modbus MC116","Move Conveyor In"
"C117","HBW_Conveyor_Out","Modbus MC117","Move Conveyor Out"
"C130","HBW_Status_Ready","Modbus MC130","On when ready for a task"
"C133","HBW_Mov_Conveyor","Modbus MC133","Status Conveyor Moving"
"C134","HBW_Moving_X","Modbus MC134","Status GantryMovingX"
"C135","HBW_Moving_Y","Modbus MC135","Status GantryMovingY"
"C136","HBW_Moving_Z","Modbus MC136","Status GantryMovingZ"
"C138","HBW_Status_Y_Pos","Modbus MC138","Current Y position"
"C141","HBW_Target_Y_Pos","Modbus MC141","Target Y position"
"C150","HBW_MoveComplete","","HBW_Move_XZ completion interlock."
"C180","HBW_Fault","Modbus MC180","Status in Fault State"
"C182","Fault_X_Target","","Active when X target out of range"
"C183","Fault_Z_target","","Active when Z target out of range"
"C400","VGR_T0","",""
"C410","VGR_T1","",""
"C420","VGR_T2","",""
"C430","VGR_T3","",""
"C440","VGR_T4","",""
"C500","VGR_Man_Control","",""
"C799","VGR_RESET","",""
"V105","HBW_Task_X_slot","Modbus MHR105","Value for slot X coord"
"V106","HBW_Task_Y_slot","Modbus MHR106","Value for slot y coord"
"V118","HBW_PWM_Set_X","Modbus MHR118","Set Horizontal Axis PWM Duty Cycle %"
"V119","HBW_PWM_Set_Y","Modbus MHR119","Set Cantilever Axis PWM Duty Cycle %"
"V120","HBW_PWM_Set_Z","Modbus MHR120","Set Vertical Axis PWM Duty cycle %"
"V131","HBW_Cur_Progress","Modbus MHR131","0 to 100 percent job completion"
"V132","HBW_Cur_Stage","Modbus MHR132","Current stage number"
"V137","HBW_Status_X_Pos","Modbus MHR137","Current X encoder position"
"V139","HBW_Status_Z_Pos","Modbus MHR139","Current Z encoder position"
"V140","HBW_Target_X_Pos","Modbus MHR140","Target X encoder position"
"V142","HBW_Target_Z_Pos","Modbus MHR142","Target Z encoder position"
"V181","HBW_Fault_code","Modbus MHR181","Current Fault code"
"V801","VGR_Fault_Code","",""
"N810","VGR_Rot_Target","",""
"N811","VGR_X_Target","",""
"N812","VGR_Y_Target","",""
"D0","MC","",""
"D1","Feeder_Extend","",""
"D140","X_Start_Position","","Distance to target"
"D142","Y_Start_Position","","Distance to target"
"D143","HBW_PWM_Cur_X","","PWM value for X for XZ movement task"
"D144","HBW_PWM_Cur_Z","","PWM value for Z for XZ movement task"
"T3","T_HBW_S6","",""
"T4","T_Conveyor_Timer","","Used to detect conveyor faults"
"MPO_Program.S2","Vaccum_MO","",""
"MPO_Program.S3","Vaccum","",""
"MPO_Program.S4","Vacumm_MO","",""
"MPO_Program.S5","Vaccum_Load","",""
"US0","_CP_Strogram_A","","CP_State_Program"
"US1","_VGR_Movement","","VGR_Movement"
"US2","_SSC_Check_InOut","","SSC_Check_InOut"
"UB0","_VGR_MisScan_A","","VGR_Movement.Done ThisScan"
#END

