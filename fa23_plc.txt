// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\walri\OneDrive\Documents\Github\ui_cda_mini_factory_fa23\fa23_plc.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
0488aad2eb1903d59977771f11b1b1d4e182b3447505f361fb8bca2b0d1a15e997ca9b3e40eb0b38
7ff38d8222331a5a639e99c9032d25901188fb0fbc3753339c30a6f003388f60ad158075ab141216
32b7cc342fa5bd702b2d11cb5646305492c1bbe7efeab03f5e6e658b6b8a99b2c4438f06b39ea776
35e6d013de0c1bb1674357abc185d11f89946041991790c8228497e1cc2a10199e433241de68b01d
85b27924727bd31595dfdd30ff4871ec0843756b4cd82dd4a8b8bc085d0a130e32d0e3072abe8544
704501cbaebe942bb4935900bbe0718e022773945fbae70a9dd48882ff2cf3fd6849e07597949152
e7dcbba2631dd858264a41845a9636c29f7282f3453d6b1586e69c39348727b7a7c26b2b59a70bbd
d419ecdb44bc8e9af1ecb3e0b98d39fc36f5baf12d7ac2c160d351ffd21b687e3151e9ae57febe48
b5a97a134e62929c9cff2035edda568fcf12900cfb853a23eec4251ecefb5f655ef3a4c841cf704a
6cd3f9c96eb8d63730442709831cbcd6749cfb60d45684645cd299bb0b745adaa77e88ed6b83a33d
b57f38bd0225d6412a6ea21732fc450b07298dc07060a25edf256c6e70495dfc5a6799b16c39399d
2c752951a374a61eaf1b8a6f4bf77f31d273803279040a2b0f109ea9df8ab095090186e6301f4939
9e6ab3484b81108ce0467aebe0ccd6444b77f9fd010d94c55999bd1a1af42de2fab45677f864d39d
35fcc5392c677a6040425ae7ba1fa5d24e75753e8711ac74a55e907e0ce823d0e316ce34e849221c
b93b222eec144aa634ec5fdd611fbfe553640e2b250762a8876a7715562a4c58cdc48afa03d0d7fa
48f595c5f531475f75e147ae052850bb378ea840a81970530faa53122afbf40843a02f7471c882b1
36e08b8845853aab33537c5b5ec4670bd6ef78500d10e3de71f6fa514532eda3d2796211103d5b1b
c223b3a8aa0c609c1346b572e0be7242a9670c1329c876417cbc9a33cae6da77ad0468a781eaded6
5449105fcac6acf0f4b36c0b9d8b3af997df3a6f42543960d744d9b2cbe5cc155ba142902afa41a7
f3d4c5caed5f551b03896befab0585aa7c5326092258b07e9bc4dc589ae6e0d77a377a7af23a07dc
ee6f77c27d29de6d2a0a253e2571df07f64689ee5342c48ffedcf35bc3690d4d2d4cfba646c9f8ab
cb7708c834422df54c56a75b8c7da54c15d2e5655edb66465f1fc785b9a8253cd885acf5ca87ca0b
43236a986a29b30ff643bc0a6018a90043f89383e094a06d23de9d0926930e2051a9e662443e3d8f
74f127e3f589ebf1fb8af5d8aa24f97790f4570f1ad2fc911caa076ee7aaae74eb01b3cf4cfe5985
216df07f58faa3d192c3105d34afe1c2e5519aaf62c422d12ec139e57a113bf88866f791acb97996
16125c979b16bc1dfe18b7e004c492be3ffbf5b9a937e61e36927769173f25c809437d1b312c358c
0353337ae1ccb7794f6c7bd3d3963bafea3dabc8a015124cf7fbd22aee4b23efd26dd13070bd7aee
853ac8049d0f96000228c4abb0e31870d2a0947297bd429db25af55a217f6a809224380e0ffba42e
74b96614da7bb4d6b58ee3f540f53d9ee23c59e48159a9562490dce49690516eda2f869c6702cb89
5c611c51e42980381f825a165f2cda1005330d9c5ae46e2b23278bde88523e91be32783f134c136a
64eda02bd93668f0a16cc4b0449b6d35b113dc206e1c8fca875bb751b6f241796d701ecf5a6d8ee8
4ff79b55a3a96541d01e3f6d89b90b2960bc44094b4bfd29d5ba34ab564102b497be1d9056ed6873
37fc75fae85fbfd170c0265c82f358c901892a3152781e63b00416a1412f8939dfa57b0aa1369508
7d24d7784f2e117a84bc0056a121fe6b6c13c847e9d599f2b00431004a45379255e07f992adc35eb
31bea0a731df1936d91b0d0ecb92118d9890da12d641de7932aa651ba7a2b9a600956784751aa95e
35f0beefee96612e0f223c633d7dc2e45b8b792add44ad307cd1a83fb58ee2d1c60197a2dc21dd9f
adc00832ef1252ce7483a4f91dd73dfb01972641a16ebe5273acf0a25ebd3df6646271d71ceab2b8
f802250f084e2df1d9364c4f1fb2b70d24a63c40ba7f058ae56d7e7d81ec2ef17b029ed799fd1954
1d59034d99fe4bec0fd585f18e23e44434b1ff1661fee509f96bbfa9bec0bea23d52d451b6f59411
5fd5b54b2a2055a1c630238f3a8a001d3471aa49496186eda3f8e6b0c23273eb19c2901f54f76604
eb03f3df1a947ee09fe3b6d13b40cdf13ae971076d78893fb4003853fba8d7af49a117d440f49f20
13c0bb37a4a3c5487503353313386ab24bcd132bb3e9b9a3c4e766bcd594ee7b3734f3a721489e4a
d07f0ab8b2160a202b0cf8898ff84b4b3d6e8574d88b3bcb51cae9ed79b7cd237564cabfb56e0819
f6817f5e9a800bd364315fe48286e0c1ed098a9a05b7349e7c775b99547da5882713e7e0a49dda21
1f15a26290e6233880ee989ff02eee7b0770af24f307a6f06a036e8aee01b495fa694aad2f89b2c4
72677befa32ce5ac670ad96de1b5768c3913a29d80bc95408288a1b5e0f77caa008836478552011e
65a3b832d39eab81f80c15035a930c25651d10e3f5ac43bb7ba1d98191a974ecf5d823aeb20f461e
ce8a681925f5832b03061d203bdadddf4471cc221045d4b77c1073f961f0a3920d9ac56d52c2d8ef
4c63753e5d5418236799714210d129798cc9822d733c576e039adb07cfd6c6f7962ac5df90753e06
dc8e063ab7ed9e9f27c026557a6784f50401b58541449a8d5fe854b22569d741b6be55ccc44727c9
f1083dd59c621e9f2957228a539f6f5d23295d64173162784ccba8b174ec26f53e2e657be771fa88
c9bd8ab29102ed4bb39f29dd667eb0ed27155b0cb66335747f642478b23ef945851c5be4f2f77607
b1d4912c33a3a05630d71de12804a8fb502969896cf168893f5da82f5282a8c1740fe80eb3304329
e7bf17b2bd026638374fdb740f936bce2f6cdf4d197bf104f49fa3b0aef6ba98afbd88641ab199d7
286b9e2069298441b04f0d3a350eb31d30eea1465a124c66919806146b16c5143abcaa93a2498a9e
298541080ec3242a95a835effdadb4c628d50fbeddbcec522cfd1ea00196e499c45d298c798e8dfb
9db1ba6ac3c51a1aed4f9dbd7fe688387dd083e6bc0350b280f3816440059b74c2d51c1c0a6c42b6
dcaefbfcb6c933427c2836a944eed2e945379da898424e106db13da343861a83111ae4a566dc0853
fe6669f3971c37f15f257c4a0b423947b05b4b0000116a790009403ae9987c3edc30b9af9a2336a4
97fbc0bd6f2a2362ccb8acb6a3d67bd19364fcecbcfc6d72dcf289c201706ee513b97987f0322576
853c63b7e631165b2b99066c873ee1eacab2043c093f522ed4d6f89eb79d9adcbf1ada063026338f
771cb2a919ef3768b2326cb1b6f03ac0b743a8b837b866f177bf5be7ee10bdeb12efd75e0ecada88
b2473726d4bf514b7b7dcd3e7fee6e3474eda67567f8575f4933cdf59d9c31f75f3546075f0104e3
d622c871eed666f0bba9f401ca1c785882e2be638592001ffa094734752fa1bd2888cc6e5d431b1c
1ee86fdf3b629928432f1894ccd6601ed5a4264cce712adf0cacfb1ed5d4e6d2210b3f1192ed7664
fb54acbac867a09149e24a540fabe6dc7b724c43726bc52389113f77213e2de118b83c4f9f4588e5
ba0ca874c6acdf9ede80e50237c3e950575db81925240dc9d4417eef1cc412cfd0ef3123237ab301
7a05066feba343ff720b1c2660ec419916dff8d312e5216e36b6ab516f27ae815fc532f873ab7d18
dcae4e8c8f07a515342763326d45fa25b101684b85b6478b2809b026edebc2ceffe648b61cf68bb6
933b6837565c438b577726c52fb1de9cb8b6ac4bd414035ecd55f6e105affa72d0603d6e6938674f
90477dbe84d26ff7e759039673d22e22914a2feb9969ab1c327a2c3b6847bf1f9bc81f4880edb284
248cc0f6a0cdb55848ec196a3f0b550f15ed484518a33b988f508a9a5e2954b82ef1c5700b1d0d1b
cf3ce819163b3a780113134615504df7b460f0e984562042d0443548b50baab87447044d6a88e405
ba64fe09c348b0a998812ff953f4da92c413408751d966b896df69f32e79285dbc473ff857aec553
048f392f1d217e771541446e0351ae73a9d95107d93c031fec9a7bea24d739a90d88101e2682ba7a
07979d6e76c760b0c43fe71baea0f6680211e87c6366270ae2a7d27fdce8d9d0c6402ccecdbf5f4f
63503e2b976dd62a78a516df0b7110551d0d0eaa00dbe8bcbded0669b73676d2616b59a91d1d984b
6bfd0c3f36073348c46415e37b4f8e01fd99f4d8b0e65b78827050d47f29f800c7f2ea4ed2e5d6c0
add9f7c26a61a94e6f2d0cdfa0a2bb395cec5d68211f49d813dea8bd49ab524e4258a401005d4c85
73177fe5ee81f79d8f7ab334079351a2e3e1d4900f1d09b09faae4c9b0ad48d4756382d5da542ba2
05196d19faf3ece94ea5ff617259c8875ffecbc9df419cfab6780b14e9bdc265d890e61bebd45e61
40918d0b4c85aeb2121ace4c0accd1bcc3ce75b72b076401316a15427c33c80f3fba34ffa148a40d
6dcbadf07c804f34f6b54a9bda8554e38633090dfd784db077f8b2fe4f53081ff6f9c5c39a642d48
dd08d6867fd8ce1511a0e2d21efb99641c76b8c23ba511de2717107c58086aea3c1cdad67683e18a
443e5042784c5a1416bd90671ac86f52405b3eefda53df58d70dbb9f181d638adea54a3e8cfb6c78
75bf4642d6ac3c0ad595fc5ef4b75c2564d013e47763aec5a7e5dbb1885914b8da0ae4fc52f981d8
8d3a8f5e56e70599e14cc3ed8c5ebce5561076e675504167ea7454c8efb80e472d16fd3d52282cee
13ffd6324310feeda66cea4a22e63a3d3f05a3e3992a6b7e607dd8df79491ea9eae12e898a50660e
7d77446ae83fd39d4047a541ee1cdccb04a3f822147cbf8a8443b454352f5de038e61a3a7728bede
7226e7efff4ec45e079d6af2c27ec74c1d1b96f1997521bed1a5910c3305e07bd4336a63f85262b6
445425def17653b0b90f60db0b08ea8a3edb8eb7b80ff0a6f79044c2483cc8e5924a8970ec6eb5eb
ee85bbc158ad7ca3aca6384fdba318bec6555ca54b62b31ac71b5b88d620e4c80b607efb33585bbd
bafa9ec6d4cc0cc80bdbbec20f8c4ef1fbc8b80e54dec065ff0462b340f23ebe063f8dc04428638c
ad0063507c0789510e274e6ce9d9923d0e0a3f384a3690f60de86e758704fb4d714c6bad73332110
06eaec5d07f40eefe587e2f5e768a633ee33864e408ed3fde4e8918fec6e2a351227e98ea15f8095
486d39f05090c5a8c3b8eb86ac51b2d53932ffda42e47e6b25306abeae12eec342d08f84b39da53f
837910366aa4385573a307a9f451e951f6829fcfd23d59dbbf691332bf6aac7212b05e90a7b710dc
74c90425448bdc0c52f84e3070234995fa1da423af7146cb53859308dd7cd239505e49055af21294
b3646994fd860432fd860991b1e8456dc8e2915068872f3fc85d4b74cd2dc07d67b86d9b0a79a8f2
1294eec2fd85fa100380130dc3460ef058874c4057d57fd4961a17dabce59c0ecd5d9634b823ec20
37191a4764c4ea5f9b54981e1413c400496a20ee53b2ccb1f037f7898335de7884f0664f10d9a678
8d03302e935532de7e43437f5d033cec5d994aa2089fa47dc9bf7a4c4feecb6ad761f75e395405c7
93c12290d250c006477aa8fcfccf1c929c04722fc45b0e9bf3d1c455d3131c76296d309c9f822fee
85e5a0a39e095b2878a79e3a511236195993269d9d8ca5d60266de63465c2e7b3aa2635f8ea9ce7c
49a128d71c5a7bbb40a818fbfbc3b744c21b9e0b71bbc81ac41ab4913b77b17db7d15a009b2482c6
933dd00f9ab0a4c0b122047b389cf5ffc38651af0c6594b17a3576d0246afa1a162873a81449cad9
730416c75919244a44ce26b7a8c9d900f75a11668579596f8fc5aabe6cbe694f979b72e00d879a33
c15387de303a64787eda70114b18fb1fc88995b456ea657b33635d5e34840a392824d71a0bcbfaca
9562db83f112cbe4b865cb9955cd108e5e73877a6ef9e888fb16cd8025bbc89756860570ab3329cc
8fda722f6aba38ba44ea2abdd315690129f19679d616f16dce050022636d48e28add6888edef631e
a1ec4b421603e2dea1219ff6b3efc31742e430711e800e533f31562b275ad0c0772d69873a185376
7faf6cf9082647827b2754652c5d7f7fbadf7c975104f16bbc55063e30bb53827a80d79ee3e823bc
00c9e435dd5a31a3235c79c64575a373c9ad6956702d316629d9bcee2d1bfec2924e20998c8225f5
250e38960a9fa2ce70d5fa9deb7543de33130a2a009e7a2d8ec599bbfe3ae6f22ae50cff394e5bbe
c63cb6f5890e4bf7e5c0ea4b9c3bdb77f58a9e6ea2d41dc872e209b3516a0bab6150469776ff02f0
9f6eca33d5a42d88f3c7fb1d93796972473530ed8a3c2c846abf5ae55836e45f275bc9551fdddcb7
a6c4b0a3cfc34cfd6c6de5ce7bc0aa4cb78957ac7ecc290242baf5cbc0529157f8d68f0b537fec70
3bf230cc8cf74ebdd9a87a865b467ab3a5909d440851ba3f9c1a6ea8e82a9e4559232e9ee2dd64bb
556a111be2a02d81d0ebddcf4b32f7a21d1c9ad977731f02863fe0f1db307b779e743d7266a9d32e
6071137f59819ac6d4f10a7bf5557418b38b5ba8e912a35a3380a37ce56381180ff4afe29d214c5c
41d265269471dd5fa0941076bc9b2d8aa752ec2710ca7b7df15523c6611ca06929e8bc1503c5d4dd
3eacee965489f313ef4c265c065bbdf53d2c56e243ee6c9371d99f5f78ced9f401176dc50e17092c
63f16d28cad864eb1b1d870ce4f3f75365cbd77561440d98b693c0afe1a283955ed1fdc6b2097910
4ea2aca1d3989aa3eb07efe51c9edb92181d3277bd50839ca8fcf6e30eb8d35a8d5db4f762e2ca91
db990c4ff8ce2836141baeb3aa7227294c72ebcbd0e333ac5181135ed4135d891039770b2ddc341e
f67425add5234b699474e63262d161cafed1b13191e1ec87f24ce4579c1cfb284f3fbf5d76c3e2c2
f738172e5c37ee4efc9a3a04aa5911530e27fd1893d807bee7b54c26c894824de22bf467f94480c3
d36546e7217ac5d5ce6312388136fbde7fbf71a2067888338150556e91e8c1f0718f6f7c1e37fad6
466185d7f5264aa592d95d387452bfd116680ab1574d718c17d4fae153980a692d7f12fab998662e
70cc41eb90f43df9ea19d4e6340375e62281eac19492de70be380222b2a5c119e65e62c34a5f7c5e
939f0d1665d236fb93cd247628bfd8cc03a214e157ca0f36116e0c25203231f98dde3f6c66e7613c
ff7ca313e803f94eebb724dda1ed7049704c5328829fc11ed0b54c3e7bd015a724e7c1f30b8199ac
dc0dc5eba6fdb8a1eb8fb14980643398f55c477874b7a063af41cff01958ea987afaf3a10494a848
81b2d22b8cca2c2bb0c3a783e93f968d7b4e4be2fada329457e489695432b14cc91982995c89d181
a5e4bb278837f00973c19f4b592461f46dcd4f31e2fde2a9016694fb1c3b0a3f307cfad52962c9e2
5c560622ebc1cd2a2f90b89f735f9299db1ee49a773012cd92cb5cd5ac2bdc57de03ee80da8e0396
6d6668fc91f97f49bcf20bf8b74ef781125fdb0f5175311401972b3e33c3c82cb9424947d3bed6e9
8f3dbfc8263caa3e85ea03904f48bad55780af1647e6b07cff47c0e9aeb7bf6554cf8c8c4ad59a83
8f29ca3076da164809f766291ceeedc47887bad862962a2b31e9f6df9a6ba91956a7922da65eac16
d1cabec0fa0f8fd78e4e2cf3bc4c0bf6b8a46cef38ce3b6de5fab9394590c4c0061d8e78a214dc96
21be0ca0658de60da94482164f56c886be3d320798a1d060e9ba0d41bf123b6624e80e12332a0bf0
decd445f1b62c485d6a2a452e44c431faad7a3a471b3348aa2dafaadf2cdce20832cf60450d8780c
22c53424014521ba22a95319097a4dc6e205ec9a45c4c73d0b9d1519f0ccdcb4de6bf3a7879c5886
4a7b306c2ded0975243720a98410e43b10ab1ea7cb019484c72c4d0d1f64d4da67eaacb26aa620ca
09a8c18c9c04c5e5b578765c209b0a19916c9020354c45bb98749b91ef49a061cc0b2c36e5b69953
64f2fb820f001dfaf60fcf01e6c3718e336dcb8fe2127f1e15030e585acee88d0454b5bd87e903b1
f7d4b0580cac23f77ad96585365cd4213bd9ac050748879873a6c584151c0546b6561a6fd00bb5c5
f5da6f11a80045d9c4a78244cdaca0a970736a42ac12dbb7dd02acf83b79a861f28063a4a05dbed5
c128c2026af8f10bef990305358b822536e4ddc6a8b3e93876d46653fb140702a08415ff41ef3f28
ea2c43dcea47dad6b70ffd0d78869041467cb36e6abe85916b5a06c3f13015d9f5767e5e24147e49
6545af10a3867f37da3c1d47a8a94e037b0ca61f80a7240df5cb3ae719c53ca8af71cf90a73de151
487258be0cd9c16d384d6a0e51135edce559a9f7f877f9be1f5ccdf5e937168b0cd48e169ea8d86e
da481b6a82bc1ed6a8ad34c12cf69dabe0df585c96665464019bd3144983ce2bc96eb8dceef230f7
a1fe3f0ab6abd6a8e33c37e8c1042a3d388fd77a65c847b574604dc7bc9b59e3605b1c0dcf4c1cbd
6c4a781402135bcf53beb3d5234b53a0bee78196be2e58de50e3818d4f1edb5206aabf600ef7f377
dc1d2df5bcff087710b1d60698e9112a55a3803834b273f8b67a5916150f5a19b5f71ac1e882dd15
6599b1f9e99c64acf8b45bfd02caf128cf7874ca2e890b604207e410fe96858d4505a4d7320a2251
0c8e466fbe521970d7fdf688bc804475e1c6552c84eb4b2cca8e83f6bbcf824342f2abebc862a3cf
2de5e6e398bab927f80a09a91246893cb9fd696e19b79a3a3a6b8eb6b59b9429f0c5d2e6f9d544ba
efe74a4e3254096b3965e5bdf04084d11c3354fc8395c15a81782100681843722822a8141beade19
d1450059f4fb6db958289e85b24bd9c5c5a1298a3ee0bb05799c556816f23b3f38dc0c51a85e356f
508cc19300261ed1084daf8b70cf60a2041e06a367aa9a3289a9c064ac8fea5209a1c11f29c07097
8b8590152240dd7495a20a24e9704307d6d7e9d978428f14b45fae49247e62746724d71b8fdd58d6
3ae823f95667a50c81f99bf4f3938106a1fc67508fdab119cbd6da7483957ab3ae7b3a941666086e
91e780c5b91a496a46d52f2b3bc405465f7a73dd4610e2c9210b6625de87df5af8b72583e46f9573
7c131b8860c8eeac1721f294647f0195abaeaaac8d912896210341cf391eb1ed0a237acc86adf235
61f7fabe26225c7175ffd5c9e3ad63e55abcd1d786f4f9b2a9a0c9316959a7cc3584a6dab4431d54
e54dd7e028cc1a62343e359106e9ef61690c801845f857542746a22c05e5d04afea287e525f675f4
87daa9adce9b3b4b4a55c8f84fbe7d64ee63eb84d5a58116e9833b60e76383db6954f4d260577821
c8a6c2d61a54671587c90a2645800ffbb56575602d089d0b0cbe4a0278057cbdf96ac85440cd3a83
5f470127c853baa4f772552ef9abde4f7304144f4d9917e2359d555ab29727178d796e2c64af50c0
f872895a8767fdf22b0306f56f4434748a23ff238540b6a989f83d153b3a544541b894cc070f3030
340daf92334f37b077584422d38023fa107c81b4b657cfa956fdb273b250afe275a652a702056043
2beff99c32c4a2d2fdd021ffc8166b230d38b79cfd85a675cbbfa525cedf44652150417b2f09e95a
1a079bec0b05d29b82f83d92276b6484d6731c04c2ad5701cffcb98e407cfb7e8918904bdbbaee5b
88de508c1db6e21eee68f225f617ace11201e2aec6d787358ee3417dab75b76906d61e44a5d50f1c
a36ce0e465ef761a5177b26cc2f6fc853ac8866d789f4ec6b40c1ae8ef970d4aceea710502b5b975
c55dce5cad29fa30a5f6b7941e24f0d5a8de3dea3a6f2e51cb336995536682471475f4c9b72b02f3
25f569a78c053f267522a4d2366488f8efe9953c24b8577d7893a64389097da54c6b8529b4437b23
8ff1255e73c088fed0413a736104d966cfd3fbffc65e7f95421e1a3a87eaba82f3b860bc5dcb1bb3
959e89c33392eb045f95246dc1738f1a11cfc55b1036d95afce726ff4cf03a97cab35dd3c229b0cb
d23f55f902f5cd9209628cf588ae4640c1c02d9cbc7f192aa9ac8ac1f750faf4e03da2e129c6468e
4e5c0b256ff6352d4408eacd15b581f9365f435f73b1d1a18b7b23bce65d8d392a3ac29070716acc
60b3bf8a7295b2bec9ab7760b4d526ff704f17575d3458cc06523584dfc37c82b48e68cbb4d4651e
47128bc34ecb5bff8721ba43a20f401322c018db92b6de282fbbf1f45760a670de2d460702e46b53
dc6d98901a674a443bc4eceabc383c6d05d41c20f4bc81c029254d1cbb8d82657c61d8f7af12e601
cd4a6f40b1ecd81e509440a2fd0ca85a5a6e8688dad98a2775d40d4dadda3c72fa8c109bba8d56a9
27c47213dd7440a99fd00f67e5f68e4c9beab300e698929367e1ea4e6c2eedb1f192d9b64acf6366
04abe5655815038a30898ccc3aaa000e5523a014a11379c91c5d6ffb80dd10a51a37a37204ee783b
b5af843bba2c675b322e9816f2738dd4a76abc37f947cf15896d4b2913e5f0178580e4f663068594
5185c2967a37bcfb3a8e03fb69c452a724015332312efe2599b3816f64a294dee43680bbc9d60747
c3fb38285b9d195abc140892e562f544caf667c47c34037126f8875f5215fe7cf05c86bf0c3487cf
a6d942be8fa9341be1a59a5c4ba669c5f2810049912d6db3db5c7ffc0754a9812b56cbd6f956587b
4401136cac588fc0193081d47729ffecdd1199dea2000f2b832f08c250eb8608910aaa95912fa1db
a579f810e5ec74d267d195ab4d7deadb97cf621964f6be74dfdf8c730ee6e78c95bad5a9cbb10553
6fb96f12032c28e96793900ea03a79df18990a0dfa24eea9d2bba71cf6fdc743610c57ce580afe18
0869d7b798ca670965d74dbb807a9cce9294caa660ff5ea043bef64e733db208853008207a489002
37336e1b091c4b545779f08cc409eb7cd8a85d528a2e5244319ca5960ebf82b099ad6c8cb1e4b495
6fc0721c4a18ecc15242aee4d6d12fe1c2a9fcd70632c89cb63a7e7aeb566594ead8a87c789dc734
06b707bd41356357b35ce683f575ac5dedd11b858c5cc59781aca4e0616e60e90a17415686feb98d
9af2f74887a7167d74dfa5fd1326e164dbd66e4e34040e971efcea03723e661a212ed002c54968e4
f330c894368b6188d4ecfd3d6507c511d5a9b994d56ff074594866aed5b093596375e34a176081ca
724c7e6b07c5e8c60cea3b9e357391732071a3b9c207e4fdd6bee496429ff02a0aaff441de6457e7
3ad546a22665c038124a7aae3dff438c873933c09be217c7e5ea632a4e5dbc3032a4e8e049cfb1f6
b9628aa3e3018dd7b6f24ca57debc473a5a763667ae9960a816e8ea0f6d67f62c67805f8c3ca5007
ee0e7702453d3da01632122fe760358448b31e47ec87427d46368240846e5adf9356c26812dda3f5
8453a63188476c6e7337c9fe390fe3f44ec05151b17ae633786aed5274cd37e1f7bb6ae11fbfd28f
694ced816c268d3974f89483a8de9751b67ca6e7898c7e7ebfde108851f394599477ce81bd382bf6
90df77ee4840cf646cd867098af8194046b3d728330ad9e149631a36437d1ab4ab2cfe9152b742d2
48c4a49e7abf1bf64583625985d9ca2d7471944dc92b20f9e9c7626594854616ebdb774aed6fd096
ef23686c03211a847f435eb7d44f91446d86df923fd8a54683715fc9854129f66bc9b2a04ebc310a
c0436176f6502b4a8289e546c2cab746a5d9686b277095e3935632342409224c1fb0c2ed3eb84e90
119a7da976316c231f3d24fd4554d352ddb42b13b0b0c4a8807b7c0f5baab7071fedd1ff1c5551be
76611d4ca9c74a1e9a0c61e985f2a0573fb703aa4885a53d96820d6639601f598be4adefd62e3770
249153ceaa5c65fc3dccec184a2a67e1893f6ae6c7ba201add5d13fecefd8de7fb75a0772b412ea8
0fd9e5ac7a71150df979e7c4491e106364ba3d751448181cab99e06da01de528c1c1d4fe91f51188
d43b8a3dc610e84e024c9b9c4d90082db79ec5cc1b594797688dd89caaa6db56e26b51a89188e857
9d4b80179b29b214e4e789a0ad73b3ca8bc97eedb6fe726f48a33e43eabce9a5ca67d513593c92b7
76d7236759a225770fcaa6a838c8527e2267fbb5533fe534467c34829e3859f9a8d0a3643e7bff64
6219b9d03aaa4af82f39ac7e640e44d8cb151b73c521cfc680ae9882b674f5e63305bb6e6bdd2690
57fe118aded37ba21021ecffe80321c6ebcec545174988ea1ab46bc16515bc5933f06807c8f1b0b5
6e914967bf67adb4b24ea85aa85a377b4c7af10d66835cf59ee859014bb024a982b76677e09a95c3
9f545f34de9b8078cfaa17d93cb9ce821840ba3e29cd49c7a8441024b9b0622968ddf9b3d635b0c0
6a22e790f4decdfa05436adc28b0e6e958b1fcac5fc661463aaa2c1b3c7f77e10bad0aaf061bd6db
1d78030c790d1e3a675b946ab01d2fde21b4fe65a905e1c0816611f606ded017967257e4ed618bc1
a8f6af30461fe5f63f0df23f589b88cb28d8b5e382969403753046f265770cec4468b743013790e2
735daa54244db6af0e54e82aa7bdf430c41ad83e26c1a358f36876e0a2c52f278b9fc23a2e966886
c397acd4f8027d380c051ff144fd7e7f2771172819014febe2a283cab78d2731708c546d3de32b15
7eb13ae5949a524068e792c80a38e02b1eb4f5a0bdfbdd112bc2ffe9b901b2c7bac58dadeca9a4bc
9f6fa653adddbc47920f9a37a716ef9a89a928a5c22a5d31db8425ae816797e08f5414ad14413ff8
73a2c2ec55a3c6ac86ee21a6e610c06d7a6a1af9ea1410921bd3a11dbfc99755fcdda9d8c5d745bd
02a7e1160425c27b129e219ff120d22d7f140cd60bcf0fd656896317f5c03be094f9e5b53c4048cb
e2dd29588418d644b8769a0b18079be7957d30e60bb4f0158743afe3f135e3459dbe70332fc2ec65
fec208aaa28616351bf5938a6c258bb266893f7b3b89c34734fd304a984dcc0c87bc13a645c79889
57fae6b0efab21eb12daff97bd78cfc448488ab76c45ae10170fd31cd36ec5665aef1d2553e03c7f
32cf0c5f0ef28df14a104d01c9fea55c013905b255f794ce5b07309faf052403fa6957045f685b79
eee297a348bc862cfe61c6f994c5cfb7fb2fd2b19843a72fe53cf018be4de3b86a2944de305d034d
0a0eb3d4fc0a0d6fa57428344562b19e508ec83db620395cbf2021a51d7b5f09977e3b5e0385072a
20d116a42b4d29ef4168b9ac151999b26229e5b2c536b88877d0f099866d26757895786d94e5ce57
2f8f01b73ef641f03252b5fa0a803e7785b7dc69f1db34ff214acdecd273d55901682453ed24ea1f
37f4d18e66d4ffffd8ceb532ea3780ce6ba47c7523c6513aee207ebbd35578b0aac0df2f07591c78
3f522595462b9f14cc36f8ddb9026bd82dc0177649b50dffe52c1c
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 SSC_Copy_State <Virtual>  0
 HBW_Pick TASK  0 -1
 HBW_Copy_State <Virtual>  0
 PID_10 PID  0
 PID_11 PID  0
 hunt_exp_light PROGRAM  0 -1
 HBW_Home <Virtual>  0
 HBW_Pick_Sto <Virtual>  0
 test TASK  0 -1
 HBW_Pickup_ST PROGRAM  0 -1
 HWB_Extend_Arm <Virtual>  0
 HBW_Retract_Arm <Virtual>  0
 HWB_PickUp TASK  0 -1
 HBW_HTO1POS <Virtual>  0
 HBW_Left_1Block <Virtual>  0
 HBW_HomeTo2_Col <Virtual>  0
 HWB_HomeTo3_Col <Virtual>  0
 HWB_HomeTo2_Row <Virtual>  0
 HWB_HomeTo3_Row <Virtual>  0
 HWB_HomeTo1_Col <Virtual>  0
 HBW_move_left_1 <Virtual>  0
 HWB_Home_to_11 <Virtual>  0
 HWB_11_DropOff <Virtual>  0
 HBW_Pickup <Virtual>  0
 HBW_PickUp_R1 <Virtual>  0
 HBW_Send_VGR <Virtual>  0
 HBW_PickUp_VGR <Virtual>  0
 HBW_Return_VGR <Virtual>  0
 HBW_MotorsOff <Virtual>  0
 HBW_ConvTo11 <Virtual>  0
 HBW_Return_Top <Virtual>  0
 HBW_MV_11_12 <Virtual>  0
 HBW_Conv_12 <Virtual>  0
 HBW_Conv_12_Lat <Virtual>  0
 HBW_RETRACT_13 <Virtual>  0
 HBW_Retract_23 <Virtual>  0
 HBW_Conv13_Lat <Virtual>  0
 HBW_Conv_2Row <Virtual>  0
 HBW_PickUp_R2 <Virtual>  0
 HBW_Conv11_Lat <Virtual>  0
 HBW_Retract_12 <Virtual>  0
 HBW_Shift_C1C2 <Virtual>  0
 HBW_Move_R1_R2 <Virtual>  0
 HBW_Retract_22 <Virtual>  0
 HBW_Retract_21 <Virtual>  0
 HBW_Retract_31 <Virtual>  0
 HBW_Move_R2_R3 <Virtual>  0
 HBW_PickUp_R3 <Virtual>  0
 HBW_Conv_3Row <Virtual>  0
 HBW_Retract_32 <Virtual>  0
 HBW_Retract_33 <Virtual>  0
 HBW_Retract_Done PROGRAM  0 -1
 HBW_Retract_DN <Virtual>  0
#END

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"VGR Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC410 C410 1 0x0 MC409 C409 1 0x0 MC412 Y28 1 0x0 MC412 MC450 1 0x0 MC411 C411 1 0x0 MC408 C408 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC413 Y29 1 0x0 MC413 MC451 1 0x0 X27 MI200 1"

// Rung VGR_Copy_State#2
// Offset 27
NOP

// Rung VGR_Copy_State#3
// Offset 28
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC800 Y41 1 0x0 Y41 MI801 1 0x0 MC802 Y43 1 0x0 Y43 MI803 1 0x0 MC804 C804 1 0x0 MC805 C805 1 0x0 MC806 Y44 1 0x0 MC807 Y20 1 0x0 MC808 C811 1 0x0 MC809 C809 1 0x0 MC810 C810 1 0x0 MC812 C812 1 0x0 MC813 C813 1 0x0 MC814 C814 1 0x0 MC816 Y45 1 0x0 MC817 Y46 1 0x0 MC818 Y21 1 0x0 MC819 Y20 1 0x0 MC820 Y44 1 0x0 MC822 Y52 1"

// Rung MPO_Copy_State#2
// Offset 45
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC800 C1600 1 0x0 MC801 C1601 1 0x0 MC802 C1602 1 0x0 MC803 C1603 1 0x0 MC804 C1604 1 0x0 Y31 MI800 1 0x0 MC850 C1605 1"

// Rung SLD_Copy_State#2
// Offset 19
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"SSC Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC606 C1200 1 0x0 MC607 C1201 1 0x0 MC608 C1202 1 0x0 MC609 C1203 1 0x0 MC615 C1215 1 0x0 MC616 C1216 1 0x0 MC617 C1217 1 0x0 MC618 C1218 1 0x0 MC619 C1219 1 0x0 MC620 C1220 1"

// Rung SSC_Copy_State#2
// Offset 25
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block HBW_Home
$LGCMOD HBW_Home

// Rung HBW_Home#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Home#2
// Offset 8
STRN C215
ANDN X0
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 60 60
OUT Y51

// Rung HBW_Home#3
// Offset 26
STRN C215
ANDN X3
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5

// Rung HBW_Home#4
// Offset 43
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y76

// Rung HBW_Home#5
// Offset 64
NOP

// Rung HBW_Home#6
// Offset 65
RET

// End of Code Block HBW_Home
$LGCEND HBW_Home

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 Y40 1 0x0 Y80 MHR102 1 0x0 MC101 C205 1 0x0 MC102 C206 1 0x0 MC103 C207 1 0x0 MC104 C208 1 0x0 MC105 C209 1 0x0 MC106 C210 1 0x0 MC107 C211 1 0x0 MC108 C212 1 0x0 MC109 C213 1 0x0 MC110 C214 1 0x0 MC111 C215 1 0x0 MC112 C216 1 0x0 MC113 C300 1 0x0 X2 MI101 1 0x0 X10 MI102 1 0x0 X11 MI103 1 0x0 X3 MI104 1 0x0 X0 MI105 1 0x0 X6 MI106 1 0x0 X7 MI107 1 0x0 X8 MI108 1 0x0 X9 MI109 1 0x0 $HBW_Encoder_X.Acc MHR1 1 0x0 $HBW_Encoder_Z.Acc MHR2 1"

// Rung HBW_Copy_State#2
// Offset 57
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block HBW_HomeTo2_Col
$LGCMOD HBW_HomeTo2_Col

// Rung HBW_HomeTo2_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_HomeTo2_Col#2
// Offset 17
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_HomeTo2_Col#3
// Offset 22
NOP

// Rung HBW_HomeTo2_Col#4
// Offset 23
NOP

// Rung HBW_HomeTo2_Col#5
// Offset 24
NOP

// Rung HBW_HomeTo2_Col#6
// Offset 25
RET

// End of Code Block HBW_HomeTo2_Col
$LGCEND HBW_HomeTo2_Col

// Beginning of Code Block HWB_HomeTo1_Col
$LGCMOD HWB_HomeTo1_Col

// Rung HWB_HomeTo1_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HWB_HomeTo1_Col#2
// Offset 17
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_HomeTo1_Col#3
// Offset 22
NOP

// Rung HWB_HomeTo1_Col#4
// Offset 23
NOP

// Rung HWB_HomeTo1_Col#5
// Offset 24
RET

// End of Code Block HWB_HomeTo1_Col
$LGCEND HWB_HomeTo1_Col

// Beginning of Code Block HWB_Home_to_11
$LGCMOD HWB_Home_to_11

// Rung HWB_Home_to_11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HWB_Home_to_11#2
// Offset 22
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_Home_to_11#3
// Offset 27
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HWB_Home_to_11#4
// Offset 49
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_Home_to_11#5
// Offset 54
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HWB_Home_to_11#6
// Offset 73
NOP

// Rung HWB_Home_to_11#7
// Offset 74
NOP

// Rung HWB_Home_to_11#8
// Offset 75
RET

// End of Code Block HWB_Home_to_11
$LGCEND HWB_Home_to_11

// Beginning of Code Block HWB_11_DropOff
$LGCMOD HWB_11_DropOff

// Rung HWB_11_DropOff#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HWB_11_DropOff#2
// Offset 8
STRGE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_11_DropOff#3
// Offset 13
STRN C215
ANDN C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51

// Rung HWB_11_DropOff#4
// Offset 31
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y4
AND ST2
OUT Y5

// Rung HWB_11_DropOff#5
// Offset 51
STRGE 2730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_11_DropOff#6
// Offset 56
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 60 60
OUT Y7

// Rung HWB_11_DropOff#7
// Offset 73
RET

// End of Code Block HWB_11_DropOff
$LGCEND HWB_11_DropOff

// Beginning of Code Block HBW_PickUp_R1
$LGCMOD HBW_PickUp_R1

// Rung HBW_PickUp_R1#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R1#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R1#3
// Offset 41
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R1#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R1#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_PickUp_R1#6
// Offset 69
NOP

// Rung HBW_PickUp_R1#7
// Offset 70
NOP

// Rung HBW_PickUp_R1#8
// Offset 71
NOP

// Rung HBW_PickUp_R1#9
// Offset 72
NOP

// Rung HBW_PickUp_R1#10
// Offset 73
RET

// End of Code Block HBW_PickUp_R1
$LGCEND HBW_PickUp_R1

// Beginning of Code Block HBW_Send_VGR
$LGCMOD HBW_Send_VGR

// Rung HBW_Send_VGR#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Send_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_Send_VGR#3
// Offset 37
STRN C215
AND X2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y48
AND ST2
OUT Y49

// Rung HBW_Send_VGR#4
// Offset 56
NOP

// Rung HBW_Send_VGR#5
// Offset 57
NOP

// Rung HBW_Send_VGR#6
// Offset 58
RET

// End of Code Block HBW_Send_VGR
$LGCEND HBW_Send_VGR

// Beginning of Code Block HBW_PickUp_VGR
$LGCMOD HBW_PickUp_VGR

// Rung HBW_PickUp_VGR#1
// Offset 0
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_PickUp_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_PickUp_VGR#3
// Offset 37
STRN C215
AND X11
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_PickUp_VGR#4
// Offset 56
NOP

// Rung HBW_PickUp_VGR#5
// Offset 57
NOP

// Rung HBW_PickUp_VGR#6
// Offset 58
RET

// End of Code Block HBW_PickUp_VGR
$LGCEND HBW_PickUp_VGR

// Beginning of Code Block HBW_Return_VGR
$LGCMOD HBW_Return_VGR

// Rung HBW_Return_VGR#1
// Offset 0
STRN C215
ANDN C251
DUPBOOL
AND C299
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y6

// Rung HBW_Return_VGR#2
// Offset 22
STRN C215
AND X1
DUPBOOL
AND C299
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
POPBOOL
AND ST2
OUT Y48

// Rung HBW_Return_VGR#3
// Offset 44
STRN C215
DUPBOOL
AND C299
ANDN X1
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_Return_VGR#4
// Offset 67
STRLE 2550 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_VGR#5
// Offset 72
NOP

// Rung HBW_Return_VGR#6
// Offset 73
NOP

// Rung HBW_Return_VGR#7
// Offset 74
RET

// End of Code Block HBW_Return_VGR
$LGCEND HBW_Return_VGR

// Beginning of Code Block HBW_MotorsOff
$LGCMOD HBW_MotorsOff

// Rung HBW_MotorsOff#1
// Offset 0
STRN C215
ANDN ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_MotorsOff#2
// Offset 18
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_MotorsOff#3
// Offset 36
STRN C215
AND ST2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
OUT Y48

// Rung HBW_MotorsOff#4
// Offset 54
NOP

// Rung HBW_MotorsOff#5
// Offset 55
NOP

// Rung HBW_MotorsOff#6
// Offset 56
NOP

// Rung HBW_MotorsOff#7
// Offset 57
RET

// End of Code Block HBW_MotorsOff
$LGCEND HBW_MotorsOff

// Beginning of Code Block HBW_ConvTo11
$LGCMOD HBW_ConvTo11

// Rung HBW_ConvTo11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_ConvTo11#2
// Offset 22
NOP

// Rung HBW_ConvTo11#3
// Offset 23
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_ConvTo11#4
// Offset 28
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_ConvTo11#5
// Offset 50
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_ConvTo11#6
// Offset 55
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_ConvTo11#7
// Offset 74
NOP

// Rung HBW_ConvTo11#8
// Offset 75
NOP

// Rung HBW_ConvTo11#9
// Offset 76
RET

// End of Code Block HBW_ConvTo11
$LGCEND HBW_ConvTo11

// Beginning of Code Block HBW_Return_Top
$LGCMOD HBW_Return_Top

// Rung HBW_Return_Top#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Return_Top#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HBW_Return_Top#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_Top#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_Return_Top#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return_Top#6
// Offset 69
NOP

// Rung HBW_Return_Top#7
// Offset 70
NOP

// Rung HBW_Return_Top#8
// Offset 71
RET

// End of Code Block HBW_Return_Top
$LGCEND HBW_Return_Top

// Beginning of Code Block HBW_MV_11_12
$LGCMOD HBW_MV_11_12

// Rung HBW_MV_11_12#1
// Offset 0
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_MV_11_12#2
// Offset 21
NOP

// Rung HBW_MV_11_12#3
// Offset 22
NOP

// Rung HBW_MV_11_12#4
// Offset 23
NOP

// Rung HBW_MV_11_12#5
// Offset 24
RET

// End of Code Block HBW_MV_11_12
$LGCEND HBW_MV_11_12

// Beginning of Code Block HBW_Conv_12
$LGCMOD HBW_Conv_12

// Rung HBW_Conv_12#1
// Offset 0
NOP

// Rung HBW_Conv_12#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_12#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Conv_12#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 80
OUT C251

// Rung HBW_Conv_12#5
// Offset 45
NOP

// Rung HBW_Conv_12#6
// Offset 46
RET

// End of Code Block HBW_Conv_12
$LGCEND HBW_Conv_12

// Beginning of Code Block HBW_Conv_12_Lat
$LGCMOD HBW_Conv_12_Lat

// Rung HBW_Conv_12_Lat#1
// Offset 0
NOP

// Rung HBW_Conv_12_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv_12_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv_12_Lat#4
// Offset 42
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv_12_Lat#5
// Offset 47
NOP

// Rung HBW_Conv_12_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv_12_Lat
$LGCEND HBW_Conv_12_Lat

// Beginning of Code Block HBW_RETRACT_13
$LGCMOD HBW_RETRACT_13

// Rung HBW_RETRACT_13#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_RETRACT_13#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_RETRACT_13#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_RETRACT_13#4
// Offset 46
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_RETRACT_13#5
// Offset 68
STRGE 7650 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_RETRACT_13#6
// Offset 73
RET

// End of Code Block HBW_RETRACT_13
$LGCEND HBW_RETRACT_13

// Beginning of Code Block HBW_Retract_23
$LGCMOD HBW_Retract_23

// Rung HBW_Retract_23#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_23#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_23#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_23#4
// Offset 46
STRN C215
AND ST2
OUT Y51
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_Retract_23#5
// Offset 65
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_23#6
// Offset 70
RET

// End of Code Block HBW_Retract_23
$LGCEND HBW_Retract_23

// Beginning of Code Block HBW_Conv13_Lat
$LGCMOD HBW_Conv13_Lat

// Rung HBW_Conv13_Lat#1
// Offset 0
NOP

// Rung HBW_Conv13_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv13_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv13_Lat#4
// Offset 42
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv13_Lat#5
// Offset 47
NOP

// Rung HBW_Conv13_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv13_Lat
$LGCEND HBW_Conv13_Lat

// Beginning of Code Block HBW_Conv_2Row
$LGCMOD HBW_Conv_2Row

// Rung HBW_Conv_2Row#1
// Offset 0
NOP

// Rung HBW_Conv_2Row#2
// Offset 1
NOP

// Rung HBW_Conv_2Row#3
// Offset 2
NOP

// Rung HBW_Conv_2Row#4
// Offset 3
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_2Row#5
// Offset 22
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Conv_2Row#6
// Offset 42
STRGE $HBW_Encoder_Z.Acc 1380
OUT C251

// Rung HBW_Conv_2Row#7
// Offset 47
NOP

// Rung HBW_Conv_2Row#8
// Offset 48
RET

// End of Code Block HBW_Conv_2Row
$LGCEND HBW_Conv_2Row

// Beginning of Code Block HBW_PickUp_R2
$LGCMOD HBW_PickUp_R2

// Rung HBW_PickUp_R2#1
// Offset 0
NOP

// Rung HBW_PickUp_R2#2
// Offset 1
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R2#3
// Offset 20
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R2#4
// Offset 38
NOP

// Rung HBW_PickUp_R2#5
// Offset 39
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R2#6
// Offset 61
STRLE 1400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R2#7
// Offset 66
NOP

// Rung HBW_PickUp_R2#8
// Offset 67
NOP

// Rung HBW_PickUp_R2#9
// Offset 68
NOP

// Rung HBW_PickUp_R2#10
// Offset 69
RET

// End of Code Block HBW_PickUp_R2
$LGCEND HBW_PickUp_R2

// Beginning of Code Block HBW_Conv11_Lat
$LGCMOD HBW_Conv11_Lat

// Rung HBW_Conv11_Lat#1
// Offset 0
NOP

// Rung HBW_Conv11_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv11_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv11_Lat#4
// Offset 42
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv11_Lat#5
// Offset 47
NOP

// Rung HBW_Conv11_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv11_Lat
$LGCEND HBW_Conv11_Lat

// Beginning of Code Block HBW_Retract_12
$LGCMOD HBW_Retract_12

// Rung HBW_Retract_12#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_12#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_12#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_12#4
// Offset 46
RET

// End of Code Block HBW_Retract_12
$LGCEND HBW_Retract_12

// Beginning of Code Block HBW_Shift_C1C2
$LGCMOD HBW_Shift_C1C2

// Rung HBW_Shift_C1C2#1
// Offset 0
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Shift_C1C2#2
// Offset 5
NOP

// Rung HBW_Shift_C1C2#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Shift_C1C2#4
// Offset 25
NOP

// Rung HBW_Shift_C1C2#5
// Offset 26
STRN C215
AND ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_Shift_C1C2#6
// Offset 44
NOP

// Rung HBW_Shift_C1C2#7
// Offset 45
RET

// End of Code Block HBW_Shift_C1C2
$LGCEND HBW_Shift_C1C2

// Beginning of Code Block HBW_Move_R1_R2
$LGCMOD HBW_Move_R1_R2

// Rung HBW_Move_R1_R2#1
// Offset 0
STRGE 1760 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Move_R1_R2#2
// Offset 5
NOP

// Rung HBW_Move_R1_R2#3
// Offset 6
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Move_R1_R2#4
// Offset 25
NOP

// Rung HBW_Move_R1_R2#5
// Offset 26
NOP

// Rung HBW_Move_R1_R2#6
// Offset 27
RET

// End of Code Block HBW_Move_R1_R2
$LGCEND HBW_Move_R1_R2

// Beginning of Code Block HBW_Retract_22
$LGCMOD HBW_Retract_22

// Rung HBW_Retract_22#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_22#2
// Offset 22
STRGE 1730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_22#3
// Offset 27
NOP

// Rung HBW_Retract_22#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_22#5
// Offset 47
STRLE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_22#6
// Offset 52
STRN C215
AND C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
AND ST2
OUT Y50

// Rung HBW_Retract_22#7
// Offset 72
NOP

// Rung HBW_Retract_22#8
// Offset 73
RET

// End of Code Block HBW_Retract_22
$LGCEND HBW_Retract_22

// Beginning of Code Block HBW_Retract_21
$LGCMOD HBW_Retract_21

// Rung HBW_Retract_21#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_21#2
// Offset 22
STRGE 1730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_21#3
// Offset 27
NOP

// Rung HBW_Retract_21#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_21#5
// Offset 47
STRLE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_21#6
// Offset 52
STRN C215
AND C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
AND ST2
OUT Y50

// Rung HBW_Retract_21#7
// Offset 72
NOP

// Rung HBW_Retract_21#8
// Offset 73
RET

// End of Code Block HBW_Retract_21
$LGCEND HBW_Retract_21

// Beginning of Code Block HBW_Retract_31
$LGCMOD HBW_Retract_31

// Rung HBW_Retract_31#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_31#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_31#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_31#4
// Offset 46
STRN C215
AND ST2
OUT Y51
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_Retract_31#5
// Offset 65
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_31#6
// Offset 70
RET

// End of Code Block HBW_Retract_31
$LGCEND HBW_Retract_31

// Beginning of Code Block HBW_Move_R2_R3
$LGCMOD HBW_Move_R2_R3

// Rung HBW_Move_R2_R3#1
// Offset 0
STRGE 3600 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Move_R2_R3#2
// Offset 5
NOP

// Rung HBW_Move_R2_R3#3
// Offset 6
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Move_R2_R3#4
// Offset 25
NOP

// Rung HBW_Move_R2_R3#5
// Offset 26
NOP

// Rung HBW_Move_R2_R3#6
// Offset 27
RET

// End of Code Block HBW_Move_R2_R3
$LGCEND HBW_Move_R2_R3

// Beginning of Code Block HBW_PickUp_R3
$LGCMOD HBW_PickUp_R3

// Rung HBW_PickUp_R3#1
// Offset 0
NOP

// Rung HBW_PickUp_R3#2
// Offset 1
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R3#3
// Offset 20
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R3#4
// Offset 38
NOP

// Rung HBW_PickUp_R3#5
// Offset 39
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R3#6
// Offset 61
STRLE 2800 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R3#7
// Offset 66
NOP

// Rung HBW_PickUp_R3#8
// Offset 67
NOP

// Rung HBW_PickUp_R3#9
// Offset 68
NOP

// Rung HBW_PickUp_R3#10
// Offset 69
RET

// End of Code Block HBW_PickUp_R3
$LGCEND HBW_PickUp_R3

// Beginning of Code Block HBW_Conv_3Row
$LGCMOD HBW_Conv_3Row

// Rung HBW_Conv_3Row#1
// Offset 0
NOP

// Rung HBW_Conv_3Row#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_3Row#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Conv_3Row#4
// Offset 40
STRLE $HBW_Encoder_Z.Acc 2950
OUT C251

// Rung HBW_Conv_3Row#5
// Offset 45
NOP

// Rung HBW_Conv_3Row#6
// Offset 46
RET

// End of Code Block HBW_Conv_3Row
$LGCEND HBW_Conv_3Row

// Beginning of Code Block HBW_Retract_32
$LGCMOD HBW_Retract_32

// Rung HBW_Retract_32#1
// Offset 0
STRGE 3300 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_32#2
// Offset 5
NOP

// Rung HBW_Retract_32#3
// Offset 6
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_32#4
// Offset 28
NOP

// Rung HBW_Retract_32#5
// Offset 29
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_32#6
// Offset 48
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_32#7
// Offset 53
NOP

// Rung HBW_Retract_32#8
// Offset 54
STRN C215
AND C250
DUPBOOL
ANDN C251
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_Retract_32#9
// Offset 77
NOP

// Rung HBW_Retract_32#10
// Offset 78
RET

// End of Code Block HBW_Retract_32
$LGCEND HBW_Retract_32

// Beginning of Code Block HBW_Retract_33
$LGCMOD HBW_Retract_33

// Rung HBW_Retract_33#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_33#2
// Offset 22
STRGE 3300 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_33#3
// Offset 27
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_33#4
// Offset 46
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_33#5
// Offset 51
NOP

// Rung HBW_Retract_33#6
// Offset 52
STRN C215
AND C250
DUPBOOL
ANDN C251
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_Retract_33#7
// Offset 75
NOP

// Rung HBW_Retract_33#8
// Offset 76
RET

// End of Code Block HBW_Retract_33
$LGCEND HBW_Retract_33

// Beginning of Code Block HBW_Retract_DN
$LGCMOD HBW_Retract_DN

// Rung HBW_Retract_DN#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_DN#2
// Offset 22
STRGE 3200 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_DN#3
// Offset 27
NOP

// Rung HBW_Retract_DN#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_DN#5
// Offset 47
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_DN#6
// Offset 52
STRN C215
AND C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
AND ST2
OUT Y50

// Rung HBW_Retract_DN#7
// Offset 72
NOP

// Rung HBW_Retract_DN#8
// Offset 73
RET

// End of Code Block HBW_Retract_DN
$LGCEND HBW_Retract_DN

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#2
// Offset 3
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#3
// Offset 6
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#4
// Offset 9
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#5
// Offset 12
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// Rung $Main#6
// Offset 15
#BEGIN FMT_COMMENT 
"Hunter Demo Light<br>"
#END

STR ST1
RUN hunt_exp_light

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
SG HBW_Program.S0

// Rung HBW_Program#2
// Offset 2
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#3
// Offset 10
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#4
// Offset 12
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#5
// Offset 14
STR ST1
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#6
// Offset 22
NOP

// Rung HBW_Program#7
// Offset 23
STR C213
JMP HBW_Program.S1

// Rung HBW_Program#8
// Offset 25
SG HBW_Program.S1

// Rung HBW_Program#9
// Offset 27
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#10
// Offset 35
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#11
// Offset 37
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#12
// Offset 39
STR ST1
MOVE 0 N1

// Rung HBW_Program#13
// Offset 42
STR ST1
MOVE 0 C299

// Rung HBW_Program#14
// Offset 45
NOP

// Rung HBW_Program#15
// Offset 46
STR ST1
DUPBOOL
STR C205
ANDN C206
STR C206
ANDN C205
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 500 60
POPBOOL
DUPBOOL
AND C205
OUT Y48
POPBOOL
AND C206
OUT Y49

// Rung HBW_Program#16
// Offset 75
STR ST1
DUPBOOL
STR C207
ANDN C208
STRN C207
AND C208
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
POPBOOL
DUPBOOL
AND C207
OUT Y50
POPBOOL
AND C208
OUT Y51

// Rung HBW_Program#17
// Offset 104
STR ST1
DUPBOOL
STR C209
ANDN C210
STRN C209
AND C210
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
POPBOOL
DUPBOOL
AND C209
OUT Y4
POPBOOL
AND C210
OUT Y5

// Rung HBW_Program#18
// Offset 133
STR ST1
DUPBOOL
STR C211
ANDN C212
STRN C211
AND C212
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
POPBOOL
DUPBOOL
AND C211
OUT Y6
POPBOOL
AND C212
OUT Y7

// Rung HBW_Program#19
// Offset 162
STR C213
JMP HBW_Program.S2

// Rung HBW_Program#20
// Offset 164
SG HBW_Program.S2

// Rung HBW_Program#21
// Offset 166
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#22
// Offset 174
STR X0
OUT $HBW_Encoder_X.ResetLevel

// Rung HBW_Program#23
// Offset 176
STR X3
OUT $HBW_Encoder_Z.ResetLevel

// Rung HBW_Program#24
// Offset 178
STR ST1
CALL HBW_Home 0x1 DST511 "3" "3"

// Rung HBW_Program#25
// Offset 186
STR X0
AND X11
AND X3
JMP HBW_Program.S3

// Rung HBW_Program#26
// Offset 190
STR C212
JMP HBW_Program.S3

// Rung HBW_Program#27
// Offset 192
STR C215
JMP HBW_Program.S1

// Rung HBW_Program#28
// Offset 194
SG HBW_Program.S3

// Rung HBW_Program#29
// Offset 196
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#30
// Offset 204
STR ST1
CALL HWB_Home_to_11 0x1 DST511 "3" "3"

// Rung HBW_Program#31
// Offset 212
STRN C250
ANDN C251
JMP HBW_Program.S4

// Rung HBW_Program#32
// Offset 215
SG HBW_Program.S4

// Rung HBW_Program#33
// Offset 217
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#34
// Offset 225
STR ST1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#35
// Offset 233
STR X10
ANDN C251
JMP HBW_Program.S5

// Rung HBW_Program#36
// Offset 236
SG HBW_Program.S5

// Rung HBW_Program#37
// Offset 238
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#38
// Offset 246
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#39
// Offset 254
STRN C251
AND C250
JMP HBW_Program.S6

// Rung HBW_Program#40
// Offset 257
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#41
// Offset 259
SG HBW_Program.S6

// Rung HBW_Program#42
// Offset 261
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#43
// Offset 269
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#44
// Offset 277
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#45
// Offset 279
STRN X2
JMP HBW_Program.S7
INC N1

// Rung HBW_Program#46
// Offset 282
SG HBW_Program.S7

// Rung HBW_Program#47
// Offset 284
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#48
// Offset 292
STR C300
MOVE 1 C299

// Rung HBW_Program#49
// Offset 295
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#50
// Offset 303
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#51
// Offset 312
SG HBW_Program.S8

// Rung HBW_Program#52
// Offset 314
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#53
// Offset 322
STR ST1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#54
// Offset 330
STR ST1
MOVE 0 C299

// Rung HBW_Program#55
// Offset 333
STRN C250
JMP HBW_Program.S9

// Rung HBW_Program#56
// Offset 335
SG HBW_Program.S9

// Rung HBW_Program#57
// Offset 337
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#58
// Offset 345
STR ST1
CALL HBW_Return_Top 0x1 DST511 "3" "3"

// Rung HBW_Program#59
// Offset 353
STR X10
ANDN C251
JMP HBW_Program.S10
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#60
// Offset 363
SG HBW_Program.S10

// Rung HBW_Program#61
// Offset 365
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#62
// Offset 373
STR ST1
CALL HBW_MV_11_12 0x1 DST511 "3" "3"

// Rung HBW_Program#63
// Offset 381
STRN C250
JMP HBW_Program.S11

// Rung HBW_Program#64
// Offset 383
SG HBW_Program.S11

// Rung HBW_Program#65
// Offset 385
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#66
// Offset 393
STRE N1 1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#67
// Offset 404
STRE N1 2
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#68
// Offset 415
STRE N1 3
CALL HBW_Move_R1_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#69
// Offset 426
STRE N1 3
ANDLE 1650 $HBW_Encoder_Z.Acc
JMP HBW_Program.S51

// Rung HBW_Program#70
// Offset 435
STRE N1 4
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#71
// Offset 446
STRE N1 5
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#72
// Offset 457
STRE N1 6
CALL HBW_Move_R2_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#73
// Offset 468
STRE N1 6
ANDLE 3200 $HBW_Encoder_Z.Acc
JMP HBW_Program.S51

// Rung HBW_Program#74
// Offset 477
STRE N1 7
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#75
// Offset 488
STRE N1 8
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#76
// Offset 499
STRE N1 9
JMP HBW_Program.S18

// Rung HBW_Program#77
// Offset 504
NOP

// Rung HBW_Program#78
// Offset 505
NOP

// Rung HBW_Program#79
// Offset 506
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#80
// Offset 509
STR C215
JMP HBW_Program.S1

// Rung HBW_Program#81
// Offset 511
SG HBW_Program.S51

// Rung HBW_Program#82
// Offset 513
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#83
// Offset 521
STRE N1 3
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#84
// Offset 532
STRE N1 6
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#85
// Offset 543
NOP

// Rung HBW_Program#86
// Offset 544
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#87
// Offset 547
SG HBW_Program.S12

// Rung HBW_Program#88
// Offset 549
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#89
// Offset 557
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#90
// Offset 565
STRN C251
AND C250
JMP HBW_Program.S13

// Rung HBW_Program#91
// Offset 568
SG HBW_Program.S13

// Rung HBW_Program#92
// Offset 570
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#93
// Offset 578
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#94
// Offset 586
STR C300
MOVE 1 C299

// Rung HBW_Program#95
// Offset 589
STRN X2
AND C299
JMP HBW_Program.S14
INC N1

// Rung HBW_Program#96
// Offset 593
SG HBW_Program.S14

// Rung HBW_Program#97
// Offset 595
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#98
// Offset 603
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#99
// Offset 611
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#100
// Offset 620
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#101
// Offset 622
SG HBW_Program.S15

// Rung HBW_Program#102
// Offset 624
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#103
// Offset 632
STR ST1
MOVE 0 C299

// Rung HBW_Program#104
// Offset 635
STRE N1 1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#105
// Offset 646
STRE N1 2
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#106
// Offset 657
STRE N1 3
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#107
// Offset 668
STRE N1 4
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#108
// Offset 679
STRE N1 5
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#109
// Offset 690
STRE N1 6
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#110
// Offset 701
STRE N1 7
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#111
// Offset 712
STRE N1 8
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#112
// Offset 723
STRE N1 9
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#113
// Offset 734
NOP

// Rung HBW_Program#114
// Offset 735
STRN C251
JMP HBW_Program.S16
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#115
// Offset 744
SG HBW_Program.S16

// Rung HBW_Program#116
// Offset 746
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#117
// Offset 754
STRE N1 1
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#118
// Offset 765
STRE N1 2
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#119
// Offset 776
STRE N1 3
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#120
// Offset 787
STRE N1 4
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#121
// Offset 798
STRE N1 5
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#122
// Offset 809
STRE N1 6
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#123
// Offset 820
STRE N1 7
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#124
// Offset 831
STRE N1 8
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#125
// Offset 842
STRE N1 9
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#126
// Offset 853
NOP

// Rung HBW_Program#127
// Offset 854
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#128
// Offset 856
STRN C250
AND X10
JMP HBW_Program.S17

// Rung HBW_Program#129
// Offset 859
SG HBW_Program.S17

// Rung HBW_Program#130
// Offset 861
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#131
// Offset 869
STRE N1 1
CALL HBW_Retract_12 0x1 DST511 "3" "3"

// Rung HBW_Program#132
// Offset 880
STRE N1 2
CALL HBW_RETRACT_13 0x1 DST511 "3" "3"

// Rung HBW_Program#133
// Offset 891
STRE N1 3
CALL HBW_Retract_23 0x1 DST511 "3" "3"

// Rung HBW_Program#134
// Offset 902
STRE N1 4
CALL HBW_Retract_22 0x1 DST511 "3" "3"

// Rung HBW_Program#135
// Offset 913
STRE N1 5
CALL HBW_Retract_21 0x1 DST511 "3" "3"

// Rung HBW_Program#136
// Offset 924
STRE N1 6
CALL HBW_Retract_21 0x1 DST511 "3" "3"

// Rung HBW_Program#137
// Offset 935
STRE N1 7
CALL HBW_Retract_32 0x1 DST511 "3" "3"

// Rung HBW_Program#138
// Offset 946
STRE N1 8
CALL HBW_Retract_33 0x1 DST511 "3" "3"

// Rung HBW_Program#139
// Offset 957
STRE N1 9
CALL HBW_Retract_33 0x1 DST511 "3" "3"

// Rung HBW_Program#140
// Offset 968
NOP

// Rung HBW_Program#141
// Offset 969
STR C215
JMP HBW_Program.S1

// Rung HBW_Program#142
// Offset 971
STR X11
ANDN C251
ANDN C250
JMP HBW_Program.S11

// Rung HBW_Program#143
// Offset 975
STR X11
ANDE N1 1
JMP HBW_Program.S50

// Rung HBW_Program#144
// Offset 981
SG HBW_Program.S18

// Rung HBW_Program#145
// Offset 983
STR ST1
JMP HBW_Program.S0

// Rung HBW_Program#146
// Offset 985
SG HBW_Program.S50

// Rung HBW_Program#147
// Offset 987
STR ST1
CALL HBW_Shift_C1C2 0x1 DST511 "3" "3"

// Rung HBW_Program#148
// Offset 995
STRN Y50
ANDN C250
JMP HBW_Program.S11

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#2
// Offset 8
STR ST1
DUPBOOL
STR C410
ANDN C409
STRN C410
AND C409
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
POPBOOL
DUPBOOL
AND C410
OUT Y27
POPBOOL
AND C409
OUT Y26

// Rung VGR_Program#3
// Offset 37
STR ST1
DUPBOOL
STR C408
ANDN C411
STRN C408
AND C411
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
POPBOOL
DUPBOOL
AND C408
OUT Y24
POPBOOL
AND C411
OUT Y25

// Rung VGR_Program#4
// Offset 66
STR ST1
DUPBOOL
STR C406
ANDN C407
STRN C406
AND C407
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
POPBOOL
DUPBOOL
AND C406
OUT Y23
POPBOOL
AND C407
OUT Y22

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STR C813
OUT Y18

// Rung MPO_Program#4
// Offset 12
STR C810
OUT Y17

// Rung MPO_Program#5
// Offset 14
STR C811
OUT Y52

// Rung MPO_Program#6
// Offset 16
STR ST1
DUPBOOL
STR C804
ANDN C805
STR C805
ANDN C804
ORSTR
ANDSTR
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 100
POPBOOL
DUPBOOL
AND C804
OUT Y53
POPBOOL
AND C805
OUT Y15

// Rung MPO_Program#7
// Offset 45
STR C814
OUT Y19

// Rung MPO_Program#8
// Offset 47
STR C809
JMP MPO_Program.S1

// Rung MPO_Program#9
// Offset 49
SG MPO_Program.S1

// Rung MPO_Program#10
// Offset 51
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#11
// Offset 59
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#12
// Offset 61
STRN X24
SET Y17

// Rung MPO_Program#13
// Offset 63
STR Y17
OUT Y20
ANDN X17
ONDTMR T105 1000 Y44

// Rung MPO_Program#14
// Offset 69
STR X17
JMP MPO_Program.S10

// Rung MPO_Program#15
// Offset 71
SG MPO_Program.S10

// Rung MPO_Program#16
// Offset 73
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#17
// Offset 81
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#18
// Offset 83
STR X17
RST Y20

// Rung MPO_Program#19
// Offset 85
STR X17
ONDTMR T106 1000 Y16

// Rung MPO_Program#20
// Offset 89
STR T106.Done
JMP MPO_Program.S11

// Rung MPO_Program#21
// Offset 91
SG MPO_Program.S11

// Rung MPO_Program#22
// Offset 93
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#23
// Offset 101
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#24
// Offset 103
STRN X18
OUT Y52

// Rung MPO_Program#25
// Offset 105
STR X18
RST Y20

// Rung MPO_Program#26
// Offset 107
STR X18
RST Y16

// Rung MPO_Program#27
// Offset 109
STRN Y16
ONDTMR T107 1000 C819

// Rung MPO_Program#28
// Offset 113
STR C819
JMP MPO_Program.S2

// Rung MPO_Program#29
// Offset 115
SG MPO_Program.S2

// Rung MPO_Program#30
// Offset 117
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#31
// Offset 125
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#32
// Offset 127
NOP

// Rung MPO_Program#33
// Offset 128
STRN X19
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y53

// Rung MPO_Program#34
// Offset 144
STR X19
JMP MPO_Program.S3

// Rung MPO_Program#35
// Offset 146
SG MPO_Program.S3

// Rung MPO_Program#36
// Offset 148
STR ST1
SET Y17

// Rung MPO_Program#37
// Offset 150
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#38
// Offset 158
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#39
// Offset 160
STR X19
SET Y19

// Rung MPO_Program#40
// Offset 162
STR X19
ONDTMR T100 2000 Y18

// Rung MPO_Program#41
// Offset 166
STR T100.DN
JMP MPO_Program.S4

// Rung MPO_Program#42
// Offset 168
SG MPO_Program.S4

// Rung MPO_Program#43
// Offset 170
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#44
// Offset 178
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#45
// Offset 180
STR X19
RST Y19

// Rung MPO_Program#46
// Offset 182
STRN X16
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y15

// Rung MPO_Program#47
// Offset 198
STR X16
JMP MPO_Program.S5

// Rung MPO_Program#48
// Offset 200
SG MPO_Program.S5

// Rung MPO_Program#49
// Offset 202
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#50
// Offset 210
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#51
// Offset 212
STR X16
SET Y19

// Rung MPO_Program#52
// Offset 214
STR Y19
ONDTMR T101 1000 C815

// Rung MPO_Program#53
// Offset 218
STR C815
RST Y18

// Rung MPO_Program#54
// Offset 220
STRN Y18
JMP MPO_Program.S6

// Rung MPO_Program#55
// Offset 222
SG MPO_Program.S6

// Rung MPO_Program#56
// Offset 224
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#57
// Offset 232
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#58
// Offset 234
STR X16
RST Y19

// Rung MPO_Program#59
// Offset 236
STRN Y19
ONDTMR T102 1000 C818

// Rung MPO_Program#60
// Offset 240
STR C818
JMP MPO_Program.S7

// Rung MPO_Program#61
// Offset 242
SG MPO_Program.S7

// Rung MPO_Program#62
// Offset 244
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#63
// Offset 252
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#64
// Offset 254
STRN X15
OUT Y45

// Rung MPO_Program#65
// Offset 256
STR X15
TMRDOWN T102 1000
OUT Y43

// Rung MPO_Program#66
// Offset 260
STR T102.Done
JMP MPO_Program.S8

// Rung MPO_Program#67
// Offset 262
SG MPO_Program.S8

// Rung MPO_Program#68
// Offset 264
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#69
// Offset 272
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#70
// Offset 274
STRN X13
OUT Y45

// Rung MPO_Program#71
// Offset 276
STR X13
TMRDOWN T103 1000
OUT Y21

// Rung MPO_Program#72
// Offset 280
STR T103.Done
JMP MPO_Program.S9

// Rung MPO_Program#73
// Offset 282
SG MPO_Program.S9

// Rung MPO_Program#74
// Offset 284
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#75
// Offset 292
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#76
// Offset 294
STRN X12
ONDTMR T104 1000 Y46

// Rung MPO_Program#77
// Offset 298
STR X12
AND ST1
OUT Y47

// Rung MPO_Program#78
// Offset 301
STR X12
JMP MPO_Program.S12

// Rung MPO_Program#79
// Offset 303
SG MPO_Program.S12

// Rung MPO_Program#80
// Offset 305
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#81
// Offset 313
STRN C809
JMP MPO_Program.S0

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
SG SLD_Program.S0

// Rung SLD_Program#2
// Offset 2
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#3
// Offset 10
STR C1600
OUT Y30

// Rung SLD_Program#4
// Offset 12
STR C1601
OUT Y31

// Rung SLD_Program#5
// Offset 14
STR C1602
OUT Y32

// Rung SLD_Program#6
// Offset 16
STR C1603
OUT Y33

// Rung SLD_Program#7
// Offset 18
STR C1604
OUT Y34

// Rung SLD_Program#8
// Offset 20
STR C1605
JMP SLD_Program.S1

// Rung SLD_Program#9
// Offset 22
SG SLD_Program.S1

// Rung SLD_Program#10
// Offset 24
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#11
// Offset 32
STRN C1605
JMP SLD_Program.S0

// Rung SLD_Program#12
// Offset 34
STRN X35
OFFDTMR T200 1750 C1651

// Rung SLD_Program#13
// Offset 38
STR C1651
OUT Y30

// Rung SLD_Program#14
// Offset 40
STRGE T200.Acc 1750
FLASHER 500 500 Y899

// Rung SLD_Program#15
// Offset 48
SG SLD_Program.S2

// Rung SLD_Program#16
// Offset 50
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#17
// Offset 58
STRN C1605
JMP SLD_Program.S0

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STR C1200
OUT Y39

// Rung SSC_Program#4
// Offset 12
STR C1201
OUT Y40

// Rung SSC_Program#5
// Offset 14
STR C1202
OUT Y41

// Rung SSC_Program#6
// Offset 16
STR C1215
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y35

// Rung SSC_Program#7
// Offset 32
STR C1216
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y36

// Rung SSC_Program#8
// Offset 48
STR C1217
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#9
// Offset 64
STR C1218
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#10
// Offset 80
STR ST2
ANDPD X47
ANDPDPF
STR ST2
AND CT150.Done
CNT CT150 100

// Rung SSC_Program#11
// Offset 88
STR C1203
JMP SSC_Program.S1

// Rung SSC_Program#12
// Offset 90
SG SSC_Program.S1

// Rung SSC_Program#13
// Offset 92
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#14
// Offset 100
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#15
// Offset 102
STRN X41
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#16
// Offset 118
STRN X40
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y36

// Rung SSC_Program#17
// Offset 134
STR X40
AND X41
JMP SSC_Program.S2

// Rung SSC_Program#18
// Offset 137
SG SSC_Program.S2

// Rung SSC_Program#19
// Offset 139
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#20
// Offset 147
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#21
// Offset 149
STR X44
ANDPDPF
STR ST2
CNT CT150 300

// Rung SSC_Program#22
// Offset 154
STRN CT150.Done
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y35

// Rung SSC_Program#23
// Offset 170
STR X46
STR ST2
CNT CT151 1300

// Rung SSC_Program#24
// Offset 174
STRN CT151.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#25
// Offset 190
STR CT150.Done
AND CT151.Done
JMP SSC_Program.S3

// Rung SSC_Program#26
// Offset 193
SG SSC_Program.S3

// Rung SSC_Program#27
// Offset 195
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#28
// Offset 203
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#29
// Offset 205
STR X46
STR ST2
CNT CT152 300

// Rung SSC_Program#30
// Offset 209
STRN CT152.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#31
// Offset 225
STR CT152.Done
JMP SSC_Program.S4

// Rung SSC_Program#32
// Offset 227
SG SSC_Program.S4

// Rung SSC_Program#33
// Offset 229
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#34
// Offset 237
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#35
// Offset 239
STR X46
STR ST2
CNT CT153 135

// Rung SSC_Program#36
// Offset 243
STRN CT153.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#37
// Offset 259
STR X44
STR ST2
CNT CT154 210

// Rung SSC_Program#38
// Offset 263
STRN CT154.Done
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y36

// End of Code Block SSC_Program
$PGMEND SSC_Program

// Beginning of Code Block hunt_exp_light
$PRGRM hunt_exp_light

// Rung hunt_exp_light#1
// Offset 0
STR ST2
COPY 0x1 "4 0x0 MC402 Y39 1"

// End of Code Block hunt_exp_light
$PGMEND hunt_exp_light

// Beginning of Code Block HWB_PickUp
$TSK HWB_PickUp

// Rung HWB_PickUp#1
// Offset 0
NOP

// End of Code Block HWB_PickUp
$TSKEND HWB_PickUp

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"C1","copy","",""
"C11","C11_Interlock","","Used to delay logic by one scan"
"C12","C12_Interlock_2","","Used to delay logic by one scan"
"C20","HBW_Has_Pallet","","True when carrying a pallet"
"C51","X_Direction","","True: Left False: Right"
"C52","Z_Direction","","True: Down False: Up"
"C80","Conveyor_Timeout","","Bit high when Conveyor Timeout timer active"
"C90","HBW_XY_PID_EN","","Enables PID control in HBW_Move_XZ"
"C101","HBW_T1_Send","Modbus MC101","Task to deliver a pallet to conveyor"
"C102","HBW_T2_Receive","Modbus MC102","Task to pickup a pallet from conveyor"
"C103","HBW_T3_Reset","Modbus MC103","Reinitialize and home all axises"
"C104","HBW_T4_Manual","Modbus MC104","Switch to manual mode"
"C110","HBW_Move_X_L","Modbus MC110","Move Horizontal Axis towards bay"
"C111","HBW_Move_X_R","Modbus MC111","Move Horizontal Axis towards Conveyor"
"C112","HBW_Move_Y_In","Modbus MC112","Move Cantilever In"
"C113","HBW_Move_Y_Out","Modbus MC113","Move Cantilever Out"
"C114","HBW_Move_Z_Up","Modbus MC114","Move Vertical Axis Up"
"C115","HBW_Move_Z_Down","Modbus MC115","Move Vertical Axis Down"
"C116","HBW_Conveyor_In","Modbus MC116","Move Conveyor In"
"C117","HBW_Conveyor_Out","Modbus MC117","Move Conveyor Out"
"C130","HBW_Status_Ready","Modbus MC130","On when ready for a task"
"C133","HBW_Mov_Conveyor","Modbus MC133","Status Conveyor Moving"
"C134","HBW_Moving_X","Modbus MC134","Status GantryMovingX"
"C135","HBW_Moving_Y","Modbus MC135","Status GantryMovingY"
"C136","HBW_Moving_Z","Modbus MC136","Status GantryMovingZ"
"C138","HBW_Status_Y_Pos","Modbus MC138","Current Y position"
"C141","HBW_Target_Y_Pos","Modbus MC141","Target Y position"
"C150","HBW_MoveComplete","","HBW_Move_XZ completion interlock."
"C180","HBW_Fault","Modbus MC180","Status in Fault State"
"C182","Fault_X_Target","","Active when X target out of range"
"C183","Fault_Z_target","","Active when Z target out of range"
"C400","VGR_T0","",""
"C410","VGR_T1","",""
"C420","VGR_T2","",""
"C430","VGR_T3","",""
"C440","VGR_T4","",""
"C500","VGR_Man_Control","",""
"C799","VGR_RESET","",""
"V105","HBW_Task_X_slot","Modbus MHR105","Value for slot X coord"
"V106","HBW_Task_Y_slot","Modbus MHR106","Value for slot y coord"
"V118","HBW_PWM_Set_X","Modbus MHR118","Set Horizontal Axis PWM Duty Cycle %"
"V119","HBW_PWM_Set_Y","Modbus MHR119","Set Cantilever Axis PWM Duty Cycle %"
"V120","HBW_PWM_Set_Z","Modbus MHR120","Set Vertical Axis PWM Duty cycle %"
"V131","HBW_Cur_Progress","Modbus MHR131","0 to 100 percent job completion"
"V132","HBW_Cur_Stage","Modbus MHR132","Current stage number"
"V137","HBW_Status_X_Pos","Modbus MHR137","Current X encoder position"
"V139","HBW_Status_Z_Pos","Modbus MHR139","Current Z encoder position"
"V140","HBW_Target_X_Pos","Modbus MHR140","Target X encoder position"
"V142","HBW_Target_Z_Pos","Modbus MHR142","Target Z encoder position"
"V181","HBW_Fault_code","Modbus MHR181","Current Fault code"
"V801","VGR_Fault_Code","",""
"N810","VGR_Rot_Target","",""
"N811","VGR_X_Target","",""
"N812","VGR_Y_Target","",""
"D0","MC","",""
"D1","Feeder_Extend","",""
"D140","X_Start_Position","","Distance to target"
"D142","Y_Start_Position","","Distance to target"
"D143","HBW_PWM_Cur_X","","PWM value for X for XZ movement task"
"D144","HBW_PWM_Cur_Z","","PWM value for Z for XZ movement task"
"T3","T_HBW_S6","",""
"T4","T_Conveyor_Timer","","Used to detect conveyor faults"
"MPO_Program.S2","Vaccum_MO","",""
"MPO_Program.S3","Vaccum","",""
"MPO_Program.S4","Vacumm_MO","",""
"MPO_Program.S5","Vaccum_Load","",""
"US0","_CP_Strogram_A","","CP_State_Program"
"US1","_VGR_Movement","","VGR_Movement"
"US2","_SSC_Check_InOut","","SSC_Check_InOut"
"UB0","_VGR_MisScan_A","","VGR_Movement.Done ThisScan"
#END

