// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\brent\Desktop\factory\ui_cda_mini_factory_fa23\fa23_plc.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
e38c3ec4de0844aaa124bcf81525a3a5b481882817ff786857a5d084ef793a1da0024140faaad8d0
3c74e3e44537cc3e18baee1a139b6805b481475ac94f131dc520a58e06d0d5d97146566e88179c57
4728ea49c9ee047b8fa6e60faa4493d1b8527d0254c623e2fd8f3814e4273985410db8d42367c744
45199bfcb24370d43be0b1cd3b16fad79a3b22fb939ab8ff34149dfedd662eb7de7e809ec628cc91
ecfe85b6a67ee9a529250d7ff20645c461ea403fe6dc2dba770db0db73750b559a698bf588c836ee
66d2d7cf1c4311b76e164a8b1cb7d0ce95ae76971952912de2680707940f769ae9148a06bbefd256
48e8a35908f412b69eca46080eeeadc916d80c2ba59aa741fe7f95b29c0bfd55020c3dd1402e089d
d04984f400203ec833acd0a7a8e417b9ec03afea496417d7823ee3bebc5ad5beb9c8ec6680d48580
ab7b418e72cbac378980bfaf4ae91e42d88a32a3cf98f415099ac599f4c363e81e7531d597f7e77b
c5e8eb18fafc09ff13e85469de87cc4000be0bedfa3c7a7872de427eecd56df4cf8e07230bc6b7b2
30799bdf2dcc239b1758f42c9137eee490e158c7ca88af7e7f070c7fdea99aa0849a403edbc9a21e
605bd723aff22f1ceddd7a120cfefc09dde78274a2dca31b14589f5fa142933bf3684a573e7e38de
f51f4417a5b36b2964e237c5d35f8bbeb9161ff21cc8196b2e90bc1e830b93b2f678c97afa35d570
e138c116f71359fc7d8035aa94f9b754daf1fe2006c75c4881c7eef5957ab4c8221c0beac65438b1
cfdc83e53f3c2600615f68d0489f9b2fd03764e4b1bcf6b2735d06716c7794896579b1b89dc50838
9e45c303e7885055f1c1f2f4ac88c130a5934fac8529055d40a745f2f9c5d8ed0473cab5813c6e12
c15169ae9f042e54f000beec466b573ee7bbad0922bf2e0977f8d3ed6101dbcf936425996b58ab6b
9eb04fb938a0e7d4c81fec727363ee32193a7366489d14426823ef8592a8c995f915f2fddd299668
bd8698bb8eaaf27c993156ce4bad7a20d1aeb2cce10a2e5ba15ce4701fb084ee8edf03a2c9a331a3
a17c86fa7fbe9abc59752cb02b042544934470de55181759fa89f95bf9f2f4a9831165996499665a
b143e54dfe1598a22bcab5c1117d61a302f5831a3fab0cdde63a80a2d0f44bb63dedfacc30863ef5
7dced65e545a81fe2b20c98b09f7f7ac538b0e455af1a45a2ba5df937a90093188dabac3b9ac1920
55192bf7558fc88ed3ed3bad4e6a85935c0b3fffef843aa1edc97bcad00d1098a7d9ee0a84bb79ba
8e170666d35add8ba742560eea699c0837d91718b8dab9ad7a3f9d4f795990c5dbfd55ffe637046e
1b5c7d89eb979dc3395fb0a93296672b7f29b8971251135925c25bd1d8489a738084dab5cd3a57de
15b8240b18a18e28377af28318f33025e300edd32019591eb5e1bb9522fa7570881261bc9a041d92
f4cda31f09e4d1d7165ea77e2461fc95386eadc6da79e18efd57e89196ea98d3faeaacf31de46165
7c72d4e6993f6068ecb63c622c90d0bc15f9df91ce29bafdadd5c7b4cc4a326a0ccdfe12f453a303
c931345116f2845d88b1a4a3df05b0cb597b126211bbcaf9efa0b80d4d39aa0a479d194d793d19de
3540f7f5a829e6cfa7392c0ddd1fc06103322f53103725928ec354350638232ba7814e2a252b9c97
88b6ad26f511b8176cca0940961c7bfb523828398291e6bfa292b31f7e345950485c51a9d62dabc2
94a667e206b3b3df8d90a1d1740b7ed65312022b05b2523c7377709157f7e51b23bf0c8621f07927
c87b7bf381615f59e2bf150166869de3fd625101128bec076d087b9ba5a30459f3e780607b1dad67
02590b8445df859c5d82ce11f2eea00808d30b0c8ac449da4caf865c53d828a10369292cd7f28bd4
090e48886de96de29184f8426e35824d259a825cd1a961c7578a0bcea0861567d800f2413a38cb8a
15ffda982bf31291a923c4881e015b76b24c3bc92ad244cce072224751030efd3e12b67ea162aa9d
e8e1fe8acec8d583df79da123a2f1b301c59b8922b28d7c57c9fdc6a852d988ef93fce68d932ae99
7e218612b217a44ad89b6e44b23f1543586e9b594fc60d86001def5e90b78e0e3bfa3d23260b272e
94b52304725bb61527f18cc20f4545e195b8bea7c5e617d7ebbecb264286c30f4d6c45ac2c04371a
1c89b67169705b942c4334a0cab5a148dc37248c39a1e1f27627c1a99f4767a05201f65646b4c2b7
1490e56ec642551071b01ad9570e03cd5caef7b22b8143bf27cd13031f6f0ddabc01fd452e001252
a271ae603049676aa0c67ac1ebde6f933c821b48493f8c06e3e346ca5bbb16b882d3b70a6e8f5ab1
16107fb8fad8f2eecafd906f4a2a5a6225b832fa06a54a38aded9c7ec0a41dc1318afca7e19c77f6
74d7a5b204c029401e37bbae393fde0d9eec32c1b9502ba0c4d6b306834bed91a154844bab69569d
cc6114e92bd856573ac5961144829da8d7f84d84500d9ba961dfc38049f8b5ce6e5e2bbedf3988f6
03504f20eeac9238a48ea5f9facf7229c636a40e19eec9bd1e06ae352d20a3591b59c5bc485327ae
f12980f6fcbaffda7af5d58b8886bcb38781371f32252b5630683616177bde7843dd4066b59acbcf
b16c6c498dc42ac082f6210f2b7dd8018696398493a9678b881d13b8cc5ad6bc66e9e563d4e3019f
ad35904f12a033bd77a0c7cd513b1dcb8469858f6253c1976b6ec6ca1602a882d0d5e9fe50944ed9
34ff74fa5134786202f23c37281d599dc65ee3dde9b94b03dc50824582b14a0e7a1a003c4270b81e
dd25f55d59db067207bf17ab7e0b32690014f13b9618d7e99e8e9ef8311f86c830bbd5fdbb9d11fd
3dfb7b9e4f0938222e8dcb92d897526b4b2ceb0f234bec7231d67a3cbf685f7b062dd494bb9375e9
6d714f6032938f110e15506f39abedae401fbb32afe880b309d9541f6c4a5003c88859e5e9bb8601
b6b1949ece6b8f712c1ec16b1f46a4eac89e9d0e72bbea8a9440c7a8062bca11601b314b111c3988
8db82cb50a8347bdede53c386bd9a799ed9f7c75f69613f050486c806dfe3224ea5fd66e01f9afaa
f41dbbff7934e77794e81270af5759f704c25fd2a9404cde71e9a318f2c1eaf012906a2054122317
c390a5c400e6975f7dcc480373311962085a2a21d9417d2af80d181381b53570320ae1385c43c225
f96e9d42a267fb1a0ea379d07dc0a0dba4510c359e71ba1e757ef3d5198dc3bf3f2087b2178dbcf5
3c06788f640c330b83b4ace6554713a8b584c493d6f51988b3fedc5aad76aebc3e2bf107625628e8
14fe28164c8999ed6b9e6e513fd5cc7e00139862c83aaf84eb3fcc5d4abb240b84c472722e71bcbd
e4bbc520ff34bf8fcdd9b20d1e495f05e2920d32822a71e17dcafe02d146b79889c830f27658305a
a73f2633ce30e9cfd55b9b971d32a3366df4c484d36c8803649501d7ab65af1ad18e9424d20ace64
e74fd60ea538218479c766f4387b51b2fb770d5887aca9cb147f110a3a3c8c7d3ca5257f3fb873dd
9c76aafdeb916f573f7edbc7dd1ed72f2aa4343933ecd5edc49221b3e9a927045ea60682f1221848
2b89167993919b849696c3b85d95b45d1251cb404466d9d7490c5e055116dcf00911a7d962135ca7
8c89eb543f2dac36ab80719d5abcbd10c8b9d08e9400c0337e3ca4b9437d2b72e991e1f0840eeef5
c5c3b343b2466c5876f6c9fb1343262a9cedc780be9932a9851ab9aebae66e0d92829c76aaaca2d8
5cbc755dac1c93725b604ea3130a01c1a698b2bdafaffab5b0ce4751b26575cfa47ba308aa63446f
ae599dd64e50e4a4235a034ad897ad2a23101829309e0a70db4363f300da71eaf460a0531ad898d1
f6146fe629f76d9ac0c9972f7c57edaee031a20bccfd65cb8df4ca643970f2c67232b5f37a23b0ff
c55ad109d9bc780afc3ee94f42053becc4b99253a4602fb72c31cbf5bd34e79feffe02c9cad0e0e6
b6462ad1ac91b4fcaf40b8189ccf1b9c635b333299dfac923ca1e6b8826550a48e36d9d1640a67dd
ce53846ccd565b8323c5ffa914ab6bf1c791fc6846e345b0c3764ecaed0a95554faa0eb7f420c0df
7f10cf17bc1ed7b8a430f00341c35449b38df970196bd14ec037b00fe935cdc7d8d6ab272162deb7
e1509795fcb0c5eab94a1f6d984f833585690ec1de2c51ae062709712e2345c1084bb65ec8418d76
f545ced8a82a81172a123f44c68d55e4a99872ac501c7748ba6b0feeb0caa68b1d1ac71d842920ee
fa80e096f36e63ca8c92f88c42d03add4e1cc172bb2f55961b81493c8b92481159228cca7c3a33c9
6da62bd968b59fa90797dc7c6334674e4ed4fb9f0f5049320c88c026a969744181aac38ccf545f35
4329bb2f5ee9d415e3276af242a7b246946da195dbf68f9ca97554d550c34ea05c8986304f74040b
d654e338f09b69f03f970be022a96790ed21b0a28980b1857a564f4cafe4e89d7c33ab645ed9d784
db6b70af04e93b3b2e623b8145908c548019ad9797a7d2e623e2e71acd12fb57066060b1b1f44a3b
aea630b6ed91c6d9f787b9ed10579acc1c5f1ba6b5ba949522fedb2068b014bc13202f6b429263c2
dfb0cef310abaaca98c3d753b9fda7b213f31ab7ebd87cf78ae1d223bc5f73e6029ff3c0c5468270
92cbfc7f90529cbfb8dc100c1c4203a26f6c7820c1129cbb04452b7645d41fd94c5c6bb1b269971a
4810f1e2c94d11ae33b647a7ae81e3a7ce13e57bb4f030d0610d1ea8d72c95026dddca46f0dd31be
ad302567d310e77460adc0a2e0de045ee6aa376a9a3523be5bf2e0b26fb8463273aa2a08030f661e
cd2bfec19cf124b80aefe38596dd17913171edf6ad1af30a8e95044704f4e829af2e5c41889195da
d595018cc1e2d6c86c47ce18f0efd282617beff9a42c4c82216308943a2e8b240e77e70d44f8af2e
fc4047e62f92694356e041d5982db8a9a94009b5ee6fbd01f0f618180c800458ac6f6537e8435292
3074fe8e8252396f31fabaf92f23ff14b2cac06f6e6954c1339ac39c734098c6b1f2cfec9d28aab6
f0a5436ab483799333de566002cdbc4c980fe1966dc3e0193e5f0541848ecb7482a55596a58a117e
ff8031d51232794c8adef7630d6ae23e458ed60ef453babf02d97f62af7e0553d2ed415db7671184
4f03cb5c0a9546cc94e303b397f0969cb0361ed819b7f796fd6ea0d8eed2964d00675e1685b669ff
323bf982db59812ed13b8e1dd095d804b1e1eacda9a96f4339cefece1c7139d69953eb88ab28645a
67fbada1c8f91f29957f70984196601bfeab57e29da21569acd608dd733e64164a3d74ab6a6b76b9
44c3e66287b5cf8d004da7cd5b928ded4b13bf57aeb995fecac221a4e0e7bb424d8cee580577faa3
1fe1581606cde836f16a313746bbdcbf5ceece202721d7343b1300777d602eae82686d79abaaa6f4
a8af4023cba68a7c9243b8a56c39851edad92bdf23032ace32f7f5e644f83ae520d507bceada98ad
7e769993fadaed7677d861816870e4878d72ea5e39e70fea34651bd66e9d5baed38b90204abcd1a5
ab8aeaddf3b27ef2f0ba7f3caaf5100119e45c27a566b163a995957cfde430d648fefcc0e4fc95b1
d0ae1bd743fdb0a40e7083aabbf44f7b3041e97e66d7eadf3067e5e652561de8ed295159107e4a37
294417ecc3cc223b1a8d91cdf96037755bdcb23199cd1632af03db08abccbf9ae275471d0ed727d4
9c6aa02f33ff4c765dee4432e32d1ead42684b06bc1419767f180633739fa3c1232b4608505def8f
92b27d2194892253a26ebec3728be3cd3b6d7d41b937b532a60a5ca14db1f275c6ea9ff1485c0e1f
2bc71f4004312aa2e8a7eb0dc971a30886159e5848d2127f40bb8dade45aa6218b2e58b7fd8ef6ab
24302902b98d5326ff6dcfd0e45ba28fdffa666f165e8581db4a8fb9d2b39991cffe6c47b17af256
1f042b8a2c517c57aeb1949754a464586e5dccb281eda420d958058e232d48bb58d71a0fcb5d775c
75fc8a7d3bf56a2184555d921527f2ab8f3a05df0e9a4d9311d7fd15caa6d3b2980960ec5c3fcfe9
4e538f823a7580510224726701ebcaeebb6c923158695ddc3a2a9be15068116380a71864a120ea82
b3f3d4a766cd78297d5e181f09ff235a7475c4fb48494a5c6a3fd122950d56466e7acc38cb2963ca
ea43b329083ac3b054782637d279d019bc453cc54aed40a6509994b88d5ec9e3683ab9fe539628ba
9c6a16e37b748f88b0317e2b061e6abe6845edc65f5864535b90de26441d9ba7accd4e7887b21818
887b9d12035621eb64d8cd5fe249d32845f6d5ebe60956e95867627c6600c15860e9269766d2a3e6
2b71d8b7684ff9d240fd35ed4b5dffa243f90e766356f2d9d27c0803b227718f6c3f44154abbda27
0b7c678103c4092d6fdb1db29c49c50ed0989c0efb2bcb02950e2d7301c7bc356febc193176a3f6d
dc39458f1b2ce71dd4c1a9878e6e5c2fecf94c312b35218d0b5667f40d179234dc08490df6e48808
f01e45aa85783a2803368974aa5fc3117095f7c3ed844f3c2a5a317f033bb35ec348ea4d11397b2d
c3d1ad9d55c785ff01f03cf60a0a7148cf11f3cbd2c1d09fe71ec2f6f35a3fd11e796f03709401bb
e674532e611d40cbfb6d3a414ba26014980958a799ecc6e3e9bc216254cd8864979d64001c34ab97
9fac134aa50aa6a7c61cf5005617bd7b00083d6bb343f8e8a97f2e7180f1b002e7dd40af5d861b16
4e949e62bf502a3c3c7f4d811facc71f99bc23bf393689f608aeca7e4a50e0535e469659d8e96758
09560feb4119e5f4fd1e8efc9c533e68d194dd6520396f7b380a2675c40dd55376e67a7c171375ca
e613057ffb6e23c785a271d3d78a1c2fa08929495fa523d6a0aa0e92e9d6b35b943b2e36a05fd20c
cdd9e3cdee9a5eb7de8068666b1952b04c3cc6d3edd6b8e7e5028e692826da7aa8f40c211fec9c71
a758337e20993101b0f5309c81947338ead3587344a95539f46874f8080a61bdb5af7f28a3ad4987
d3b0965c19d09698d1fc7516fe86355a1c15360f8e54874033777fd570e2936ce805bd18394fbc20
925a8ba582dd5a09c1816567abc2fd1c5edeee25ca598efc8bc88860511a42c16af5c3dafa3c18a5
0b6920ef8126da61e8566184b894bcdfeb7a9cea9bb76bbed1a26de577d451c79dfed1697b9f5f5b
3d46eb4c8edbf1989af520856ef72fa00db050509dd9c3fdd7251c66deb66d99e859b756a9e296de
1790bb781221fd274dddc5aa8cb7d861c6e1271b666bc391937264df277436cd2f2f4cd16e8adcc4
f3f15ca5e903e22471af1f87eabe14f29a945ea4120d8676cc947e02cfcbad8f4411c6a1eb9a48eb
13e0e9389dc0bf80d0b78f339bcbfd17d8eaa52f50b1d6a00143ce31142784744313b8bacbda1a4c
3d930da193894e8e731d57be70e35eefd0d8c47c4fa5422e4ea0100a356d1f6425135054e980e9bf
84d6acdcba9bfcae4e717349935914b98e6322acc9833f692ffbef9ab43bafaba5bc56007360ceee
76551c5a1bc5708c1b2ee924de96aaa15bb58efd84cc21f3d3d373d3d92e43b20e2ae4a60d5484bd
ddc800cf4ce60e391baf55bccb23dfc0cd76555459c066fbbec2bbb890c058f2443362defda2c78f
435b7c458d6cd34609ff9a26a68c34144bb14777d6853d1fcee04def705f7f56eb081f3801c92897
026d86093d64ffe42edca7c86736079e77dcd72eb49c33996128338a285eb2faf42d541aaac0a904
b19172be12cc3f748343f2ce9f5bc18b7e554b6b71ce8c99fb0ec78cf2bfb68f05eda8f0619beafd
615d032eeb2c03a92fb9ba72488d03748344160081d0e35b0c87cb3330353d94216acc1d23b7e05b
4081da18b4405c2d167eb302475d47af0e742809f031da71d4f20714d3139c2a7fd7040effa09914
62409693bc555454580ecf109851ef345a58dbae4304f1ed02a2b825a8644d844adfe4192c787ef6
cf9834781149e2028773e2b92b16b6812d42b3edc2fb560a913e55d160dfba4ca3b53518a2dafdd1
24fa8f6f60d15c518b592649f60e1cdd486c1c0ab570f69eab68dab277bc3c693096883a98ff42ba
cacff4c591314e59418d95a1a525896c0996819d5e717d8fd276b231b119e586ffe522cada464c19
8044247332c224ec0685502b7bcc2e164a60d98141d5e6028ddc6a981159ea76d039ce59550bf5fb
88bbb9b5de1acb961fe23ec2d6ed7950aeffb7d79ca5cb5bae851ce4e3a2ac2aa20d9f970adf58d7
33c3c2ed9ad4d92a6e2c2dd55204f20e827d4fcd9682ac1f27eb93a014b90d542fe4c8446026a379
9b7289a8a202c28f119240016c3997de0addb7095498278dd09add8e06c14fc1be47b5239cdcadc0
e741303ca4fed77d473acba1ebfbd1100f0034a546b920f8ec34323e605d7a73df2483ea407f874e
abb240f707eca3681d17bbe4845b006854a89ec0d7be48da09e003cca6abcad7f067263f55f12f5a
890b4fcb821a0e03fc19b619d5f4962f4ce7eb59d0f493bc0fb4a1d06400c91eee6c8c1c66f96bfd
daee6fde90b692701b1c3b58170b05a9118b66a23ff6a39b67cd82dc998c37ccb406bc576461c485
4415ecd9b15fba2aa6032c086afb8b792a8ed97370e54891b0e9afea4f97ffdf31800188da91f968
04c75189c6fd97be7e4344fd79c0f3911e62162f51d29771baaec8e7627ce15b3ef6648421b1c617
fe457d897f14c259e55bb851f5d974de47b13a7f5bb8ffb44e133122cb1a53ebe23984599172d3f0
93feceb2dcb55de7abc77765972e5fdab2aaa98762f78601eaad3af894a81bf7498a5bc0bc4a0d49
25fb394e178e951a24c5ace667a42f67a5a45e10cda2f50b8970d73c50ea1ab76d492d9b55fa0eb2
bb384795724c9bd79d1409dfe608f5bb24d8f19e033eec3f1f34bc2cfe989da9b73809c1d1559d51
809101e1d78d1764d1c8a91cb77441dc6fd566ba081991a04013a2a74ec010ce7b5cf95770ffeb65
1d652ed5ca27fae6ae3f9b3c54db519d5375273167427ab52d9370583ed32f672fa15b1b4ef26d1b
688be853b0c024db5c387c84700c6a06657859f6d00596dc6819fdb708ce3a1fc34d6be1cb63cd60
ad19b6120f904c997e515ddfe18d018977eddf81f331782e094cb5e0668480ed59da3ac697294878
e5b36feacaedffca020275b10aa7d4b57b3cad0942ba6106771f8c16885e4788a5b9b3c98539d7f7
6e49667b135479a149568843ca9bb0a5d0b193642633ee26720fe108f2ad5d32b84cf8a22515a0ed
9ccf7cf8bb9b1728e53a95a82fdef44df806e6c08a077e44b2038747044375caafeecfaf2b67d596
64052c624fe57fc2c6851ead9fa28eb60b720b16984a98e936746b14c730f2f35d32b7e135d37c6d
54aad65b4860684e9f4f94920574cb77c738db1263779bf719c859a13c4121597f22f90931ef5399
602e63e5f68dd8a3c278b48e7a41b5aa7826c3884e35efa0a6e7ab395e67aaaafa1063430a21afad
4fbeecc19cd60455d6d5776072aaa37db9a94845ad2b09fe2858c8b1d33df1d49feb03d76467c0ea
0caefa89cbc84c735e5e2a0df46eee58e21cf934e057716983bd556b3dfb52606404416116b13377
c56c40ebe8cadf81c35fe01a51c71e04244ba130ff26e66dea8b3161eb12d8435993775a5e361681
b2047e16ac7dc3460b2e794ef44f0834f9a8a6fc90643451389edfdb006e7fc23c61c7585eaa26fe
c18f6ea9106f628b6cf8b4cdc291e0c4fc17ce6ee452ec821a07043bbbf2a0df9fc5af6c60736aee
4615a961890f79c429503b6be961d07f7a1a9f94732b7290ccd3e6f2b6153981a2017fd494d269b5
380380391434f3b2ec2d2ddcb1ac351945b9039b62a0c1e1a2070f80ced2b5634ddbb740e73bbf96
de0ff7d52ed23f12dc4205714a0529dfe07895f43367f25fc195555b6dfde885667a4400fea19f6d
fe0dc34bb3343d26f2d3eb6c2416673be264d4137a17242a318c46de014d8880461276619cbe69bb
7b15524a77614c2453f7ecc816efa7943f4c798b135d8312f122d92551212169dbd948dec5f8adaf
1dc0069891f0f4e58736c7acd83d4623cd6fec9277e0a17d7b68f5ab88b07733c1c815f2693508fa
45dff9e29f7bd99d6b0471d88f258927f1b0c6f34fc8f304e59ac3dff5b571fb27361ac672fdb53a
e13fcdab7ac792f6449978d1cdeaecad5c4fd612f68506317b626d3945fdf3201981f864c665f3c2
b2775a042303a49f3a2e4f797077ce2413aea95ae40182eb4cb3f1acd5f251dc86c1309619f96063
6198391dff811469260550e92c304937ff89e49fb0cf6d1cda9e9cf9dd991a36a39350b0730aec76
880b07efe5009febf124658316f848d544fc56185e623f4417f67fac1a67ed944b6ae98c550728be
1dc9e0bef1345f5c5e4f9a1c7c11b27accbf7951bca3662d20f827fc876648a9bc493acecf74de42
dfa7a0b50426cb9d2157f49944e17998a7b8be35036a173efecad6814f4fd457d91e912319dfa845
43b1f605f184091a8748d4e3bcf0b9275f92816838ec3ace4db86b93649353cb900fcdbfa7755981
d3861c3b71a1f371d6df6d79b7c51de926cf08dad3ecf7fbd6f9acf784c1dcd859427eb1d5ede223
3f1715a471c8063a271c4a60658c3c492569e533098a15b54df1d8ceb7da6eb674a7543493c70c96
6255de3a0bb994c1c67f40fda413ec99bd5c95c19d51759b1af86451040a33c1a8db48ec0ccd7f72
55538a91ecca4480c8fcfe9f50863dedd3521f0a4fe711fc829c47d9c91850767d069f689903408a
d54be7bf1cb5a37003699a4031424bc98fff1e50862a93db9f9b8ac9289fa6617ab6f5b6b4955c8a
3a71b7166104f24d85855355397d36a78ed5b9b4afde063f78f6e03c1b47b1f4b74586faff6d25a8
982ba82764a0adc6fd123df77dee29d0bdb926bc20350ac07b2d40ede2cc898fc8ca8bf510cf09b7
0debb07d9587c933acd639f9bf8e12c7fe2d8ce75f999e591e28097cba46939e2c883eeb0e248140
e88330c53ab62187aa3b8617ba667590588952714b0396cb165232e369a85f5ec791b47c2bbd87aa
16b11ffd00c2f2058eeb810b5aef44f52783f1cb890b8522ba61a2f8bdde342ab0f617e81479084c
d4d8b4b8da3646763d650117922449169ddcdd7513fa9c92d5d94d9d283de270b5e39241dd022f8b
dd97c19bc9044150bc955004d411e53995041f435f26877b1b2f68e5fa8548b6855c2e528a38b153
58a69db608f4b43efbd48df3d154370cc1999943d02c1cf2680937e1dba7ec53cbd73a24d75ac12a
0c9fdee9b8179bb61a9d61b7a42bfb877576e878f4f49a358f7c8ecb412233c02a078085fb8d99b2
ff6742ecc5b33aeab94c389a8341ab278bb83b1cf6be6856106b1b5b4aa7a8a3a823758a608e4965
f0effdf6fd388a90c815963f23d8b00ddef21ce1212366e39c7ce0837602c221eead13ed343715f8
5aa348105db4c0aa8e55b4af9cc978b543f6a70262a4a4c51b837ff0b5f76c19e68f2ebd597e9242
3dcb7ef38868871d782bf2233a12ca3bfc9334bcd1c6ec2e14529e3610f6fc5e1a47b5b5382cf09c
481fb77108940fad92de1a94e499574ca8fcfb6a52a0ad49128930d99237a28fb86a283839803187
668d48948d81aedb7196861acd29dc708e10f3a1d666c9d7b26e49b4797235c38f3863888cd02364
ae15a7839d65a43a612c37d9778de1a997ad44c38d18e07b65dc452519ae28cafdd876d94eec429a
ee46a3a9fb77d1817b6349e7c6088737fec171879a20dea42a4d1c7f4f70d44ee2b12b4548028a29
d1ab931c236dfcc999f54a7f4b379d9d46fbdbd448a5b071ab44a0197fb88afb42e6c4e5cd9a25a3
2ca9ab32583d08c74562f1c1f7bf1d6652ea0804a04c43afd6ee02f5e623783f774885adb7b3f6f7
b69abbf6a455f85104a275919374a3701e41ba89ae5fb369d66449c2ae71adfb21544af5031f534f
eaad36bda8f8bddbde243547d48de21f45c749dcb2003b2ac9747a385bd8f920c97916c9318e7bc4
ce6e83e853639090d7a3fd17a8c59ab2a1d8a7feb8d57c34a15ce9cc97ff9c40df589d99d82e8f00
4e8867fd0aae4b7651ed919392551fb2ae6028bffe605f356c61c833ac94ff6e79a11dc1c68592e7
97db40e65c12148c5b0737162b5206ddee19e77acdd13aab663af3295df0535ce2da390b7da19b89
be546f8f82bb80f61edf011e7f5a65c647f625044b0d5ab6b8e34e2734492a9ea6ed716d2493e47d
3f81cd9410fe83d2d9fa3c4927beee73f5788bf6f06795a4a1373eb811343b498cf2807ae90086b9
38380ae09e64beea4c12a401329593e8f1b2e65361e8cd32d1c81a6f09482759b9190ab111d51957
03ff05d24e7eee4a7f62a908a53b24e8940c1fb2406cf668959678de0fa7e9b2dddcc99420d03853
c9812148362b56a79537cc3f4f860c92df465de368bace7808929299f0d182ef3f8b7d0c7a81066f
c508f16e7d9a480575246805c86a142753670a2ee974687935377f8f89b5b3de71390cdcaaa89ccd
ac774c06054d3285396a480f7922e5e20781232ec4f12c6c23040d38e150d10e96a45a552bb13614
c7df15ef599ebfae7883a81964e2ffc693cf9b1a2ca53a267d6022c94650639544cb89cf03473c14
ff829b728fe62e870a5457d113fa13feac179d6898948c87b203f36efa0c00da3509c5e0b8327d08
d382b501af6fda42dcaca318b3a8599eda13db89088de9b031fcb542af640f380031eb8c677cac0a
f9f4fb88abf9929d63e304209c850090f763d03763435e493c974710bf6fdbd760f2c528cdbb2756
fe95b76e510d2d8ba1970ec0a7ba456c7f8e46e41aa533ed21dc348716631e2bf76b6e4a96361326
4bb2f22127a04dc949c613c040adbcb6e16ba27288a3a7755038b06385d411ba277bde9a85fee7a9
051054f59de0ba8eb8f90dd46d9ea2a1cbda03188f2a39004101653510a03170ff0e3c06cbdcf60a
7e909cac476bd1e3f646884ec7e4d4a5088997a8a9a5d0c778edd7fd47a890a9b177b3e5cd98af02
0965e8e4f1bb96fa11051e4121945ba987b8b761d7d3e20c0e8a2cda2168cf695b667d7e86e45178
b4975d1b02daba1a6492696697b21cfa7799c1d7db8f76d8ebf9ad6c5bee18b340bc4f78e36cdfe7
9f4cc3003850af67ee8adf8fcf854a78ef43f751e3a00403154fa511eaf1ed6b85cefb9403dd14fe
a4c11a3627c9dad723b410ea90e249886b62d62a02e8de7b83fd90a14e287cf9d67d409b5550c1a2
b412ba53e7833778e442d89895a7e4e4ef9f5c344396d2878ff7ac2e985d2589a0b6845f7c762b63
8ff12315d7fb44ef648665ede09737e7189e966a65df6e65def77cb262138e983cfe14414e9eaf36
9ef34154aa8cd77fed8a57df2cfef3a99bbe6be7faf9c2f58c714981d5bbacd176facfcd135cacaa
84a32a85a13570eeac616529e69242f77f07e93db703fb305acb289a25e5038bc97a84edeb123c95
bd63731cdee41b5ec09f00090147bedd1a1494f734a0ecc0241d17e933ee25cb6584029f4b9b03fe
c0e2afc57269d2eb3aec07f05d869e2836bc164c08da65bc504ac0567d275c59aa4ee22e7f2bf51e
525c737b98ee9409e3d0b04ec179b93c62e5b1091ca91a91a8970a211d1e32bfeb38ca0c1e56b252
932a89dce85d1b51c850f0acf2aecfc300dca465f2d18abbd69314bfb9972ce455d0aafeb341e922
7905bbaaf2495a20ef67537e034fda3acd16ed2291505fa313690edad0746e8d4c03c1dba94c38a0
a5a8a4a47a258c3fded048be7541fb0913ecbf
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 SSC_Copy_State <Virtual>  0
 HBW_Pick TASK  0 -1
 HBW_Copy_State <Virtual>  0
 PID_10 PID  0
 PID_11 PID  0
 hunt_exp_light PROGRAM  0 -1
 HBW_Home <Virtual>  0
 HBW_Pick_Sto <Virtual>  0
 test TASK  0 -1
 HBW_Pickup_ST PROGRAM  0 -1
 HWB_Extend_Arm <Virtual>  0
 HBW_Retract_Arm <Virtual>  0
 HWB_PickUp TASK  0 -1
 HBW_HTO1POS <Virtual>  0
 HBW_Left_1Block <Virtual>  0
 HBW_HomeTo2_Col <Virtual>  0
 HWB_HomeTo3_Col <Virtual>  0
 HWB_HomeTo2_Row <Virtual>  0
 HWB_HomeTo3_Row <Virtual>  0
 HWB_HomeTo1_Col <Virtual>  0
 HBW_move_left_1 <Virtual>  0
 HWB_Home_to_11 <Virtual>  0
 HWB_11_DropOff <Virtual>  0
 HBW_Pickup <Virtual>  0
 HBW_PickUp_R1 <Virtual>  0
 HBW_Send_VGR <Virtual>  0
 HBW_PickUp_VGR <Virtual>  0
 HBW_Return_VGR <Virtual>  0
 HBW_MotorsOff <Virtual>  0
 HBW_ConvTo11 <Virtual>  0
 HBW_Return_Top <Virtual>  0
 HBW_MV_11_12 <Virtual>  0
 HBW_Conv_12 <Virtual>  0
 HBW_Conv_12_Lat <Virtual>  0
 HBW_RETRACT_13 <Virtual>  0
 HBW_Retract_23 <Virtual>  0
 HBW_Conv13_Lat <Virtual>  0
 HBW_Conv_2Row <Virtual>  0
 HBW_PickUp_R2 <Virtual>  0
 HBW_Conv11_Lat <Virtual>  0
 HBW_Retract_12 <Virtual>  0
 HBW_Shift_C1C2 <Virtual>  0
 HBW_Move_R1_R2 <Virtual>  0
 HBW_Retract_22 <Virtual>  0
 HBW_Retract_21 <Virtual>  0
 HBW_Retract_31 <Virtual>  0
 HBW_Move_R2_R3 <Virtual>  0
 HBW_PickUp_R3 <Virtual>  0
 HBW_Conv_3Row <Virtual>  0
 HBW_Retract_32 <Virtual>  0
 HBW_Retract_33 <Virtual>  0
 HBW_Retract_Done PROGRAM  0 -1
 HBW_Retract_DN <Virtual>  0
 oneOperation <Virtual>  0
 HBW_Check1Puck <Virtual>  0
 HBW_OneTime_R1 <Virtual>  0
 HBW_OneTime_R2 <Virtual>  0
 HBW_OneTime_R3 <Virtual>  0
 HBW_OneTime_C1 <Virtual>  0
 HBW_OneTime_C2 <Virtual>  0
 HBW_OneTime_C3 <Virtual>  0
 HBW_OneDropR3 <Virtual>  0
 HBW_OneDropR2 <Virtual>  0
 HBW_OneDropR1 <Virtual>  0
#END

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"VGR Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC410 C410 1 0x0 MC409 C409 1 0x0 MC412 Y28 1 0x0 MC412 MC450 1 0x0 MC411 C411 1 0x0 MC408 C408 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC413 Y29 1 0x0 MC413 MC451 1 0x0 X27 MI200 1 0x0 X26 MI454 1 0x0 X25 MI453 1 0x0 MC452 C452 1"

// Rung VGR_Copy_State#2
// Offset 33
NOP

// Rung VGR_Copy_State#3
// Offset 34
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC800 Y41 1 0x0 Y41 MI801 1 0x0 MC802 Y43 1 0x0 Y43 MI803 1 0x0 MC804 C804 1 0x0 MC805 C805 1 0x0 MC806 Y44 1 0x0 MC807 Y20 1 0x0 MC808 C811 1 0x0 MC809 C809 1 0x0 MC810 C810 1 0x0 MC812 C812 1 0x0 MC813 C813 1 0x0 MC814 C814 1 0x0 MC816 Y45 1 0x0 MC817 Y46 1 0x0 MC818 Y21 1 0x0 MC819 Y20 1 0x0 MC820 Y44 1 0x0 MC822 Y52 1"

// Rung MPO_Copy_State#2
// Offset 45
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC800 C1600 1 0x0 MC801 C1601 1 0x0 MC802 C1602 1 0x0 MC803 C1603 1 0x0 MC804 C1604 1 0x0 Y31 MI800 1 0x0 MC850 C1605 1 0x0 MC805 C1610 1"

// Rung SLD_Copy_State#2
// Offset 21
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"SSC Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC606 C1200 1 0x0 MC607 C1201 1 0x0 MC608 C1202 1 0x0 MC609 C1203 1 0x0 MC615 C1215 1 0x0 MC616 C1216 1 0x0 MC617 C1217 1 0x0 MC618 C1218 1 0x0 MC619 C1219 1 0x0 MC620 C1220 1"

// Rung SSC_Copy_State#2
// Offset 25
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block HBW_Home
$LGCMOD HBW_Home

// Rung HBW_Home#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Home#2
// Offset 8
STRN C215
ANDN X0
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 60 60
OUT Y51

// Rung HBW_Home#3
// Offset 26
STRN C215
ANDN X3
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5

// Rung HBW_Home#4
// Offset 43
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y76

// Rung HBW_Home#5
// Offset 64
NOP

// Rung HBW_Home#6
// Offset 65
RET

// End of Code Block HBW_Home
$LGCEND HBW_Home

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 Y40 1 0x0 Y80 MHR102 1 0x0 MC101 C205 1 0x0 MC102 C206 1 0x0 MC103 C207 1 0x0 MC104 C208 1 0x0 MC105 C209 1 0x0 MC106 C210 1 0x0 MC107 C211 1 0x0 MC108 C212 1 0x0 MC109 C213 1 0x0 MC110 C214 1 0x0 MC111 C215 1 0x0 MC112 C216 1 0x0 MC113 C300 1 0x0 MC114 C217 1 0x0 MC115 C218 1 0x0 MC116 C219 1 0x0 MC117 C220 1 0x0 MC118 C221 1 0x0 MC119 C222 1 0x0 MC120 C223 1 0x0 MC121 C224 1 0x0 MC122 C225 1 0x0 X2 MI101 1 0x0 X10 MI102 1 0x0 X11 MI103 1 0x0 X3 MI104 1 0x0 X0 MI105 1 0x0 X6 MI106 1 0x0 X7 MI107 1 0x0 X8 MI108 1 0x0 X9 MI109 1 0x0 $HBW_Encoder_X.Acc MHR1 1 0x0 $HBW_Encoder_Z.Acc MHR2 1"

// Rung HBW_Copy_State#2
// Offset 75
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block HBW_HomeTo2_Col
$LGCMOD HBW_HomeTo2_Col

// Rung HBW_HomeTo2_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_HomeTo2_Col#2
// Offset 17
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_HomeTo2_Col#3
// Offset 22
NOP

// Rung HBW_HomeTo2_Col#4
// Offset 23
NOP

// Rung HBW_HomeTo2_Col#5
// Offset 24
NOP

// Rung HBW_HomeTo2_Col#6
// Offset 25
RET

// End of Code Block HBW_HomeTo2_Col
$LGCEND HBW_HomeTo2_Col

// Beginning of Code Block HWB_HomeTo1_Col
$LGCMOD HWB_HomeTo1_Col

// Rung HWB_HomeTo1_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HWB_HomeTo1_Col#2
// Offset 17
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_HomeTo1_Col#3
// Offset 22
NOP

// Rung HWB_HomeTo1_Col#4
// Offset 23
NOP

// Rung HWB_HomeTo1_Col#5
// Offset 24
RET

// End of Code Block HWB_HomeTo1_Col
$LGCEND HWB_HomeTo1_Col

// Beginning of Code Block HWB_Home_to_11
$LGCMOD HWB_Home_to_11

// Rung HWB_Home_to_11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HWB_Home_to_11#2
// Offset 22
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_Home_to_11#3
// Offset 27
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HWB_Home_to_11#4
// Offset 49
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_Home_to_11#5
// Offset 54
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HWB_Home_to_11#6
// Offset 73
NOP

// Rung HWB_Home_to_11#7
// Offset 74
NOP

// Rung HWB_Home_to_11#8
// Offset 75
RET

// End of Code Block HWB_Home_to_11
$LGCEND HWB_Home_to_11

// Beginning of Code Block HWB_11_DropOff
$LGCMOD HWB_11_DropOff

// Rung HWB_11_DropOff#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HWB_11_DropOff#2
// Offset 8
STRGE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_11_DropOff#3
// Offset 13
STRN C215
ANDN C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51

// Rung HWB_11_DropOff#4
// Offset 31
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y4
AND ST2
OUT Y5

// Rung HWB_11_DropOff#5
// Offset 51
STRGE 2730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_11_DropOff#6
// Offset 56
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 60 60
OUT Y7

// Rung HWB_11_DropOff#7
// Offset 73
RET

// End of Code Block HWB_11_DropOff
$LGCEND HWB_11_DropOff

// Beginning of Code Block HBW_PickUp_R1
$LGCMOD HBW_PickUp_R1

// Rung HBW_PickUp_R1#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R1#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R1#3
// Offset 41
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R1#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R1#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_PickUp_R1#6
// Offset 69
NOP

// Rung HBW_PickUp_R1#7
// Offset 70
NOP

// Rung HBW_PickUp_R1#8
// Offset 71
NOP

// Rung HBW_PickUp_R1#9
// Offset 72
NOP

// Rung HBW_PickUp_R1#10
// Offset 73
RET

// End of Code Block HBW_PickUp_R1
$LGCEND HBW_PickUp_R1

// Beginning of Code Block HBW_Send_VGR
$LGCMOD HBW_Send_VGR

// Rung HBW_Send_VGR#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Send_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_Send_VGR#3
// Offset 37
STRN C215
AND X2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y48
AND ST2
OUT Y49

// Rung HBW_Send_VGR#4
// Offset 56
NOP

// Rung HBW_Send_VGR#5
// Offset 57
NOP

// Rung HBW_Send_VGR#6
// Offset 58
RET

// End of Code Block HBW_Send_VGR
$LGCEND HBW_Send_VGR

// Beginning of Code Block HBW_PickUp_VGR
$LGCMOD HBW_PickUp_VGR

// Rung HBW_PickUp_VGR#1
// Offset 0
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_PickUp_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_PickUp_VGR#3
// Offset 37
STRN C215
AND X11
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_PickUp_VGR#4
// Offset 56
NOP

// Rung HBW_PickUp_VGR#5
// Offset 57
NOP

// Rung HBW_PickUp_VGR#6
// Offset 58
RET

// End of Code Block HBW_PickUp_VGR
$LGCEND HBW_PickUp_VGR

// Beginning of Code Block HBW_Return_VGR
$LGCMOD HBW_Return_VGR

// Rung HBW_Return_VGR#1
// Offset 0
STRN C215
ANDN C251
DUPBOOL
AND C299
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y6

// Rung HBW_Return_VGR#2
// Offset 22
STRN C215
AND X1
DUPBOOL
AND C299
AND C251
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
POPBOOL
AND ST2
OUT Y48

// Rung HBW_Return_VGR#3
// Offset 45
STRN C215
DUPBOOL
AND C299
ANDN X1
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_Return_VGR#4
// Offset 68
STRLE 2550 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_VGR#5
// Offset 73
NOP

// Rung HBW_Return_VGR#6
// Offset 74
NOP

// Rung HBW_Return_VGR#7
// Offset 75
RET

// End of Code Block HBW_Return_VGR
$LGCEND HBW_Return_VGR

// Beginning of Code Block HBW_MotorsOff
$LGCMOD HBW_MotorsOff

// Rung HBW_MotorsOff#1
// Offset 0
STRN C215
ANDN ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_MotorsOff#2
// Offset 18
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_MotorsOff#3
// Offset 36
STRN C215
AND ST2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
OUT Y48

// Rung HBW_MotorsOff#4
// Offset 54
NOP

// Rung HBW_MotorsOff#5
// Offset 55
NOP

// Rung HBW_MotorsOff#6
// Offset 56
NOP

// Rung HBW_MotorsOff#7
// Offset 57
RET

// End of Code Block HBW_MotorsOff
$LGCEND HBW_MotorsOff

// Beginning of Code Block HBW_ConvTo11
$LGCMOD HBW_ConvTo11

// Rung HBW_ConvTo11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_ConvTo11#2
// Offset 22
NOP

// Rung HBW_ConvTo11#3
// Offset 23
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_ConvTo11#4
// Offset 28
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_ConvTo11#5
// Offset 50
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_ConvTo11#6
// Offset 55
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_ConvTo11#7
// Offset 74
NOP

// Rung HBW_ConvTo11#8
// Offset 75
NOP

// Rung HBW_ConvTo11#9
// Offset 76
RET

// End of Code Block HBW_ConvTo11
$LGCEND HBW_ConvTo11

// Beginning of Code Block HBW_Return_Top
$LGCMOD HBW_Return_Top

// Rung HBW_Return_Top#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Return_Top#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HBW_Return_Top#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_Top#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_Return_Top#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return_Top#6
// Offset 69
NOP

// Rung HBW_Return_Top#7
// Offset 70
NOP

// Rung HBW_Return_Top#8
// Offset 71
RET

// End of Code Block HBW_Return_Top
$LGCEND HBW_Return_Top

// Beginning of Code Block HBW_MV_11_12
$LGCMOD HBW_MV_11_12

// Rung HBW_MV_11_12#1
// Offset 0
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_MV_11_12#2
// Offset 21
NOP

// Rung HBW_MV_11_12#3
// Offset 22
NOP

// Rung HBW_MV_11_12#4
// Offset 23
NOP

// Rung HBW_MV_11_12#5
// Offset 24
RET

// End of Code Block HBW_MV_11_12
$LGCEND HBW_MV_11_12

// Beginning of Code Block HBW_Conv_12
$LGCMOD HBW_Conv_12

// Rung HBW_Conv_12#1
// Offset 0
NOP

// Rung HBW_Conv_12#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_12#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Conv_12#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 80
OUT C251

// Rung HBW_Conv_12#5
// Offset 45
NOP

// Rung HBW_Conv_12#6
// Offset 46
RET

// End of Code Block HBW_Conv_12
$LGCEND HBW_Conv_12

// Beginning of Code Block HBW_Conv_12_Lat
$LGCMOD HBW_Conv_12_Lat

// Rung HBW_Conv_12_Lat#1
// Offset 0
NOP

// Rung HBW_Conv_12_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv_12_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv_12_Lat#4
// Offset 42
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv_12_Lat#5
// Offset 47
NOP

// Rung HBW_Conv_12_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv_12_Lat
$LGCEND HBW_Conv_12_Lat

// Beginning of Code Block HBW_RETRACT_13
$LGCMOD HBW_RETRACT_13

// Rung HBW_RETRACT_13#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_RETRACT_13#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_RETRACT_13#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_RETRACT_13#4
// Offset 46
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_RETRACT_13#5
// Offset 68
STRGE 7650 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_RETRACT_13#6
// Offset 73
RET

// End of Code Block HBW_RETRACT_13
$LGCEND HBW_RETRACT_13

// Beginning of Code Block HBW_Retract_23
$LGCMOD HBW_Retract_23

// Rung HBW_Retract_23#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_23#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_23#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_23#4
// Offset 46
STRN C215
AND ST2
OUT Y51
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_Retract_23#5
// Offset 65
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_23#6
// Offset 70
RET

// End of Code Block HBW_Retract_23
$LGCEND HBW_Retract_23

// Beginning of Code Block HBW_Conv13_Lat
$LGCMOD HBW_Conv13_Lat

// Rung HBW_Conv13_Lat#1
// Offset 0
NOP

// Rung HBW_Conv13_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv13_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv13_Lat#4
// Offset 42
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv13_Lat#5
// Offset 47
NOP

// Rung HBW_Conv13_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv13_Lat
$LGCEND HBW_Conv13_Lat

// Beginning of Code Block HBW_Conv_2Row
$LGCMOD HBW_Conv_2Row

// Rung HBW_Conv_2Row#1
// Offset 0
NOP

// Rung HBW_Conv_2Row#2
// Offset 1
NOP

// Rung HBW_Conv_2Row#3
// Offset 2
NOP

// Rung HBW_Conv_2Row#4
// Offset 3
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_2Row#5
// Offset 22
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Conv_2Row#6
// Offset 42
STRGE $HBW_Encoder_Z.Acc 1380
OUT C251

// Rung HBW_Conv_2Row#7
// Offset 47
NOP

// Rung HBW_Conv_2Row#8
// Offset 48
RET

// End of Code Block HBW_Conv_2Row
$LGCEND HBW_Conv_2Row

// Beginning of Code Block HBW_PickUp_R2
$LGCMOD HBW_PickUp_R2

// Rung HBW_PickUp_R2#1
// Offset 0
NOP

// Rung HBW_PickUp_R2#2
// Offset 1
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R2#3
// Offset 20
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R2#4
// Offset 38
NOP

// Rung HBW_PickUp_R2#5
// Offset 39
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R2#6
// Offset 61
STRLE 1400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R2#7
// Offset 66
NOP

// Rung HBW_PickUp_R2#8
// Offset 67
NOP

// Rung HBW_PickUp_R2#9
// Offset 68
NOP

// Rung HBW_PickUp_R2#10
// Offset 69
RET

// End of Code Block HBW_PickUp_R2
$LGCEND HBW_PickUp_R2

// Beginning of Code Block HBW_Conv11_Lat
$LGCMOD HBW_Conv11_Lat

// Rung HBW_Conv11_Lat#1
// Offset 0
NOP

// Rung HBW_Conv11_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv11_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv11_Lat#4
// Offset 42
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv11_Lat#5
// Offset 47
NOP

// Rung HBW_Conv11_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv11_Lat
$LGCEND HBW_Conv11_Lat

// Beginning of Code Block HBW_Retract_12
$LGCMOD HBW_Retract_12

// Rung HBW_Retract_12#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_12#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_12#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_12#4
// Offset 46
RET

// End of Code Block HBW_Retract_12
$LGCEND HBW_Retract_12

// Beginning of Code Block HBW_Shift_C1C2
$LGCMOD HBW_Shift_C1C2

// Rung HBW_Shift_C1C2#1
// Offset 0
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Shift_C1C2#2
// Offset 5
NOP

// Rung HBW_Shift_C1C2#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Shift_C1C2#4
// Offset 25
NOP

// Rung HBW_Shift_C1C2#5
// Offset 26
STRN C215
AND ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_Shift_C1C2#6
// Offset 44
NOP

// Rung HBW_Shift_C1C2#7
// Offset 45
RET

// End of Code Block HBW_Shift_C1C2
$LGCEND HBW_Shift_C1C2

// Beginning of Code Block HBW_Move_R1_R2
$LGCMOD HBW_Move_R1_R2

// Rung HBW_Move_R1_R2#1
// Offset 0
STRGE 1760 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Move_R1_R2#2
// Offset 5
NOP

// Rung HBW_Move_R1_R2#3
// Offset 6
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Move_R1_R2#4
// Offset 25
NOP

// Rung HBW_Move_R1_R2#5
// Offset 26
NOP

// Rung HBW_Move_R1_R2#6
// Offset 27
RET

// End of Code Block HBW_Move_R1_R2
$LGCEND HBW_Move_R1_R2

// Beginning of Code Block HBW_Retract_22
$LGCMOD HBW_Retract_22

// Rung HBW_Retract_22#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_22#2
// Offset 22
STRGE 1730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_22#3
// Offset 27
NOP

// Rung HBW_Retract_22#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_22#5
// Offset 47
STRLE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_22#6
// Offset 52
STRN C215
AND C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
AND ST2
OUT Y50

// Rung HBW_Retract_22#7
// Offset 72
NOP

// Rung HBW_Retract_22#8
// Offset 73
RET

// End of Code Block HBW_Retract_22
$LGCEND HBW_Retract_22

// Beginning of Code Block HBW_Retract_21
$LGCMOD HBW_Retract_21

// Rung HBW_Retract_21#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_21#2
// Offset 22
STRGE 1730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_21#3
// Offset 27
NOP

// Rung HBW_Retract_21#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_21#5
// Offset 47
STRLE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_21#6
// Offset 52
STRN C215
AND C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
AND ST2
OUT Y50

// Rung HBW_Retract_21#7
// Offset 72
NOP

// Rung HBW_Retract_21#8
// Offset 73
RET

// End of Code Block HBW_Retract_21
$LGCEND HBW_Retract_21

// Beginning of Code Block HBW_Retract_31
$LGCMOD HBW_Retract_31

// Rung HBW_Retract_31#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_31#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_31#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_31#4
// Offset 46
STRN C215
AND ST2
OUT Y51
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_Retract_31#5
// Offset 65
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_31#6
// Offset 70
RET

// End of Code Block HBW_Retract_31
$LGCEND HBW_Retract_31

// Beginning of Code Block HBW_Move_R2_R3
$LGCMOD HBW_Move_R2_R3

// Rung HBW_Move_R2_R3#1
// Offset 0
STRGE 3600 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Move_R2_R3#2
// Offset 5
NOP

// Rung HBW_Move_R2_R3#3
// Offset 6
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Move_R2_R3#4
// Offset 25
NOP

// Rung HBW_Move_R2_R3#5
// Offset 26
NOP

// Rung HBW_Move_R2_R3#6
// Offset 27
RET

// End of Code Block HBW_Move_R2_R3
$LGCEND HBW_Move_R2_R3

// Beginning of Code Block HBW_PickUp_R3
$LGCMOD HBW_PickUp_R3

// Rung HBW_PickUp_R3#1
// Offset 0
NOP

// Rung HBW_PickUp_R3#2
// Offset 1
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R3#3
// Offset 20
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R3#4
// Offset 38
STRLE 2800 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R3#5
// Offset 43
NOP

// Rung HBW_PickUp_R3#6
// Offset 44
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R3#7
// Offset 66
NOP

// Rung HBW_PickUp_R3#8
// Offset 67
NOP

// Rung HBW_PickUp_R3#9
// Offset 68
NOP

// Rung HBW_PickUp_R3#10
// Offset 69
RET

// End of Code Block HBW_PickUp_R3
$LGCEND HBW_PickUp_R3

// Beginning of Code Block HBW_Conv_3Row
$LGCMOD HBW_Conv_3Row

// Rung HBW_Conv_3Row#1
// Offset 0
NOP

// Rung HBW_Conv_3Row#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_3Row#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Conv_3Row#4
// Offset 40
STRLE $HBW_Encoder_Z.Acc 2950
OUT C251

// Rung HBW_Conv_3Row#5
// Offset 45
NOP

// Rung HBW_Conv_3Row#6
// Offset 46
RET

// End of Code Block HBW_Conv_3Row
$LGCEND HBW_Conv_3Row

// Beginning of Code Block HBW_Retract_32
$LGCMOD HBW_Retract_32

// Rung HBW_Retract_32#1
// Offset 0
STRGE 3300 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_32#2
// Offset 5
NOP

// Rung HBW_Retract_32#3
// Offset 6
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_32#4
// Offset 28
NOP

// Rung HBW_Retract_32#5
// Offset 29
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_32#6
// Offset 48
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_32#7
// Offset 53
NOP

// Rung HBW_Retract_32#8
// Offset 54
STRN C215
AND C250
DUPBOOL
ANDN C251
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_Retract_32#9
// Offset 77
NOP

// Rung HBW_Retract_32#10
// Offset 78
RET

// End of Code Block HBW_Retract_32
$LGCEND HBW_Retract_32

// Beginning of Code Block HBW_Retract_33
$LGCMOD HBW_Retract_33

// Rung HBW_Retract_33#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_33#2
// Offset 22
STRGE 3300 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_33#3
// Offset 27
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_33#4
// Offset 46
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_33#5
// Offset 51
NOP

// Rung HBW_Retract_33#6
// Offset 52
STRN C215
AND C250
DUPBOOL
ANDN C251
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_Retract_33#7
// Offset 75
NOP

// Rung HBW_Retract_33#8
// Offset 76
RET

// End of Code Block HBW_Retract_33
$LGCEND HBW_Retract_33

// Beginning of Code Block HBW_Retract_DN
$LGCMOD HBW_Retract_DN

// Rung HBW_Retract_DN#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_DN#2
// Offset 22
STRGE 3200 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_DN#3
// Offset 27
NOP

// Rung HBW_Retract_DN#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_DN#5
// Offset 47
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_DN#6
// Offset 52
STRN C215
AND C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
AND ST2
OUT Y50

// Rung HBW_Retract_DN#7
// Offset 72
NOP

// Rung HBW_Retract_DN#8
// Offset 73
RET

// End of Code Block HBW_Retract_DN
$LGCEND HBW_Retract_DN

// Beginning of Code Block oneOperation
$LGCMOD oneOperation

// Rung oneOperation#1
// Offset 0
NOP

// Rung oneOperation#2
// Offset 1
NOP

// Rung oneOperation#3
// Offset 2
RET

// End of Code Block oneOperation
$LGCEND oneOperation

// Beginning of Code Block HBW_Check1Puck
$LGCMOD HBW_Check1Puck

// Rung HBW_Check1Puck#1
// Offset 0
STR ST1
MOVE 0 C301

// Rung HBW_Check1Puck#2
// Offset 3
STR C217
MOVE 1 C301
MOVE 1 N2

// Rung HBW_Check1Puck#3
// Offset 8
STR C218
MOVE 1 C301
MOVE 2 N2

// Rung HBW_Check1Puck#4
// Offset 13
STR C219
MOVE 1 C301
MOVE 3 N2

// Rung HBW_Check1Puck#5
// Offset 18
STR C220
MOVE 1 C301
MOVE 4 N2

// Rung HBW_Check1Puck#6
// Offset 23
STR C221
MOVE 1 C301
MOVE 5 N2

// Rung HBW_Check1Puck#7
// Offset 28
STR C222
MOVE 1 C301
MOVE 6 N2

// Rung HBW_Check1Puck#8
// Offset 33
STR C223
MOVE 1 C301
MOVE 7 N2

// Rung HBW_Check1Puck#9
// Offset 38
STR C224
MOVE 1 C301
MOVE 8 N2

// Rung HBW_Check1Puck#10
// Offset 43
STR C225
MOVE 1 C301
MOVE 9 N2

// Rung HBW_Check1Puck#11
// Offset 48
RET

// End of Code Block HBW_Check1Puck
$LGCEND HBW_Check1Puck

// Beginning of Code Block HBW_OneTime_R1
$LGCMOD HBW_OneTime_R1

// Rung HBW_OneTime_R1#1
// Offset 0
STRGE 375 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneTime_R1#2
// Offset 5
NOP

// Rung HBW_OneTime_R1#3
// Offset 6
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_OneTime_R1#4
// Offset 25
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneTime_R1#5
// Offset 45
NOP

// Rung HBW_OneTime_R1#6
// Offset 46
RET

// End of Code Block HBW_OneTime_R1
$LGCEND HBW_OneTime_R1

// Beginning of Code Block HBW_OneTime_R2
$LGCMOD HBW_OneTime_R2

// Rung HBW_OneTime_R2#1
// Offset 0
STRGE 1650 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneTime_R2#2
// Offset 5
NOP

// Rung HBW_OneTime_R2#3
// Offset 6
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_OneTime_R2#4
// Offset 25
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneTime_R2#5
// Offset 45
NOP

// Rung HBW_OneTime_R2#6
// Offset 46
RET

// End of Code Block HBW_OneTime_R2
$LGCEND HBW_OneTime_R2

// Beginning of Code Block HBW_OneTime_R3
$LGCMOD HBW_OneTime_R3

// Rung HBW_OneTime_R3#1
// Offset 0
STRGE 3200 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneTime_R3#2
// Offset 5
NOP

// Rung HBW_OneTime_R3#3
// Offset 6
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_OneTime_R3#4
// Offset 25
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneTime_R3#5
// Offset 45
NOP

// Rung HBW_OneTime_R3#6
// Offset 46
RET

// End of Code Block HBW_OneTime_R3
$LGCEND HBW_OneTime_R3

// Beginning of Code Block HBW_OneTime_C1
$LGCMOD HBW_OneTime_C1

// Rung HBW_OneTime_C1#1
// Offset 0
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_OneTime_C1#2
// Offset 5
NOP

// Rung HBW_OneTime_C1#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_OneTime_C1#4
// Offset 25
NOP

// Rung HBW_OneTime_C1#5
// Offset 26
RET

// Rung HBW_OneTime_C1#6
// Offset 27
NOP

// End of Code Block HBW_OneTime_C1
$LGCEND HBW_OneTime_C1

// Beginning of Code Block HBW_OneTime_C2
$LGCMOD HBW_OneTime_C2

// Rung HBW_OneTime_C2#1
// Offset 0
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_OneTime_C2#2
// Offset 5
NOP

// Rung HBW_OneTime_C2#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_OneTime_C2#4
// Offset 25
NOP

// Rung HBW_OneTime_C2#5
// Offset 26
RET

// Rung HBW_OneTime_C2#6
// Offset 27
NOP

// Rung HBW_OneTime_C2#7
// Offset 28
NOP

// End of Code Block HBW_OneTime_C2
$LGCEND HBW_OneTime_C2

// Beginning of Code Block HBW_OneTime_C3
$LGCMOD HBW_OneTime_C3

// Rung HBW_OneTime_C3#1
// Offset 0
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_OneTime_C3#2
// Offset 5
NOP

// Rung HBW_OneTime_C3#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_OneTime_C3#4
// Offset 25
NOP

// Rung HBW_OneTime_C3#5
// Offset 26
RET

// Rung HBW_OneTime_C3#6
// Offset 27
NOP

// Rung HBW_OneTime_C3#7
// Offset 28
NOP

// End of Code Block HBW_OneTime_C3
$LGCEND HBW_OneTime_C3

// Beginning of Code Block HBW_OneDropR3
$LGCMOD HBW_OneDropR3

// Rung HBW_OneDropR3#1
// Offset 0
NOP

// Rung HBW_OneDropR3#2
// Offset 1
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_OneDropR3#3
// Offset 23
STRGE 3300 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneDropR3#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneDropR3#5
// Offset 47
NOP

// Rung HBW_OneDropR3#6
// Offset 48
NOP

// Rung HBW_OneDropR3#7
// Offset 49
RET

// Rung HBW_OneDropR3#8
// Offset 50
NOP

// End of Code Block HBW_OneDropR3
$LGCEND HBW_OneDropR3

// Beginning of Code Block HBW_OneDropR2
$LGCMOD HBW_OneDropR2

// Rung HBW_OneDropR2#1
// Offset 0
NOP

// Rung HBW_OneDropR2#2
// Offset 1
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_OneDropR2#3
// Offset 23
STRGE 1730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneDropR2#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneDropR2#5
// Offset 47
NOP

// Rung HBW_OneDropR2#6
// Offset 48
NOP

// Rung HBW_OneDropR2#7
// Offset 49
RET

// Rung HBW_OneDropR2#8
// Offset 50
NOP

// Rung HBW_OneDropR2#9
// Offset 51
NOP

// End of Code Block HBW_OneDropR2
$LGCEND HBW_OneDropR2

// Beginning of Code Block HBW_OneDropR1
$LGCMOD HBW_OneDropR1

// Rung HBW_OneDropR1#1
// Offset 0
NOP

// Rung HBW_OneDropR1#2
// Offset 1
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_OneDropR1#3
// Offset 23
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneDropR1#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneDropR1#5
// Offset 47
NOP

// Rung HBW_OneDropR1#6
// Offset 48
NOP

// Rung HBW_OneDropR1#7
// Offset 49
RET

// Rung HBW_OneDropR1#8
// Offset 50
NOP

// Rung HBW_OneDropR1#9
// Offset 51
NOP

// End of Code Block HBW_OneDropR1
$LGCEND HBW_OneDropR1

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#2
// Offset 3
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#3
// Offset 6
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#4
// Offset 9
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#5
// Offset 12
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// Rung $Main#6
// Offset 15
#BEGIN FMT_COMMENT 
"Hunter Demo Light<br>"
#END

STR ST1
RUN hunt_exp_light

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
SG HBW_Program.S0

// Rung HBW_Program#2
// Offset 2
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#3
// Offset 10
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#4
// Offset 12
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#5
// Offset 14
STR ST1
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#6
// Offset 22
STR ST1
CALL HBW_Check1Puck 0x1 DST511 "3" "3"

// Rung HBW_Program#7
// Offset 30
STR C301
JMP HBW_Program.S19

// Rung HBW_Program#8
// Offset 32
NOP

// Rung HBW_Program#9
// Offset 33
STR C216
JMP HBW_Program.S1

// Rung HBW_Program#10
// Offset 35
STR C213
JMP HBW_Program.S1

// Rung HBW_Program#11
// Offset 37
SG HBW_Program.S1

// Rung HBW_Program#12
// Offset 39
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#13
// Offset 47
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#14
// Offset 49
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#15
// Offset 51
STR ST1
MOVE 0 N1

// Rung HBW_Program#16
// Offset 54
STR ST1
MOVE 0 C299

// Rung HBW_Program#17
// Offset 57
NOP

// Rung HBW_Program#18
// Offset 58
STR ST1
DUPBOOL
STR C205
ANDN C206
STR C206
ANDN C205
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 500 60
POPBOOL
DUPBOOL
AND C205
OUT Y48
POPBOOL
AND C206
OUT Y49

// Rung HBW_Program#19
// Offset 87
STR ST1
DUPBOOL
STR C207
ANDN C208
STRN C207
AND C208
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
POPBOOL
DUPBOOL
AND C207
OUT Y50
POPBOOL
AND C208
OUT Y51

// Rung HBW_Program#20
// Offset 116
STR ST1
DUPBOOL
STR C209
ANDN C210
STRN C209
AND C210
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
POPBOOL
DUPBOOL
AND C209
OUT Y4
POPBOOL
AND C210
OUT Y5

// Rung HBW_Program#21
// Offset 145
STR ST1
DUPBOOL
STR C211
ANDN C212
STRN C211
AND C212
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
POPBOOL
DUPBOOL
AND C211
OUT Y6
POPBOOL
AND C212
OUT Y7

// Rung HBW_Program#22
// Offset 174
STR C213
JMP HBW_Program.S2

// Rung HBW_Program#23
// Offset 176
SG HBW_Program.S2

// Rung HBW_Program#24
// Offset 178
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#25
// Offset 186
STR X0
OUT $HBW_Encoder_X.ResetLevel

// Rung HBW_Program#26
// Offset 188
STR X3
OUT $HBW_Encoder_Z.ResetLevel

// Rung HBW_Program#27
// Offset 190
STR ST1
CALL HBW_Home 0x1 DST511 "3" "3"

// Rung HBW_Program#28
// Offset 198
STR X0
AND X11
AND X3
JMP HBW_Program.S3

// Rung HBW_Program#29
// Offset 202
STR C212
JMP HBW_Program.S3

// Rung HBW_Program#30
// Offset 204
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#31
// Offset 206
SG HBW_Program.S3

// Rung HBW_Program#32
// Offset 208
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#33
// Offset 216
STR ST1
CALL HWB_Home_to_11 0x1 DST511 "3" "3"

// Rung HBW_Program#34
// Offset 224
STRN C250
ANDN C251
JMP HBW_Program.S4

// Rung HBW_Program#35
// Offset 227
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#36
// Offset 229
SG HBW_Program.S4

// Rung HBW_Program#37
// Offset 231
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#38
// Offset 239
STR ST1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#39
// Offset 247
STR X10
ANDN C251
JMP HBW_Program.S5

// Rung HBW_Program#40
// Offset 250
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#41
// Offset 252
NOP

// Rung HBW_Program#42
// Offset 253
SG HBW_Program.S5

// Rung HBW_Program#43
// Offset 255
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#44
// Offset 263
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#45
// Offset 271
STRN C251
AND C250
JMP HBW_Program.S6

// Rung HBW_Program#46
// Offset 274
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#47
// Offset 276
SG HBW_Program.S6

// Rung HBW_Program#48
// Offset 278
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#49
// Offset 286
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#50
// Offset 294
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#51
// Offset 296
STRN X2
JMP HBW_Program.S7
INC N1

// Rung HBW_Program#52
// Offset 299
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#53
// Offset 301
NOP

// Rung HBW_Program#54
// Offset 302
SG HBW_Program.S7

// Rung HBW_Program#55
// Offset 304
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#56
// Offset 312
STR C300
MOVE 1 C299

// Rung HBW_Program#57
// Offset 315
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#58
// Offset 323
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#59
// Offset 332
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#60
// Offset 334
NOP

// Rung HBW_Program#61
// Offset 335
SG HBW_Program.S8

// Rung HBW_Program#62
// Offset 337
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#63
// Offset 345
STR ST1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#64
// Offset 353
STR ST1
MOVE 0 C299

// Rung HBW_Program#65
// Offset 356
STRN C250
JMP HBW_Program.S9

// Rung HBW_Program#66
// Offset 358
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#67
// Offset 360
NOP

// Rung HBW_Program#68
// Offset 361
SG HBW_Program.S9

// Rung HBW_Program#69
// Offset 363
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#70
// Offset 371
STR ST1
CALL HBW_Return_Top 0x1 DST511 "3" "3"

// Rung HBW_Program#71
// Offset 379
STR X10
ANDN C251
JMP HBW_Program.S10
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#72
// Offset 389
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#73
// Offset 391
NOP

// Rung HBW_Program#74
// Offset 392
SG HBW_Program.S10

// Rung HBW_Program#75
// Offset 394
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#76
// Offset 402
STR ST1
CALL HBW_MV_11_12 0x1 DST511 "3" "3"

// Rung HBW_Program#77
// Offset 410
STRN C250
JMP HBW_Program.S11

// Rung HBW_Program#78
// Offset 412
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#79
// Offset 414
NOP

// Rung HBW_Program#80
// Offset 415
SG HBW_Program.S11

// Rung HBW_Program#81
// Offset 417
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#82
// Offset 425
STRE N1 1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#83
// Offset 436
STRE N1 2
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#84
// Offset 447
STRE N1 3
CALL HBW_Move_R1_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#85
// Offset 458
STRE N1 3
ANDLE 1650 $HBW_Encoder_Z.Acc
JMP HBW_Program.S51

// Rung HBW_Program#86
// Offset 467
STRE N1 4
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#87
// Offset 478
STRE N1 5
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#88
// Offset 489
STRE N1 6
CALL HBW_Move_R2_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#89
// Offset 500
STRE N1 6
ANDLE 3200 $HBW_Encoder_Z.Acc
JMP HBW_Program.S51

// Rung HBW_Program#90
// Offset 509
STRE N1 7
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#91
// Offset 520
STRE N1 8
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#92
// Offset 531
STRE N1 9
JMP HBW_Program.S18

// Rung HBW_Program#93
// Offset 536
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#94
// Offset 538
NOP

// Rung HBW_Program#95
// Offset 539
NOP

// Rung HBW_Program#96
// Offset 540
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#97
// Offset 543
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#98
// Offset 545
SG HBW_Program.S51

// Rung HBW_Program#99
// Offset 547
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#100
// Offset 555
STRE N1 3
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#101
// Offset 566
STRE N1 6
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#102
// Offset 577
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#103
// Offset 579
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#104
// Offset 582
SG HBW_Program.S12

// Rung HBW_Program#105
// Offset 584
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#106
// Offset 592
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#107
// Offset 600
STRN C251
AND C250
JMP HBW_Program.S13

// Rung HBW_Program#108
// Offset 603
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#109
// Offset 605
SG HBW_Program.S13

// Rung HBW_Program#110
// Offset 607
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#111
// Offset 615
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#112
// Offset 623
STR C300
MOVE 1 C299

// Rung HBW_Program#113
// Offset 626
STRN X2
AND C299
JMP HBW_Program.S14
INC N1

// Rung HBW_Program#114
// Offset 630
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#115
// Offset 632
SG HBW_Program.S14

// Rung HBW_Program#116
// Offset 634
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#117
// Offset 642
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#118
// Offset 650
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#119
// Offset 659
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#120
// Offset 661
SG HBW_Program.S15

// Rung HBW_Program#121
// Offset 663
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#122
// Offset 671
STR ST1
MOVE 0 C299

// Rung HBW_Program#123
// Offset 674
STRE N1 1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#124
// Offset 685
STRE N1 2
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#125
// Offset 696
STRE N1 3
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#126
// Offset 707
STRE N1 4
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#127
// Offset 718
STRE N1 5
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#128
// Offset 729
STRE N1 6
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#129
// Offset 740
STRE N1 7
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#130
// Offset 751
STRE N1 8
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#131
// Offset 762
STRE N1 9
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#132
// Offset 773
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#133
// Offset 775
STRN C251
JMP HBW_Program.S16
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#134
// Offset 784
SG HBW_Program.S16

// Rung HBW_Program#135
// Offset 786
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#136
// Offset 794
STRE N1 1
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#137
// Offset 805
STRE N1 2
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#138
// Offset 816
STRE N1 3
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#139
// Offset 827
STRE N1 4
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#140
// Offset 838
STRE N1 5
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#141
// Offset 849
STRE N1 6
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#142
// Offset 860
STRE N1 7
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#143
// Offset 871
STRE N1 8
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#144
// Offset 882
STRE N1 9
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#145
// Offset 893
NOP

// Rung HBW_Program#146
// Offset 894
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#147
// Offset 896
STRN C250
AND X10
JMP HBW_Program.S17

// Rung HBW_Program#148
// Offset 899
SG HBW_Program.S17

// Rung HBW_Program#149
// Offset 901
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#150
// Offset 909
STRE N1 1
CALL HBW_Retract_12 0x1 DST511 "3" "3"

// Rung HBW_Program#151
// Offset 920
STRE N1 2
CALL HBW_RETRACT_13 0x1 DST511 "3" "3"

// Rung HBW_Program#152
// Offset 931
STRE N1 3
CALL HBW_Retract_23 0x1 DST511 "3" "3"

// Rung HBW_Program#153
// Offset 942
STRE N1 4
CALL HBW_Retract_22 0x1 DST511 "3" "3"

// Rung HBW_Program#154
// Offset 953
STRE N1 5
CALL HBW_Retract_21 0x1 DST511 "3" "3"

// Rung HBW_Program#155
// Offset 964
STRE N1 6
CALL HBW_Retract_21 0x1 DST511 "3" "3"

// Rung HBW_Program#156
// Offset 975
STRE N1 7
CALL HBW_Retract_32 0x1 DST511 "3" "3"

// Rung HBW_Program#157
// Offset 986
STRE N1 8
CALL HBW_Retract_33 0x1 DST511 "3" "3"

// Rung HBW_Program#158
// Offset 997
STRE N1 9
CALL HBW_Retract_33 0x1 DST511 "3" "3"

// Rung HBW_Program#159
// Offset 1008
NOP

// Rung HBW_Program#160
// Offset 1009
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#161
// Offset 1011
STR X11
ANDN C251
ANDN C250
JMP HBW_Program.S11

// Rung HBW_Program#162
// Offset 1015
STR X11
ANDE N1 1
JMP HBW_Program.S50

// Rung HBW_Program#163
// Offset 1021
SG HBW_Program.S18

// Rung HBW_Program#164
// Offset 1023
STR ST1
JMP HBW_Program.S0

// Rung HBW_Program#165
// Offset 1025
SG HBW_Program.S50

// Rung HBW_Program#166
// Offset 1027
STR ST1
CALL HBW_Shift_C1C2 0x1 DST511 "3" "3"

// Rung HBW_Program#167
// Offset 1035
STRN Y50
ANDN C250
JMP HBW_Program.S11

// Rung HBW_Program#168
// Offset 1038
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#169
// Offset 1040
NOP

// Rung HBW_Program#170
// Offset 1041
SG HBW_Program.S19

// Rung HBW_Program#171
// Offset 1043
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#172
// Offset 1051
STR X0
OUT $HBW_Encoder_X.ResetLevel

// Rung HBW_Program#173
// Offset 1053
STR X3
OUT $HBW_Encoder_Z.ResetLevel

// Rung HBW_Program#174
// Offset 1055
NOP

// Rung HBW_Program#175
// Offset 1056
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#176
// Offset 1058
STR ST1
CALL HBW_Home 0x1 DST511 "3" "3"

// Rung HBW_Program#177
// Offset 1066
STR X0
AND X11
AND X3
JMP HBW_Program.S20

// Rung HBW_Program#178
// Offset 1070
SG HBW_Program.S20

// Rung HBW_Program#179
// Offset 1072
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#180
// Offset 1080
NOP

// Rung HBW_Program#181
// Offset 1081
STRE N2 1
CALL HBW_OneTime_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#182
// Offset 1092
STRE N2 2
CALL HBW_OneTime_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#183
// Offset 1103
STRE N2 3
CALL HBW_OneTime_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#184
// Offset 1114
STRE N2 4
CALL HBW_OneTime_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#185
// Offset 1125
STRE N2 5
CALL HBW_OneTime_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#186
// Offset 1136
STRE N2 6
CALL HBW_OneTime_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#187
// Offset 1147
STRE N2 7
CALL HBW_OneTime_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#188
// Offset 1158
STRE N2 8
CALL HBW_OneTime_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#189
// Offset 1169
STRE N2 9
CALL HBW_OneTime_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#190
// Offset 1180
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#191
// Offset 1182
STRN C251
JMP HBW_Program.S21

// Rung HBW_Program#192
// Offset 1184
SG HBW_Program.S21

// Rung HBW_Program#193
// Offset 1186
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#194
// Offset 1194
NOP

// Rung HBW_Program#195
// Offset 1195
STRE N2 1
CALL HBW_OneTime_C1 0x1 DST511 "3" "3"

// Rung HBW_Program#196
// Offset 1206
STRE N2 2
CALL HBW_OneTime_C2 0x1 DST511 "3" "3"

// Rung HBW_Program#197
// Offset 1217
STRE N2 3
CALL HBW_OneTime_C3 0x1 DST511 "3" "3"

// Rung HBW_Program#198
// Offset 1228
STRE N2 4
CALL HBW_OneTime_C1 0x1 DST511 "3" "3"

// Rung HBW_Program#199
// Offset 1239
STRE N2 5
CALL HBW_OneTime_C2 0x1 DST511 "3" "3"

// Rung HBW_Program#200
// Offset 1250
STRE N2 6
CALL HBW_OneTime_C3 0x1 DST511 "3" "3"

// Rung HBW_Program#201
// Offset 1261
STRE N2 7
CALL HBW_OneTime_C1 0x1 DST511 "3" "3"

// Rung HBW_Program#202
// Offset 1272
STRE N2 8
CALL HBW_OneTime_C2 0x1 DST511 "3" "3"

// Rung HBW_Program#203
// Offset 1283
STRE N2 9
CALL HBW_OneTime_C3 0x1 DST511 "3" "3"

// Rung HBW_Program#204
// Offset 1294
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#205
// Offset 1296
STRN C250
JMP HBW_Program.S22

// Rung HBW_Program#206
// Offset 1298
SG HBW_Program.S22

// Rung HBW_Program#207
// Offset 1300
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#208
// Offset 1308
STRE N2 1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#209
// Offset 1319
STRE N2 2
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#210
// Offset 1330
STRE N2 3
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#211
// Offset 1341
STRE N2 4
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#212
// Offset 1352
STRE N2 5
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#213
// Offset 1363
STRE N2 6
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#214
// Offset 1374
STRE N2 7
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#215
// Offset 1385
STRE N2 8
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#216
// Offset 1396
STRE N2 9
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#217
// Offset 1407
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#218
// Offset 1409
STRN C251
JMP HBW_Program.S23

// Rung HBW_Program#219
// Offset 1411
SG HBW_Program.S23

// Rung HBW_Program#220
// Offset 1413
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#221
// Offset 1421
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#222
// Offset 1429
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#223
// Offset 1431
STRN C251
AND C250
JMP HBW_Program.S24

// Rung HBW_Program#224
// Offset 1434
SG HBW_Program.S24

// Rung HBW_Program#225
// Offset 1436
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#226
// Offset 1444
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#227
// Offset 1452
STRN X2
AND C299
JMP HBW_Program.S25

// Rung HBW_Program#228
// Offset 1455
STR C300
MOVE 1 C299

// Rung HBW_Program#229
// Offset 1458
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#230
// Offset 1460
SG HBW_Program.S25

// Rung HBW_Program#231
// Offset 1462
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#232
// Offset 1470
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#233
// Offset 1478
STR X11
JMP HBW_Program.S26
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#234
// Offset 1487
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#235
// Offset 1489
NOP

// Rung HBW_Program#236
// Offset 1490
SG HBW_Program.S26

// Rung HBW_Program#237
// Offset 1492
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#238
// Offset 1500
STR ST1
MOVE 0 C299

// Rung HBW_Program#239
// Offset 1503
STRE N2 1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#240
// Offset 1514
STRE N2 2
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#241
// Offset 1525
STRE N2 3
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#242
// Offset 1536
STRE N2 4
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#243
// Offset 1547
STRE N2 5
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#244
// Offset 1558
STRE N2 6
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#245
// Offset 1569
STRE N2 7
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#246
// Offset 1580
STRE N2 8
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#247
// Offset 1591
STRE N2 9
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#248
// Offset 1602
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#249
// Offset 1604
STRN C251
JMP HBW_Program.S27
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#250
// Offset 1613
SG HBW_Program.S27

// Rung HBW_Program#251
// Offset 1615
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#252
// Offset 1623
STRE N2 1
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#253
// Offset 1634
STRE N2 2
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#254
// Offset 1645
STRE N2 3
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#255
// Offset 1656
STRE N2 4
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#256
// Offset 1667
STRE N2 5
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#257
// Offset 1678
STRE N2 6
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#258
// Offset 1689
STRE N2 7
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#259
// Offset 1700
STRE N2 8
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#260
// Offset 1711
STRE N2 9
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#261
// Offset 1722
NOP

// Rung HBW_Program#262
// Offset 1723
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#263
// Offset 1725
STRN C250
AND X10
JMP HBW_Program.S28

// Rung HBW_Program#264
// Offset 1728
SG HBW_Program.S28

// Rung HBW_Program#265
// Offset 1730
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#266
// Offset 1738
STRE N2 1
CALL HBW_OneDropR1 0x1 DST511 "3" "3"

// Rung HBW_Program#267
// Offset 1749
STRE N2 2
CALL HBW_OneDropR1 0x1 DST511 "3" "3"

// Rung HBW_Program#268
// Offset 1760
STRE N2 3
CALL HBW_OneDropR1 0x1 DST511 "3" "3"

// Rung HBW_Program#269
// Offset 1771
STRE N2 4
CALL HBW_OneDropR2 0x1 DST511 "3" "3"

// Rung HBW_Program#270
// Offset 1782
STRE N2 5
CALL HBW_OneDropR2 0x1 DST511 "3" "3"

// Rung HBW_Program#271
// Offset 1793
STRE N2 6
CALL HBW_OneDropR2 0x1 DST511 "3" "3"

// Rung HBW_Program#272
// Offset 1804
STRE N2 7
CALL HBW_OneDropR3 0x1 DST511 "3" "3"

// Rung HBW_Program#273
// Offset 1815
STRE N2 8
CALL HBW_OneDropR3 0x1 DST511 "3" "3"

// Rung HBW_Program#274
// Offset 1826
STRE N2 9
CALL HBW_OneDropR3 0x1 DST511 "3" "3"

// Rung HBW_Program#275
// Offset 1837
STR X11
JMP HBW_Program.S0

// Rung HBW_Program#276
// Offset 1839
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#277
// Offset 1841
NOP

// Rung HBW_Program#278
// Offset 1842
NOP

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
SG VGR_Program.S0

// Rung VGR_Program#2
// Offset 2
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#3
// Offset 10
STR ST1
DUPBOOL
STR C410
ANDN C409
STRN C410
AND C409
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
POPBOOL
DUPBOOL
AND C410
OUT Y27
POPBOOL
AND C409
OUT Y26

// Rung VGR_Program#4
// Offset 39
STR ST1
DUPBOOL
STR C408
ANDN C411
STRN C408
AND C411
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
POPBOOL
DUPBOOL
AND C408
OUT Y24
POPBOOL
AND C411
OUT Y25

// Rung VGR_Program#5
// Offset 68
STR ST1
DUPBOOL
STR C406
ANDN C407
STRN C406
AND C407
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
POPBOOL
DUPBOOL
AND C406
OUT Y23
POPBOOL
AND C407
OUT Y22

// Rung VGR_Program#6
// Offset 97
STR C452
JMP VGR_Program.S1

// Rung VGR_Program#7
// Offset 99
SG VGR_Program.S1

// Rung VGR_Program#8
// Offset 101
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#9
// Offset 103
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#10
// Offset 111
STRN X25
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
OUT Y22

// Rung VGR_Program#11
// Offset 127
STRN X26
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
OUT Y24

// Rung VGR_Program#12
// Offset 143
STRN X27
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
OUT Y26

// Rung VGR_Program#13
// Offset 159
STR X27
OUT $VGR_Encoder_Rot.ResetLevel

// Rung VGR_Program#14
// Offset 161
STR X26
OUT $VGR_Encoder_X.ResetLevel

// Rung VGR_Program#15
// Offset 163
STR X25
OUT $VGR_Encoder_Y.ResetLevel

// Rung VGR_Program#16
// Offset 165
STR X25
AND X26
AND X27
JMP VGR_Program.S2

// Rung VGR_Program#17
// Offset 169
SG VGR_Program.S2

// Rung VGR_Program#18
// Offset 171
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#19
// Offset 179
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#20
// Offset 181
STR ST1
OUT $VGR_Encoder_Rot.EnableCapture

// Rung VGR_Program#21
// Offset 183
STR ST1
OUT $VGR_Encoder_X.EnableCapture

// Rung VGR_Program#22
// Offset 185
STR ST1
OUT $VGR_Encoder_Y.EnableCapture

// Rung VGR_Program#23
// Offset 187
STRGE 5350 $VGR_Encoder_Rot.Acc
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
OUT Y27

// Rung VGR_Program#24
// Offset 206
STRGE 700 $VGR_Encoder_X.Acc
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
OUT Y25

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STR C813
OUT Y18

// Rung MPO_Program#4
// Offset 12
STR C810
OUT Y17

// Rung MPO_Program#5
// Offset 14
STR C811
OUT Y52

// Rung MPO_Program#6
// Offset 16
STR ST1
DUPBOOL
STR C804
ANDN C805
STR C805
ANDN C804
ORSTR
ANDSTR
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 100
POPBOOL
DUPBOOL
AND C804
OUT Y53
POPBOOL
AND C805
OUT Y15

// Rung MPO_Program#7
// Offset 45
STR C814
OUT Y19

// Rung MPO_Program#8
// Offset 47
STR C809
JMP MPO_Program.S1

// Rung MPO_Program#9
// Offset 49
SG MPO_Program.S1

// Rung MPO_Program#10
// Offset 51
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#11
// Offset 59
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#12
// Offset 61
STRN X24
SET Y17

// Rung MPO_Program#13
// Offset 63
STR Y17
OUT Y20
ANDN X17
ONDTMR T105 1000 Y44

// Rung MPO_Program#14
// Offset 69
STR X17
JMP MPO_Program.S10

// Rung MPO_Program#15
// Offset 71
SG MPO_Program.S10

// Rung MPO_Program#16
// Offset 73
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#17
// Offset 81
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#18
// Offset 83
STR X17
RST Y20

// Rung MPO_Program#19
// Offset 85
STR X17
ONDTMR T106 1000 Y16

// Rung MPO_Program#20
// Offset 89
STR T106.Done
JMP MPO_Program.S11

// Rung MPO_Program#21
// Offset 91
SG MPO_Program.S11

// Rung MPO_Program#22
// Offset 93
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#23
// Offset 101
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#24
// Offset 103
STRN X18
OUT Y52

// Rung MPO_Program#25
// Offset 105
STR X18
RST Y20

// Rung MPO_Program#26
// Offset 107
STR X18
RST Y16

// Rung MPO_Program#27
// Offset 109
STRN Y16
ONDTMR T107 1000 C819

// Rung MPO_Program#28
// Offset 113
STR C819
JMP MPO_Program.S2

// Rung MPO_Program#29
// Offset 115
SG MPO_Program.S2

// Rung MPO_Program#30
// Offset 117
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#31
// Offset 125
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#32
// Offset 127
NOP

// Rung MPO_Program#33
// Offset 128
STRN X19
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y53

// Rung MPO_Program#34
// Offset 144
STR X19
JMP MPO_Program.S3

// Rung MPO_Program#35
// Offset 146
SG MPO_Program.S3

// Rung MPO_Program#36
// Offset 148
STR ST1
SET Y17

// Rung MPO_Program#37
// Offset 150
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#38
// Offset 158
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#39
// Offset 160
STR X19
SET Y19

// Rung MPO_Program#40
// Offset 162
STR X19
ONDTMR T100 2000 Y18

// Rung MPO_Program#41
// Offset 166
STR T100.DN
JMP MPO_Program.S4

// Rung MPO_Program#42
// Offset 168
SG MPO_Program.S4

// Rung MPO_Program#43
// Offset 170
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#44
// Offset 178
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#45
// Offset 180
STR X19
RST Y19

// Rung MPO_Program#46
// Offset 182
STRN X16
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y15

// Rung MPO_Program#47
// Offset 198
STR X16
JMP MPO_Program.S5

// Rung MPO_Program#48
// Offset 200
SG MPO_Program.S5

// Rung MPO_Program#49
// Offset 202
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#50
// Offset 210
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#51
// Offset 212
STR X16
SET Y19

// Rung MPO_Program#52
// Offset 214
STR Y19
ONDTMR T101 1000 C815

// Rung MPO_Program#53
// Offset 218
STR C815
RST Y18

// Rung MPO_Program#54
// Offset 220
STRN Y18
JMP MPO_Program.S6

// Rung MPO_Program#55
// Offset 222
SG MPO_Program.S6

// Rung MPO_Program#56
// Offset 224
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#57
// Offset 232
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#58
// Offset 234
STR X16
RST Y19

// Rung MPO_Program#59
// Offset 236
STRN Y19
ONDTMR T102 1000 C818

// Rung MPO_Program#60
// Offset 240
STR C818
JMP MPO_Program.S7

// Rung MPO_Program#61
// Offset 242
SG MPO_Program.S7

// Rung MPO_Program#62
// Offset 244
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#63
// Offset 252
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#64
// Offset 254
STRN X15
OUT Y45

// Rung MPO_Program#65
// Offset 256
STR X15
TMRDOWN T102 1000
OUT Y43

// Rung MPO_Program#66
// Offset 260
STR T102.Done
JMP MPO_Program.S8

// Rung MPO_Program#67
// Offset 262
SG MPO_Program.S8

// Rung MPO_Program#68
// Offset 264
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#69
// Offset 272
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#70
// Offset 274
STRN X13
OUT Y45

// Rung MPO_Program#71
// Offset 276
STR X13
TMRDOWN T103 1000
OUT Y21

// Rung MPO_Program#72
// Offset 280
STR T103.Done
JMP MPO_Program.S9

// Rung MPO_Program#73
// Offset 282
SG MPO_Program.S9

// Rung MPO_Program#74
// Offset 284
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#75
// Offset 292
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#76
// Offset 294
STRN X12
ONDTMR T104 1000 Y46

// Rung MPO_Program#77
// Offset 298
STR X12
AND ST1
OUT Y47

// Rung MPO_Program#78
// Offset 301
STR X12
JMP MPO_Program.S12

// Rung MPO_Program#79
// Offset 303
SG MPO_Program.S12

// Rung MPO_Program#80
// Offset 305
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#81
// Offset 313
STRN C809
JMP MPO_Program.S0

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
SG SLD_Program.S0

// Rung SLD_Program#2
// Offset 2
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#3
// Offset 10
STR C1600
OUT Y30

// Rung SLD_Program#4
// Offset 12
STR C1601
OUT Y31

// Rung SLD_Program#5
// Offset 14
STR C1602
OUT Y32

// Rung SLD_Program#6
// Offset 16
STR C1603
OUT Y33

// Rung SLD_Program#7
// Offset 18
STR C1604
OUT Y34

// Rung SLD_Program#8
// Offset 20
STR C1605
JMP SLD_Program.S1

// Rung SLD_Program#9
// Offset 22
SG SLD_Program.S1

// Rung SLD_Program#10
// Offset 24
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#11
// Offset 32
STRN C1605
JMP SLD_Program.S0

// Rung SLD_Program#12
// Offset 34
STRN X35
OFFDTMR T200 1750 C1651

// Rung SLD_Program#13
// Offset 38
STR C1651
OUT Y30

// Rung SLD_Program#14
// Offset 40
STRGE T200.Acc 1750
FLASHER 500 500 Y899

// Rung SLD_Program#15
// Offset 48
SG SLD_Program.S2

// Rung SLD_Program#16
// Offset 50
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#17
// Offset 58
STRN C1605
JMP SLD_Program.S0

// Rung SLD_Program#18
// Offset 60
STR ST1
SGSET SLD_Program.S3

// Rung SLD_Program#19
// Offset 62
SG SLD_Program.S3

// Rung SLD_Program#20
// Offset 64
STR C1610
OUT Y30

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STR C1200
OUT Y39

// Rung SSC_Program#4
// Offset 12
STR C1201
OUT Y40

// Rung SSC_Program#5
// Offset 14
STR C1202
OUT Y41

// Rung SSC_Program#6
// Offset 16
STR C1215
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y35

// Rung SSC_Program#7
// Offset 32
STR C1216
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y36

// Rung SSC_Program#8
// Offset 48
STR C1217
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#9
// Offset 64
STR C1218
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#10
// Offset 80
STR ST2
ANDPD X47
ANDPDPF
STR ST2
AND CT150.Done
CNT CT150 100

// Rung SSC_Program#11
// Offset 88
STR C1203
JMP SSC_Program.S1

// Rung SSC_Program#12
// Offset 90
SG SSC_Program.S1

// Rung SSC_Program#13
// Offset 92
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#14
// Offset 100
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#15
// Offset 102
STRN X41
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#16
// Offset 118
STRN X40
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y36

// Rung SSC_Program#17
// Offset 134
STR X40
AND X41
JMP SSC_Program.S2

// Rung SSC_Program#18
// Offset 137
SG SSC_Program.S2

// Rung SSC_Program#19
// Offset 139
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#20
// Offset 147
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#21
// Offset 149
STR X44
ANDPDPF
STR ST2
CNT CT150 300

// Rung SSC_Program#22
// Offset 154
STRN CT150.Done
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y35

// Rung SSC_Program#23
// Offset 170
STR X46
STR ST2
CNT CT151 1300

// Rung SSC_Program#24
// Offset 174
STRN CT151.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#25
// Offset 190
STR CT150.Done
AND CT151.Done
JMP SSC_Program.S3

// Rung SSC_Program#26
// Offset 193
SG SSC_Program.S3

// Rung SSC_Program#27
// Offset 195
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#28
// Offset 203
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#29
// Offset 205
STR X46
STR ST2
CNT CT152 300

// Rung SSC_Program#30
// Offset 209
STRN CT152.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#31
// Offset 225
STR CT152.Done
JMP SSC_Program.S4

// Rung SSC_Program#32
// Offset 227
SG SSC_Program.S4

// Rung SSC_Program#33
// Offset 229
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#34
// Offset 237
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#35
// Offset 239
STR X46
STR ST2
CNT CT153 135

// Rung SSC_Program#36
// Offset 243
STRN CT153.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#37
// Offset 259
STR X44
STR ST2
CNT CT154 210

// Rung SSC_Program#38
// Offset 263
STRN CT154.Done
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y36

// Rung SSC_Program#39
// Offset 279
STR CT153.Done
AND CT154.Done
JMP SSC_Program.S5

// Rung SSC_Program#40
// Offset 282
SG SSC_Program.S5

// Rung SSC_Program#41
// Offset 284
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#42
// Offset 292
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#43
// Offset 294
STR X46
STR ST2
CNT CT155 1100

// Rung SSC_Program#44
// Offset 298
STRN CT155.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// End of Code Block SSC_Program
$PGMEND SSC_Program

// Beginning of Code Block hunt_exp_light
$PRGRM hunt_exp_light

// Rung hunt_exp_light#1
// Offset 0
STR ST2
COPY 0x1 "4 0x0 MC402 Y39 1"

// End of Code Block hunt_exp_light
$PGMEND hunt_exp_light

// Beginning of Code Block HWB_PickUp
$TSK HWB_PickUp

// Rung HWB_PickUp#1
// Offset 0
NOP

// End of Code Block HWB_PickUp
$TSKEND HWB_PickUp

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"C1","copy","",""
"C11","C11_Interlock","","Used to delay logic by one scan"
"C12","C12_Interlock_2","","Used to delay logic by one scan"
"C20","HBW_Has_Pallet","","True when carrying a pallet"
"C51","X_Direction","","True: Left False: Right"
"C52","Z_Direction","","True: Down False: Up"
"C80","Conveyor_Timeout","","Bit high when Conveyor Timeout timer active"
"C90","HBW_XY_PID_EN","","Enables PID control in HBW_Move_XZ"
"C101","HBW_T1_Send","Modbus MC101","Task to deliver a pallet to conveyor"
"C102","HBW_T2_Receive","Modbus MC102","Task to pickup a pallet from conveyor"
"C103","HBW_T3_Reset","Modbus MC103","Reinitialize and home all axises"
"C104","HBW_T4_Manual","Modbus MC104","Switch to manual mode"
"C110","HBW_Move_X_L","Modbus MC110","Move Horizontal Axis towards bay"
"C111","HBW_Move_X_R","Modbus MC111","Move Horizontal Axis towards Conveyor"
"C112","HBW_Move_Y_In","Modbus MC112","Move Cantilever In"
"C113","HBW_Move_Y_Out","Modbus MC113","Move Cantilever Out"
"C114","HBW_Move_Z_Up","Modbus MC114","Move Vertical Axis Up"
"C115","HBW_Move_Z_Down","Modbus MC115","Move Vertical Axis Down"
"C116","HBW_Conveyor_In","Modbus MC116","Move Conveyor In"
"C117","HBW_Conveyor_Out","Modbus MC117","Move Conveyor Out"
"C130","HBW_Status_Ready","Modbus MC130","On when ready for a task"
"C133","HBW_Mov_Conveyor","Modbus MC133","Status Conveyor Moving"
"C134","HBW_Moving_X","Modbus MC134","Status GantryMovingX"
"C135","HBW_Moving_Y","Modbus MC135","Status GantryMovingY"
"C136","HBW_Moving_Z","Modbus MC136","Status GantryMovingZ"
"C138","HBW_Status_Y_Pos","Modbus MC138","Current Y position"
"C141","HBW_Target_Y_Pos","Modbus MC141","Target Y position"
"C150","HBW_MoveComplete","","HBW_Move_XZ completion interlock."
"C180","HBW_Fault","Modbus MC180","Status in Fault State"
"C182","Fault_X_Target","","Active when X target out of range"
"C183","Fault_Z_target","","Active when Z target out of range"
"C400","VGR_T0","",""
"C410","VGR_T1","",""
"C420","VGR_T2","",""
"C430","VGR_T3","",""
"C440","VGR_T4","",""
"C500","VGR_Man_Control","",""
"C799","VGR_RESET","",""
"V105","HBW_Task_X_slot","Modbus MHR105","Value for slot X coord"
"V106","HBW_Task_Y_slot","Modbus MHR106","Value for slot y coord"
"V118","HBW_PWM_Set_X","Modbus MHR118","Set Horizontal Axis PWM Duty Cycle %"
"V119","HBW_PWM_Set_Y","Modbus MHR119","Set Cantilever Axis PWM Duty Cycle %"
"V120","HBW_PWM_Set_Z","Modbus MHR120","Set Vertical Axis PWM Duty cycle %"
"V131","HBW_Cur_Progress","Modbus MHR131","0 to 100 percent job completion"
"V132","HBW_Cur_Stage","Modbus MHR132","Current stage number"
"V137","HBW_Status_X_Pos","Modbus MHR137","Current X encoder position"
"V139","HBW_Status_Z_Pos","Modbus MHR139","Current Z encoder position"
"V140","HBW_Target_X_Pos","Modbus MHR140","Target X encoder position"
"V142","HBW_Target_Z_Pos","Modbus MHR142","Target Z encoder position"
"V181","HBW_Fault_code","Modbus MHR181","Current Fault code"
"V801","VGR_Fault_Code","",""
"N810","VGR_Rot_Target","",""
"N811","VGR_X_Target","",""
"N812","VGR_Y_Target","",""
"D0","MC","",""
"D1","Feeder_Extend","",""
"D140","X_Start_Position","","Distance to target"
"D142","Y_Start_Position","","Distance to target"
"D143","HBW_PWM_Cur_X","","PWM value for X for XZ movement task"
"D144","HBW_PWM_Cur_Z","","PWM value for Z for XZ movement task"
"T3","T_HBW_S6","",""
"T4","T_Conveyor_Timer","","Used to detect conveyor faults"
"MPO_Program.S2","Vaccum_MO","",""
"MPO_Program.S3","Vaccum","",""
"MPO_Program.S4","Vacumm_MO","",""
"MPO_Program.S5","Vaccum_Load","",""
"US0","_CP_Strogram_A","","CP_State_Program"
"US1","_VGR_Movement","","VGR_Movement"
"US2","_SSC_Check_InOut","","SSC_Check_InOut"
"UB0","_VGR_MisScan_A","","VGR_Movement.Done ThisScan"
#END

