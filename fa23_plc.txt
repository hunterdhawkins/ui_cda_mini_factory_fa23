// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\brent\Desktop\factory\ui_cda_mini_factory_fa23\fa23_plc.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
931f3d457c8e94420ee0e08886262643761524d3e29264f66c1c5dbc9a8d827e005d0ca9d77c9caf
e8641a15b5a48dcdf4090e5e94bab207861f6c982ba0c4a40ba7316794af18f73a8217e23c838581
a5205ba3b8322ae7bcba865cc1d1a7c305562c70787d27a8c9f9f21cfc1d0e2553d41891240930e1
a2714784499b8c26f0d4c03c561246881e03f7d60e80075fb51300765bbd878e09d4a5d649ff278a
1225eeb3e5ec448202484aa768dfe67b9fd4e2fcdb4fba433f2f2b9fca9d8499a5477490bd2912d3
e7d2965c392903bc2304ce972c77e61995b0e403c82d709d0a431f1568bb646affde77e2000306c5
704b2c35f48a4fcfb1ddd613cd01a15508e51564d2aafc8211710baea310b0203055fcbcce309c2a
438e7b4cd32b190d667b24772e1aae6ba1622d66baed5556f744c668458cffe9a6c67e39c06929df
223eed84d9f5050b0b68b7a27a4dc1185885079b6c12adb47953b289596cc8f2c964335fd658e7dd
fb446e5ef92f41a0a7d3b09e148b2b41e30b6cf743c113f3cb450e2c9ce3cd4d30e91f7afc1434aa
22e8af2a95b241d6bdf93580a56bd29c90be1a57e7f735c948b2fbf9e7deca6bcdf00e26fbaeae0a
bbe2bec634e33189388c1df8dc60e8a645e417a5ee939dbc9887093e481d27029e961171a788deae
09fd24dfdc16871b77d1ed7c775b41d3dce06e6a969a0352ce0e2a8d8d63ba756d23c1e06ff3440a
a26b52aebbf0edf7d7d5cd702d883245d9e2e2a910863be332c907e99b7fb447748159a37fdeb58b
2eacb5b97b83dd31a37bc84af6882872c4f399bcb290f53f10fde082c1bddbcf5a531d6d9447406d
df62025262a6d0c8e276d03992bfc72ca0193fd73f8ee7c4983dc485bd6c639fd437b8e3e65f1526
a1771c1fd212ad3ca4c4ebccc953f09c4178efc79a877449e6616dc6d2a57a3445eef58687aacc8c
55b4243f3d9bf70b84d122e57729e5d53ef09b84be5fe1d6eb2b0da45d714de03a93ff30167d4941
c3de87c85d513b676324fb9c0a1cad6e0048adf8d5c3aef740d34e255c725b82cc36d507bd6dd630
6443525d7ac8c28c941efc783c92123debc4b19eb5cf27e90c534bcf0d717740eda0eded65ad904b
79f8e055eabe49fabd9db2a9b2e6489061d11e79c4d55318694b64cc54fe9adabadb6c31d15e6f3c
5ce09f5fa3d5ba62dbc130cc1bea32db824572f2c94cf1d1c88850122e3fb2ab4f123b625d105d9c
d4b4fd0ffdbe249861d42b9df78f3e97d46f0414770337fab4490a9eb10499b7c63e71f5d3a9aa18
e366b074621e7c666c1d624f3db36ee00763c0988d456b068b3d90f9703d39e37c962458db69ce12
b6fa67e8cf6d3446055487caa338765572c60d38f553b546b956ae72ed86ac6f1ff160063b2eee01
8185cb000c812b8a698f207793530529a86c622e3ea07189a105e0fe80a8b25f9ed4ea8ca6bba21b
94c4a4ed765b20eed8fbec444401ac387daa3c5f378285db606c45bd79dcb47845fa46a7e72aed79
12ad5f930a98019795bf533c27748fe7453703e5002ad50a25cd62cdb6e8fd1705b3af99986c33b9
e32ef1834dec234122197462d762aa0975abce7316ce3ec1b3074b730107c6f94db8110bf0955c1e
cbf68bc673be17af8815cd81c8bb4d8792a49a0bcd73f9bcb4b01c491fc5a90629a5efa884db84fd
f37a37bc4ea1ff6736fb5327d30cfaa226844bb7f98b185d10cc20c62165d6eefae78958cdfa197f
d8600cc2343ef2d64789a8fa1e2e9cbef72bd39edcdc6abe422da33cc1d6952300298a07c17affe4
a06be26d7fc82846e757b1cb1564cf5e961ebda6c5ef89f427938136d6b81eae4832ec9d36a1029f
eab340efd8b986ed132b97c136b669fcfb845fd07e420e652793a697ddd2a005c277e80ebd4ba27c
a6293730a6488ea14e8c9a995c05861a0f074d8541d649eea53df28c30352e319702f013e28d3ec9
a26729787901f6b998b5abf4aaea5573cc1ceebd4ad33aa7eb463fa822197546519600354bb64a08
3a579fa57885c559e314336e8a40aa6c9600b1d636f929c5e43b6735c92aaa61f3f5e6408b7d252f
6f95b2989fd9ba664ea1dbd88825209ab331abd72de8921d72fae9ea167bb966ec9509400e6a8ec3
8ace94da0e69dc7b9842126619b473d3a3266881f669729e6efc283e29572935aac543c621620386
c84222dcbdb7c23651a7b418ad1d978aa3e63ddedef6117a346f712755a5e47c8e550788c360f193
7c9464488d03e97708742146acd75a66ad7ee690faef1ea82397afc46c3f4038de368043d76308b7
84572ca0333452dfe294a2a484affd25dc5a84bc247e2e345370f12b420379eca0a36430b6df09dd
47e89d2f25819db7bc9b6f1e186fdcdcaaf912e34f1cac5cc65d7e7aee205ab4e2f35d2822f99f8e
6116e8c90d179c44f3a6c873151177567a9e1d0d9220a309ebe0cc0ec3ea321fb0847077330a4db6
888235f50771b4af17790f0867b979ec90e738b364903167fd94f91d799623026dfedd3ab81e2553
e5f0ec7834bb723bf09d4efa7622e11bae84350a172b02d7151f36227760eb3d971fa1d012c59689
f2342fa544093c166f9b8294cd049bb2f28a8774623bd42cec364e16063ee37b624fb4392598d189
591dff8eb26214bc94918ab7ac4d4a48d3e65bb587d24320eb87e46ef66734059a0d52fac5554f78
dbf4e2a9cac38fb4f00ee6d58746beee1b5e15bae4abc0f9940d4c905841516001bd524807e2a991
4b1991ad207a0908b057b1c2edf0136293962212d6d30d1ac87fc325b2fe40d62129c25b53d0b05e
669faa420bf58908bec0b51dc408f8cab4becaf380a6f5efdb5c3f26e37bb162a9b9f2ec70e66d1f
5e2a1d2506957adc2408be4af1e9277ab082cc9b21f4a2e3e8f3b3ef25a96ed2128bcc736560e190
264306bba43437c1a7408a76bf933f6cc7befe1efb66ff1ea8ca3fb8c5153f56e3987f9924a7d4be
702880252a95f1afa0d84ce39804fc59b8fb48da8eec66936308342739612d0f382a1ff38d260e40
bffc09b7febe13d627d89aada299248aa77936d1cd85dbf1060f9183fc815283ad2b3d0435de1d09
be12d69f9954b3bd023fa2786a3a2351bf4298294a2b7bc5bb6a89379601730e53cabe1bee191a6c
0a262dfd54528d8d7ad80a2ae8711fafea4714712b94c725176416f3d7920ce355428b8b9dfbd521
4b396c6b215ea4d5ebbfa13ed379457ed2a00a3f0fd5d987fa26aa34d4118d14868d7332f14b9fc4
69f1fe64008ba066c8b2ebdd9cd5aed027ccdc979786fdee979ed7ad7e0feba94ba72e380db4a133
006c572af8bdb4f55b2f3b213441ec4604f36b7b2b6bfae54b651e5596e7f972842eee1067a5b2e1
12abf42071a681ccbc0e91fb10a9767d5d2593ab9ea8c5b943416f09200a0d4b288d4d91a7b1a418
e08b253e8e78a0ff25a5fb262167ad5720d43f2fa02ff166e028cc7079872a7c857840c9995d4d1f
25d0a0b14328c6dcecea5aa9e879f9a3e37a31e2f06fc0c8dea45a620a0ba660c8a2d190c8969374
41b55fe67941f1672c3e63965d8befcf157529f4120597886d9ed0a3e2b8362abf1f5bf9cad48c8b
897ff848acf50ebfd4b88f035b41f7894233b1db59e6bd489b3b6c8942437145b69ca886057ae1f3
6cc33b2d5ff03706de75ddc3983c714bece5dbd4e5fc52b41e86a8e0b6a9ba768f2fabd808d21f72
2d9b3fe3513b480949177295a0547ec7c0ca2f8eb2b39a5e43d6e9788b5385584778a6b4b4ed2496
ed9291f87c34d468e59c8bb1f77bd60e81486f448572b6f9a1213cc6f8b03916c852a56fe43cea8f
4b39d91b18903282a3b0f4a5fad26db22696ffdc1221d01cbf9e27b17a7c55596871df218b611c21
04acffa0c1cbd41cc0e0b152b826490b2f213bdc438394c95ac2617692386de547f7aaf9feaff0d8
07d0ea291345f86070ce9401e445b9b506ddb87c0efe3c8ba5edbbacffd028880c5f88df177a2513
b31b5761375a22cfdf7b8efda89cc298827adfd28f34ac0f18c71d0dc9bec32fb96652e79c8a9a8c
58ab7f8e81acadef968484d182c7da6023f7677e13c1b7d547d3a2df229c3d2fe3d093dafd1f7392
2df3699e54df273e0f16b86ec4634d055384d710c64ef12f0148fe64b9eebfca2bd0a86fc03952c4
9318aeb88ab6e9e082d6d3f994c639e43e4ec6904eab94887b0dec7db340ae3e9a1f8789b1152ded
90000af9e150f72753a8708c393761ff95867febf4f1b09d753045e84b7f4e4751d7bb595a28c8d8
f4c7a9bc00fa41bdef3281489ce687c28a9a993d974c7f2b2a7a91fe20a1e145f6fcce3e8a8a0fdc
fc6a9ba8a190a4df53f38274ecd819966a0e634f2771ccef15e7c743e8be6f9750657dd945724157
3a4e6055fdf63ed9f8ba9b4837352caecb7bcaffb688de4f84493f2ade3cc5d9d5cf339697cadb12
e480e8727916600a18ed24a39004c63574764307988a9e27083d735e273adf43e2f415424dc3bc35
928efa8e6d647b7ed93268f6e5ce5f10c8695c5e48d60b6d21ef9c837e2a55f24f07718c7c43c9f6
d7061a9cdb123925858d59db9d5b462b5459e220bc90f396a6fd82d5eba45f98a82da36836df339a
fa5c3a67eb17d8a36122dd0c4d12c37411a49e9a6aefda27e06f2569d8c49f88616e52540df3badf
4a9f4111e84f598286377545896c0ef38be12f55ac328649b08087ebcf9ffd7dab8b4d41e114761d
d3a9c7d5efdbcd83812a07f08d5ff8c5d7cca9784dc448cf409a2c088f8af41d4932dda91b6cfbef
e228d1d5413bab9d42026bc96320cbb2f3478473e0f4395230724c261fce832f4d9d736bc56e164f
1aad18c9c170920e76db547a1bc92b72c187e171e2c7d6f07de3c35f782f99d0ba816aaac5bfbb79
846841a5d487697a31fb7dddb571adaaa89234740ebdfce9f7ea4f48eede893e7d76b91e1dc7f199
eae0d3fd7fa8440ad7d032d6798b4b5c93346fb583eb281d13d423c3a2b8ca77af718dade0bf2949
e5b1707868d953c9900afd6555e950db8a8c01660ee2b6294632069ba49277ec43a4fdf46fc5f521
d3c3b24966e1c4272e98f74c9c9f7d1da94c19202f9867316007d355dfab5f7205dd1ee77bf9227c
79122c56cf3aeb343b31afd84c348f2951c2cb32dcf5248d508ccc1f41b7735f9cf7e96ca4cfcc2a
2d6d0951435b9b5f9c4c2955981bd9666c5f2f99c34957f26893f524d765a92991a81a57d3bff41b
3a97f4c7eb901ec699b0d9fb7e4e05aa999da8afdda107619a7ff9e210936cdae6dbfc3ae4a4b687
917d7bca906399787210756270ff31a479a411d9d719446a737f06187bf9bda285b07e1936c81702
dffaae67c707523f542f7c113bc62542aea5684dd573e9fcb2a7fd2939857954d5471813240a32a8
14ee87a1fd33afc2e434903e63c67ec66115085845aace4c28fe84a528fd3be58527c9073020874b
e35e93b2d31c4b9bc56fd9a7e7b4de026d8a33b438e6d15cc412049f4aeb45aec7c9de92cd658503
24f3fe036a1193a56a119e06267fd2fa5f7506c7ff10b8a85fcadce35aba57eaf02ffa0c9dee3f65
850379556a126d879417849a54d19967cf10dbd7c042e843018d804d2b720b995aca01a32fb47bb7
a08e8dd0f3537dc80cc30f8983845397defdb779c4255b2667a0601e14a249ef1367f1d8874e31ef
1a94a7b904c2a549e9d4d4e8ca94ab7bca0edd359f0833ea5e28eddbd8795cfd40f660c9aec39250
0456b50745c75791d0ed3f6b6b588b050b93e5b853cc990c644653c244848be1befaa70b0815b879
12723734099eccbfef3009adc685a18ece04b10a0a1b324195f149f4d1cbb9ecad35f4c8193e59eb
de36bf408bcdec2cd73f8f6c6c5420d3558c099ce62c5f8d538d2306ace026ea2046cd970cb31551
04aa47980d27335726b593ecaf0b62685411c6389bf20326eda2e147b3fd6d8d81bfe43f83de5d4e
e4938150ce8eb3ddd359b1203f5e4e9760cd86f112eecef818523d29fb29fed8000ce5779a100da4
56c41049a7adf3efe94de786dc8f6c885f1e0223c17df2eca4f4cac9a3139daebfb3408d9c5c6d5d
02f54c1466855c732ff25c0ec25a8719c9e410edf96e7f1f6c815a17b22c5f00c11192e73ca4be5b
184de5b8fd2daf2dd37dbd2a4482fe96be6601ee418166fa599297b5f4fadf751d4aff1f7a78f489
367bdcd58194754936b6086124785480d573a7e6891799c4a8a6c1bcb0cd4757e0bafe10ad8fc4e1
e838fb6e9fb1d015ecb0c3f2bbcae8e82d48eb00c69366fc2bc291a9a72cc415ed174009747fb42b
975e73a24acda634b4cbee51d2e234e45e3afec1e7baa6f1be4e2b79ba8c695505d9b70e1b15b262
b299af019d083559e7426d0a7ce2d449a4849dbd9709edba19520e2c69ad7165bd729b68aed9cc29
51ab21621e99dc6072577ddc0bac4ce0621d09f935438a5fe5759e24c6fd9c3cf6c7d100e1689567
08f95da44233ba1f64506c8a04eefee5d0a2a77a1dabbb13fd28cd72cfa173c8b0cc5ec2884a4b20
315327345854db6afbfa7259ec573ddb201ec03be95bbe95d52d625c57c506c06f41189cc4e87be7
ac65a75b1b60d92a4e3fed11ccd1ed2432070ad39fc62da80b8df93f7fbd09d2ceb4b909754af32c
c2fd868c7537ba16477c4a58dca560358a8b0d4ee0e4889511a877664ca7ece009e3aae5f13e44b9
f7e684e8ce160d5143669dec62c2e38f241ccc3f7e8534cda41734eb72f4168f986338750ab6dbcb
d645f2b103e64ac8370387e12b0cba1d30c57bb0875decea66c2b451f68b37febe7f2b829452434a
a93b7901c31e648478dbb1cb91cc2a62aabbc175d479fb04e64e08c8ef594e639680fa5299809ebb
f466fabf5d4ff37c8c8a109b736460c4f25c40e2f6d39a0f2104573876351402c9466a51259eee87
d9353b36440f0d347c9078728b094c058f8aa5e02ac7140b3f6b6174992f44cd1aca2360f5755d06
4c0e9bd86f59bfa1838c39243de5b0bedbe57c5c4774a43bc61684c94384ca1e87aee09cba4ba389
61e3b23a42b4dcfe03e371a5f546f65d694626a606767b1065db73c00b8b6cbfd8a828cae1547555
60af80b9cba079d96b0dad933dce86c499b06a8f044f90297022dbb15f0315da75bc63f06ed31754
44f2d170b6ed524259f485af16a16c49e828e63591ef1fa416c7c2f9067f5667e618f8eb89a06d41
d1f6124062b1dd32054ecaafe3c5284681ff9d26c0dae61b80436d76c40f9dfebae8856d2e0ff1b9
e75bd67c0763aa6e7d8e4371a394e271b5167d56030549e729af95b52532568e71c9f554ddc8ebc9
04089a81f245a16c045ab3e1bf284f5b94358376c05d98a186f99bb2b7a5a66e1a49a8fbf170f6ab
68eb34847f946ed97c20b34a367ae7dee7dbc4bf150856894722dba9ec478230b37056649c160e3b
4b9a527c316a2f367c1826de17f3a40f62cbd0efe32037f438d658678ecf7d0fed6d643693033fdf
162545bc1b5dbbbc275430147ea8011aecd9dc756d4da503c0731efec3a526db5e8e150ecb1e4616
32732cb01fa0679ee45608dcceb3f663fa5ad8a6756a753e96f1036c8bac9da8a7eb6d42bef55e75
cbc191b57c565abdb8072f08e4c8050e4c89730de0a7855a055ccb423bbc4bc0499479174d199401
faf1ff6b066ee8de2b659c6f20d9601685c84c98c6e2a6839600bca9a4545fbb2ed5ded04429417e
18aa285fb1ab3da9127d9407d8df2d42c0173881d07127eb68d0577e392028f2c3581b1bdd420d14
18be5da7e14d81df9e60f1be8b797a53ef102d4ff501bdbca67e61480dfc3e8ec13005ba31c93b81
465d29576d98184019d9bb642bdb9c612f33fb78af59acfa726d2eaed2075357918a19ef35834b01
b6299b37f21a719a3ed31581d8c15f1129aaa5900f3647f77e2d9ad62885acf1b37f9985a4bd9c67
495ad3c88cf55312413533c573dbd4883d403433e624a31d354d6d3a655a59b714bb6193c74fef9b
b552a3b396d2b62db53ec48e9eedda5175927b0dd25350aa9c0a828e675b4b2349fc6430100bcf11
ddeca7fbba7a9ee2b3a0b73e138773ac873c89305c96031350bbda9a88f3434df07d3b25fd31b75d
9e3f561b0b93527222efe1cbb70c9d8e06fb07b7a2dbd22c0fe30c0678de37f65b9cbba172210ec4
f3656c1598978a6d619858967154e619a4fa5c187585e889829499cfcd597f1a93c3222a107e9426
604327cf9b3bb460ed4ef212a1cb43b6ac4e3b9290df100fe4315213828b92d121c18df8479c2252
624df8863f97d24e533015d35a3b373ee7e4fdd53b854c204a953b6facee3ff66517f43337ca2942
56bf5595fd6f669c780e9492a21c15b2a1734a513f247eafe143f1c46c83909537138268d678a8bf
7dbbd44b7dd04d4120986a9aef1107d6d1eb24f9fd291206fccd915466a7824e62e1e9c9b383e9de
f2d238873411e8a04dab8ad03f3ed994ec9b31881730b39a625cad708e52ab3f38e6580730aa76c6
dfe5cf299b4e56faafdafd99c684c94b72ce3e606fe06e2988cb5a627ea0811c9b431981093f4ff9
4ddf8cfd152b89413f3aa356bb610a3c7748cfcb01f1c3f3960c4483de1459bc5ef92f4b7965a760
3669a89d213c413f74aba07f5693bdaaaf1840edf25fd022e3f7da502b0cce74f7cc8b9a58db8b2a
fbddef839584cc58c4292442b4dcc4372970160129b9cf49c774161ad8894cc5913d28f7996064e0
4b8aba622b689fe0872641910f7e86bdc23417afa325e46f21edce818298cd8e22608d567f154a82
f20e266e7e0bf33b6f23cc6a955d66bf58efe35db91e9cf7d59073876901121ad2923340a59db5c6
9b19d1f829c58ee7406a611f2b17d3e27651c2bb137cdcbb5d1914612c5815d4d5653c7c5ff53458
ba7271740f2d2eb06f9d9e3e85d11eab2e6afef98e200dadadfc1921220c03be675245716e42d32d
7870ddd9a5c39efcaef2722a67d713468ba4c36b140256cd16efb697ff8fd4e5bfb53f838c7d498e
46d297ce636cfa2ecfbf091225dc4e525236be1da9772c92ee0bc2ff8165aca8af4b9bc63fc9a2f8
c71b560497b189469fda381ce758f73593899134f03d0da51e3e57f33b187dc59e365688be57e700
1c120782b5d74ae302359db37ee7d49041407e4eefd5188323c839deb3e9f5e3f0b3408c184acf41
ad7fb46ec1f0329b166e0c6364041691366bf0c7184d268e5c414de31402ed2439ecad0381f19ff9
067017522e8ddefdd142b8bcac5392d1c8ede44ad187755eb69cf1b2491048cd6f20b21473f802e4
eb848c1ff75f793b80b66503f3e896023c393d3b1a06bf01b694d658ae89267a9db4ed5b113a65a2
f6606d29b1b5cbe6e268425e743af472cd2b464011636e253e375ea6fece305ba213314d23d48ac3
72da4077bf5b8df5a3a9a206917e78f6fe9b178fd26fc0c3b0d135bb927247dd69351072b261e263
104d3e3a590cacdcddc25f6fd829eaf379f47c13423216817e14acf770f4144cfec36345f7c0efb6
5f3155418dc3f082105e9db1d217986c22f2e2f7ba9f0a9c9b29dd95ef92eb2a6efd5fc3d75aad14
c8d096b05fc42d3360e5c2b96e3c49d8e49383d8da0e8075a20ac2cd2500b0801aeef9bbf338c757
6fe51ecd10f06a65bc949162f8d3a3e31db468b412d7213e1e6faa82acadc3d2d62f035b9098a7a7
a39a3805a4d8a027e0cfd3b54417b46d87eb162321c0583ec16a25e425c73875e231c5309592f7d4
bc786e0ba55335456a47b6685f81fcb49aaf200b6a1231e25c2832b25948d3f2b6c7d6ecb89e7ecd
8d900c7b9c92450c156faa05b0fcf31341e48b93553ac096586b2e19d7eb6ce91e8f07dc4c2d79cc
1f49c71b8a21758979ff65b261803b7685967539514010a21974d6ea3ce220fe914189d33242988b
34fb7773f278e18dc6e025fb55616b12ad5f11faef08d951239b8d7f78009add597de69295222ee2
52ca59cb3abe6da73261200389b367423f49aa7dadf8b9c65ca4fe02c4f115d083e2635e20bc9564
b262fe301b92a8b1e2b53345a1f31f6f787e02abb32fc0eaef0431d41e9eea32dbfc12be23d4ecb4
1866b2c9e4571f6947d6ade4f6934ef158446c6851c9e802d5898dad107d2d15642ff72bca5c8c24
02091e54a4057c93c802b3fa56e4188d865852cc87a14ecd6b70b168db67ad005d24ca4455be275c
45a8c26e95625a059ef51b621f39d1d75657ba0b2be88ebd3e3b1d5660c76d6377aa3576be51d119
d9cb9cb2f861a2bad39f7d5a8222166ea1c8d4c8e42646361cecb42b71ca1aaebdad5507e7e6fd5b
f724281de50225295e3ce0f72342b168e7d880c0caa3cf5b91c5a2134854eb152319ff5c2343f289
d0851c54d95ccc6810b62dd43598d784b5578f4c052149bfb82c6663c0f731e749bad1909573fcc4
4bfa0f078df0ddd3ac537b7d2bafabfa92438bb7632b1657beb2da8b2c1a15f2ebf64f6038857196
5addf8d7267b4f89c703d7356a9b3fcdcdf9111f4d4e1db0e2439ada3a4dabe56d1b870c2d1ac13e
b053e5844ae3d73e084798f0726119db0c7d2497710f0504f0767dd9fbb97a2666054e21dd58f4f1
933c72f2cf82941da71e1b5bad3d9799c2b437833684ee5e8bcaf86c174a87328da034e59379efac
223813ac2dbbf0cca5b90f8165e41a4330fd2ba06ed058821efadcbe8472678012177361f4911203
c6125501eda02b6cad19946cfe53c530b396c4a5a6b969b20e2416f8f335034973a1172c5e4190d0
546cafbfcc0a8ecd2b839f0572f562d35d61f053eba394e6b16f10c8c58269eb67cb11289ba31058
314ed529183ea38c76320dcbdc31fe52651697de06bafa244ccbe86b90c33e16bcc15c416ec1cfec
d39684fb3bcf18578ea71643e0be687b4a860e49359798bc14b89f55c77c119f069d3d0206b8364c
32ee6f87727be345f046023cdaea7d4c0058f58ef36129e348481be49971701b022d423e5c2692c4
f82ef88594bbbf7ef004079937adee488f0e9d9a6db3793e452c308b616a50d4f69bc059cf9d698f
9ffe40200f5df09ef240da2c17ed0b5905035d31f768c937d42961d9e4aa259f12a79fb7eddf0795
a0a4f98c9e8bdcc3c0ee671b539e7ceb4f3fcac51db9c5d3a60b3201992815270e3afb1b26732302
f857e58bdd8f7b56c5d539734146b876553e6b4091a55f0b21ade9ed7cc1f2037d4f3febef0a50a3
9120902ad6a2f4c024cb711462e23bca7a468c121bcb5200163b3377f6f9f77e9d80d6c111692e1a
0d6560df103081eae348326a84b176f34c41f9d9a3939900896b7d94e5a9f18db6b9479552deff73
64a75f03a11cf61f437b6aaaf2905286423e2e0342f867e3cedff139422704cef4e274dd80f7165d
e5dbe9fc90527f519b7dac09a2e406e4b7e6342e5590736a41297301d50867bd9d3863d649f3c070
ad42d135b1f257af85dded39aa68d41b10aea4570c758050727df4bdd9ca2ba7a5337f77de582661
2ef51d3474961a402165db32ea7c53e43230f4f1ed7e019d16f919376141e8f551ef926f545dc790
7999e095d2aaaa3781a585b870f7a213df2489d07b10d5ead1a115d713f9cd4804c155ff854a3462
13c431a61fd0fbf9e4a05e69ae987463d957c6c626ed71a4effd7ac5e35aa076602cfd7688284518
fedb7a16fbb11aaee36f03143f4900c621eb31701e1be9e92849871fc66403ce03e059162aafbc61
0748e079dfd758f3fb4ff09e1d6f8ed7d12440bfa49d4e76def48da1d4ea8d233cbb6906c520d545
df533309ed288c61d214f5ce124e5dbae3e603da5ebcb76e7e50f5f20312d1817c4ce0dd7af84701
78b4fffb94b68d13e8d4c92043d806d3fa114805a84f32d114e6c85e12d6be61fc5e2537d92ba69d
57d4f6e161c7bcdd151e72d1555d20d1324efffcb0e7027404c1a5a3b39eb5db8827557aa92fd907
860dea3ee1a6fbb488aab36ad2c344c54a23bc842727533f17eceb98cc3d2090887a46688bc2c629
e1f68adb3e50dd890d9bf67e126537c0a820943ddf1232aa01159af1aef788ce1c733a7841b9a0e7
b306c4593dcbf26baa5b7b8fddbdf0761ea8fd71502db78d4aca8469596a1a706ce237e0bcd6b93f
984e723bede6829a6eee7053de8987f4f32daae283df8f8b3c0e77fa378a72bf565643690662861f
43ac1daa51877fd995db0c0bda079fba2009525b8cced000ff1a4f0b3d314cc175fcc63f061f7fc0
0adc17800cbe258373701e373ae4245d1c5ee97a2169e5f8df34a9d47d2b7e325df04284ceab0520
e140b4f0ce35b2e0985d313faf5fc5e9b5f06c22c4a872a3d1eba31509afce6e3f4734f3a9ec68f3
f58e2e47ad3ddd6fb8ae3be9f399d34f5c828ce452b6585117390f1521e36271a4922cf9fc4ab107
c069861d4944ec3587b67b687f94b6517c5952d280de1f7d8d23fc56f2822bcea467ff905f662722
f906def028f03a2325d93fcd3fcda0ecdbed669af114cb62097fce96dc27b33e1520f1e0770d0254
08c3c8a3490c17ef583d804eab2e59158fd72da9be5ade503fd387b32e27f5beff4a6e2441a22757
fdb5700763495a6d92d4fd4bbf27717ecf266b3bc851f6d1ad3dbb8cabe8e0769c3a9d38918c414c
8aef949bee9a89adf0cc03fd278ab849b62369f23e92765716f186619149478001e5c0737af61c56
3f6138a7d1887261a89a65a8cf0c1f5cbf4f227415010394e2a7d165f2e09b7bd3ff20d496a00775
e4ca3dc3b3da213899c37fbd302a63a7538d4fa9b15634cf64ffe1773552b8b01c0855adb901ff11
54003b436f95eaaf9b928866d36ae9e8b0e680bf8e96d87c7535145d201ab0a6e71bc3faaa74bc82
e926ad72030dc5d7ff70055f9daf77bc892362372a6c4a86bc55687e2e9625502d521a3a7b3e332b
08f831c43a4a2bd005980da03081780d1e3ebf3255bdcaa64c13b23916f0007718c3833a83d6a86f
e435557bc234513b1179b631718757faedfd8d6e7d8387058c44368a285e00c26b4a3e4f5240d22a
9530768193b255ec8509b60866b745bae8839b419c589841c11ef4806257ac77036e7222abd7df5c
754abecf138f41d32fe10d9c8f900c7002eaa7719c23678210d4387466a274d20a29e7a4b8557bf2
69559f3d351181a28c62041dfbb21c25f11ea8ecac1e54d0a36aa7dd0fda5b9b102b8431d2500f1e
c06d7127783cb67c854d68002aef5853dfdf1d20fbd239878098448b44f952f1cd788ab2c477abe8
a5589bc899651a66dd87da965e6932cb96ae9225c2600359cc90a7083892b3946dfec093c8ffccee
79750034df2b11bb69f6516e035258206cb845260fd430b872ab678f29da742ffdbed349a7ca94da
9d9924436b9d9af832e3bfa3d2f52609c7195faa21b7aecb28b7b6328aecc89e00e9acc9941290bd
b7468133bcdabe78d6ff2e3b828e0e25f5be722552a12f1fe047670e11fab1e2ef02effa037259c0
b8189620a961d667a5c5226d9d17a9e012204bfe664ca368b6dd5a7b45e442ce96ffb3c47ab37d88
a0634619f14368684f5922a57da01759fc33ebe2b451c6ad79b7e92c44c2ef273d5748b890ce8bef
a8c5b202d1bc08835ba16f4a2e95fc4fba5780e1de229a6872bb8b
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 SSC_Copy_State <Virtual>  0
 HBW_Pick TASK  0 -1
 HBW_Copy_State <Virtual>  0
 PID_10 PID  0
 PID_11 PID  0
 hunt_exp_light PROGRAM  0 -1
 HBW_Home <Virtual>  0
 HBW_Pick_Sto <Virtual>  0
 test TASK  0 -1
 HBW_Pickup_ST PROGRAM  0 -1
 HWB_Extend_Arm <Virtual>  0
 HBW_Retract_Arm <Virtual>  0
 HWB_PickUp TASK  0 -1
 HBW_HTO1POS <Virtual>  0
 HBW_Left_1Block <Virtual>  0
 HBW_HomeTo2_Col <Virtual>  0
 HWB_HomeTo3_Col <Virtual>  0
 HWB_HomeTo2_Row <Virtual>  0
 HWB_HomeTo3_Row <Virtual>  0
 HWB_HomeTo1_Col <Virtual>  0
 HBW_move_left_1 <Virtual>  0
 HWB_Home_to_11 <Virtual>  0
 HWB_11_DropOff <Virtual>  0
 HBW_Pickup <Virtual>  0
 HBW_PickUp_R1 <Virtual>  0
 HBW_Send_VGR <Virtual>  0
 HBW_PickUp_VGR <Virtual>  0
 HBW_Return_VGR <Virtual>  0
 HBW_MotorsOff <Virtual>  0
 HBW_ConvTo11 <Virtual>  0
 HBW_Return_Top <Virtual>  0
 HBW_MV_11_12 <Virtual>  0
 HBW_Conv_12 <Virtual>  0
 HBW_Conv_12_Lat <Virtual>  0
 HBW_RETRACT_13 <Virtual>  0
 HBW_Retract_23 <Virtual>  0
 HBW_Conv13_Lat <Virtual>  0
 HBW_Conv_2Row <Virtual>  0
 HBW_PickUp_R2 <Virtual>  0
 HBW_Conv11_Lat <Virtual>  0
 HBW_Retract_12 <Virtual>  0
 HBW_Shift_C1C2 <Virtual>  0
 HBW_Move_R1_R2 <Virtual>  0
 HBW_Retract_22 <Virtual>  0
 HBW_Retract_21 <Virtual>  0
 HBW_Retract_31 <Virtual>  0
 HBW_Move_R2_R3 <Virtual>  0
 HBW_PickUp_R3 <Virtual>  0
 HBW_Conv_3Row <Virtual>  0
 HBW_Retract_32 <Virtual>  0
 HBW_Retract_33 <Virtual>  0
 HBW_Retract_Done PROGRAM  0 -1
 HBW_Retract_DN <Virtual>  0
#END

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"VGR Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC410 C410 1 0x0 MC409 C409 1 0x0 MC412 Y28 1 0x0 MC412 MC450 1 0x0 MC411 C411 1 0x0 MC408 C408 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC413 Y29 1 0x0 MC413 MC451 1 0x0 X27 MI200 1"

// Rung VGR_Copy_State#2
// Offset 27
NOP

// Rung VGR_Copy_State#3
// Offset 28
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC800 Y41 1 0x0 Y41 MI801 1 0x0 MC802 Y43 1 0x0 Y43 MI803 1 0x0 MC804 C804 1 0x0 MC805 C805 1 0x0 MC806 Y44 1 0x0 MC807 Y20 1 0x0 MC808 C811 1 0x0 MC809 C809 1 0x0 MC810 C810 1 0x0 MC812 C812 1 0x0 MC813 C813 1 0x0 MC814 C814 1 0x0 MC816 Y45 1 0x0 MC817 Y46 1 0x0 MC818 Y21 1"

// Rung MPO_Copy_State#2
// Offset 39
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC800 C1600 1 0x0 MC801 C1601 1 0x0 MC802 C1602 1 0x0 MC803 C1603 1 0x0 MC804 C1604 1 0x0 Y31 MI800 1 0x0 MC850 C1605 1"

// Rung SLD_Copy_State#2
// Offset 19
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"SSC Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC606 C1200 1 0x0 MC607 C1201 1 0x0 MC608 C1202 1 0x0 MC609 C1203 1 0x0 MC615 C1215 1 0x0 MC616 C1216 1 0x0 MC617 C1217 1 0x0 MC618 C1218 1 0x0 MC619 C1219 1 0x0 MC620 C1220 1"

// Rung SSC_Copy_State#2
// Offset 25
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block HBW_Home
$LGCMOD HBW_Home

// Rung HBW_Home#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Home#2
// Offset 8
STRN C215
ANDN X0
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 60 60
OUT Y51

// Rung HBW_Home#3
// Offset 26
STRN C215
ANDN X3
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5

// Rung HBW_Home#4
// Offset 43
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y76

// Rung HBW_Home#5
// Offset 64
NOP

// Rung HBW_Home#6
// Offset 65
RET

// End of Code Block HBW_Home
$LGCEND HBW_Home

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 Y40 1 0x0 Y80 MHR102 1 0x0 MC101 C205 1 0x0 MC102 C206 1 0x0 MC103 C207 1 0x0 MC104 C208 1 0x0 MC105 C209 1 0x0 MC106 C210 1 0x0 MC107 C211 1 0x0 MC108 C212 1 0x0 MC109 C213 1 0x0 MC110 C214 1 0x0 MC111 C215 1 0x0 MC112 C216 1 0x0 MC113 C300 1 0x0 X2 MI101 1 0x0 X10 MI102 1 0x0 X11 MI103 1 0x0 X3 MI104 1 0x0 X0 MI105 1 0x0 X6 MI106 1 0x0 X7 MI107 1 0x0 X8 MI108 1 0x0 X9 MI109 1 0x0 $HBW_Encoder_X.Acc MHR1 1 0x0 $HBW_Encoder_Z.Acc MHR2 1"

// Rung HBW_Copy_State#2
// Offset 57
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block HBW_HomeTo2_Col
$LGCMOD HBW_HomeTo2_Col

// Rung HBW_HomeTo2_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_HomeTo2_Col#2
// Offset 17
STRGE -2775 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_HomeTo2_Col#3
// Offset 22
NOP

// Rung HBW_HomeTo2_Col#4
// Offset 23
NOP

// Rung HBW_HomeTo2_Col#5
// Offset 24
NOP

// Rung HBW_HomeTo2_Col#6
// Offset 25
RET

// End of Code Block HBW_HomeTo2_Col
$LGCEND HBW_HomeTo2_Col

// Beginning of Code Block HWB_HomeTo1_Col
$LGCMOD HWB_HomeTo1_Col

// Rung HWB_HomeTo1_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HWB_HomeTo1_Col#2
// Offset 17
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_HomeTo1_Col#3
// Offset 22
NOP

// Rung HWB_HomeTo1_Col#4
// Offset 23
NOP

// Rung HWB_HomeTo1_Col#5
// Offset 24
RET

// End of Code Block HWB_HomeTo1_Col
$LGCEND HWB_HomeTo1_Col

// Beginning of Code Block HWB_Home_to_11
$LGCMOD HWB_Home_to_11

// Rung HWB_Home_to_11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HWB_Home_to_11#2
// Offset 22
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_Home_to_11#3
// Offset 27
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HWB_Home_to_11#4
// Offset 49
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_Home_to_11#5
// Offset 54
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HWB_Home_to_11#6
// Offset 73
NOP

// Rung HWB_Home_to_11#7
// Offset 74
NOP

// Rung HWB_Home_to_11#8
// Offset 75
RET

// End of Code Block HWB_Home_to_11
$LGCEND HWB_Home_to_11

// Beginning of Code Block HWB_11_DropOff
$LGCMOD HWB_11_DropOff

// Rung HWB_11_DropOff#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HWB_11_DropOff#2
// Offset 8
STRGE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_11_DropOff#3
// Offset 13
STRN C215
ANDN C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51

// Rung HWB_11_DropOff#4
// Offset 31
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y4
AND ST2
OUT Y5

// Rung HWB_11_DropOff#5
// Offset 51
STRGE 2850 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_11_DropOff#6
// Offset 56
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 60 60
OUT Y7

// Rung HWB_11_DropOff#7
// Offset 73
RET

// End of Code Block HWB_11_DropOff
$LGCEND HWB_11_DropOff

// Beginning of Code Block HBW_PickUp_R1
$LGCMOD HBW_PickUp_R1

// Rung HBW_PickUp_R1#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R1#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R1#3
// Offset 41
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R1#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R1#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_PickUp_R1#6
// Offset 69
NOP

// Rung HBW_PickUp_R1#7
// Offset 70
NOP

// Rung HBW_PickUp_R1#8
// Offset 71
NOP

// Rung HBW_PickUp_R1#9
// Offset 72
NOP

// Rung HBW_PickUp_R1#10
// Offset 73
RET

// End of Code Block HBW_PickUp_R1
$LGCEND HBW_PickUp_R1

// Beginning of Code Block HBW_Send_VGR
$LGCMOD HBW_Send_VGR

// Rung HBW_Send_VGR#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Send_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_Send_VGR#3
// Offset 37
STRN C215
AND X2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y48
AND ST2
OUT Y49

// Rung HBW_Send_VGR#4
// Offset 56
NOP

// Rung HBW_Send_VGR#5
// Offset 57
NOP

// Rung HBW_Send_VGR#6
// Offset 58
RET

// End of Code Block HBW_Send_VGR
$LGCEND HBW_Send_VGR

// Beginning of Code Block HBW_PickUp_VGR
$LGCMOD HBW_PickUp_VGR

// Rung HBW_PickUp_VGR#1
// Offset 0
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_PickUp_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_PickUp_VGR#3
// Offset 37
STRN C215
AND X11
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_PickUp_VGR#4
// Offset 56
NOP

// Rung HBW_PickUp_VGR#5
// Offset 57
NOP

// Rung HBW_PickUp_VGR#6
// Offset 58
RET

// End of Code Block HBW_PickUp_VGR
$LGCEND HBW_PickUp_VGR

// Beginning of Code Block HBW_Return_VGR
$LGCMOD HBW_Return_VGR

// Rung HBW_Return_VGR#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C253
AND C299
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y6

// Rung HBW_Return_VGR#2
// Offset 23
STRN C215
AND X1
DUPBOOL
AND C299
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
POPBOOL
AND ST2
OUT Y48

// Rung HBW_Return_VGR#3
// Offset 45
STRN C215
AND C251
DUPBOOL
ANDN X1
AND C299
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_Return_VGR#4
// Offset 68
STRLE 2575 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_VGR#5
// Offset 73
NOP

// Rung HBW_Return_VGR#6
// Offset 74
NOP

// Rung HBW_Return_VGR#7
// Offset 75
RET

// End of Code Block HBW_Return_VGR
$LGCEND HBW_Return_VGR

// Beginning of Code Block HBW_MotorsOff
$LGCMOD HBW_MotorsOff

// Rung HBW_MotorsOff#1
// Offset 0
STRN C215
ANDN ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_MotorsOff#2
// Offset 18
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_MotorsOff#3
// Offset 36
STRN C215
AND ST2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
OUT Y48

// Rung HBW_MotorsOff#4
// Offset 54
NOP

// Rung HBW_MotorsOff#5
// Offset 55
NOP

// Rung HBW_MotorsOff#6
// Offset 56
NOP

// Rung HBW_MotorsOff#7
// Offset 57
RET

// End of Code Block HBW_MotorsOff
$LGCEND HBW_MotorsOff

// Beginning of Code Block HBW_ConvTo11
$LGCMOD HBW_ConvTo11

// Rung HBW_ConvTo11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_ConvTo11#2
// Offset 22
NOP

// Rung HBW_ConvTo11#3
// Offset 23
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_ConvTo11#4
// Offset 28
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_ConvTo11#5
// Offset 50
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_ConvTo11#6
// Offset 55
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_ConvTo11#7
// Offset 74
NOP

// Rung HBW_ConvTo11#8
// Offset 75
NOP

// Rung HBW_ConvTo11#9
// Offset 76
RET

// End of Code Block HBW_ConvTo11
$LGCEND HBW_ConvTo11

// Beginning of Code Block HBW_Return_Top
$LGCMOD HBW_Return_Top

// Rung HBW_Return_Top#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Return_Top#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HBW_Return_Top#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_Top#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_Return_Top#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return_Top#6
// Offset 69
NOP

// Rung HBW_Return_Top#7
// Offset 70
NOP

// Rung HBW_Return_Top#8
// Offset 71
RET

// End of Code Block HBW_Return_Top
$LGCEND HBW_Return_Top

// Beginning of Code Block HBW_MV_11_12
$LGCMOD HBW_MV_11_12

// Rung HBW_MV_11_12#1
// Offset 0
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_MV_11_12#2
// Offset 21
NOP

// Rung HBW_MV_11_12#3
// Offset 22
NOP

// Rung HBW_MV_11_12#4
// Offset 23
NOP

// Rung HBW_MV_11_12#5
// Offset 24
RET

// End of Code Block HBW_MV_11_12
$LGCEND HBW_MV_11_12

// Beginning of Code Block HBW_Conv_12
$LGCMOD HBW_Conv_12

// Rung HBW_Conv_12#1
// Offset 0
NOP

// Rung HBW_Conv_12#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_12#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Conv_12#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 80
OUT C251

// Rung HBW_Conv_12#5
// Offset 45
NOP

// Rung HBW_Conv_12#6
// Offset 46
RET

// End of Code Block HBW_Conv_12
$LGCEND HBW_Conv_12

// Beginning of Code Block HBW_Conv_12_Lat
$LGCMOD HBW_Conv_12_Lat

// Rung HBW_Conv_12_Lat#1
// Offset 0
NOP

// Rung HBW_Conv_12_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv_12_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv_12_Lat#4
// Offset 42
STRGE 5325 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv_12_Lat#5
// Offset 47
NOP

// Rung HBW_Conv_12_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv_12_Lat
$LGCEND HBW_Conv_12_Lat

// Beginning of Code Block HBW_RETRACT_13
$LGCMOD HBW_RETRACT_13

// Rung HBW_RETRACT_13#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_RETRACT_13#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_RETRACT_13#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_RETRACT_13#4
// Offset 46
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_RETRACT_13#5
// Offset 68
STRGE 7685 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_RETRACT_13#6
// Offset 73
RET

// End of Code Block HBW_RETRACT_13
$LGCEND HBW_RETRACT_13

// Beginning of Code Block HBW_Retract_23
$LGCMOD HBW_Retract_23

// Rung HBW_Retract_23#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_23#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_23#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_23#4
// Offset 46
STRN C215
AND ST2
OUT Y51
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_Retract_23#5
// Offset 65
STRGE 7685 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_23#6
// Offset 70
RET

// End of Code Block HBW_Retract_23
$LGCEND HBW_Retract_23

// Beginning of Code Block HBW_Conv13_Lat
$LGCMOD HBW_Conv13_Lat

// Rung HBW_Conv13_Lat#1
// Offset 0
NOP

// Rung HBW_Conv13_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv13_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv13_Lat#4
// Offset 42
STRGE 7685 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv13_Lat#5
// Offset 47
NOP

// Rung HBW_Conv13_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv13_Lat
$LGCEND HBW_Conv13_Lat

// Beginning of Code Block HBW_Conv_2Row
$LGCMOD HBW_Conv_2Row

// Rung HBW_Conv_2Row#1
// Offset 0
NOP

// Rung HBW_Conv_2Row#2
// Offset 1
NOP

// Rung HBW_Conv_2Row#3
// Offset 2
NOP

// Rung HBW_Conv_2Row#4
// Offset 3
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_2Row#5
// Offset 22
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Conv_2Row#6
// Offset 42
STRGE $HBW_Encoder_Z.Acc 1380
OUT C251

// Rung HBW_Conv_2Row#7
// Offset 47
NOP

// Rung HBW_Conv_2Row#8
// Offset 48
RET

// End of Code Block HBW_Conv_2Row
$LGCEND HBW_Conv_2Row

// Beginning of Code Block HBW_PickUp_R2
$LGCMOD HBW_PickUp_R2

// Rung HBW_PickUp_R2#1
// Offset 0
NOP

// Rung HBW_PickUp_R2#2
// Offset 1
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R2#3
// Offset 20
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R2#4
// Offset 38
NOP

// Rung HBW_PickUp_R2#5
// Offset 39
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R2#6
// Offset 61
STRLE 1400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R2#7
// Offset 66
NOP

// Rung HBW_PickUp_R2#8
// Offset 67
NOP

// Rung HBW_PickUp_R2#9
// Offset 68
NOP

// Rung HBW_PickUp_R2#10
// Offset 69
RET

// End of Code Block HBW_PickUp_R2
$LGCEND HBW_PickUp_R2

// Beginning of Code Block HBW_Conv11_Lat
$LGCMOD HBW_Conv11_Lat

// Rung HBW_Conv11_Lat#1
// Offset 0
NOP

// Rung HBW_Conv11_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv11_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv11_Lat#4
// Offset 42
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv11_Lat#5
// Offset 47
NOP

// Rung HBW_Conv11_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv11_Lat
$LGCEND HBW_Conv11_Lat

// Beginning of Code Block HBW_Retract_12
$LGCMOD HBW_Retract_12

// Rung HBW_Retract_12#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_12#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_12#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_12#4
// Offset 46
RET

// End of Code Block HBW_Retract_12
$LGCEND HBW_Retract_12

// Beginning of Code Block HBW_Shift_C1C2
$LGCMOD HBW_Shift_C1C2

// Rung HBW_Shift_C1C2#1
// Offset 0
STRGE 5320 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Shift_C1C2#2
// Offset 5
NOP

// Rung HBW_Shift_C1C2#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Shift_C1C2#4
// Offset 25
NOP

// Rung HBW_Shift_C1C2#5
// Offset 26
STRN C215
AND ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_Shift_C1C2#6
// Offset 44
NOP

// Rung HBW_Shift_C1C2#7
// Offset 45
RET

// End of Code Block HBW_Shift_C1C2
$LGCEND HBW_Shift_C1C2

// Beginning of Code Block HBW_Move_R1_R2
$LGCMOD HBW_Move_R1_R2

// Rung HBW_Move_R1_R2#1
// Offset 0
STRGE 1700 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Move_R1_R2#2
// Offset 5
NOP

// Rung HBW_Move_R1_R2#3
// Offset 6
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Move_R1_R2#4
// Offset 25
NOP

// Rung HBW_Move_R1_R2#5
// Offset 26
NOP

// Rung HBW_Move_R1_R2#6
// Offset 27
RET

// End of Code Block HBW_Move_R1_R2
$LGCEND HBW_Move_R1_R2

// Beginning of Code Block HBW_Retract_22
$LGCMOD HBW_Retract_22

// Rung HBW_Retract_22#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_22#2
// Offset 22
STRGE 1700 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_22#3
// Offset 27
NOP

// Rung HBW_Retract_22#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_22#5
// Offset 47
STRLE 5300 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_22#6
// Offset 52
STRN C215
AND C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
AND ST2
OUT Y50

// Rung HBW_Retract_22#7
// Offset 72
NOP

// Rung HBW_Retract_22#8
// Offset 73
RET

// End of Code Block HBW_Retract_22
$LGCEND HBW_Retract_22

// Beginning of Code Block HBW_Retract_21
$LGCMOD HBW_Retract_21

// Rung HBW_Retract_21#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_21#2
// Offset 22
STRGE 1700 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_21#3
// Offset 27
NOP

// Rung HBW_Retract_21#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_21#5
// Offset 47
STRLE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_21#6
// Offset 52
STRN C215
AND C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
AND ST2
OUT Y50

// Rung HBW_Retract_21#7
// Offset 72
NOP

// Rung HBW_Retract_21#8
// Offset 73
RET

// End of Code Block HBW_Retract_21
$LGCEND HBW_Retract_21

// Beginning of Code Block HBW_Retract_31
$LGCMOD HBW_Retract_31

// Rung HBW_Retract_31#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_31#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_31#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_31#4
// Offset 46
STRN C215
AND ST2
OUT Y51
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_Retract_31#5
// Offset 65
STRGE 7685 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_31#6
// Offset 70
RET

// End of Code Block HBW_Retract_31
$LGCEND HBW_Retract_31

// Beginning of Code Block HBW_Move_R2_R3
$LGCMOD HBW_Move_R2_R3

// Rung HBW_Move_R2_R3#1
// Offset 0
STRGE 3600 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Move_R2_R3#2
// Offset 5
NOP

// Rung HBW_Move_R2_R3#3
// Offset 6
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Move_R2_R3#4
// Offset 25
NOP

// Rung HBW_Move_R2_R3#5
// Offset 26
NOP

// Rung HBW_Move_R2_R3#6
// Offset 27
RET

// End of Code Block HBW_Move_R2_R3
$LGCEND HBW_Move_R2_R3

// Beginning of Code Block HBW_PickUp_R3
$LGCMOD HBW_PickUp_R3

// Rung HBW_PickUp_R3#1
// Offset 0
NOP

// Rung HBW_PickUp_R3#2
// Offset 1
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R3#3
// Offset 20
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R3#4
// Offset 38
NOP

// Rung HBW_PickUp_R3#5
// Offset 39
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R3#6
// Offset 61
STRLE 2800 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R3#7
// Offset 66
NOP

// Rung HBW_PickUp_R3#8
// Offset 67
NOP

// Rung HBW_PickUp_R3#9
// Offset 68
NOP

// Rung HBW_PickUp_R3#10
// Offset 69
RET

// End of Code Block HBW_PickUp_R3
$LGCEND HBW_PickUp_R3

// Beginning of Code Block HBW_Conv_3Row
$LGCMOD HBW_Conv_3Row

// Rung HBW_Conv_3Row#1
// Offset 0
NOP

// Rung HBW_Conv_3Row#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_3Row#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Conv_3Row#4
// Offset 40
STRLE $HBW_Encoder_Z.Acc 2950
OUT C251

// Rung HBW_Conv_3Row#5
// Offset 45
NOP

// Rung HBW_Conv_3Row#6
// Offset 46
RET

// End of Code Block HBW_Conv_3Row
$LGCEND HBW_Conv_3Row

// Beginning of Code Block HBW_Retract_32
$LGCMOD HBW_Retract_32

// Rung HBW_Retract_32#1
// Offset 0
STRGE 3300 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_32#2
// Offset 5
NOP

// Rung HBW_Retract_32#3
// Offset 6
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_32#4
// Offset 28
NOP

// Rung HBW_Retract_32#5
// Offset 29
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_32#6
// Offset 48
STRGE 5400 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_32#7
// Offset 53
NOP

// Rung HBW_Retract_32#8
// Offset 54
STRN C215
AND C250
DUPBOOL
ANDN C251
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_Retract_32#9
// Offset 77
NOP

// Rung HBW_Retract_32#10
// Offset 78
RET

// End of Code Block HBW_Retract_32
$LGCEND HBW_Retract_32

// Beginning of Code Block HBW_Retract_33
$LGCMOD HBW_Retract_33

// Rung HBW_Retract_33#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_33#2
// Offset 22
STRGE 3300 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_33#3
// Offset 27
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_33#4
// Offset 46
STRGE 7685 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_33#5
// Offset 51
NOP

// Rung HBW_Retract_33#6
// Offset 52
STRN C215
AND C250
DUPBOOL
ANDN C251
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_Retract_33#7
// Offset 75
NOP

// Rung HBW_Retract_33#8
// Offset 76
RET

// End of Code Block HBW_Retract_33
$LGCEND HBW_Retract_33

// Beginning of Code Block HBW_Retract_DN
$LGCMOD HBW_Retract_DN

// Rung HBW_Retract_DN#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_DN#2
// Offset 22
STRGE 3200 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_DN#3
// Offset 27
NOP

// Rung HBW_Retract_DN#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_DN#5
// Offset 47
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_DN#6
// Offset 52
STRN C215
AND C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
AND ST2
OUT Y50

// Rung HBW_Retract_DN#7
// Offset 72
NOP

// Rung HBW_Retract_DN#8
// Offset 73
RET

// End of Code Block HBW_Retract_DN
$LGCEND HBW_Retract_DN

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#2
// Offset 3
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#3
// Offset 6
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#4
// Offset 9
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#5
// Offset 12
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// Rung $Main#6
// Offset 15
#BEGIN FMT_COMMENT 
"Hunter Demo Light<br>"
#END

STR ST1
RUN hunt_exp_light

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
SG HBW_Program.S0

// Rung HBW_Program#2
// Offset 2
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#3
// Offset 10
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#4
// Offset 12
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#5
// Offset 14
STR ST1
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#6
// Offset 22
NOP

// Rung HBW_Program#7
// Offset 23
STR C213
JMP HBW_Program.S1

// Rung HBW_Program#8
// Offset 25
SG HBW_Program.S1

// Rung HBW_Program#9
// Offset 27
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#10
// Offset 35
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#11
// Offset 37
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#12
// Offset 39
STR ST1
MOVE 6 N1

// Rung HBW_Program#13
// Offset 42
STR ST1
MOVE 0 C299

// Rung HBW_Program#14
// Offset 45
NOP

// Rung HBW_Program#15
// Offset 46
STR ST1
DUPBOOL
STR C205
ANDN C206
STR C206
ANDN C205
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 500 60
POPBOOL
DUPBOOL
AND C205
OUT Y48
POPBOOL
AND C206
OUT Y49

// Rung HBW_Program#16
// Offset 75
STR ST1
DUPBOOL
STR C207
ANDN C208
STRN C207
AND C208
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
POPBOOL
DUPBOOL
AND C207
OUT Y50
POPBOOL
AND C208
OUT Y51

// Rung HBW_Program#17
// Offset 104
STR ST1
DUPBOOL
STR C209
ANDN C210
STRN C209
AND C210
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
POPBOOL
DUPBOOL
AND C209
OUT Y4
POPBOOL
AND C210
OUT Y5

// Rung HBW_Program#18
// Offset 133
STR ST1
DUPBOOL
STR C211
ANDN C212
STRN C211
AND C212
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
POPBOOL
DUPBOOL
AND C211
OUT Y6
POPBOOL
AND C212
OUT Y7

// Rung HBW_Program#19
// Offset 162
STR C213
JMP HBW_Program.S2

// Rung HBW_Program#20
// Offset 164
SG HBW_Program.S2

// Rung HBW_Program#21
// Offset 166
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#22
// Offset 174
STR X0
OUT $HBW_Encoder_X.ResetLevel

// Rung HBW_Program#23
// Offset 176
STR X3
OUT $HBW_Encoder_Z.ResetLevel

// Rung HBW_Program#24
// Offset 178
STR ST1
CALL HBW_Home 0x1 DST511 "3" "3"

// Rung HBW_Program#25
// Offset 186
STR X0
AND X11
AND X3
JMP HBW_Program.S3

// Rung HBW_Program#26
// Offset 190
STR C212
JMP HBW_Program.S3

// Rung HBW_Program#27
// Offset 192
NOP

// Rung HBW_Program#28
// Offset 193
SG HBW_Program.S3

// Rung HBW_Program#29
// Offset 195
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#30
// Offset 203
STR ST1
CALL HWB_Home_to_11 0x1 DST511 "3" "3"

// Rung HBW_Program#31
// Offset 211
STRN C250
ANDN C251
JMP HBW_Program.S4

// Rung HBW_Program#32
// Offset 214
SG HBW_Program.S4

// Rung HBW_Program#33
// Offset 216
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#34
// Offset 224
STR ST1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#35
// Offset 232
STR X10
ANDN C251
JMP HBW_Program.S5

// Rung HBW_Program#36
// Offset 235
SG HBW_Program.S5

// Rung HBW_Program#37
// Offset 237
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#38
// Offset 245
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#39
// Offset 253
STRN C251
AND C250
JMP HBW_Program.S6

// Rung HBW_Program#40
// Offset 256
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#41
// Offset 258
SG HBW_Program.S6

// Rung HBW_Program#42
// Offset 260
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#43
// Offset 268
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#44
// Offset 276
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#45
// Offset 278
STRN X2
JMP HBW_Program.S7
INC N1

// Rung HBW_Program#46
// Offset 281
SG HBW_Program.S7

// Rung HBW_Program#47
// Offset 283
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#48
// Offset 291
STR C300
MOVE 1 C299

// Rung HBW_Program#49
// Offset 294
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#50
// Offset 302
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#51
// Offset 311
SG HBW_Program.S8

// Rung HBW_Program#52
// Offset 313
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#53
// Offset 321
STR ST1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#54
// Offset 329
STR ST1
MOVE 0 C299

// Rung HBW_Program#55
// Offset 332
STRN C250
JMP HBW_Program.S9

// Rung HBW_Program#56
// Offset 334
SG HBW_Program.S9

// Rung HBW_Program#57
// Offset 336
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#58
// Offset 344
STR ST1
CALL HBW_Return_Top 0x1 DST511 "3" "3"

// Rung HBW_Program#59
// Offset 352
STR X10
ANDN C251
JMP HBW_Program.S10
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#60
// Offset 362
SG HBW_Program.S10

// Rung HBW_Program#61
// Offset 364
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#62
// Offset 372
STR ST1
CALL HBW_MV_11_12 0x1 DST511 "3" "3"

// Rung HBW_Program#63
// Offset 380
STRN C250
JMP HBW_Program.S11

// Rung HBW_Program#64
// Offset 382
SG HBW_Program.S11

// Rung HBW_Program#65
// Offset 384
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#66
// Offset 392
STRE N1 1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#67
// Offset 403
STRE N1 2
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#68
// Offset 414
STRE N1 3
CALL HBW_Move_R1_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#69
// Offset 425
STRE N1 3
ANDLE 1650 $HBW_Encoder_Z.Acc
JMP HBW_Program.S51

// Rung HBW_Program#70
// Offset 434
STRE N1 4
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#71
// Offset 445
STRE N1 5
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#72
// Offset 456
STRE N1 6
CALL HBW_Move_R2_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#73
// Offset 467
STRE N1 6
ANDLE 3200 $HBW_Encoder_Z.Acc
JMP HBW_Program.S51

// Rung HBW_Program#74
// Offset 476
STRE N1 7
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#75
// Offset 487
STRE N1 8
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#76
// Offset 498
STRE N1 9
JMP HBW_Program.S18

// Rung HBW_Program#77
// Offset 503
NOP

// Rung HBW_Program#78
// Offset 504
NOP

// Rung HBW_Program#79
// Offset 505
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#80
// Offset 508
STR C215
JMP HBW_Program.S1

// Rung HBW_Program#81
// Offset 510
SG HBW_Program.S51

// Rung HBW_Program#82
// Offset 512
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#83
// Offset 520
STRE N1 3
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#84
// Offset 531
STRE N1 6
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#85
// Offset 542
NOP

// Rung HBW_Program#86
// Offset 543
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#87
// Offset 546
SG HBW_Program.S12

// Rung HBW_Program#88
// Offset 548
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#89
// Offset 556
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#90
// Offset 564
STRN C251
AND C250
JMP HBW_Program.S13

// Rung HBW_Program#91
// Offset 567
SG HBW_Program.S13

// Rung HBW_Program#92
// Offset 569
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#93
// Offset 577
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#94
// Offset 585
STR C300
MOVE 1 C299

// Rung HBW_Program#95
// Offset 588
STRN X2
AND C299
JMP HBW_Program.S14
INC N1

// Rung HBW_Program#96
// Offset 592
SG HBW_Program.S14

// Rung HBW_Program#97
// Offset 594
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#98
// Offset 602
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#99
// Offset 610
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#100
// Offset 619
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#101
// Offset 621
SG HBW_Program.S15

// Rung HBW_Program#102
// Offset 623
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#103
// Offset 631
STR ST1
MOVE 0 C299

// Rung HBW_Program#104
// Offset 634
STRE N1 1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#105
// Offset 645
STRE N1 2
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#106
// Offset 656
STRE N1 3
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#107
// Offset 667
STRE N1 4
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#108
// Offset 678
STRE N1 5
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#109
// Offset 689
STRE N1 6
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#110
// Offset 700
STRE N1 7
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#111
// Offset 711
STRE N1 8
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#112
// Offset 722
STRE N1 9
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#113
// Offset 733
NOP

// Rung HBW_Program#114
// Offset 734
STRN C251
JMP HBW_Program.S16
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#115
// Offset 743
SG HBW_Program.S16

// Rung HBW_Program#116
// Offset 745
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#117
// Offset 753
STRE N1 1
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#118
// Offset 764
STRE N1 2
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#119
// Offset 775
STRE N1 3
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#120
// Offset 786
STRE N1 4
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#121
// Offset 797
STRE N1 5
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#122
// Offset 808
STRE N1 6
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#123
// Offset 819
STRE N1 7
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#124
// Offset 830
STRE N1 8
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#125
// Offset 841
STRE N1 9
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#126
// Offset 852
NOP

// Rung HBW_Program#127
// Offset 853
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#128
// Offset 855
STRN C250
AND X10
JMP HBW_Program.S17

// Rung HBW_Program#129
// Offset 858
SG HBW_Program.S17

// Rung HBW_Program#130
// Offset 860
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#131
// Offset 868
STRE N1 1
CALL HBW_Retract_12 0x1 DST511 "3" "3"

// Rung HBW_Program#132
// Offset 879
STRE N1 2
CALL HBW_RETRACT_13 0x1 DST511 "3" "3"

// Rung HBW_Program#133
// Offset 890
STRE N1 3
CALL HBW_Retract_23 0x1 DST511 "3" "3"

// Rung HBW_Program#134
// Offset 901
STRE N1 4
CALL HBW_Retract_22 0x1 DST511 "3" "3"

// Rung HBW_Program#135
// Offset 912
STRE N1 5
CALL HBW_Retract_21 0x1 DST511 "3" "3"

// Rung HBW_Program#136
// Offset 923
STRE N1 6
CALL HBW_Retract_21 0x1 DST511 "3" "3"

// Rung HBW_Program#137
// Offset 934
STRE N1 7
CALL HBW_Retract_32 0x1 DST511 "3" "3"

// Rung HBW_Program#138
// Offset 945
STRE N1 8
CALL HBW_Retract_33 0x1 DST511 "3" "3"

// Rung HBW_Program#139
// Offset 956
STRE N1 9
CALL HBW_Retract_33 0x1 DST511 "3" "3"

// Rung HBW_Program#140
// Offset 967
NOP

// Rung HBW_Program#141
// Offset 968
STR C215
JMP HBW_Program.S1

// Rung HBW_Program#142
// Offset 970
STR X11
ANDN C251
ANDN C250
JMP HBW_Program.S11

// Rung HBW_Program#143
// Offset 974
STR X11
ANDE N1 1
JMP HBW_Program.S50

// Rung HBW_Program#144
// Offset 980
SG HBW_Program.S18

// Rung HBW_Program#145
// Offset 982
STR ST1
JMP HBW_Program.S0

// Rung HBW_Program#146
// Offset 984
SG HBW_Program.S50

// Rung HBW_Program#147
// Offset 986
STR ST1
CALL HBW_Shift_C1C2 0x1 DST511 "3" "3"

// Rung HBW_Program#148
// Offset 994
STRN Y50
ANDN C250
JMP HBW_Program.S11

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#2
// Offset 8
STR ST1
DUPBOOL
STR C410
ANDN C409
STRN C410
AND C409
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
POPBOOL
DUPBOOL
AND C410
OUT Y27
POPBOOL
AND C409
OUT Y26

// Rung VGR_Program#3
// Offset 37
STR ST1
DUPBOOL
STR C408
ANDN C411
STRN C408
AND C411
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
POPBOOL
DUPBOOL
AND C408
OUT Y24
POPBOOL
AND C411
OUT Y25

// Rung VGR_Program#4
// Offset 66
STR ST1
DUPBOOL
STR C406
ANDN C407
STRN C406
AND C407
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
POPBOOL
DUPBOOL
AND C406
OUT Y23
POPBOOL
AND C407
OUT Y22

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STR C813
OUT Y18

// Rung MPO_Program#4
// Offset 12
STR C810
OUT Y17

// Rung MPO_Program#5
// Offset 14
STR C811
OUT Y52

// Rung MPO_Program#6
// Offset 16
STR ST1
DUPBOOL
STR C804
ANDN C805
STR C805
ANDN C804
ORSTR
ANDSTR
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 100
POPBOOL
DUPBOOL
AND C804
OUT Y53
POPBOOL
AND C805
OUT Y15

// Rung MPO_Program#7
// Offset 45
STR C814
OUT Y19

// Rung MPO_Program#8
// Offset 47
STR C809
JMP MPO_Program.S2

// Rung MPO_Program#9
// Offset 49
SG MPO_Program.S1

// Rung MPO_Program#10
// Offset 51
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#11
// Offset 59
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#12
// Offset 61
STRN X24
SET Y17

// Rung MPO_Program#13
// Offset 63
STR Y17
OUT Y20
ANDN X17
ONDTMR T0 1000 Y44

// Rung MPO_Program#14
// Offset 69
SG MPO_Program.S2

// Rung MPO_Program#15
// Offset 71
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#16
// Offset 79
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#17
// Offset 81
STRN X19
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y53

// Rung MPO_Program#18
// Offset 97
STR X19
JMP MPO_Program.S3

// Rung MPO_Program#19
// Offset 99
SG MPO_Program.S3

// Rung MPO_Program#20
// Offset 101
STR ST1
SET Y17

// Rung MPO_Program#21
// Offset 103
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#22
// Offset 111
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#23
// Offset 113
STR X19
SET Y19

// Rung MPO_Program#24
// Offset 115
STR X19
ONDTMR T100 2000 Y18

// Rung MPO_Program#25
// Offset 119
STR T100.DN
JMP MPO_Program.S4

// Rung MPO_Program#26
// Offset 121
SG MPO_Program.S4

// Rung MPO_Program#27
// Offset 123
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#28
// Offset 131
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#29
// Offset 133
STR X19
RST Y19

// Rung MPO_Program#30
// Offset 135
STRN X16
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y15

// Rung MPO_Program#31
// Offset 151
STR X16
JMP MPO_Program.S5

// Rung MPO_Program#32
// Offset 153
SG MPO_Program.S5

// Rung MPO_Program#33
// Offset 155
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#34
// Offset 163
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#35
// Offset 165
STR X16
SET Y19

// Rung MPO_Program#36
// Offset 167
STR Y19
ONDTMR T101 2000 C815

// Rung MPO_Program#37
// Offset 171
STR C815
RST Y18

// Rung MPO_Program#38
// Offset 173
STRN Y18
JMP MPO_Program.S6

// Rung MPO_Program#39
// Offset 175
SG MPO_Program.S6

// Rung MPO_Program#40
// Offset 177
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#41
// Offset 185
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#42
// Offset 187
STR X16
RST Y19

// Rung MPO_Program#43
// Offset 189
STRN Y19
ONDTMR T102 1000 C818

// Rung MPO_Program#44
// Offset 193
STR C818
JMP MPO_Program.S7

// Rung MPO_Program#45
// Offset 195
SG MPO_Program.S7

// Rung MPO_Program#46
// Offset 197
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#47
// Offset 205
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#48
// Offset 207
STRN X15
OUT Y45

// Rung MPO_Program#49
// Offset 209
STR X15
TMRDOWN T102 1000
OUT Y43

// Rung MPO_Program#50
// Offset 213
STR T102.Done
JMP MPO_Program.S8

// Rung MPO_Program#51
// Offset 215
SG MPO_Program.S8

// Rung MPO_Program#52
// Offset 217
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#53
// Offset 225
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#54
// Offset 227
STRN X13
OUT Y45

// Rung MPO_Program#55
// Offset 229
STR X13
TMRDOWN T103 1000
OUT Y21

// Rung MPO_Program#56
// Offset 233
STR T103.Done
JMP MPO_Program.S9

// Rung MPO_Program#57
// Offset 235
SG MPO_Program.S9

// Rung MPO_Program#58
// Offset 237
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#59
// Offset 245
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#60
// Offset 247
STR ST1
OUT Y47

// Rung MPO_Program#61
// Offset 249
STRN X12
ONDTMR T104 1000 Y46

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
SG SLD_Program.S0

// Rung SLD_Program#2
// Offset 2
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#3
// Offset 10
STR C1600
OUT Y30

// Rung SLD_Program#4
// Offset 12
STR C1601
OUT Y31

// Rung SLD_Program#5
// Offset 14
STR C1602
OUT Y32

// Rung SLD_Program#6
// Offset 16
STR C1603
OUT Y33

// Rung SLD_Program#7
// Offset 18
STR C1604
OUT Y34

// Rung SLD_Program#8
// Offset 20
STR C1605
JMP SLD_Program.S1

// Rung SLD_Program#9
// Offset 22
SG SLD_Program.S1

// Rung SLD_Program#10
// Offset 24
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#11
// Offset 32
STRN C1605
JMP SLD_Program.S0

// Rung SLD_Program#12
// Offset 34
STRN X35
OFFDTMR T200 1750 C1651

// Rung SLD_Program#13
// Offset 38
STR C1651
OUT Y30

// Rung SLD_Program#14
// Offset 40
STRGE T200.Acc 1750
FLASHER 500 500 Y899

// Rung SLD_Program#15
// Offset 48
SG SLD_Program.S2

// Rung SLD_Program#16
// Offset 50
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#17
// Offset 58
STRN C1605
JMP SLD_Program.S0

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STR C1200
OUT Y39

// Rung SSC_Program#4
// Offset 12
STR C1201
OUT Y40

// Rung SSC_Program#5
// Offset 14
STR C1202
OUT Y41

// Rung SSC_Program#6
// Offset 16
STR C1215
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y35

// Rung SSC_Program#7
// Offset 32
STR C1216
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y36

// Rung SSC_Program#8
// Offset 48
STR C1217
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#9
// Offset 64
STR C1218
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#10
// Offset 80
STR ST2
ANDPD X47
ANDPDPF
STR ST2
AND CT150.Done
CNT CT150 100

// Rung SSC_Program#11
// Offset 88
STR C1203
JMP SSC_Program.S1

// Rung SSC_Program#12
// Offset 90
SG SSC_Program.S1

// Rung SSC_Program#13
// Offset 92
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#14
// Offset 100
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#15
// Offset 102
STRN X41
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#16
// Offset 118
STRN X40
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y36

// Rung SSC_Program#17
// Offset 134
STR X40
AND X41
JMP SSC_Program.S2

// Rung SSC_Program#18
// Offset 137
SG SSC_Program.S2

// Rung SSC_Program#19
// Offset 139
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#20
// Offset 147
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#21
// Offset 149
STR X44
ANDPDPF
STR ST2
CNT CT150 300

// Rung SSC_Program#22
// Offset 154
STRN CT150.Done
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y35

// Rung SSC_Program#23
// Offset 170
STR X46
STR ST2
CNT CT151 1300

// Rung SSC_Program#24
// Offset 174
STRN CT151.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#25
// Offset 190
STR CT150.Done
AND CT151.Done
JMP SSC_Program.S3

// Rung SSC_Program#26
// Offset 193
SG SSC_Program.S3

// Rung SSC_Program#27
// Offset 195
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#28
// Offset 203
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#29
// Offset 205
STR X46
STR ST2
CNT CT152 300

// Rung SSC_Program#30
// Offset 209
STRN CT152.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// End of Code Block SSC_Program
$PGMEND SSC_Program

// Beginning of Code Block hunt_exp_light
$PRGRM hunt_exp_light

// Rung hunt_exp_light#1
// Offset 0
STR ST2
COPY 0x1 "4 0x0 MC402 Y39 1"

// End of Code Block hunt_exp_light
$PGMEND hunt_exp_light

// Beginning of Code Block HWB_PickUp
$TSK HWB_PickUp

// Rung HWB_PickUp#1
// Offset 0
NOP

// End of Code Block HWB_PickUp
$TSKEND HWB_PickUp

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"C1","copy","",""
"C11","C11_Interlock","","Used to delay logic by one scan"
"C12","C12_Interlock_2","","Used to delay logic by one scan"
"C20","HBW_Has_Pallet","","True when carrying a pallet"
"C51","X_Direction","","True: Left False: Right"
"C52","Z_Direction","","True: Down False: Up"
"C80","Conveyor_Timeout","","Bit high when Conveyor Timeout timer active"
"C90","HBW_XY_PID_EN","","Enables PID control in HBW_Move_XZ"
"C101","HBW_T1_Send","Modbus MC101","Task to deliver a pallet to conveyor"
"C102","HBW_T2_Receive","Modbus MC102","Task to pickup a pallet from conveyor"
"C103","HBW_T3_Reset","Modbus MC103","Reinitialize and home all axises"
"C104","HBW_T4_Manual","Modbus MC104","Switch to manual mode"
"C110","HBW_Move_X_L","Modbus MC110","Move Horizontal Axis towards bay"
"C111","HBW_Move_X_R","Modbus MC111","Move Horizontal Axis towards Conveyor"
"C112","HBW_Move_Y_In","Modbus MC112","Move Cantilever In"
"C113","HBW_Move_Y_Out","Modbus MC113","Move Cantilever Out"
"C114","HBW_Move_Z_Up","Modbus MC114","Move Vertical Axis Up"
"C115","HBW_Move_Z_Down","Modbus MC115","Move Vertical Axis Down"
"C116","HBW_Conveyor_In","Modbus MC116","Move Conveyor In"
"C117","HBW_Conveyor_Out","Modbus MC117","Move Conveyor Out"
"C130","HBW_Status_Ready","Modbus MC130","On when ready for a task"
"C133","HBW_Mov_Conveyor","Modbus MC133","Status Conveyor Moving"
"C134","HBW_Moving_X","Modbus MC134","Status GantryMovingX"
"C135","HBW_Moving_Y","Modbus MC135","Status GantryMovingY"
"C136","HBW_Moving_Z","Modbus MC136","Status GantryMovingZ"
"C138","HBW_Status_Y_Pos","Modbus MC138","Current Y position"
"C141","HBW_Target_Y_Pos","Modbus MC141","Target Y position"
"C150","HBW_MoveComplete","","HBW_Move_XZ completion interlock."
"C180","HBW_Fault","Modbus MC180","Status in Fault State"
"C182","Fault_X_Target","","Active when X target out of range"
"C183","Fault_Z_target","","Active when Z target out of range"
"C400","VGR_T0","",""
"C410","VGR_T1","",""
"C420","VGR_T2","",""
"C430","VGR_T3","",""
"C440","VGR_T4","",""
"C500","VGR_Man_Control","",""
"C799","VGR_RESET","",""
"V105","HBW_Task_X_slot","Modbus MHR105","Value for slot X coord"
"V106","HBW_Task_Y_slot","Modbus MHR106","Value for slot y coord"
"V118","HBW_PWM_Set_X","Modbus MHR118","Set Horizontal Axis PWM Duty Cycle %"
"V119","HBW_PWM_Set_Y","Modbus MHR119","Set Cantilever Axis PWM Duty Cycle %"
"V120","HBW_PWM_Set_Z","Modbus MHR120","Set Vertical Axis PWM Duty cycle %"
"V131","HBW_Cur_Progress","Modbus MHR131","0 to 100 percent job completion"
"V132","HBW_Cur_Stage","Modbus MHR132","Current stage number"
"V137","HBW_Status_X_Pos","Modbus MHR137","Current X encoder position"
"V139","HBW_Status_Z_Pos","Modbus MHR139","Current Z encoder position"
"V140","HBW_Target_X_Pos","Modbus MHR140","Target X encoder position"
"V142","HBW_Target_Z_Pos","Modbus MHR142","Target Z encoder position"
"V181","HBW_Fault_code","Modbus MHR181","Current Fault code"
"V801","VGR_Fault_Code","",""
"N810","VGR_Rot_Target","",""
"N811","VGR_X_Target","",""
"N812","VGR_Y_Target","",""
"D0","MC","",""
"D1","Feeder_Extend","",""
"D140","X_Start_Position","","Distance to target"
"D142","Y_Start_Position","","Distance to target"
"D143","HBW_PWM_Cur_X","","PWM value for X for XZ movement task"
"D144","HBW_PWM_Cur_Z","","PWM value for Z for XZ movement task"
"T3","T_HBW_S6","",""
"T4","T_Conveyor_Timer","","Used to detect conveyor faults"
"MPO_Program.S2","Vaccum_MO","",""
"MPO_Program.S3","Vaccum","",""
"MPO_Program.S4","Vacumm_MO","",""
"MPO_Program.S5","Vaccum_Load","",""
"US0","_CP_Strogram_A","","CP_State_Program"
"US1","_VGR_Movement","","VGR_Movement"
"US2","_SSC_Check_InOut","","SSC_Check_InOut"
"UB0","_VGR_MisScan_A","","VGR_Movement.Done ThisScan"
#END

