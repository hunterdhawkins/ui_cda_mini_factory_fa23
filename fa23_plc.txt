// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\DLChe\ui_cda_mini_factory_fa23\fa23_plc.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
cc3dbd30a30a7a43b1ab76d7a4a657d8b6bf6138983557d9d451ad86d1902a926a2df0c30ed7eade
e5545c1e5ab67ffa5588e0c33324921a35328317fb41ca3d7ada3a8c3697cf3076803cd2e6c6de2c
6c14953bdf75b1bf4814ed5eb46c2a4a7db917f65508a287bdb03b8777012344b44c805c5b379285
77d0db6d90d4b6172d7fccc53662c3f9c582580f3b398c1726e8b525d3c8a8cbb5dcebfee3a0d2c4
ac56abd63b6ff6a3c1357ce3e9ed58a32e704418b3d678da4fa990ff9d6b0dd6eb6a18ba27ceff94
856b0c44c8e881aeda82a128f277c59ef20bc2310a56fe9463074299e5166173a9e2ab5e4eb8b0bf
1df29ddd5e3d6ee8df40c97bf124fe2676a723e3dc68f17c57a89c449a20f4a6903fc1d72d5898f6
e7ceca8a876651f4d78e7bc48e93eb4efadaf036a442b802830a9aa959ddbfa1eb33c9b692966ded
b9272ce3e7c563993a4f6a8d40d89e998175bcedca6948c2aaa392eae2d891c57823f91b09c57e62
c7568a6fa456a0f3f4f1e3744d385878ecaec96aa915355b15002e7bfe5b1036520dd37522149465
7929b0234b1e0e557a1e7ccadf094eafa55c1e0144c0885cecb14a30c966b58a6fb1d88802609bb3
8dde816f9c8ce4045b1e83dcde63ea8601119fb59091b3d0b7d1995d0ceebc7b1f76bbf5c2f8548d
ee00f42fdf504dc62e826797b43f991186ead63a1cef2fce2f243afcba9521f00f366213f6db33f1
4de8bd7fbfbd19a36c5093ce1b005bb210e2fecb42ccd6a3fa4b02fcb7afccadc7d8f2bacc79d4d0
45b2b274e63f9053b021b68c8aa8cac002d26ed0b9b4003aaf4888710381ed9cc3cfe05643413824
edae11686fe8653aa11925273b121fafd2228afde656fbfd54452256378186e2dc33974eee60bb28
25d5774fb73078f2db0cce2292ad1f9a3158e9f6a18ef3a25b409c766cb59179c9d4b67c8664e29e
e18f9d5810c9efe8ea7b9573a82d1fea9de2d7687def9aca644bdd227dd2547b50f91b6dd07310a5
fe0f0d8789871086f21927b0673acc3881fc79c4e29e4fc6e31bfab2fdf01497485c6f9e4be1c00c
ffca33b8a27b04131f79c211a14c284fd28db164baf0e733e32417cecc2cf6803f7102144414ae3b
fd1f54557bc0b1cdab8cdec88d8ebdfed93aa8daf754b8894a6c1fe66556b09acfe448fadfa4de3b
26eb822e855fab75ee4c05902fca5f9618104e6bee2267dde7d17b3d59cb750441c0fbe6d28598c2
a47db9be26a1102b73bc0499b8d715816bdd62660efd4f64150dabe801ed93cc19bea5bf0dc161d4
4e0a340777de6bc1fb9fe34c53f2a4b19048f8240be69485185ae38f6c6a0d5080adad5f026c5c87
d6641a5748599e259ae06e1ef7fed2445e93f13db2049f201d8754fbc1f478c86552fc045a2e5a59
8cd639894922e32d6e307b2edaf8552e845a5f4e88ac956d78059b22c6aef298c148861efe7c34dd
3bc84f0c94f9469cd6c9b48f93ccc595e7880af1c42c410ddf1bc6819bcd59aad798b66ea1edbb5e
48c569ef6653b3fcc94012e77b474712e3c0239d66f55bb48ab16a0411d7c1f7a5ab5073e75bd86d
9c99cf4ac4de483a09d6910c3a8d3f85109bfca3d580b358fcfd7937350a921c7db6b7be6f352fc9
172a5df9e18149fea3327a10bda35b74eb9b13439768ce4fc8860d5fafe77f725fd35fc616cd39fc
fa2aee07cabb688b389150e4219f526441415d41b274747e230b6825e4757f1339fbe9e130c03bf0
63aed58d6846604ffbed0005f1285f86bbd1ee854a2b0fef03383f299a8403c25750ef74be133099
61b5dc76dd9916b1b48d1114fea2f07fb848874fcc834abc43b36327a80f0a34a8ad471b49c6871c
465b9a4509967589c66e6e95a6c945797cf9659a43d5ae897a94c366d5bc97b328a87671bbea8c17
ea14cdebb34e38d21e6d2d183fac4d887ff2d67f2741f54e3f6cc3678111f77ce560df7ba0161239
e26a3ff389ac824d450fba8834fe3cc0c22be3566e01b4beb37df3ae6fdda1a60d361214a3fec76d
17626434229cf2308f11a0bfa52b79bf9afeeaf8bb0dfa6ded54a718daa464c05df7aed6e80f1ad2
5a09d7a6b4f4d922925926defe8a71cc317369df402a8dd57e47f7a3cb6f2d0c434b11a9b6c0e36c
b9dc7bb17d8ac96af551e02870ecd194174390e648544b7c630313e4d697d1e89f98dbbeabceaeeb
384e8388eea34aafd99d4f0a986ab1a392588dcc0c2856b19d38fbc97c5e2d4ff753b0a5499a2d5f
adc00bdfa5b871f0f6a53aff0ac39c47038f37366ce56015802fcdcde122e93aa0d6bc29ce0cb09c
48e31c849889bdff2461507b82c3e1e258593f81e24a53a8c1d7b8d41d30108c0f85c69494e2df80
73827487f235b693bb37d002251b2bf36a30b8b5c2977695fef367ac1f1f69029f6a9c56e87df584
0bc4295bd7a2e4b6e810115db757bc4de172c6f59ecb1eef784a07065c55235d593a289900b119e1
b9291543d30ced246dee26dabf7d87ef0c967713793b84e5bf0606eefb2346cce5e56d6709bee801
f4008c7ccfb87ffbfe76f959879fe522305ceb60a5257272f7e8c6e899d438b74c766f5079ac6e64
8db5ec0334bfb6d0f1dda92ad27dbbdfd500b6b33da12e42f2ae928ca493e08d33b6fe76faa4e6aa
1cc71221aaa2224e2206235cce667e35b354c70fd44049abe1d3006dac8dd99a30c90bb7c78574a1
f5f33a778c2744be606f20081259f3f49a8742adc29093c5eb4a43922ef360df6edcc15ace8d6a3d
452a25c418d2e55c45f032667a1fa198654d1e54ce6ef5155b90cd3bdda12cd44cc56c8b31151372
3e4bb260871c37fd5c7920eb214e4e61558ba5cc36055d2e34b50e9fc6068ad9fb98c97bd545cf63
b1cbb7721f7b5dff415ee5e2d56fcdb0b8ada4749f43531bcb6f0342641f87057c66e88b2ea6a650
a455c2b704b6f9f2a239312985379493a9416b26f6bd2423a31458853f038fd6f92635c470d260e1
2763f463dcc70c94cffa7c16dc72db10840c4d683a9b7acde9633343ecd1e308fa47e564dfc8fdf6
c4e2e336ffbfef08cf5449cfe9db9da72709357e4991cbadc78881f6ba69896de5b9fb9cd8c22446
ef02efcd73bd2ab4593a920418388d21e51cc7a9127b692e9dbd34c92272b765d44420c9d0621c55
f20e0278483d130499fe97dcc70324c69c514ebd90eb67a16c2f7a7bae81a3ec38824567669714a3
9149833aa7d6bfefff7e82ffbafe94e631367c0309b444599f00e84213179a4d05ee0640484b2430
55cf850dfbee1b51f51e4bfa00683be5a4cc85ffa32a1546667fe7408e36aa15c99e33416b79dbeb
9e8b38d56d13e6b5236d7fc6e37153e2667dee47d6536a25e6a567331301f63edabc86a2fa1a65d2
c518a0d06c31cab00b3332bf5bb00acab68602d2f51da0bdb67e16b147ebb96de2f1ea7b648021b2
b0b8f67466d2821bd7fbd1b90dc7487b95ece5acd60a7db379e48f213b8b7da541eb4b650d675ac4
0164a48b257837b58b3f7ff899c059cb84bed9d00ed6b37705fb39d5fbb3e582d1aecdc7d850861c
b374459d27e7d3e5b3dea64b9b5609142f042e12a64cffa6e346bc555b448c58f80a63408e7d8c28
f131ee217e9318f54203e935333d67eb469e21e87f559463d798cd465ba11f6889fe20ba4de76cb4
6306c2b05694870fad1d5c4f9b67b4fd8ecfbbe5a5a8a27d447d645aea7c3735e8e1d0c967f38946
682076613221d979fdae79de167b2412be96a063aa52b39dec2ce42363ccd2688788c81829b11fd9
6d45656002fa41297e9b50b183b7446e5a9410f54504ee32398ff89e0cffe54e85204a39782c7252
5f558a73490088c6e39a95a0aec3ff7dbba0ada48639f7574e005346117c147b8513b3f7152e4a75
c55318164bb67dabcf67fcc79a892f6ba0a35086512d21e80515b0453683b8fc692702fbebb6701d
21a369b3cba129f858c90c438f0cb03bd5fbf6faf02fd6ee277d679f3a2d70f36bc8df245e4bc361
d160f2e016b72ca1113df03ff6de53a27e04872722cddd7d88fb2e12383add42822461fcdf9e3605
47da91400f4661c3b4fb9113acf712c155a4ab86d3418c483734dd587057bfef8a98fe593eac5f45
ee259df784c591cf4bdd7d395b65a1f5ef17b2bbe6f865a3f331558258914ca9c66df1e0a3bf8ad1
5f47068faa853c838b364adad0b332f0b0f70428db51121ff9c7737fdc76efc88fd1c324bad58a73
8b559959e8633b8ce3e665f6548121573c03f120543596bcb7cb1918f134ad0009c7dba1c9bfda47
ca64426dd3fe2427c959cf108ef2a454385d71254fb2120bf1a8e09b356bdd833678e1ad91cff3e3
1b7325fae995e0eaf43ce040162a185bebf022309d43695fd157ff779fc722333d3817102e650c12
3e00aaf7b8baa2a52ff00930792ec84787dd38348935bc05131df6dcaff4d73559b8a73ff0ca6d66
78fc99592bca608dc518ffa837724cb44aeb19d4e7c9d426187cf5bca346e6dad3ba375f23a1e7ff
42e88ab4c2fd2f43dcd3ead20a528b1c9ad483c6de41cd7252037a1248b84839704cfac01b02cab1
1247469245ede9f1679a0602b74c7002acfe6c57634e52da5f9b6176b1a654ec9c50d6d4e9e984c6
a5b26f74f11fc7587c50c77ea53abc0a9fcaa545968228634c56f87e83d3b6a55514c39fa23b6502
e40128097b951e5dd7cbfc051f928794ddd17061d227d1021471e2cc88b5661cfa2fb32d7a48bca9
4b79ca3f2928effb97c0e835de4557d96f5e8a4214991f648bd6ffe2bcb9f7b29300c3d794d0d2a1
dce6b151d415eb15c35d3eb230887db482c16233097499a1f6ee1e0cba51a5cef1eb04dda6079ab1
08fe1976534e61e10bc9a4a78b16b66999509af066d40a61094e79023af12db8c701de7378269982
cf6c578241787de257363a945bb4243f086de5152d9a34a05c12a60c5684b4d51b64fcaf4564259a
5f8ce1fbc1814426b623ec39495c1f3f9308e3c2833aff2c41a0499a8194d70a304f942212176675
0a5ee3b20fb3e844858ef04f6b9f8de629c96c0370e37fe431dc8d9b87e91ad266c26667e2df3fcd
6a23ad454ea42049b9df1ac73623dff885f0afdddc125c277ff7d8f0cdbbbba34f2dd48872f46634
97d2d73c179eaa14117b4e4e818c0cd1d5ccb281e88a4d3c04699da48e7384bc885cc62a977bf9e6
374d6e154a6411cb1751cea5e279d5f272de2ea3aa6e229d28025fbd3b93145c15a8041d26fbe732
4a25b5f056652152916b244d1d11172adb84b322b43c8f75a9b0d0d7cabc9ebff2669aacb9336d4e
4e448f1e2b06f4232362920aea83521a3e26a84d8832327d469e1066e695a89aa69738194c1f0662
21c4180f5234a82f3d62ae7f518564f4d0069075180ea12c061902e7203888bfa98af1df01b01d5e
c82543f576e51f08788fc75060415542e88ad659ba3c85cda54878eace48d9ea2f83c55ebef3e8f1
ddec7b0982c56a9649a552aabb4be4807e05ee335233a62d4b30e8da4af10bf101e603fe26b7142c
5c910e66e64dc9d7a093dd6b3f50438c22b349bfd67cf9a9c0301d35471edd8dee3a322463533715
aa97341decdfe49dde40f1960d75435bf76001d87aafcb1ac03cc8ec03dc29dcbb719022a55d755a
d7e2c28c6f9ff748a859fd1b8a9d2ef6d6c0615fb027e07b7e9d3348fa395150b1accb68f859d4fd
5a3f2d9f7def77949db74fd81c20f7c3e7efb88a7196a522144108e197526467c6e342ff49dfb6d1
bc1dd88e58bcfebc3eae682917c59191a271ff71529050535e69c3a618234a51ff9a9b1783b65aa7
0c1d8870ca95a1c7e674b645e439dafa68a139a85c84d80660b5f7d91dd8bff493d158674f07889b
20a33f7743fe61f3a3831e9b71f901f3b97b2d7c9a28d6aff3c8aeaa3f84cfb44d2be0b162dcfa43
72212e183efa0a41e093df918a95f0bf3072c4118ab388f176611ae190a18a8081b1bdf15e16ea44
3a8517854a8db69abcd9bc8a106e13ece6f8db2006f5e719c73e61db9b7743687b2ef20b04f9a6b6
99be6332edd52de7dd1bf6c89c86f2bc8b06d959a04d3de513b87f719af0d977c2ed963b97ebc1a6
307c660db1dee0703c0e02ac391e6ec4e5d6570cc66d707125d3e10a2e9ca48325d1dd96adf506fa
a418a32f93ec2d72e0f971389f8feb00a32025476b2b41e4f4705f37da0472ec7d832d6d88f41aab
7a50b75671c547a498f5f4deecade1df9f56b50467b4e20eceaca2f875f01ccc4d8d9eecd6ea2c68
3e28cc6699efdbb05961ba02ad243c83530b84ba8b5c40db5fcf2fb27d559374f268dd038cf656b0
290bd63ee66b5e7111ec811231cb8557af864bdffacfa1e49f5cdcdb4b52643ec1c4eaa96a0dd2f5
43a0b7d0fefb4c8c66aa6b1bf21ba3ebaf7bbdd960757b2c03b57b2b0ac99cb2d2371b1c07312337
52db65f790d48d58d318e61e56c431e303d641daf92754bb5a0ed743d65c267191a7faea5c8ab181
85e2f444337ca8420b51905d1d30a72e58213c66d193c3cd490715731ef88900ed80fec13fc46a78
00895a48e4a4348b0aea2e1991ce37c7b8cf59042361e3269253d84975450ec6b40b9e5eb3f372cd
7789273165e06c38f185960a7de82127de57244b0ee78c0db4e38585e06558ca1ec21eb1632769e4
4e8e6107f7a1548af04b86975e17829dc50c61ed65025b46c4a9d3714b0f3117c4bca99caa820d80
861ce7a0b21e3e7a15c8146782e058369085e84a1a86730576ce7ffca0f38055932335e5764e6f03
2f9665cdbb14982eef78e3c05cfeb8ab4513f211e10bc707ddc8e8a9b316d46f08240dbc650cd80c
6b7b7b66f0f5a6733ea4ab27ff7008bcc6ed160d3b5df322b02b08ecfd3b00eeb89979894376d844
e1a346f4c267554ddb24a8b6978e2efcf4c0c1c671b1a5cd2882a84575afcff9461f7d20915ce713
6f70da1178793c7a2876f6472b871e261770db8dcc54d1259d188b6140e7cc37c8f7cf9e30556014
98457e73eb9392fd1b727b7d3ebd2fdd6039b2fa392c203fa0c4efc7cb32988be4517f4fcd6448de
a8d74697522b5d9bd3aece69dbe86eb50693064524ab1846befadc76d82649baaa8e1f7849f603fb
0b2c71ea6407d96043598d636834c1cbd9c0b84399a615ab58aaff4536a287795de04c2e07ca5111
e67a0a1cf8282efed5dd3b2e2007c8554624af53a4b1e2a27f60ebd35e95b8b31f917e5d37645649
e77b8f6d9cdb66e825ee9ac06cbc13bde9aa412e6579c70421a2863f09e36e5301729b4abb1c390c
9a3fd530af309628c6ebe7e529eb0a7ed596167f0770b74ad5ba2dad29de12f5639f085b93936fd0
1fcabdfe04c0b12678a835102e02bfd1bf2e821fe4a36d179c9ac8a5f1ed439ffd860bc978ee25da
dd0c35dda091718651d2c0e1e18eb0348602e6b104508731292b72c981606817e0c239d63c6935b2
cf976b47c360e3788166cab0ce6a054586cc646adc67b548049783008326b93d54ece5a2e8a8dd02
7dfa361fab36a93b00d71d37b05e1b604f55259ad60ab214d9ffe263a969656fab42cd2fcd397905
06cfa87f841d3228ff5ec4bedac87f1b9076ba5cc48dd4405bf65c7d8d782db2d9fd5bc752928da1
98e8298c74fbfa45626590d90bd2bf4b23cf6486cfd44504a7e1b5446b249a35c71d68b800c3bb8d
3aa26d7c451f231bf5491b47c26b3920c0937a4c2fe8b9bdfc106cefc373731471db8945546d370b
33dde93d5bbc63dd6cf6ce4797d3a8a16d9e2c59cf2db0101544d33f9868425107136edfe30afaa9
9a80609cf8588053c4532a5e261a5faef72580c2e02fd0b71a86ac55e8988e66e19bd6ef7d8edb28
0260451b08ce1758a50fc4eb1cf840fb11c4b1723c7388c185592307d155034a0fcd9a58e5b1639e
b4a55ee7f896014fcbf2843b009a331a2527303f4016228fee680eb6d8e048dc9948f54a27f4e602
a86dd28f8a96e7c8e721de27481d87ac4ddd327d65346c09f9ea8697fbf7aba4bcc67b02559c5e54
19f8a8297331d0d26e186ea51c3d98792cf083fb7b3b5ade4c00e2a0f6329957a1351f3a1b3c3a03
6019392ff894bd74fe10d3243b43f69dc2a201940951c82d20e6797a653e053d5fe18c5cfb3c4a20
b4e1780125f44b9fb59cea46421b0c4ff27c90ba52e746cce8c8c9fc8ba0a575685c93faf7dbb8ad
f3fae479869f7b75efd1e61829d23aa8af601d1bc9ae4063b593ad092d38c22adab86dbfdff668cf
0616ab0eadedbfef340a2e1bfa63c131396c8c75960465165f04e33da8625a14bfe8c32a2e5c6bf1
8a66d78ccf7feda6fa7f3dd7d887f6ce2b215bdf6283ab3ea79b243548db8c7776f39a90bad80ea5
db2595c06e9f04076865ced1bbdb7ba4dda84922eb9b47d2aa8b881095dfa10e040e938018e53d1c
4a28621733a2446bd48323c62d5ae3e3d9f71cd05221a510f50cf2b0bc7d70a48a441d57e131f406
d503b0c16cb437a539b4f867869a6edef50c28cbe20daa1e9c29efb592c4c0ae800ed60ec2f48643
d6a9fbbce605664b11088a8434cf46009d011be1719e8148ef5489413f26b1ee8a2f1ac45bde6745
380787c9e4084ec7d1d6c62d7a55e892a23749beec2f19a889aba5c9a1c4fc618e4ea372712ca99f
7a28f0bf36405b5930a494dc32f416d7123a90a1f2106e31d00440535d37d7fff9c9954fee0bb932
de48b5655350fd20aaa9e8b6dacf7af1770c73d2ae67a99ac39897115e7e52baabd97b4c32eb73b7
7d8f2302a227cf77299409c5d7f8fbd01ee85428ca4448af5d4471eee916fd9e43d2e6ea575097c6
6001660a359721da3341891d92c61b45da6ca91749d02003998e974a69425b36ce7b8e9effc0b182
ac1fbf628e68717859f17699c64d10c34715bf90b6f6bd09adb8853ccb6c8bb45a679daa59623a0e
d3423dc993312b941ffb2009c38b8df4630b1136568f2228bd63c0afc638561bbbb2738624006e0c
10e8275f69df19d1d99d45cc78c0125edd1cd0e0c5082fdc0711d197385ee94d6dbed8c15e50216c
c66f7eec365727d63fe6fb74c655ff4b5044eacbf9dc6322456d3fe1e92f58b7315baccd9e31041a
1e9a16f539837374aefcbddfaac484b378aa72b3a4cddd651ca5906afdd16c1059e8d367b90774bf
f14d79a17f7516226339c2788dc888f3c867bbc42919da361e7735605a85a2a457daefb143e33ec2
eb83af6a8140c6a9c5362627e4f5fe2bc2f91ce4fa3ccc8c0676e0978698c8c188827a9d6c1eec33
da434d1894c2ccb7578f8e386bb02a00e76f5d4239533c4dc09ada5ca72626fa75291da1ba253828
7feaa5f14c2eb0b696d489425e4bd73fe2de31629d9223977589cab0223a7d203163b099d78aa935
f2831477a01e6e0f55df5dde071a3b421e0ce1832a913b8eda25b3abe1d94a183237157e42c68191
707a8fca4bd6680f55b4ebf2db93b7d04805dc9e5cf7b7e740975cc1c5d6a750badc7a0bffc8dc30
ac0d5fb301ae6beb3497bb44bd389aa62898d95513d039bc8e8bc145dd1b4cda618d8e7b7ad1d9e2
488455444772c0df27dc6c680a044050ba625930dc0c54daa4507c4ec84aa46859674235408d8960
c62c9799bb05015cd744fef7fd6b82d99dddbd4ba8f8109a7cada9c2d86c9c4dee5f76be8a2a6622
9f5283afc9512a84b08e45856cccbd62f68c1ff126f407f3b3ca498d4f2e49b3fb69186fcd7cd1ab
c4c682ba11d83550211ee6e8e82af24ec4a7358135e937ba17266a5e598e7260d48fba763ca0ce0d
5bf7c9cb8c4beb6803642b37382665f9f073837034f415f95771db4141843f8238a23c109bb92b38
7f3409d20ccb11403ad77242f5a0e183e77c2640deb61fac496256ff6c24d1dc1fcb05ae70eafa3e
3a58de00d950d4b228c43c560a27b6ff665ca7403fdad1a52e91c6dd8e2c5858f2be9b51d369a473
858a2064276f35ad9c438e16256d9ed3960fe21363f77cae789aafdc7437bbaf91adf6b34bd438a0
27a654c99e21dd681275f0bd267f1eb0ab0933e6925d456a094123ae4d2e0375db682055123055f9
9736eb0a6746b1cf7865c7073818f7c189d2e9e8b16a00cb746f68b94d78f34e34a7d56b9b0c58ff
27282e4983e7419517f59aa5194c6c6cd19108af7cbb28c0c522f3be9f05d575f1c99196b370be58
60bfa4e40e9fea453bb0f3c537b6ef6a5c4c253e23c714c323edce17922c5ba42d48cbbd08bdc9e5
91eb7435f551f0b483ee74eefb8612b2869b9e544fece4db8d74cbb1f9947fae3a785c446b6fb933
13302a4065febfab36e6ee9efb2d6daff9afa1008624d000b656d02e12d8598f1e55416f8e7a26de
6eca46fbce7fde0c0af9bb5d42f2f29a9780b1a16628a4a0a47e2bfa41211e216c4adc6a94466c55
880d325f04a858dbbef7fdfb664fc0c3f81cb8031e87fcda1d2f7d52f45c30d177efb6898de61248
c270f701182e572fb56def7b7b66d75c27bd2d3d304a5bdc97e6ebbefe7e20a1372bcca1723d18d2
fb4f85928d7c3482b6544e7f382ec56adee39dcd28926d5ad7dd45009ea5ce6b0564b8af6ecfe2fd
4a19007fe9f807383d7c80f16fca9be55892ada938b9eaf9e38c018843960630512217d47f452fb4
dedebe1589e9614a18444a98717c741f8472b5f1787781a653229c803021dc7aae0c156022804db9
c4ea26fe3cb9c78694138fd4f7616faeeb3e7a091986773fe2cf166baa85b4613a4898e3fe10970c
e5e736ca3420d95e54740ba8b9b7333ba7707e4dca7f3b1940a99b55a2d46834ddd25fc46751a55c
9b6547f813827385fb1de93153e34328e222caa6fbef6b06f303e33ebe7520c616dc8a957748162c
521a5194f91f6a4a30bcd5d89a0e74ba1ebd504eb8a91a9e786cb83a824dfee6d50867978d55b70b
abd62b1ab3ab1666c5f4db7aab192c5084a08a8e342cc3afb784f228e734400ca92119d59171a244
c27fb99082d93a9ca021884b03b6bf3d129c29fd3f71b6142079d9dfee4cfa87fcee3614c601e204
c45b6161676ae153aa49d7b4dfa5b01463b038767d6656b3ca42b22c66c4304737ee4dd70b5ce903
aef2f9b4e2f71941901795dcf275a73d1d7b6f45debad6b602752e664333f7808ca30c5b796efe8c
604ef848894b8243d731c735deb06f8a79f168eacaa2f048fe96b3892037f29289ba62cf3a820007
1431ca1a703aa36ae0f95ac9d8259f71d6d3df91045cfb29d9a5cf5d3fe2ffd60feefef6a7e9c245
ad2e89f9263f4f237632bd9710bde96b6fdc18587c98caa6524f4c7f872fa6a08146da3410cb13ea
1872488f2b9f5899b2ec9a9e3c774bcf6968c9cae86efc641e5dd1630e079570444e67114680fca7
cb525699243b445ee21932025b5ca98bc3c9ee9e979054ee1b389606d3d25658a1c87521fe66e370
f4cae043399d0de1c35741b63568e3ea9878f5043c74393566e7cd269b537e169c56e06390992f1d
ae733b8349ff5a32db0007ea4e00eae73d742123b38f601d20435fc62fc8fd166c196952335cfb91
46df472d761bbecbcb33ab658e83941c70ea1d628867e63b929378769e88d04683707f56ccef57f8
c5e6aa6f7a51fa98477baa84fb6816ab947012b650fc4ec6e2b9387c46b690724154327659b64390
f7b5edcadbf46c753d9e6d54a3b53838d3bb3c3fc1db82714e4ee44b3c85c23505d698eabd238c4f
0cc2c92125fc133a4cc08f803547e593202a603b3a743a6889282d0806ea693b77c0a3c875c19382
7a72d91c7baa866eeeb3de9fdf5e0bfc61c1deb1543ee28c67faa698859645a29008de5ea1a0e869
b3e75d61033bff129d741926c76c076f92dd024cac4b54140be05e607abaeaaf46746eb09af7ff33
d4eb13bfca087eabb78b8f5114715de25e028eb83adea5a02f46f6a23b01f8013fed8ac25c675400
f98d7aa331ca0dbb4ef65382946428cc1570dc6c882a046c2807d71dff04e5ef8bec95931cb89e99
40a94ce4895a24a350551566c43c1840501173256c2f11a3bb5ecce0626779ef4f27a726b2a8e6ea
0ee485be75352848730e26195c58c6c45551bf553170c85f53983f49705cad99b6b978893a171f49
dc3e094ef1179e67cc297c3a19115634c4cc3311c8f92d87615773b8dd666ac7c217ef1386d894f9
e9a84f2df2ead08720ce986ccca596e9440a0aa72986bf1ca3ac5cf979da77010d2f435155b0c59c
ead6eef6b61fe95882da1ce07ea418bdd7db889f534beee467d2e6ab7521912048a805632a4b2e30
a91536366aad7f47262bc3c356635ebc268568a8da4a4be7b7d8303b27284468037c4c6d108a9b99
1c4fa2b1a05fedf010bd2bf094a9eff81e24c8885320ab4832e8394b71b92f82855c331234e07248
162482c53b54fdf4e73a1008df648aa952bc5144841673a68cebf69fa80f30040fb8659e4823a7e2
14011210c86dd0503751b74ab4054f060227b7bea990a22bfcf00040d1d2ad3d57e25d9dd0cfb2bf
d8c25ec27a3bebe6738a12458a6a245ada6bb1f111dadf1879643b877b7e4b7177773cdce3e4af4a
0e2d2a059a933049b9e4acc3eee77e236bcea11370cced9018253b1afdea91a9ac622c92e1c5c1c4
784d1aa8947f67c3875cea6fc9c8a6dcb5633bf5f69c12f9e3f7fd93adda1c5997bc5620b4b62bc5
bf5b285910f9e638dc35d9d16c4801281dec1b493e81740fef2b225166e5c990f6545b6e866504e5
68f40aab271c2246b030049b6ad4f0a561ab4184b365a2c527b13604c520e56386768386ea8d232e
564631241668c290b96061982676729e5e21c1cd8d8c7c8e2f9c77f144f66e38f10625989083a89b
e01b7bf99c38e6357d63190c554e7e3ffba3c3af358adf584f6a5f86b5b4e7236ff5693d65cca65f
b8e929d67fd5042967057e70020795270c3fb725ee6037c9b93e51f6246b8da4038f7cbde08b07d2
c73100b39296ccebcc21dbf331a9881d9b71b8de60ac9d54e8dc35054fd32d92bc21e1f70d1bf1be
5bebc460f083b78787bedf9689fb46630fc16cebec56b4a4c56251bbb6548a437dcebb518324fc51
9e9bcbfb05eaa2c5e8c8af3ed8147ab2acb90d8f2941306939f1b547d16e6cac641bc9cfab1f40aa
72998be2c3edea80f143defcf9b21c285f4e09bdbbc17de84e687173129bdfe0314984ad63fd6496
f2a40edf168abff566b03f5b12094bf64b5f0e8093ec90cf5382cbc6264c3854bee140d8f715e592
fd2666dfa6fc8244cfbedef009ff9af0dfb877f0b006da7740a0d03320deda58c1097bc76216080a
a382f6879a4cde36a90c42b5a79ebde46da1dea1d2aac276c57c3657dc494740bb950ffeebb22012
e5e14d0295bba0ddf55c8679ce7b1ca81a7f8950a3af8bfdad878d6aa7f7041b0c99cde03e27c19a
043970c5e1b45db51321a3c9a23f3d66b9d1e647c045363f42afded8ec727635c47998b82e59d1e4
09effa876f106979d90d80d6f93a38820b4f36fa211f8a0c5f48e3e281e02ad863a9b064edb19c0e
4533599c8a7d8f1eab2b79ec52256e6c8b75d96e843eba5460a426d95d0ee628d55e2cfd28865451
453d66556f96cb9ecd4d459f421f8bb47724170f93eadbd6d2daa8e305a3de2a2c611922cdfda7c8
464be5edd5beef8bf50401d1677fae5f4ce7ab64c062fb36aeec58b9b158cb2fcc99b08aac16e530
54c72cadd005fde3d194b50aeb8a043849fe85484d4d67a77083eeb5fa93878e293ca5b8ef38f29d
060dbf76948788ec27c14167f3a3f34ae13c7d564cc4f277bda2b0e8c9173aeb2d48cbead475ccc0
99d05cd768a16f9a5497b2ed05a78c8bacbac146be63d49a3ff028217792056abe306eabc34568a6
bcd6c9390df82755d336b7b8131db9fffec39c227587be0de29bfdd15c40fa0812c82f
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 SSC_Copy_State <Virtual>  0
 HBW_Pick TASK  0 -1
 HBW_Copy_State <Virtual>  0
 PID_10 PID  0
 PID_11 PID  0
 hunt_exp_light PROGRAM  0 -1
 HBW_Home <Virtual>  0
 HBW_Pick_Sto <Virtual>  0
 test TASK  0 -1
 HBW_Pickup_ST PROGRAM  0 -1
 HWB_Extend_Arm <Virtual>  0
 HBW_Retract_Arm <Virtual>  0
 HWB_PickUp TASK  0 -1
 HBW_HTO1POS <Virtual>  0
 HBW_Left_1Block <Virtual>  0
 HBW_HomeTo2_Col <Virtual>  0
 HWB_HomeTo3_Col <Virtual>  0
 HWB_HomeTo2_Row <Virtual>  0
 HWB_HomeTo3_Row <Virtual>  0
 HWB_HomeTo1_Col <Virtual>  0
 HBW_move_left_1 <Virtual>  0
 HWB_Home_to_11 <Virtual>  0
 HWB_11_DropOff <Virtual>  0
 HBW_Pickup <Virtual>  0
 HBW_PickUp_R1 <Virtual>  0
 HBW_Send_VGR <Virtual>  0
 HBW_PickUp_VGR <Virtual>  0
 HBW_Return_VGR <Virtual>  0
 HBW_MotorsOff <Virtual>  0
 HBW_ConvTo11 <Virtual>  0
 HBW_Return_Top <Virtual>  0
 HBW_MV_11_12 <Virtual>  0
 HBW_Conv_12 <Virtual>  0
 HBW_Conv_12_Lat <Virtual>  0
 HBW_RETRACT_13 <Virtual>  0
 HBW_Retract_23 <Virtual>  0
 HBW_Conv13_Lat <Virtual>  0
 HBW_Conv_2Row <Virtual>  0
 HBW_PickUp_R2 <Virtual>  0
 HBW_Conv11_Lat <Virtual>  0
 HBW_Retract_12 <Virtual>  0
 HBW_Shift_C1C2 <Virtual>  0
 HBW_Move_R1_R2 <Virtual>  0
 HBW_Retract_22 <Virtual>  0
 HBW_Retract_21 <Virtual>  0
 HBW_Retract_31 <Virtual>  0
 HBW_Move_R2_R3 <Virtual>  0
 HBW_PickUp_R3 <Virtual>  0
 HBW_Conv_3Row <Virtual>  0
 HBW_Retract_32 <Virtual>  0
 HBW_Retract_33 <Virtual>  0
 HBW_Retract_Done PROGRAM  0 -1
 HBW_Retract_DN <Virtual>  0
 oneOperation <Virtual>  0
 HBW_Check1Puck <Virtual>  0
 HBW_OneTime_R1 <Virtual>  0
 HBW_OneTime_R2 <Virtual>  0
 HBW_OneTime_R3 <Virtual>  0
 HBW_OneTime_C1 <Virtual>  0
 HBW_OneTime_C2 <Virtual>  0
 HBW_OneTime_C3 <Virtual>  0
 HBW_OneDropR3 <Virtual>  0
 HBW_OneDropR2 <Virtual>  0
 HBW_OneDropR1 <Virtual>  0
 VGR_Done <Virtual>  0
#END

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"VGR Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC410 C410 1 0x0 MC409 C409 1 0x0 MC412 Y28 1 0x0 MC412 MC450 1 0x0 MC411 C411 1 0x0 MC408 C408 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC413 Y29 1 0x0 MC413 MC451 1 0x0 X27 MI200 1 0x0 X26 MI454 1 0x0 X25 MI453 1 0x0 MC452 C452 1"

// Rung VGR_Copy_State#2
// Offset 33
NOP

// Rung VGR_Copy_State#3
// Offset 34
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
STR ST1
OUT Y29

// Rung VGR_Suction#2
// Offset 2
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC800 Y41 1 0x0 Y41 MI801 1 0x0 MC802 Y43 1 0x0 Y43 MI803 1 0x0 MC804 C804 1 0x0 MC805 C805 1 0x0 MC806 Y44 1 0x0 MC807 Y20 1 0x0 MC808 C811 1 0x0 MC809 C809 1 0x0 MC810 C810 1 0x0 MC812 C812 1 0x0 MC813 C813 1 0x0 MC814 C814 1 0x0 MC816 Y45 1 0x0 MC817 Y46 1 0x0 MC818 Y21 1 0x0 MC819 Y20 1 0x0 MC820 Y44 1 0x0 MC822 Y52 1"

// Rung MPO_Copy_State#2
// Offset 45
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC800 C1600 1 0x0 MC801 C1601 1 0x0 MC802 C1602 1 0x0 MC803 C1603 1 0x0 MC804 C1604 1 0x0 Y31 MI800 1 0x0 MC850 C1605 1 0x0 MC805 C1610 1"

// Rung SLD_Copy_State#2
// Offset 21
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"SSC Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC606 C1200 1 0x0 MC607 C1201 1 0x0 MC608 C1202 1 0x0 MC609 C1203 1 0x0 MC615 C1215 1 0x0 MC616 C1216 1 0x0 MC617 C1217 1 0x0 MC618 C1218 1 0x0 MC619 C1219 1 0x0 MC620 C1220 1"

// Rung SSC_Copy_State#2
// Offset 25
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block HBW_Home
$LGCMOD HBW_Home

// Rung HBW_Home#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Home#2
// Offset 8
STRN C215
ANDN X0
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 60 60
OUT Y51

// Rung HBW_Home#3
// Offset 26
STRN C215
ANDN X3
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5

// Rung HBW_Home#4
// Offset 43
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y76

// Rung HBW_Home#5
// Offset 64
NOP

// Rung HBW_Home#6
// Offset 65
RET

// End of Code Block HBW_Home
$LGCEND HBW_Home

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 Y40 1 0x0 Y80 MHR102 1 0x0 MC101 C205 1 0x0 MC102 C206 1 0x0 MC103 C207 1 0x0 MC104 C208 1 0x0 MC105 C209 1 0x0 MC106 C210 1 0x0 MC107 C211 1 0x0 MC108 C212 1 0x0 MC109 C213 1 0x0 MC110 C214 1 0x0 MC111 C215 1 0x0 MC112 C216 1 0x0 MC113 C300 1 0x0 MC114 C217 1 0x0 MC115 C218 1 0x0 MC116 C219 1 0x0 MC117 C220 1 0x0 MC118 C221 1 0x0 MC119 C222 1 0x0 MC120 C223 1 0x0 MC121 C224 1 0x0 MC122 C225 1 0x0 MC123 C226 1 0x0 X2 MI101 1 0x0 X10 MI102 1 0x0 X11 MI103 1 0x0 X3 MI104 1 0x0 X0 MI105 1 0x0 X6 MI106 1 0x0 X7 MI107 1 0x0 X8 MI108 1 0x0 X9 MI109 1 0x0 $HBW_Encoder_X.Acc MHR1 1 0x0 $HBW_Encoder_Z.Acc MHR2 1"

// Rung HBW_Copy_State#2
// Offset 77
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block HBW_HomeTo2_Col
$LGCMOD HBW_HomeTo2_Col

// Rung HBW_HomeTo2_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_HomeTo2_Col#2
// Offset 17
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_HomeTo2_Col#3
// Offset 22
NOP

// Rung HBW_HomeTo2_Col#4
// Offset 23
NOP

// Rung HBW_HomeTo2_Col#5
// Offset 24
NOP

// Rung HBW_HomeTo2_Col#6
// Offset 25
RET

// End of Code Block HBW_HomeTo2_Col
$LGCEND HBW_HomeTo2_Col

// Beginning of Code Block HWB_HomeTo1_Col
$LGCMOD HWB_HomeTo1_Col

// Rung HWB_HomeTo1_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HWB_HomeTo1_Col#2
// Offset 17
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_HomeTo1_Col#3
// Offset 22
NOP

// Rung HWB_HomeTo1_Col#4
// Offset 23
NOP

// Rung HWB_HomeTo1_Col#5
// Offset 24
RET

// End of Code Block HWB_HomeTo1_Col
$LGCEND HWB_HomeTo1_Col

// Beginning of Code Block HWB_Home_to_11
$LGCMOD HWB_Home_to_11

// Rung HWB_Home_to_11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HWB_Home_to_11#2
// Offset 22
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_Home_to_11#3
// Offset 27
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HWB_Home_to_11#4
// Offset 49
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_Home_to_11#5
// Offset 54
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HWB_Home_to_11#6
// Offset 73
NOP

// Rung HWB_Home_to_11#7
// Offset 74
NOP

// Rung HWB_Home_to_11#8
// Offset 75
RET

// End of Code Block HWB_Home_to_11
$LGCEND HWB_Home_to_11

// Beginning of Code Block HWB_11_DropOff
$LGCMOD HWB_11_DropOff

// Rung HWB_11_DropOff#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HWB_11_DropOff#2
// Offset 8
STRGE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_11_DropOff#3
// Offset 13
STRN C215
ANDN C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51

// Rung HWB_11_DropOff#4
// Offset 31
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y4
AND ST2
OUT Y5

// Rung HWB_11_DropOff#5
// Offset 51
STRGE 2730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_11_DropOff#6
// Offset 56
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 60 60
OUT Y7

// Rung HWB_11_DropOff#7
// Offset 73
RET

// End of Code Block HWB_11_DropOff
$LGCEND HWB_11_DropOff

// Beginning of Code Block HBW_PickUp_R1
$LGCMOD HBW_PickUp_R1

// Rung HBW_PickUp_R1#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R1#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R1#3
// Offset 41
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R1#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R1#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_PickUp_R1#6
// Offset 69
NOP

// Rung HBW_PickUp_R1#7
// Offset 70
NOP

// Rung HBW_PickUp_R1#8
// Offset 71
NOP

// Rung HBW_PickUp_R1#9
// Offset 72
NOP

// Rung HBW_PickUp_R1#10
// Offset 73
RET

// End of Code Block HBW_PickUp_R1
$LGCEND HBW_PickUp_R1

// Beginning of Code Block HBW_Send_VGR
$LGCMOD HBW_Send_VGR

// Rung HBW_Send_VGR#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Send_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_Send_VGR#3
// Offset 37
STRN C215
AND X2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y48
AND ST2
OUT Y49

// Rung HBW_Send_VGR#4
// Offset 56
NOP

// Rung HBW_Send_VGR#5
// Offset 57
NOP

// Rung HBW_Send_VGR#6
// Offset 58
RET

// End of Code Block HBW_Send_VGR
$LGCEND HBW_Send_VGR

// Beginning of Code Block HBW_PickUp_VGR
$LGCMOD HBW_PickUp_VGR

// Rung HBW_PickUp_VGR#1
// Offset 0
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_PickUp_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_PickUp_VGR#3
// Offset 37
STRN C215
AND X11
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_PickUp_VGR#4
// Offset 56
NOP

// Rung HBW_PickUp_VGR#5
// Offset 57
NOP

// Rung HBW_PickUp_VGR#6
// Offset 58
RET

// End of Code Block HBW_PickUp_VGR
$LGCEND HBW_PickUp_VGR

// Beginning of Code Block HBW_Return_VGR
$LGCMOD HBW_Return_VGR

// Rung HBW_Return_VGR#1
// Offset 0
STRN C215
ANDN C251
DUPBOOL
AND C299
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y6

// Rung HBW_Return_VGR#2
// Offset 22
STRN C215
AND X1
DUPBOOL
AND C299
AND C251
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
POPBOOL
AND ST2
OUT Y48

// Rung HBW_Return_VGR#3
// Offset 45
STRN C215
DUPBOOL
AND C299
ANDN X1
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_Return_VGR#4
// Offset 68
STRLE 2550 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_VGR#5
// Offset 73
NOP

// Rung HBW_Return_VGR#6
// Offset 74
NOP

// Rung HBW_Return_VGR#7
// Offset 75
RET

// End of Code Block HBW_Return_VGR
$LGCEND HBW_Return_VGR

// Beginning of Code Block HBW_MotorsOff
$LGCMOD HBW_MotorsOff

// Rung HBW_MotorsOff#1
// Offset 0
STRN C215
ANDN ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_MotorsOff#2
// Offset 18
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_MotorsOff#3
// Offset 36
STRN C215
AND ST2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
OUT Y48

// Rung HBW_MotorsOff#4
// Offset 54
NOP

// Rung HBW_MotorsOff#5
// Offset 55
NOP

// Rung HBW_MotorsOff#6
// Offset 56
NOP

// Rung HBW_MotorsOff#7
// Offset 57
RET

// End of Code Block HBW_MotorsOff
$LGCEND HBW_MotorsOff

// Beginning of Code Block HBW_ConvTo11
$LGCMOD HBW_ConvTo11

// Rung HBW_ConvTo11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_ConvTo11#2
// Offset 22
NOP

// Rung HBW_ConvTo11#3
// Offset 23
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_ConvTo11#4
// Offset 28
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_ConvTo11#5
// Offset 50
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_ConvTo11#6
// Offset 55
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_ConvTo11#7
// Offset 74
NOP

// Rung HBW_ConvTo11#8
// Offset 75
NOP

// Rung HBW_ConvTo11#9
// Offset 76
RET

// End of Code Block HBW_ConvTo11
$LGCEND HBW_ConvTo11

// Beginning of Code Block HBW_Return_Top
$LGCMOD HBW_Return_Top

// Rung HBW_Return_Top#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Return_Top#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HBW_Return_Top#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_Top#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_Return_Top#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return_Top#6
// Offset 69
NOP

// Rung HBW_Return_Top#7
// Offset 70
NOP

// Rung HBW_Return_Top#8
// Offset 71
RET

// End of Code Block HBW_Return_Top
$LGCEND HBW_Return_Top

// Beginning of Code Block HBW_MV_11_12
$LGCMOD HBW_MV_11_12

// Rung HBW_MV_11_12#1
// Offset 0
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_MV_11_12#2
// Offset 21
NOP

// Rung HBW_MV_11_12#3
// Offset 22
NOP

// Rung HBW_MV_11_12#4
// Offset 23
NOP

// Rung HBW_MV_11_12#5
// Offset 24
RET

// End of Code Block HBW_MV_11_12
$LGCEND HBW_MV_11_12

// Beginning of Code Block HBW_Conv_12
$LGCMOD HBW_Conv_12

// Rung HBW_Conv_12#1
// Offset 0
NOP

// Rung HBW_Conv_12#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_12#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Conv_12#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 80
OUT C251

// Rung HBW_Conv_12#5
// Offset 45
NOP

// Rung HBW_Conv_12#6
// Offset 46
RET

// End of Code Block HBW_Conv_12
$LGCEND HBW_Conv_12

// Beginning of Code Block HBW_Conv_12_Lat
$LGCMOD HBW_Conv_12_Lat

// Rung HBW_Conv_12_Lat#1
// Offset 0
NOP

// Rung HBW_Conv_12_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv_12_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv_12_Lat#4
// Offset 42
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv_12_Lat#5
// Offset 47
NOP

// Rung HBW_Conv_12_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv_12_Lat
$LGCEND HBW_Conv_12_Lat

// Beginning of Code Block HBW_RETRACT_13
$LGCMOD HBW_RETRACT_13

// Rung HBW_RETRACT_13#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_RETRACT_13#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_RETRACT_13#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_RETRACT_13#4
// Offset 46
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_RETRACT_13#5
// Offset 68
STRGE 7650 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_RETRACT_13#6
// Offset 73
RET

// End of Code Block HBW_RETRACT_13
$LGCEND HBW_RETRACT_13

// Beginning of Code Block HBW_Retract_23
$LGCMOD HBW_Retract_23

// Rung HBW_Retract_23#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_23#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_23#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_23#4
// Offset 46
STRN C215
AND ST2
OUT Y51
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_Retract_23#5
// Offset 65
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_23#6
// Offset 70
RET

// End of Code Block HBW_Retract_23
$LGCEND HBW_Retract_23

// Beginning of Code Block HBW_Conv13_Lat
$LGCMOD HBW_Conv13_Lat

// Rung HBW_Conv13_Lat#1
// Offset 0
NOP

// Rung HBW_Conv13_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv13_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv13_Lat#4
// Offset 42
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv13_Lat#5
// Offset 47
NOP

// Rung HBW_Conv13_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv13_Lat
$LGCEND HBW_Conv13_Lat

// Beginning of Code Block HBW_Conv_2Row
$LGCMOD HBW_Conv_2Row

// Rung HBW_Conv_2Row#1
// Offset 0
NOP

// Rung HBW_Conv_2Row#2
// Offset 1
NOP

// Rung HBW_Conv_2Row#3
// Offset 2
NOP

// Rung HBW_Conv_2Row#4
// Offset 3
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_2Row#5
// Offset 22
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Conv_2Row#6
// Offset 42
STRGE $HBW_Encoder_Z.Acc 1380
OUT C251

// Rung HBW_Conv_2Row#7
// Offset 47
NOP

// Rung HBW_Conv_2Row#8
// Offset 48
RET

// End of Code Block HBW_Conv_2Row
$LGCEND HBW_Conv_2Row

// Beginning of Code Block HBW_PickUp_R2
$LGCMOD HBW_PickUp_R2

// Rung HBW_PickUp_R2#1
// Offset 0
NOP

// Rung HBW_PickUp_R2#2
// Offset 1
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R2#3
// Offset 20
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R2#4
// Offset 38
NOP

// Rung HBW_PickUp_R2#5
// Offset 39
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R2#6
// Offset 61
STRLE 1400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R2#7
// Offset 66
NOP

// Rung HBW_PickUp_R2#8
// Offset 67
NOP

// Rung HBW_PickUp_R2#9
// Offset 68
NOP

// Rung HBW_PickUp_R2#10
// Offset 69
RET

// End of Code Block HBW_PickUp_R2
$LGCEND HBW_PickUp_R2

// Beginning of Code Block HBW_Conv11_Lat
$LGCMOD HBW_Conv11_Lat

// Rung HBW_Conv11_Lat#1
// Offset 0
NOP

// Rung HBW_Conv11_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv11_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv11_Lat#4
// Offset 42
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv11_Lat#5
// Offset 47
NOP

// Rung HBW_Conv11_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv11_Lat
$LGCEND HBW_Conv11_Lat

// Beginning of Code Block HBW_Retract_12
$LGCMOD HBW_Retract_12

// Rung HBW_Retract_12#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_12#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_12#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_12#4
// Offset 46
RET

// End of Code Block HBW_Retract_12
$LGCEND HBW_Retract_12

// Beginning of Code Block HBW_Shift_C1C2
$LGCMOD HBW_Shift_C1C2

// Rung HBW_Shift_C1C2#1
// Offset 0
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Shift_C1C2#2
// Offset 5
NOP

// Rung HBW_Shift_C1C2#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Shift_C1C2#4
// Offset 25
NOP

// Rung HBW_Shift_C1C2#5
// Offset 26
STRN C215
AND ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_Shift_C1C2#6
// Offset 44
NOP

// Rung HBW_Shift_C1C2#7
// Offset 45
RET

// End of Code Block HBW_Shift_C1C2
$LGCEND HBW_Shift_C1C2

// Beginning of Code Block HBW_Move_R1_R2
$LGCMOD HBW_Move_R1_R2

// Rung HBW_Move_R1_R2#1
// Offset 0
STRGE 1760 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Move_R1_R2#2
// Offset 5
NOP

// Rung HBW_Move_R1_R2#3
// Offset 6
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Move_R1_R2#4
// Offset 25
NOP

// Rung HBW_Move_R1_R2#5
// Offset 26
NOP

// Rung HBW_Move_R1_R2#6
// Offset 27
RET

// End of Code Block HBW_Move_R1_R2
$LGCEND HBW_Move_R1_R2

// Beginning of Code Block HBW_Retract_22
$LGCMOD HBW_Retract_22

// Rung HBW_Retract_22#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_22#2
// Offset 22
STRGE 1730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_22#3
// Offset 27
NOP

// Rung HBW_Retract_22#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_22#5
// Offset 47
STRLE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_22#6
// Offset 52
STRN C215
AND C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
AND ST2
OUT Y50

// Rung HBW_Retract_22#7
// Offset 72
NOP

// Rung HBW_Retract_22#8
// Offset 73
RET

// End of Code Block HBW_Retract_22
$LGCEND HBW_Retract_22

// Beginning of Code Block HBW_Retract_21
$LGCMOD HBW_Retract_21

// Rung HBW_Retract_21#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_21#2
// Offset 22
STRGE 1730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_21#3
// Offset 27
NOP

// Rung HBW_Retract_21#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_21#5
// Offset 47
STRLE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_21#6
// Offset 52
STRN C215
AND C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
AND ST2
OUT Y50

// Rung HBW_Retract_21#7
// Offset 72
NOP

// Rung HBW_Retract_21#8
// Offset 73
RET

// End of Code Block HBW_Retract_21
$LGCEND HBW_Retract_21

// Beginning of Code Block HBW_Retract_31
$LGCMOD HBW_Retract_31

// Rung HBW_Retract_31#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_31#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_31#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_31#4
// Offset 46
STRN C215
AND ST2
OUT Y51
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_Retract_31#5
// Offset 65
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_31#6
// Offset 70
RET

// End of Code Block HBW_Retract_31
$LGCEND HBW_Retract_31

// Beginning of Code Block HBW_Move_R2_R3
$LGCMOD HBW_Move_R2_R3

// Rung HBW_Move_R2_R3#1
// Offset 0
STRGE 3600 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Move_R2_R3#2
// Offset 5
NOP

// Rung HBW_Move_R2_R3#3
// Offset 6
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Move_R2_R3#4
// Offset 25
NOP

// Rung HBW_Move_R2_R3#5
// Offset 26
NOP

// Rung HBW_Move_R2_R3#6
// Offset 27
RET

// End of Code Block HBW_Move_R2_R3
$LGCEND HBW_Move_R2_R3

// Beginning of Code Block HBW_PickUp_R3
$LGCMOD HBW_PickUp_R3

// Rung HBW_PickUp_R3#1
// Offset 0
NOP

// Rung HBW_PickUp_R3#2
// Offset 1
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R3#3
// Offset 20
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R3#4
// Offset 38
STRLE 2800 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R3#5
// Offset 43
NOP

// Rung HBW_PickUp_R3#6
// Offset 44
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R3#7
// Offset 66
NOP

// Rung HBW_PickUp_R3#8
// Offset 67
NOP

// Rung HBW_PickUp_R3#9
// Offset 68
NOP

// Rung HBW_PickUp_R3#10
// Offset 69
RET

// End of Code Block HBW_PickUp_R3
$LGCEND HBW_PickUp_R3

// Beginning of Code Block HBW_Conv_3Row
$LGCMOD HBW_Conv_3Row

// Rung HBW_Conv_3Row#1
// Offset 0
NOP

// Rung HBW_Conv_3Row#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_3Row#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Conv_3Row#4
// Offset 40
STRLE $HBW_Encoder_Z.Acc 2950
OUT C251

// Rung HBW_Conv_3Row#5
// Offset 45
NOP

// Rung HBW_Conv_3Row#6
// Offset 46
RET

// End of Code Block HBW_Conv_3Row
$LGCEND HBW_Conv_3Row

// Beginning of Code Block HBW_Retract_32
$LGCMOD HBW_Retract_32

// Rung HBW_Retract_32#1
// Offset 0
STRGE 3300 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_32#2
// Offset 5
NOP

// Rung HBW_Retract_32#3
// Offset 6
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_32#4
// Offset 28
NOP

// Rung HBW_Retract_32#5
// Offset 29
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_32#6
// Offset 48
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_32#7
// Offset 53
NOP

// Rung HBW_Retract_32#8
// Offset 54
STRN C215
AND C250
DUPBOOL
ANDN C251
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_Retract_32#9
// Offset 77
NOP

// Rung HBW_Retract_32#10
// Offset 78
RET

// End of Code Block HBW_Retract_32
$LGCEND HBW_Retract_32

// Beginning of Code Block HBW_Retract_33
$LGCMOD HBW_Retract_33

// Rung HBW_Retract_33#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_33#2
// Offset 22
STRGE 3300 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_33#3
// Offset 27
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_33#4
// Offset 46
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_33#5
// Offset 51
NOP

// Rung HBW_Retract_33#6
// Offset 52
STRN C215
AND C250
DUPBOOL
ANDN C251
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_Retract_33#7
// Offset 75
NOP

// Rung HBW_Retract_33#8
// Offset 76
RET

// End of Code Block HBW_Retract_33
$LGCEND HBW_Retract_33

// Beginning of Code Block HBW_Retract_DN
$LGCMOD HBW_Retract_DN

// Rung HBW_Retract_DN#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_DN#2
// Offset 22
STRGE 3200 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_DN#3
// Offset 27
NOP

// Rung HBW_Retract_DN#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_DN#5
// Offset 47
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_DN#6
// Offset 52
STRN C215
AND C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
AND ST2
OUT Y50

// Rung HBW_Retract_DN#7
// Offset 72
NOP

// Rung HBW_Retract_DN#8
// Offset 73
RET

// End of Code Block HBW_Retract_DN
$LGCEND HBW_Retract_DN

// Beginning of Code Block oneOperation
$LGCMOD oneOperation

// Rung oneOperation#1
// Offset 0
NOP

// Rung oneOperation#2
// Offset 1
NOP

// Rung oneOperation#3
// Offset 2
RET

// End of Code Block oneOperation
$LGCEND oneOperation

// Beginning of Code Block HBW_Check1Puck
$LGCMOD HBW_Check1Puck

// Rung HBW_Check1Puck#1
// Offset 0
STR ST1
MOVE 0 C301

// Rung HBW_Check1Puck#2
// Offset 3
STR C217
MOVE 1 C301
MOVE 1 N2

// Rung HBW_Check1Puck#3
// Offset 8
STR C218
MOVE 1 C301
MOVE 2 N2

// Rung HBW_Check1Puck#4
// Offset 13
STR C219
MOVE 1 C301
MOVE 3 N2

// Rung HBW_Check1Puck#5
// Offset 18
STR C220
MOVE 1 C301
MOVE 4 N2

// Rung HBW_Check1Puck#6
// Offset 23
STR C221
MOVE 1 C301
MOVE 5 N2

// Rung HBW_Check1Puck#7
// Offset 28
STR C222
MOVE 1 C301
MOVE 6 N2

// Rung HBW_Check1Puck#8
// Offset 33
STR C223
MOVE 1 C301
MOVE 7 N2

// Rung HBW_Check1Puck#9
// Offset 38
STR C224
MOVE 1 C301
MOVE 8 N2

// Rung HBW_Check1Puck#10
// Offset 43
STR C225
MOVE 1 C301
MOVE 9 N2

// Rung HBW_Check1Puck#11
// Offset 48
RET

// End of Code Block HBW_Check1Puck
$LGCEND HBW_Check1Puck

// Beginning of Code Block HBW_OneTime_R1
$LGCMOD HBW_OneTime_R1

// Rung HBW_OneTime_R1#1
// Offset 0
STRGE 375 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneTime_R1#2
// Offset 5
NOP

// Rung HBW_OneTime_R1#3
// Offset 6
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_OneTime_R1#4
// Offset 25
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneTime_R1#5
// Offset 45
NOP

// Rung HBW_OneTime_R1#6
// Offset 46
RET

// End of Code Block HBW_OneTime_R1
$LGCEND HBW_OneTime_R1

// Beginning of Code Block HBW_OneTime_R2
$LGCMOD HBW_OneTime_R2

// Rung HBW_OneTime_R2#1
// Offset 0
STRGE 1650 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneTime_R2#2
// Offset 5
NOP

// Rung HBW_OneTime_R2#3
// Offset 6
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_OneTime_R2#4
// Offset 25
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneTime_R2#5
// Offset 45
NOP

// Rung HBW_OneTime_R2#6
// Offset 46
RET

// End of Code Block HBW_OneTime_R2
$LGCEND HBW_OneTime_R2

// Beginning of Code Block HBW_OneTime_R3
$LGCMOD HBW_OneTime_R3

// Rung HBW_OneTime_R3#1
// Offset 0
STRGE 3200 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneTime_R3#2
// Offset 5
NOP

// Rung HBW_OneTime_R3#3
// Offset 6
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_OneTime_R3#4
// Offset 25
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneTime_R3#5
// Offset 45
NOP

// Rung HBW_OneTime_R3#6
// Offset 46
RET

// End of Code Block HBW_OneTime_R3
$LGCEND HBW_OneTime_R3

// Beginning of Code Block HBW_OneTime_C1
$LGCMOD HBW_OneTime_C1

// Rung HBW_OneTime_C1#1
// Offset 0
STRGE 2975 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_OneTime_C1#2
// Offset 5
NOP

// Rung HBW_OneTime_C1#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_OneTime_C1#4
// Offset 25
NOP

// Rung HBW_OneTime_C1#5
// Offset 26
RET

// End of Code Block HBW_OneTime_C1
$LGCEND HBW_OneTime_C1

// Beginning of Code Block HBW_OneTime_C2
$LGCMOD HBW_OneTime_C2

// Rung HBW_OneTime_C2#1
// Offset 0
STRGE 5290 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_OneTime_C2#2
// Offset 5
NOP

// Rung HBW_OneTime_C2#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_OneTime_C2#4
// Offset 25
NOP

// Rung HBW_OneTime_C2#5
// Offset 26
RET

// End of Code Block HBW_OneTime_C2
$LGCEND HBW_OneTime_C2

// Beginning of Code Block HBW_OneTime_C3
$LGCMOD HBW_OneTime_C3

// Rung HBW_OneTime_C3#1
// Offset 0
STRGE 7640 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_OneTime_C3#2
// Offset 5
NOP

// Rung HBW_OneTime_C3#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_OneTime_C3#4
// Offset 25
NOP

// Rung HBW_OneTime_C3#5
// Offset 26
RET

// End of Code Block HBW_OneTime_C3
$LGCEND HBW_OneTime_C3

// Beginning of Code Block HBW_OneDropR3
$LGCMOD HBW_OneDropR3

// Rung HBW_OneDropR3#1
// Offset 0
NOP

// Rung HBW_OneDropR3#2
// Offset 1
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_OneDropR3#3
// Offset 23
STRGE 3300 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneDropR3#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneDropR3#5
// Offset 47
NOP

// Rung HBW_OneDropR3#6
// Offset 48
NOP

// Rung HBW_OneDropR3#7
// Offset 49
RET

// End of Code Block HBW_OneDropR3
$LGCEND HBW_OneDropR3

// Beginning of Code Block HBW_OneDropR2
$LGCMOD HBW_OneDropR2

// Rung HBW_OneDropR2#1
// Offset 0
NOP

// Rung HBW_OneDropR2#2
// Offset 1
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_OneDropR2#3
// Offset 23
STRGE 1730 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneDropR2#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneDropR2#5
// Offset 47
NOP

// Rung HBW_OneDropR2#6
// Offset 48
NOP

// Rung HBW_OneDropR2#7
// Offset 49
RET

// End of Code Block HBW_OneDropR2
$LGCEND HBW_OneDropR2

// Beginning of Code Block HBW_OneDropR1
$LGCMOD HBW_OneDropR1

// Rung HBW_OneDropR1#1
// Offset 0
NOP

// Rung HBW_OneDropR1#2
// Offset 1
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_OneDropR1#3
// Offset 23
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_OneDropR1#4
// Offset 28
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_OneDropR1#5
// Offset 47
NOP

// Rung HBW_OneDropR1#6
// Offset 48
NOP

// Rung HBW_OneDropR1#7
// Offset 49
RET

// End of Code Block HBW_OneDropR1
$LGCEND HBW_OneDropR1

// Beginning of Code Block VGR_Done
$LGCMOD VGR_Done

// Rung VGR_Done#1
// Offset 0
STR ST1
MOVE 0 C700

// Rung VGR_Done#2
// Offset 3
NOP

// Rung VGR_Done#3
// Offset 4
RET

// End of Code Block VGR_Done
$LGCEND VGR_Done

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#2
// Offset 3
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#3
// Offset 6
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#4
// Offset 9
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#5
// Offset 12
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// Rung $Main#6
// Offset 15
#BEGIN FMT_COMMENT 
"Hunter Demo Light<br>"
#END

STR ST1
RUN hunt_exp_light

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
SG HBW_Program.S0

// Rung HBW_Program#2
// Offset 2
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#3
// Offset 10
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#4
// Offset 12
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#5
// Offset 14
STR ST1
MOVE 0 C298

// Rung HBW_Program#6
// Offset 17
STR ST1
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#7
// Offset 25
STR ST1
CALL HBW_Check1Puck 0x1 DST511 "3" "3"

// Rung HBW_Program#8
// Offset 33
STR C301
JMP HBW_Program.S19

// Rung HBW_Program#9
// Offset 35
NOP

// Rung HBW_Program#10
// Offset 36
STR C216
JMP HBW_Program.S1

// Rung HBW_Program#11
// Offset 38
STR C213
JMP HBW_Program.S1

// Rung HBW_Program#12
// Offset 40
SG HBW_Program.S1

// Rung HBW_Program#13
// Offset 42
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#14
// Offset 50
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#15
// Offset 52
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#16
// Offset 54
STR ST1
MOVE 0 N1

// Rung HBW_Program#17
// Offset 57
STR ST1
MOVE 0 C299

// Rung HBW_Program#18
// Offset 60
NOP

// Rung HBW_Program#19
// Offset 61
STR ST1
DUPBOOL
STR C205
ANDN C206
STR C206
ANDN C205
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 500 60
POPBOOL
DUPBOOL
AND C205
OUT Y48
POPBOOL
AND C206
OUT Y49

// Rung HBW_Program#20
// Offset 90
STR ST1
DUPBOOL
STR C207
ANDN C208
STRN C207
AND C208
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
POPBOOL
DUPBOOL
AND C207
OUT Y50
POPBOOL
AND C208
OUT Y51

// Rung HBW_Program#21
// Offset 119
STR ST1
DUPBOOL
STR C209
ANDN C210
STRN C209
AND C210
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
POPBOOL
DUPBOOL
AND C209
OUT Y4
POPBOOL
AND C210
OUT Y5

// Rung HBW_Program#22
// Offset 148
STR ST1
DUPBOOL
STR C211
ANDN C212
STRN C211
AND C212
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
POPBOOL
DUPBOOL
AND C211
OUT Y6
POPBOOL
AND C212
OUT Y7

// Rung HBW_Program#23
// Offset 177
STR C226
JMP HBW_Program.S0

// Rung HBW_Program#24
// Offset 179
STR C213
JMP HBW_Program.S2

// Rung HBW_Program#25
// Offset 181
SG HBW_Program.S2

// Rung HBW_Program#26
// Offset 183
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#27
// Offset 191
STR X0
OUT $HBW_Encoder_X.ResetLevel

// Rung HBW_Program#28
// Offset 193
STR X3
OUT $HBW_Encoder_Z.ResetLevel

// Rung HBW_Program#29
// Offset 195
STR ST1
CALL HBW_Home 0x1 DST511 "3" "3"

// Rung HBW_Program#30
// Offset 203
STR X0
AND X11
AND X3
JMP HBW_Program.S3

// Rung HBW_Program#31
// Offset 207
STR C212
JMP HBW_Program.S3

// Rung HBW_Program#32
// Offset 209
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#33
// Offset 211
SG HBW_Program.S3

// Rung HBW_Program#34
// Offset 213
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#35
// Offset 221
STR ST1
CALL HWB_Home_to_11 0x1 DST511 "3" "3"

// Rung HBW_Program#36
// Offset 229
STRN C250
ANDN C251
JMP HBW_Program.S4

// Rung HBW_Program#37
// Offset 232
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#38
// Offset 234
SG HBW_Program.S4

// Rung HBW_Program#39
// Offset 236
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#40
// Offset 244
STR ST1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#41
// Offset 252
STR X10
ANDN C251
JMP HBW_Program.S5

// Rung HBW_Program#42
// Offset 255
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#43
// Offset 257
NOP

// Rung HBW_Program#44
// Offset 258
SG HBW_Program.S5

// Rung HBW_Program#45
// Offset 260
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#46
// Offset 268
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#47
// Offset 276
STRN C251
AND C250
JMP HBW_Program.S6

// Rung HBW_Program#48
// Offset 279
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#49
// Offset 281
SG HBW_Program.S6

// Rung HBW_Program#50
// Offset 283
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#51
// Offset 291
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#52
// Offset 299
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#53
// Offset 301
STRN X2
MOVE 1 C298

// Rung HBW_Program#54
// Offset 304
STRN X2
JMP HBW_Program.S7
INC N1

// Rung HBW_Program#55
// Offset 307
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#56
// Offset 309
NOP

// Rung HBW_Program#57
// Offset 310
SG HBW_Program.S7

// Rung HBW_Program#58
// Offset 312
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#59
// Offset 320
STR C300
MOVE 1 C299

// Rung HBW_Program#60
// Offset 323
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#61
// Offset 331
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#62
// Offset 340
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#63
// Offset 342
NOP

// Rung HBW_Program#64
// Offset 343
SG HBW_Program.S8

// Rung HBW_Program#65
// Offset 345
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#66
// Offset 353
STR ST1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#67
// Offset 361
STR ST1
MOVE 0 C299
MOVE 0 C298

// Rung HBW_Program#68
// Offset 366
STRN C250
JMP HBW_Program.S9

// Rung HBW_Program#69
// Offset 368
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#70
// Offset 370
NOP

// Rung HBW_Program#71
// Offset 371
SG HBW_Program.S9

// Rung HBW_Program#72
// Offset 373
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#73
// Offset 381
STR ST1
CALL HBW_Return_Top 0x1 DST511 "3" "3"

// Rung HBW_Program#74
// Offset 389
STR X10
ANDN C251
JMP HBW_Program.S10
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#75
// Offset 399
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#76
// Offset 401
NOP

// Rung HBW_Program#77
// Offset 402
SG HBW_Program.S10

// Rung HBW_Program#78
// Offset 404
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#79
// Offset 412
STR ST1
CALL HBW_MV_11_12 0x1 DST511 "3" "3"

// Rung HBW_Program#80
// Offset 420
STRN C250
JMP HBW_Program.S11

// Rung HBW_Program#81
// Offset 422
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#82
// Offset 424
NOP

// Rung HBW_Program#83
// Offset 425
SG HBW_Program.S11

// Rung HBW_Program#84
// Offset 427
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#85
// Offset 435
STRE N1 1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#86
// Offset 446
STRE N1 2
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#87
// Offset 457
STRE N1 3
CALL HBW_Move_R1_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#88
// Offset 468
STRE N1 3
ANDLE 1650 $HBW_Encoder_Z.Acc
JMP HBW_Program.S51

// Rung HBW_Program#89
// Offset 477
STRE N1 4
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#90
// Offset 488
STRE N1 5
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#91
// Offset 499
STRE N1 6
CALL HBW_Move_R2_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#92
// Offset 510
STRE N1 6
ANDLE 3200 $HBW_Encoder_Z.Acc
JMP HBW_Program.S51

// Rung HBW_Program#93
// Offset 519
STRE N1 7
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#94
// Offset 530
STRE N1 8
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#95
// Offset 541
STRE N1 9
JMP HBW_Program.S18

// Rung HBW_Program#96
// Offset 546
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#97
// Offset 548
NOP

// Rung HBW_Program#98
// Offset 549
NOP

// Rung HBW_Program#99
// Offset 550
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#100
// Offset 553
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#101
// Offset 555
SG HBW_Program.S51

// Rung HBW_Program#102
// Offset 557
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#103
// Offset 565
STRE N1 3
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#104
// Offset 576
STRE N1 6
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#105
// Offset 587
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#106
// Offset 589
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#107
// Offset 592
SG HBW_Program.S12

// Rung HBW_Program#108
// Offset 594
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#109
// Offset 602
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#110
// Offset 610
STRN C251
AND C250
JMP HBW_Program.S13

// Rung HBW_Program#111
// Offset 613
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#112
// Offset 615
SG HBW_Program.S13

// Rung HBW_Program#113
// Offset 617
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#114
// Offset 625
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#115
// Offset 633
STRN X2
MOVE 1 C298

// Rung HBW_Program#116
// Offset 636
STR C300
MOVE 1 C299

// Rung HBW_Program#117
// Offset 639
STRN X2
AND C299
JMP HBW_Program.S14
INC N1

// Rung HBW_Program#118
// Offset 643
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#119
// Offset 645
SG HBW_Program.S14

// Rung HBW_Program#120
// Offset 647
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#121
// Offset 655
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#122
// Offset 663
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#123
// Offset 672
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#124
// Offset 674
SG HBW_Program.S15

// Rung HBW_Program#125
// Offset 676
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#126
// Offset 684
STR ST1
MOVE 0 C299
MOVE 0 C298

// Rung HBW_Program#127
// Offset 689
STRE N1 1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#128
// Offset 700
STRE N1 2
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#129
// Offset 711
STRE N1 3
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#130
// Offset 722
STRE N1 4
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#131
// Offset 733
STRE N1 5
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#132
// Offset 744
STRE N1 6
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#133
// Offset 755
STRE N1 7
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#134
// Offset 766
STRE N1 8
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#135
// Offset 777
STRE N1 9
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#136
// Offset 788
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#137
// Offset 790
STRN C251
JMP HBW_Program.S16
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#138
// Offset 799
SG HBW_Program.S16

// Rung HBW_Program#139
// Offset 801
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#140
// Offset 809
STRE N1 1
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#141
// Offset 820
STRE N1 2
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#142
// Offset 831
STRE N1 3
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#143
// Offset 842
STRE N1 4
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#144
// Offset 853
STRE N1 5
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#145
// Offset 864
STRE N1 6
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#146
// Offset 875
STRE N1 7
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#147
// Offset 886
STRE N1 8
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#148
// Offset 897
STRE N1 9
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#149
// Offset 908
NOP

// Rung HBW_Program#150
// Offset 909
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#151
// Offset 911
STRN C250
AND X10
JMP HBW_Program.S17

// Rung HBW_Program#152
// Offset 914
SG HBW_Program.S17

// Rung HBW_Program#153
// Offset 916
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#154
// Offset 924
STRE N1 1
CALL HBW_Retract_12 0x1 DST511 "3" "3"

// Rung HBW_Program#155
// Offset 935
STRE N1 2
CALL HBW_RETRACT_13 0x1 DST511 "3" "3"

// Rung HBW_Program#156
// Offset 946
STRE N1 3
CALL HBW_Retract_23 0x1 DST511 "3" "3"

// Rung HBW_Program#157
// Offset 957
STRE N1 4
CALL HBW_Retract_22 0x1 DST511 "3" "3"

// Rung HBW_Program#158
// Offset 968
STRE N1 5
CALL HBW_Retract_21 0x1 DST511 "3" "3"

// Rung HBW_Program#159
// Offset 979
STRE N1 6
CALL HBW_Retract_21 0x1 DST511 "3" "3"

// Rung HBW_Program#160
// Offset 990
STRE N1 7
CALL HBW_Retract_32 0x1 DST511 "3" "3"

// Rung HBW_Program#161
// Offset 1001
STRE N1 8
CALL HBW_Retract_33 0x1 DST511 "3" "3"

// Rung HBW_Program#162
// Offset 1012
STRE N1 9
CALL HBW_Retract_33 0x1 DST511 "3" "3"

// Rung HBW_Program#163
// Offset 1023
NOP

// Rung HBW_Program#164
// Offset 1024
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#165
// Offset 1026
STR X11
ANDN C251
ANDN C250
JMP HBW_Program.S11

// Rung HBW_Program#166
// Offset 1030
STR X11
ANDE N1 1
JMP HBW_Program.S50

// Rung HBW_Program#167
// Offset 1036
SG HBW_Program.S18

// Rung HBW_Program#168
// Offset 1038
STR ST1
JMP HBW_Program.S0

// Rung HBW_Program#169
// Offset 1040
SG HBW_Program.S50

// Rung HBW_Program#170
// Offset 1042
STR ST1
CALL HBW_Shift_C1C2 0x1 DST511 "3" "3"

// Rung HBW_Program#171
// Offset 1050
STRN Y50
ANDN C250
JMP HBW_Program.S11

// Rung HBW_Program#172
// Offset 1053
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#173
// Offset 1055
NOP

// Rung HBW_Program#174
// Offset 1056
SG HBW_Program.S19

// Rung HBW_Program#175
// Offset 1058
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#176
// Offset 1066
STR X0
OUT $HBW_Encoder_X.ResetLevel

// Rung HBW_Program#177
// Offset 1068
STR X3
OUT $HBW_Encoder_Z.ResetLevel

// Rung HBW_Program#178
// Offset 1070
NOP

// Rung HBW_Program#179
// Offset 1071
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#180
// Offset 1073
STR ST1
CALL HBW_Home 0x1 DST511 "3" "3"

// Rung HBW_Program#181
// Offset 1081
STR X0
AND X11
AND X3
JMP HBW_Program.S20

// Rung HBW_Program#182
// Offset 1085
SG HBW_Program.S20

// Rung HBW_Program#183
// Offset 1087
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#184
// Offset 1095
NOP

// Rung HBW_Program#185
// Offset 1096
STRE N2 1
CALL HBW_OneTime_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#186
// Offset 1107
STRE N2 2
CALL HBW_OneTime_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#187
// Offset 1118
STRE N2 3
CALL HBW_OneTime_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#188
// Offset 1129
STRE N2 4
CALL HBW_OneTime_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#189
// Offset 1140
STRE N2 5
CALL HBW_OneTime_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#190
// Offset 1151
STRE N2 6
CALL HBW_OneTime_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#191
// Offset 1162
STRE N2 7
CALL HBW_OneTime_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#192
// Offset 1173
STRE N2 8
CALL HBW_OneTime_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#193
// Offset 1184
STRE N2 9
CALL HBW_OneTime_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#194
// Offset 1195
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#195
// Offset 1197
STRN C251
JMP HBW_Program.S21

// Rung HBW_Program#196
// Offset 1199
SG HBW_Program.S21

// Rung HBW_Program#197
// Offset 1201
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#198
// Offset 1209
NOP

// Rung HBW_Program#199
// Offset 1210
STRE N2 1
CALL HBW_OneTime_C1 0x1 DST511 "3" "3"

// Rung HBW_Program#200
// Offset 1221
STRE N2 2
CALL HBW_OneTime_C2 0x1 DST511 "3" "3"

// Rung HBW_Program#201
// Offset 1232
STRE N2 3
CALL HBW_OneTime_C3 0x1 DST511 "3" "3"

// Rung HBW_Program#202
// Offset 1243
STRE N2 4
CALL HBW_OneTime_C1 0x1 DST511 "3" "3"

// Rung HBW_Program#203
// Offset 1254
STRE N2 5
CALL HBW_OneTime_C2 0x1 DST511 "3" "3"

// Rung HBW_Program#204
// Offset 1265
STRE N2 6
CALL HBW_OneTime_C3 0x1 DST511 "3" "3"

// Rung HBW_Program#205
// Offset 1276
STRE N2 7
CALL HBW_OneTime_C1 0x1 DST511 "3" "3"

// Rung HBW_Program#206
// Offset 1287
STRE N2 8
CALL HBW_OneTime_C2 0x1 DST511 "3" "3"

// Rung HBW_Program#207
// Offset 1298
STRE N2 9
CALL HBW_OneTime_C3 0x1 DST511 "3" "3"

// Rung HBW_Program#208
// Offset 1309
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#209
// Offset 1311
STRN C250
JMP HBW_Program.S22

// Rung HBW_Program#210
// Offset 1313
SG HBW_Program.S22

// Rung HBW_Program#211
// Offset 1315
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#212
// Offset 1323
STRE N2 1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#213
// Offset 1334
STRE N2 2
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#214
// Offset 1345
STRE N2 3
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#215
// Offset 1356
STRE N2 4
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#216
// Offset 1367
STRE N2 5
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#217
// Offset 1378
STRE N2 6
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#218
// Offset 1389
STRE N2 7
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#219
// Offset 1400
STRE N2 8
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#220
// Offset 1411
STRE N2 9
CALL HBW_PickUp_R3 0x1 DST511 "3" "3"

// Rung HBW_Program#221
// Offset 1422
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#222
// Offset 1424
STRN C251
JMP HBW_Program.S23

// Rung HBW_Program#223
// Offset 1426
SG HBW_Program.S23

// Rung HBW_Program#224
// Offset 1428
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#225
// Offset 1436
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#226
// Offset 1444
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#227
// Offset 1446
STRN C251
AND C250
JMP HBW_Program.S24

// Rung HBW_Program#228
// Offset 1449
SG HBW_Program.S24

// Rung HBW_Program#229
// Offset 1451
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#230
// Offset 1459
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#231
// Offset 1467
STRN X2
MOVE 1 C298

// Rung HBW_Program#232
// Offset 1470
STRN X2
AND C299
JMP HBW_Program.S25

// Rung HBW_Program#233
// Offset 1473
STR C300
MOVE 1 C299

// Rung HBW_Program#234
// Offset 1476
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#235
// Offset 1478
SG HBW_Program.S25

// Rung HBW_Program#236
// Offset 1480
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#237
// Offset 1488
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#238
// Offset 1496
STR X11
JMP HBW_Program.S26
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#239
// Offset 1505
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#240
// Offset 1507
NOP

// Rung HBW_Program#241
// Offset 1508
SG HBW_Program.S26

// Rung HBW_Program#242
// Offset 1510
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#243
// Offset 1518
STR ST1
MOVE 0 C299
MOVE 0 C298

// Rung HBW_Program#244
// Offset 1523
STRE N2 1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#245
// Offset 1534
STRE N2 2
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#246
// Offset 1545
STRE N2 3
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#247
// Offset 1556
STRE N2 4
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#248
// Offset 1567
STRE N2 5
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#249
// Offset 1578
STRE N2 6
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#250
// Offset 1589
STRE N2 7
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#251
// Offset 1600
STRE N2 8
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#252
// Offset 1611
STRE N2 9
CALL HBW_Conv_3Row 0x1 DST511 "3" "3"

// Rung HBW_Program#253
// Offset 1622
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#254
// Offset 1624
STRN C251
JMP HBW_Program.S27
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#255
// Offset 1633
SG HBW_Program.S27

// Rung HBW_Program#256
// Offset 1635
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#257
// Offset 1643
STRE N2 1
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#258
// Offset 1654
STRE N2 2
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#259
// Offset 1665
STRE N2 3
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#260
// Offset 1676
STRE N2 4
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#261
// Offset 1687
STRE N2 5
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#262
// Offset 1698
STRE N2 6
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#263
// Offset 1709
STRE N2 7
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#264
// Offset 1720
STRE N2 8
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#265
// Offset 1731
STRE N2 9
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#266
// Offset 1742
NOP

// Rung HBW_Program#267
// Offset 1743
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#268
// Offset 1745
STRN C250
AND X10
JMP HBW_Program.S28

// Rung HBW_Program#269
// Offset 1748
SG HBW_Program.S28

// Rung HBW_Program#270
// Offset 1750
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#271
// Offset 1758
STRE N2 1
CALL HBW_OneDropR1 0x1 DST511 "3" "3"

// Rung HBW_Program#272
// Offset 1769
STRE N2 2
CALL HBW_OneDropR1 0x1 DST511 "3" "3"

// Rung HBW_Program#273
// Offset 1780
STRE N2 3
CALL HBW_OneDropR1 0x1 DST511 "3" "3"

// Rung HBW_Program#274
// Offset 1791
STRE N2 4
CALL HBW_OneDropR2 0x1 DST511 "3" "3"

// Rung HBW_Program#275
// Offset 1802
STRE N2 5
CALL HBW_OneDropR2 0x1 DST511 "3" "3"

// Rung HBW_Program#276
// Offset 1813
STRE N2 6
CALL HBW_OneDropR2 0x1 DST511 "3" "3"

// Rung HBW_Program#277
// Offset 1824
STRE N2 7
CALL HBW_OneDropR3 0x1 DST511 "3" "3"

// Rung HBW_Program#278
// Offset 1835
STRE N2 8
CALL HBW_OneDropR3 0x1 DST511 "3" "3"

// Rung HBW_Program#279
// Offset 1846
STRE N2 9
CALL HBW_OneDropR3 0x1 DST511 "3" "3"

// Rung HBW_Program#280
// Offset 1857
STR X11
JMP HBW_Program.S0

// Rung HBW_Program#281
// Offset 1859
STR C215
JMP HBW_Program.S0

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
SG VGR_Program.S0

// Rung VGR_Program#2
// Offset 2
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#3
// Offset 10
STR ST1
DUPBOOL
STR C410
ANDN C409
STRN C410
AND C409
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
POPBOOL
DUPBOOL
AND C410
OUT Y27
POPBOOL
AND C409
OUT Y26

// Rung VGR_Program#4
// Offset 39
STR ST1
DUPBOOL
STR C408
ANDN C411
STRN C408
AND C411
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
POPBOOL
DUPBOOL
AND C408
OUT Y24
POPBOOL
AND C411
OUT Y25

// Rung VGR_Program#5
// Offset 68
STR ST1
DUPBOOL
STR C406
ANDN C407
STRN C406
AND C407
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
POPBOOL
DUPBOOL
AND C406
OUT Y23
POPBOOL
AND C407
OUT Y22

// Rung VGR_Program#6
// Offset 97
STR C452
JMP VGR_Program.S1

// Rung VGR_Program#7
// Offset 99
SG VGR_Program.S1

// Rung VGR_Program#8
// Offset 101
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#9
// Offset 103
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#10
// Offset 111
STRN X25
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
OUT Y22

// Rung VGR_Program#11
// Offset 127
STRN X26
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
OUT Y24

// Rung VGR_Program#12
// Offset 143
STRN X27
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
OUT Y26

// Rung VGR_Program#13
// Offset 159
STR X27
OUT $VGR_Encoder_Rot.ResetLevel

// Rung VGR_Program#14
// Offset 161
STR X26
OUT $VGR_Encoder_X.ResetLevel

// Rung VGR_Program#15
// Offset 163
STR X25
OUT $VGR_Encoder_Y.ResetLevel

// Rung VGR_Program#16
// Offset 165
STR X25
AND X26
AND X27
JMP VGR_Program.S2

// Rung VGR_Program#17
// Offset 169
SG VGR_Program.S2

// Rung VGR_Program#18
// Offset 171
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#19
// Offset 179
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#20
// Offset 181
STR ST1
OUT $VGR_Encoder_Rot.EnableCapture

// Rung VGR_Program#21
// Offset 183
STR ST1
OUT $VGR_Encoder_X.EnableCapture

// Rung VGR_Program#22
// Offset 185
STR ST1
OUT $VGR_Encoder_Y.EnableCapture

// Rung VGR_Program#23
// Offset 187
STR ST1
OUT $VGR_Encoder_Rot.EnableCapture

// Rung VGR_Program#24
// Offset 189
STR ST1
OUT $VGR_Encoder_X.EnableCapture

// Rung VGR_Program#25
// Offset 191
STR ST1
OUT $VGR_Encoder_Y.EnableCapture

// Rung VGR_Program#26
// Offset 193
STRGE 5340 $VGR_Encoder_Rot.Acc
ANDGE 5360 $VGR_Encoder_Rot.Acc
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
OUT Y27

// Rung VGR_Program#27
// Offset 216
STRGE 725 $VGR_Encoder_X.Acc
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
OUT Y25

// Rung VGR_Program#28
// Offset 235
STRN X2
JMP VGR_Program.S3

// Rung VGR_Program#29
// Offset 237
SG VGR_Program.S3

// Rung VGR_Program#30
// Offset 239
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#31
// Offset 247
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#32
// Offset 249
STRGE 600 $VGR_Encoder_Y.Acc
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
OUT Y23

// Rung VGR_Program#33
// Offset 268
STRGE $VGR_Encoder_Y.Acc 600
JMP VGR_Program.S4

// Rung VGR_Program#34
// Offset 273
SG VGR_Program.S4

// Rung VGR_Program#35
// Offset 275
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#36
// Offset 283
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#37
// Offset 285
STR ST1
OUT Y28

// Rung VGR_Program#38
// Offset 287
STR Y28
JMP VGR_Program.S5

// Rung VGR_Program#39
// Offset 289
SG VGR_Program.S5

// Rung VGR_Program#40
// Offset 291
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#41
// Offset 299
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#42
// Offset 301
STR ST1
OUT Y28

// Rung VGR_Program#43
// Offset 303
STR ST1
OUT Y29

// Rung VGR_Program#44
// Offset 305
STR Y29
JMP VGR_Program.S6

// Rung VGR_Program#45
// Offset 307
SG VGR_Program.S6

// Rung VGR_Program#46
// Offset 309
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#47
// Offset 317
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#48
// Offset 319
STR ST1
OUT Y28
OUT Y29

// Rung VGR_Program#49
// Offset 322
STRN X25
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
OUT Y22

// Rung VGR_Program#50
// Offset 338
STR X25
JMP VGR_Program.S7

// Rung VGR_Program#51
// Offset 340
SG VGR_Program.S7

// Rung VGR_Program#52
// Offset 342
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#53
// Offset 350
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#54
// Offset 352
STR ST1
OUT Y28
OUT Y29

// Rung VGR_Program#55
// Offset 355
STR ST1
MOVE 1 C299

// Rung VGR_Program#56
// Offset 358
STRN X26
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
OUT Y24

// Rung VGR_Program#57
// Offset 374
STR X26
JMP VGR_Program.S8

// Rung VGR_Program#58
// Offset 376
SG VGR_Program.S8

// Rung VGR_Program#59
// Offset 378
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#60
// Offset 386
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#61
// Offset 388
STR ST1
OUT Y28
OUT Y29

// Rung VGR_Program#62
// Offset 391
STRN X27
ANDGE $VGR_Encoder_Rot.Acc 3573
ANDGE $VGR_Encoder_Rot.Acc 3564
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
OUT Y26

// Rung VGR_Program#63
// Offset 415
STRGE 3404 $VGR_Encoder_X.Acc
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
OUT Y25

// Rung VGR_Program#64
// Offset 434
STRGE $VGR_Encoder_X.Acc 3404
JMP VGR_Program.S9

// Rung VGR_Program#65
// Offset 439
SG VGR_Program.S9

// Rung VGR_Program#66
// Offset 441
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#67
// Offset 449
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#68
// Offset 451
STR ST1
OUT Y28
OUT Y29

// Rung VGR_Program#69
// Offset 454
STRGE 2026 $VGR_Encoder_Y.Acc
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
OUT Y23

// Rung VGR_Program#70
// Offset 473
STRGE $VGR_Encoder_Y.Acc 2026
JMP VGR_Program.S10

// Rung VGR_Program#71
// Offset 478
SG VGR_Program.S10

// Rung VGR_Program#72
// Offset 480
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#73
// Offset 488
STRN C452
JMP VGR_Program.S0

// Rung VGR_Program#74
// Offset 490
STR ST2
OUT Y29

// Rung VGR_Program#75
// Offset 492
STRN X25
ANDN Y29
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
OUT Y22

// Rung VGR_Program#76
// Offset 509
STRN X26
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
OUT Y24

// Rung VGR_Program#77
// Offset 525
STR ST2
JMP VGR_Program.S11

// Rung VGR_Program#78
// Offset 527
STR X25
AND X26
JMP VGR_Program.S2

// Rung VGR_Program#79
// Offset 530
SG VGR_Program.S11

// Rung VGR_Program#80
// Offset 532
STRN X25
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
OUT Y22

// Rung VGR_Program#81
// Offset 548
STRN X26
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
OUT Y24

// Rung VGR_Program#82
// Offset 564
STRN X27
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
OUT Y26

// Rung VGR_Program#83
// Offset 580
STR X27
OUT $VGR_Encoder_Rot.ResetLevel

// Rung VGR_Program#84
// Offset 582
STR X26
OUT $VGR_Encoder_X.ResetLevel

// Rung VGR_Program#85
// Offset 584
STR X25
OUT $VGR_Encoder_Y.ResetLevel

// Rung VGR_Program#86
// Offset 586
STR ST1
MOVE 1 C700

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STR C813
OUT Y18

// Rung MPO_Program#4
// Offset 12
STR C810
OUT Y17

// Rung MPO_Program#5
// Offset 14
STR C811
OUT Y52

// Rung MPO_Program#6
// Offset 16
STR ST1
DUPBOOL
STR C804
ANDN C805
STR C805
ANDN C804
ORSTR
ANDSTR
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 100
POPBOOL
DUPBOOL
AND C804
OUT Y53
POPBOOL
AND C805
OUT Y15

// Rung MPO_Program#7
// Offset 45
STR C814
OUT Y19

// Rung MPO_Program#8
// Offset 47
STR C809
JMP MPO_Program.S1

// Rung MPO_Program#9
// Offset 49
SG MPO_Program.S1

// Rung MPO_Program#10
// Offset 51
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#11
// Offset 59
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#12
// Offset 61
STRN X24
SET Y17

// Rung MPO_Program#13
// Offset 63
STR Y17
OUT Y20
ANDN X17
ONDTMR T105 3000 Y44

// Rung MPO_Program#14
// Offset 69
STR X17
JMP MPO_Program.S10

// Rung MPO_Program#15
// Offset 71
SG MPO_Program.S10

// Rung MPO_Program#16
// Offset 73
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#17
// Offset 81
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#18
// Offset 83
STR X17
RST Y20

// Rung MPO_Program#19
// Offset 85
STR X17
ONDTMR T106 2000 Y16

// Rung MPO_Program#20
// Offset 89
STR T106.Done
JMP MPO_Program.S11

// Rung MPO_Program#21
// Offset 91
SG MPO_Program.S11

// Rung MPO_Program#22
// Offset 93
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#23
// Offset 101
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#24
// Offset 103
STRN X18
OUT Y52

// Rung MPO_Program#25
// Offset 105
STR X18
RST Y20

// Rung MPO_Program#26
// Offset 107
STR X18
RST Y16

// Rung MPO_Program#27
// Offset 109
STRN Y16
ONDTMR T107 1000 C819

// Rung MPO_Program#28
// Offset 113
STR C819
JMP MPO_Program.S2

// Rung MPO_Program#29
// Offset 115
SG MPO_Program.S2

// Rung MPO_Program#30
// Offset 117
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#31
// Offset 125
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#32
// Offset 127
NOP

// Rung MPO_Program#33
// Offset 128
STRN X19
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y53

// Rung MPO_Program#34
// Offset 144
STR X19
JMP MPO_Program.S3

// Rung MPO_Program#35
// Offset 146
SG MPO_Program.S3

// Rung MPO_Program#36
// Offset 148
STR ST1
SET Y17

// Rung MPO_Program#37
// Offset 150
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#38
// Offset 158
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#39
// Offset 160
STR X19
SET Y19

// Rung MPO_Program#40
// Offset 162
STR X19
ONDTMR T100 1000 Y18

// Rung MPO_Program#41
// Offset 166
STR T100.DN
JMP MPO_Program.S4

// Rung MPO_Program#42
// Offset 168
SG MPO_Program.S4

// Rung MPO_Program#43
// Offset 170
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#44
// Offset 178
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#45
// Offset 180
STR X19
RST Y19

// Rung MPO_Program#46
// Offset 182
STRN X16
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y15

// Rung MPO_Program#47
// Offset 198
STR X16
JMP MPO_Program.S5

// Rung MPO_Program#48
// Offset 200
SG MPO_Program.S5

// Rung MPO_Program#49
// Offset 202
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#50
// Offset 210
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#51
// Offset 212
STR X16
SET Y19

// Rung MPO_Program#52
// Offset 214
STR Y19
ONDTMR T101 1000 C815

// Rung MPO_Program#53
// Offset 218
STR C815
RST Y18

// Rung MPO_Program#54
// Offset 220
STRN Y18
ONDTMR T110 1000 C830

// Rung MPO_Program#55
// Offset 224
STR C830
JMP MPO_Program.S6

// Rung MPO_Program#56
// Offset 226
SG MPO_Program.S6

// Rung MPO_Program#57
// Offset 228
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#58
// Offset 236
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#59
// Offset 238
STR X16
RST Y19

// Rung MPO_Program#60
// Offset 240
STRN Y19
ONDTMR T102 1000 C818

// Rung MPO_Program#61
// Offset 244
STR C818
JMP MPO_Program.S7

// Rung MPO_Program#62
// Offset 246
SG MPO_Program.S7

// Rung MPO_Program#63
// Offset 248
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#64
// Offset 256
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#65
// Offset 258
STRN X15
OUT Y45

// Rung MPO_Program#66
// Offset 260
STR X15
TMRDOWN T102 1000
OUT Y43

// Rung MPO_Program#67
// Offset 264
STR T102.Done
JMP MPO_Program.S8

// Rung MPO_Program#68
// Offset 266
SG MPO_Program.S8

// Rung MPO_Program#69
// Offset 268
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#70
// Offset 276
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#71
// Offset 278
STRN X13
OUT Y45

// Rung MPO_Program#72
// Offset 280
STR X13
TMRDOWN T103 1000
OUT Y21

// Rung MPO_Program#73
// Offset 284
STR T103.Done
JMP MPO_Program.S9

// Rung MPO_Program#74
// Offset 286
SG MPO_Program.S9

// Rung MPO_Program#75
// Offset 288
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#76
// Offset 296
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#77
// Offset 298
STRN X12
ONDTMR T104 1000 Y46

// Rung MPO_Program#78
// Offset 302
STR ST1
OUT Y47

// Rung MPO_Program#79
// Offset 304
STR X12
JMP MPO_Program.S12

// Rung MPO_Program#80
// Offset 306
SG MPO_Program.S12

// Rung MPO_Program#81
// Offset 308
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#82
// Offset 316
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#83
// Offset 318
STR X12
RST Y17

// Rung MPO_Program#84
// Offset 320
STRN Y17
JMP MPO_Program.S1

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
SG SLD_Program.S0

// Rung SLD_Program#2
// Offset 2
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#3
// Offset 10
STR C1600
OUT Y30

// Rung SLD_Program#4
// Offset 12
STR C1601
OUT Y31

// Rung SLD_Program#5
// Offset 14
STR C1602
OUT Y32

// Rung SLD_Program#6
// Offset 16
STR C1603
OUT Y33

// Rung SLD_Program#7
// Offset 18
STR C1604
OUT Y34

// Rung SLD_Program#8
// Offset 20
STR C1605
JMP SLD_Program.S1

// Rung SLD_Program#9
// Offset 22
SG SLD_Program.S1

// Rung SLD_Program#10
// Offset 24
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#11
// Offset 32
STRN C1605
JMP SLD_Program.S0

// Rung SLD_Program#12
// Offset 34
STRN X35
OFFDTMR T200 1750 C1651

// Rung SLD_Program#13
// Offset 38
STR C1651
OUT Y30

// Rung SLD_Program#14
// Offset 40
STRGE T200.Acc 1750
FLASHER 500 500 Y899

// Rung SLD_Program#15
// Offset 48
SG SLD_Program.S2

// Rung SLD_Program#16
// Offset 50
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#17
// Offset 58
STRN C1605
JMP SLD_Program.S0

// Rung SLD_Program#18
// Offset 60
STR ST1
SGSET SLD_Program.S3

// Rung SLD_Program#19
// Offset 62
SG SLD_Program.S3

// Rung SLD_Program#20
// Offset 64
STR C1610
OUT Y30

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STR C1200
OUT Y39

// Rung SSC_Program#4
// Offset 12
STR C1201
OUT Y40

// Rung SSC_Program#5
// Offset 14
STR C1202
OUT Y41

// Rung SSC_Program#6
// Offset 16
STR C1215
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y35

// Rung SSC_Program#7
// Offset 32
STR C1216
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y36

// Rung SSC_Program#8
// Offset 48
STR C1217
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#9
// Offset 64
STR C1218
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#10
// Offset 80
STR ST2
ANDPD X47
ANDPDPF
STR ST2
AND CT150.Done
CNT CT150 100

// Rung SSC_Program#11
// Offset 88
STR C1203
JMP SSC_Program.S1

// Rung SSC_Program#12
// Offset 90
SG SSC_Program.S1

// Rung SSC_Program#13
// Offset 92
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#14
// Offset 100
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#15
// Offset 102
STRN X41
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#16
// Offset 118
STRN X40
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y36

// Rung SSC_Program#17
// Offset 134
STR X40
AND X41
JMP SSC_Program.S2

// Rung SSC_Program#18
// Offset 137
SG SSC_Program.S2

// Rung SSC_Program#19
// Offset 139
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#20
// Offset 147
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#21
// Offset 149
STR X44
ANDPDPF
STR ST2
CNT CT150 300

// Rung SSC_Program#22
// Offset 154
STRN CT150.Done
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y35

// Rung SSC_Program#23
// Offset 170
STR X46
STR ST2
CNT CT151 1300

// Rung SSC_Program#24
// Offset 174
STRN CT151.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#25
// Offset 190
STR CT150.Done
AND CT151.Done
JMP SSC_Program.S3

// Rung SSC_Program#26
// Offset 193
SG SSC_Program.S3

// Rung SSC_Program#27
// Offset 195
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#28
// Offset 203
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#29
// Offset 205
STR X46
STR ST2
CNT CT152 300

// Rung SSC_Program#30
// Offset 209
STRN CT152.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#31
// Offset 225
STR CT152.Done
JMP SSC_Program.S4

// Rung SSC_Program#32
// Offset 227
SG SSC_Program.S4

// Rung SSC_Program#33
// Offset 229
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#34
// Offset 237
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#35
// Offset 239
STR X46
STR ST2
CNT CT153 135

// Rung SSC_Program#36
// Offset 243
STRN CT153.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#37
// Offset 259
STR X44
STR ST2
CNT CT154 210

// Rung SSC_Program#38
// Offset 263
STRN CT154.Done
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y36

// Rung SSC_Program#39
// Offset 279
STR CT153.Done
AND CT154.Done
JMP SSC_Program.S5

// Rung SSC_Program#40
// Offset 282
SG SSC_Program.S5

// Rung SSC_Program#41
// Offset 284
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#42
// Offset 292
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#43
// Offset 294
STR X46
STR ST2
CNT CT155 1100

// Rung SSC_Program#44
// Offset 298
STRN CT155.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// End of Code Block SSC_Program
$PGMEND SSC_Program

// Beginning of Code Block hunt_exp_light
$PRGRM hunt_exp_light

// Rung hunt_exp_light#1
// Offset 0
STR ST2
COPY 0x1 "4 0x0 MC402 Y39 1"

// End of Code Block hunt_exp_light
$PGMEND hunt_exp_light

// Beginning of Code Block HWB_PickUp
$TSK HWB_PickUp

// Rung HWB_PickUp#1
// Offset 0
NOP

// End of Code Block HWB_PickUp
$TSKEND HWB_PickUp

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"C1","copy","",""
"C11","C11_Interlock","","Used to delay logic by one scan"
"C12","C12_Interlock_2","","Used to delay logic by one scan"
"C20","HBW_Has_Pallet","","True when carrying a pallet"
"C51","X_Direction","","True: Left False: Right"
"C52","Z_Direction","","True: Down False: Up"
"C80","Conveyor_Timeout","","Bit high when Conveyor Timeout timer active"
"C90","HBW_XY_PID_EN","","Enables PID control in HBW_Move_XZ"
"C101","HBW_T1_Send","Modbus MC101","Task to deliver a pallet to conveyor"
"C102","HBW_T2_Receive","Modbus MC102","Task to pickup a pallet from conveyor"
"C103","HBW_T3_Reset","Modbus MC103","Reinitialize and home all axises"
"C104","HBW_T4_Manual","Modbus MC104","Switch to manual mode"
"C110","HBW_Move_X_L","Modbus MC110","Move Horizontal Axis towards bay"
"C111","HBW_Move_X_R","Modbus MC111","Move Horizontal Axis towards Conveyor"
"C112","HBW_Move_Y_In","Modbus MC112","Move Cantilever In"
"C113","HBW_Move_Y_Out","Modbus MC113","Move Cantilever Out"
"C114","HBW_Move_Z_Up","Modbus MC114","Move Vertical Axis Up"
"C115","HBW_Move_Z_Down","Modbus MC115","Move Vertical Axis Down"
"C116","HBW_Conveyor_In","Modbus MC116","Move Conveyor In"
"C117","HBW_Conveyor_Out","Modbus MC117","Move Conveyor Out"
"C130","HBW_Status_Ready","Modbus MC130","On when ready for a task"
"C133","HBW_Mov_Conveyor","Modbus MC133","Status Conveyor Moving"
"C134","HBW_Moving_X","Modbus MC134","Status GantryMovingX"
"C135","HBW_Moving_Y","Modbus MC135","Status GantryMovingY"
"C136","HBW_Moving_Z","Modbus MC136","Status GantryMovingZ"
"C138","HBW_Status_Y_Pos","Modbus MC138","Current Y position"
"C141","HBW_Target_Y_Pos","Modbus MC141","Target Y position"
"C150","HBW_MoveComplete","","HBW_Move_XZ completion interlock."
"C180","HBW_Fault","Modbus MC180","Status in Fault State"
"C182","Fault_X_Target","","Active when X target out of range"
"C183","Fault_Z_target","","Active when Z target out of range"
"C400","VGR_T0","",""
"C410","VGR_T1","",""
"C420","VGR_T2","",""
"C430","VGR_T3","",""
"C440","VGR_T4","",""
"C500","VGR_Man_Control","",""
"C799","VGR_RESET","",""
"V105","HBW_Task_X_slot","Modbus MHR105","Value for slot X coord"
"V106","HBW_Task_Y_slot","Modbus MHR106","Value for slot y coord"
"V118","HBW_PWM_Set_X","Modbus MHR118","Set Horizontal Axis PWM Duty Cycle %"
"V119","HBW_PWM_Set_Y","Modbus MHR119","Set Cantilever Axis PWM Duty Cycle %"
"V120","HBW_PWM_Set_Z","Modbus MHR120","Set Vertical Axis PWM Duty cycle %"
"V131","HBW_Cur_Progress","Modbus MHR131","0 to 100 percent job completion"
"V132","HBW_Cur_Stage","Modbus MHR132","Current stage number"
"V137","HBW_Status_X_Pos","Modbus MHR137","Current X encoder position"
"V139","HBW_Status_Z_Pos","Modbus MHR139","Current Z encoder position"
"V140","HBW_Target_X_Pos","Modbus MHR140","Target X encoder position"
"V142","HBW_Target_Z_Pos","Modbus MHR142","Target Z encoder position"
"V181","HBW_Fault_code","Modbus MHR181","Current Fault code"
"V801","VGR_Fault_Code","",""
"N810","VGR_Rot_Target","",""
"N811","VGR_X_Target","",""
"N812","VGR_Y_Target","",""
"D0","MC","",""
"D1","Feeder_Extend","",""
"D140","X_Start_Position","","Distance to target"
"D142","Y_Start_Position","","Distance to target"
"D143","HBW_PWM_Cur_X","","PWM value for X for XZ movement task"
"D144","HBW_PWM_Cur_Z","","PWM value for Z for XZ movement task"
"T3","T_HBW_S6","",""
"T4","T_Conveyor_Timer","","Used to detect conveyor faults"
"MPO_Program.S2","Vaccum_MO","",""
"MPO_Program.S3","Vaccum","",""
"MPO_Program.S4","Vacumm_MO","",""
"MPO_Program.S5","Vaccum_Load","",""
"US0","_CP_Strogram_A","","CP_State_Program"
"US1","_VGR_Movement","","VGR_Movement"
"US2","_SSC_Check_InOut","","SSC_Check_InOut"
"UB0","_VGR_MisScan_A","","VGR_Movement.Done ThisScan"
#END

