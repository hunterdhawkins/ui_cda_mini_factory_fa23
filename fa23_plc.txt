// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\brent\Desktop\factory\ui_cda_mini_factory_fa23\fa23_plc.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
23057c6eb8f41a119407a5389c670d870c9b774905d7d4ec2d3799c614de189945ed16e8fcb8e621
bbfefd5005becce63073800d0e5df7b75cced29e519df3afbe7279fde47373ad50f41a3e7b86d5b4
e41841c8609d79adb164cb88f7f135e02e0b89d795f45692e5a23b9b424911793ce2c93b7aaefaae
8490fca468a56e434a6f1563accacf2e46b4e135e3f26a6cbb68b4dc665f8b6d978891ca3fc6e083
ac57115bec5afe5bb84bffea6d1549b7a746abde153c3d1aadc03e7f808cf802809668451523d2b9
c8973c48d914f73508dabab869dd82f98864410a347a8503b84ce433bf116c97a8d2116b37c01812
da43d162f8ecc6f8d4aba165a7045b13532d645c977a99db87580dbc03cd57d1ec69857e84d97bb2
c988c4b7c6891678483f8f62cf265be38b3dd8480beac335c92c06f511059ab35e5b64a7f888848d
032768d64e3a626dc5361049670c37f1c96056d7810f2a00e49bfe95dfc405203f8a4756acbffc4f
9057b6eb1f726bcb3c8929b63cf0c98e72bb46c7be9fa9100afafe03756f8edb8a86f46bab859f9b
c639a2908a9513e0063aab0504173a9f52e97bdf2a467094b3eaaf620902b32116006c31aace9c5f
9c770da72de3e1dcf1c7676103741150ac19f06a938dd5373d51dc5a82e1d33c5068c05e2eb95fa7
2bd545836bd7e6a2371e82f53c2233ab3e3acf689c0ae7ea22da78e56df5d4901ea31723b8807734
cf8e0fa6a2c07093c09a33e09894ef34041c7b111728e3567092c883e76828dcec9e4ce3766e83c7
2d98f3c4be3e15d918336451efd2b5681c8ad8c3f55de7b8d1f8b4ce995b869ac992da31af997b2c
d85832ec151c89ae1e7dcda362f55ab2270fceae1ceea11abb679222e039ed14cc7fd8963b11db7a
c21d9486a256fefba1db344b3724459f56c89a45e1b2f1471abe9372438e3156368f0f66a02b98c4
ff1438b8e48cf2a2b00e1b311bbe7e890c830fbfe384d6e2e81de905d5401d249f5b583fa0d843ae
9a68bba54e98861c576dde9696f24eb6aa396fe407cdd0438783e1ff8c93be85b7e8deeeab76430b
b39816635db86b5558ac682a3f53ae057c73751a5c03714e80716f41ea9caf7edd4770b01a3e20ac
7261a930369620c14514add79e6edce763d93d4af5d7674e244ff63a49260f3a105e0722511bab27
62b75c7be8c97e977745bd4aed568f51a3d32a8384b788c560edc408e897f62e50bd647ef5215718
11586b840a065d8c244d7df130720ab0945589ee222780c091159a7bcdf2c70a3c388a4d72ba4388
9af852090478e498fede4f564bad8a5414b0df27e6172e7d1d166982a33abe3a37131ef57f3cc26d
8088f4c468818c945433ce81ccb5a637a40702a55f0858dd2fcaa53c7795b13e6bdb98bdc6fc19bb
a2893c414c71ca625c5169ac369069c438d5f2bc9edec06b1a8d5da32cde2fb89fedbd5ca80082a3
cb25b4358904f15bf276eb3f5538b889114f9f6f115e41d40e3f7983bbea0e61793c0061aaebdb1a
915aeb377166ccbee25d1ca39403c1e1ad931d1abe9cdb83e6141a174434f070cad5aea6d7ec7b2b
e072feebc0c420c3101f45c1a2778e0c68c7319775b15d8bc1e47fec4433c0b46403b90444c12406
3efd963833ff4ac20d2b8d675d5e5206c3982f300b03d80198152969bd66fbe90084229944fdaabc
15f9baecda70914b3b0487280d707371246e625381f13e7a14cd7f89062d27c671ab09c5f1c1fb85
6b1de65342dfe22c95c68a5b2fa0c662e507c641753e4ca1b50699ba85c53c53f4b85bfa0f53ccf6
47391c3cd242d6807afa68dbfab46889ca674626cf3dd8cdefcf21b1e5b349c95be8c947eba726d1
f8daf08feb03ba67e401336fb3d47b2ccc43503d8838378be19a5432071b179db22373791a598d02
110af8f36c48727222cf1be15efc96d6bb6eaadca1268e7fb6b578e35fe1aad1f64a8e42f64290e2
6706a2d6fbfde69b1c2b3d6b0b5bcb1ebaf6c5b9a6c709286a70e168dd69cd03ff115e7e8518a83c
e8f3785f1d1dc1c2fda128adb647c340fa9be3dd3c14f056e671a651c2c65d77273c0aff3d2ba261
ea6c718332fcc4fdfd1a954b3c9a9f0311ae3ddf2f4fca058cdc8538597d7bc2c2050f7ec0a5ce6b
cf595829764dc5aba903c7753643641017b8056333c1aabc8ccc9e98445838287d4081c67f0b0c93
582fde4b76080e455937569ea49537008dc8eb48d550755e5200407e18c1cb9b8dbb924f6428e710
33dc61bed5aaba2e1cd00e9d694ec6393dbd291a322452395dd5903f2387853225b3dc7af8cd67bd
339190703cc9fc428186b85cf578b77c00bfabc4c37d1a80568132eab04ffa10da7a7400e4a31509
753bf6b039e61839fde74c3a70939d2b91848af0ec9c5db4dd1bb19ca5a1ee767804aa216cd27934
70e32ef77194a828aa5a6982ae7bf4ae309f823fb81731c6e9bab379077ff91006ea8287d6b256cc
81d8fdee8750575d23a0f06f26919598c6a6dea55774636832042e180490dc63aa07da179e911d41
ae141484347f694c0980ee1005698cfa40bf7be65489db5c9721a85ec89b2d9c96a2b482ab361b17
de290ae55896fd9b8b1f2d419c2fd8ff7708a73630413e68f93fc82a099686c4b2578d17f790baaa
e020a080b30cbdc021c9662a865bed78e1dcceb3055b43b9271f772ae3700a135ac82ef766b9965f
cb759887f1131e2b2bd6329a1ab21b59d80e339433906f13d019eb2b7288017104bc1672cfaeadb6
f52160a0719dab5a9e385e88833e55f2a31dcff0f7057a4207d3508ad54fd4415e046010f1b709b0
cf78b0eac9cf321474ee1f5e2ff9037d8608edd5b675cae6e4c78a8a28b5face9bee843bc363a05b
8bc8d80e308f75a784bebca9330e7257c5edf944e586c9b2ff97e8900683ce0241abf05598543f13
6943f7795e38fb80e748fe927979549eb17be3339b22637ac0e57c41129b8efa63c80a3e657e403d
acbbc13368437686fe4e3c689cf6b228d22ebc1b49f399cbf8634ca838bd1f5c546f73c9510be504
5c474829be09c693496b6e0a5080d1ffa2dd27ed995e76270440821e1e9d5ec93cd1a221515b31f1
5a868d7eaf7d0cb1c950350ae8f8da6b3fbd608f727e0fe377bb60dea91671da144c01bcc095dc19
cd2e1409fab0c49cfccf93bf91b30c64bc0c3bc078725fa145865a564933e88a90756a1553f2935b
ac9a4a05de842c3c3fb185ad125950575799ed0e8c85abab71e992d91a6bc6c0ab7cccd5ed788b68
0f2fde4a2366f3c18484626f02a7666804d1c12b82c4282b9424e85a0afc39a53cac4f2f1d55f754
9c2420067fb2102e35655a327b613bf040ab3d3075fc937960524be8b54e348fa77ae242504caf5b
e569bd2788749f143bfcc56c506a4f114ca9f1d1b8071467d1b6d0c2c1b30313017a79298407cc1f
9d077b81a8334822aab9ba9aa5fb589997f339b68507221df5ad4733e44389e4796c1eae4122e77c
8b5d96c545df4269983463b730ac113216a2d79ea0f6d71b76299f3f2329ea23dbbe306627f8ea2e
173e667c842101340a675bd98f14afc0489939a96c278b00c931103e9b3ecbb86d4963ec98499784
6a145f7850916672bfbc97743d51236cab8085e73f846a7141470f7d3aa7277d3db4ff2397e2ab75
221375e60a0ea36355f49372d3afa053fd65c6d10a707bf351e1d043214349569e42228b4c7da516
3e08cb02faaf2197d6091bdfe7fec777e1aabc614d8c370337ff740c85a6d7de019069eda62b0034
fa7d586a82d23736387953142a81e8f6eb7fbf4c0684803474f3f2ab22b1fec46368564c7d64ca1c
b6fb3e4934f86a182fda9ccd10ecff30f9d1ccbe9ccea2aa52f7e6bb08903324cfb51a347c2a7566
d282ddf54a8115ba603ab39683000a31856fdcefda68a37511cfb5e421562b1f0d794bbef869bc1c
a4cdee20eb5bec4e4bfa6ca7a24b407168c6309aef67c575d4c6e28288971fcbb115d2e33b9959bb
c142e2c72c11d28d90ab8822b9f7d2abac997bb066022ab02b77aa4c1b86c32b0aebe8b24bd02a4c
1bfe357ceed38d58c07a7f71fcea093e2282f52af259c4dd96274c207f3267ffe218266ee7ae3c73
49eee59b00983b2c97eda820823213007449137ae8cf88d6ffcbd088f37adb05f17bba715249a559
3f4d1adf18ee5adf3f1f2a9f32a8b377e8480cc71572d4030fe8da3508ca75be32095709f3ddcfc6
af22ba648e71a8634f565774fcd364ddbaa5a0e1cc246114b81b2f1e1701670be9ea987868043759
4cf00ab13163be0dc4205a7b3e76666541ea3101555404ef805ede9e3a8983b1b10505805373ed1c
3f36073308842454a23a0ecf78a4c0a985edbb0625bf4d6de94214c53ef9ccd470ecd4e7f19ce8c6
f35c579f78591b06d5aaa8b13356ce7f4a033d6b5ae86f0d9381d56da29cd2ff8699ac7a126eecaa
b09d55db568e476f22375d26671f41058a7f0e5b617f366237afcd4b2eee5f6a238d587f74f3c3a2
b7bc9fcb2c993b59e4b3328c1b058b7b283e5b9e5d3260e35a2d3041e9f25044d2cc1e80ab501b54
92ad8fbacf054e3023d33b37809cb1bf4b1e55383050e1c1d93cfe77eca14bba20ef48b5bc5b99ad
69196acc522c13d926411bdf16fa2d8c7aaf5b238a5f726f1c699f8a454422c616830c2659d216ea
12a321e235eadf5f70801da097b6bf8891b1c182cc65c270d23ae979c82126f1e843294c374f5288
13767b19386a6fcd9d670d21ccfdbbfb4c1323e755b037cb2bebb8e3a923fc57dfa771ed5b1ac09c
1421372d29e8858927e8f8870f64f959868e38799bb3e89596ae5fca3d54459e6a25526d4d99e608
c6a0a041c86e855d5a58621cc330835c6553f406e331dcfc090ef48bf9a51e660dd17f6b2e81abd2
42a8e15d0a8b59e5e2834ac7ee89bf5cab7872534ec67005d66010156477085ce1801ae696df7248
eb397fa16916cafc445b95ee0150ed8c19e595dc87da5e51fb83da4fc6bf40c84c8d730d5bc2818c
e2c706cbffdb7db18901c8d685570603ea539a122a7e852f6a02a001c8f918f2fee99e78655a53c2
e80231a6b0a88ae7efef20242d70a14d0d55159455a9699874d6d340c477ca69245ec0f91efe9bf6
59b4438dc13b402dc5cb003efec931b01e43904da94b48bbd346397835b0b8e6c161ca23700281ef
d8b54c819e238c21a11a6a37ec574689e254474c56a86dbc91c25d551f3884307df995def2dc7192
a18db638e0bf960321dc4ccebfa2e7645ce30891b988254b2b9dc51f557a81af6b2a589f242bbf35
2c493601bce6e08d86ea2b01d0fa09b4e65394b4893995f6e88b094d5275408ee9c638e7f22f0a5e
3b721cf11d55b95c89071235398badd953d9c7eff6461c1f6303db4720379d1233617fb8fae21fa9
d78e61256bfcd0f1e5f2b8d54a04e76158107895b52703825350b5092198ed8ccbb2fced7a0825b6
672a6f3b9f78748e4e8b56282870653c532c38aa9c732211f4cdd2b751a8b5a51063be8548b68d52
d6d358b118dc9d920e08c20a9f0380b8773a2db832d78993c92e9b378cc90352b2b53697c81442df
f841d1ced74c38d536b210ae260268b9c5d7188a84202e8d903726c03049c98c23ecbdc0afc1d584
18742be3e2a4d99689ed9eae63ab53c403989d7ed4af1d30dea38b281056d463159498f6717456e8
4202d64015727734e810384046a5c91fccbda7d384b29ee9723233acb9d25a165f2a4bc4bf6f708d
17ab3cd63b88d8f9a52a2d4bc4bbc4b394ecccfecae617e695c047fca2b7383e4e3d0b0bea97da46
c6ae3a05afbd3a20e1ccf08629948c460fd15e62a1be213c7e9b6495c1658e5af891df6671cba827
f4444ae004d06352ff98c1abbf3cc9c93b211793996edeff4624108796f0c58a25415100fc49c88b
dc9653085f1b6933544b6cc0a31779c88c0db28d64351bdc6f9ac3b1642c976e91a791b64e562f17
cf7ab3db7707f8df06a4e72d226e2a4f792788b072bcf46433b5df2fdc1e236a39e750ebea94ad5f
17a59f0be6b7024d11372f4d8bce5a2b628e7b347fbbb326cce827287388f1d507f6a82ab39bbdc0
023a36fc9fe209e3eb23990a6b789eb854cfa3f3ec3722797b447e0733dfa8ba0d9ec7bb8d0345d4
0b791e12fa6e7799fcb6f966a6ef215dc20b8602117d8ff237114ed31ad2f6ed38d41126c4398dc0
05af42302adf84055b18c2c76e6e7efcb1f4e8f0c89c5077aa663c8d1aae8498abeca72a8e016313
6e560d51e176ed105ad993da7401c1d87b2e25184ad7c7f7d7fd654dce421906d39f360e9519d787
52f690cd465e3aca35c65822db6e2c70bee2ad0b375ab50aaf40306c98cce6a597d3f461c1e75fac
121f902978a18bfe5a25dac42205478adee9080ea8f5eeef3d3aa0134ac2ca34844d04b8fbf9980a
e8bbb1e071b13fcf037e947d9af2e1bd64b44726d76b1a29657e9b775b499df0fd2fb145b688fa3c
a74c88989a7a6c001d15eca673df26b0f2593c60d99f3711a75d7c8dbd56d6884740933a2cfe9521
2d69cb10573d5ab918edbbca6259582bce1a1e01506c6cc9e18e1d1b95f37d4fff32014a5ead5cdb
749bfb73b8bed4c2f374d65a4e916c3fa4ea38c4b5550ea7d9f0d55cb241d36bd82134133190321a
6476531085ab36b6dba103514488ac20b1e01f4cb3c70021e93cc61ae1fbfe4989e5967311a97dce
fe570ee14ea208eb06171ed3a9012a080055e298c60356ba19ea1257f800b8c900e5529a47717ec3
b3f87a325ff36f227b92ddf4a5e522f325f64d4d223d7dcd340f927d072e774c29fe016f113d50f2
1a2eb0211dee308616197e0c7e726366297137478bbad45d42f2db554fc41c2e7d2257caf5847b55
ccb6e7ba4a2e799a432e65698094db943219c3bb2133df69e2af0e6efc3f96e4e922094f1a7de015
e30f8e1f55aaf9200fa99d6c9e12a5eadc610e30d57e6308aa7e0b2665b94926b01f8803cb2a68f4
483cf14081419015e219d6b340775395b86eee80efd0c3dda896b7f059408cc932f7fe61923b54e1
8c42a10b3af9216c05e73de4f64d8dd41816e39393581d835464972c930aa158fc3ed2f8ae351f49
1e576fdbf9576544c3653ed5422f603800e1423b3a5d3dfe06639328a6077528d4a5c039be9c4c43
71a01077d49676b64f27d67bfde969abafc9d229f462371556884fd0f33926ad95a8b17f769a4c42
e775e05e764066affc669c28372e3d8dea7d89f52ee8932515836d646364994c6feecfd3abab8b85
a3d93e10044b37e529e1501c49961ed1e0ecd7f79ad0af1a8a8fb97ce236702a468537dc4645dbdf
08e165b7916c2eb608a505683c96302a1d6caf1e8843bc8a5b42aad7cab0b3d74bd8b6a7b33930a8
065326d723d0bea5394dbc71706ae0d3f344de3eb6e21348cd0b8b65a6c2ec7d1c55632c17bd94eb
346adb04681a59f462385ef42be08b393c7a4309430c85f77aae0ccec6b33b0218966805bc56554e
968e777c9316ed79072cdbb7310615e452dbca328476d8d0adc710e86fc82db5bacd02cccedf38b6
260c3f15234b5e30ef77ef524071bf8f3a941659f2918fff1f581a50ac727aa42f447fd0562e5552
840bc688a33ea869bae1ac08401385f9a9f32ed9651ae1f607048764726354dca292583a80552fde
d4ec1c3801ef8fc63cd9e0b92239f32188d6ceba4d3c619c93cfb21f64ec90ab4564bbe332e1f7a3
723093fc8fd34958cb11e577348841d0855d680f803e37ac55493eac373d55e99a995531c950b58a
f54a70467ca9620ac47c0868dfb420448a2faa72f21889fbe73c6db0e18e2a5164d1387c490e6b7c
02d03162bbc75ea50328325328f09203bc92f8a4351a303ddabff5f5a50aa0796008d01808acf67b
259d61f4bfa143624dc62359902e44ea1def309693b34835c29a6919ca7b3ee04ab7bfa04ba8e741
35e490400c4f33e83becfde16b5e056a3864486370e46e1f5fc43ba0483d46bab912abd429c365a0
4a10baa5c790ea58eec9a1cef8a9da42d56a3a61e209038e1006c5636d1a88af6f8d900f12ab2137
27599489dcff1eb4486db66a0dcfcd7965f6ee20a5c67c4ad647c1f095c40e9a6ccd8a105e31fd15
8bf828403f3562a107c8ac96e20d48d35c5711ea5561708ffa6577c32feea2d9da39c925e0fbaac6
e16205c6f97a73aff6d195bab4c7e2ea444880ab111e777527cdc21c60cf685df8714e7f81c320ec
b711938525be8c2ac04d1a68872df75c9ccefff6ade68d0ef421c1a5501bfadeed1618ffaed885bc
1f8fdc7adc7ac983995830f22f9fdfc21c6cd2a240e87c5fa69d988ee6c90dd1227b02dd082ff746
5631d97f9b247b07830683f7b524348a5f9b290fec52c0dacab2da9e286ad9c54deb27e89acf8df5
91c4f68c036231059c942c78035f8df0d5d26450ced25ef9388fdc142e3ecdc12be5d25bcc298d36
5bfef9a93d8f4a8289638cd0d1c430901715331776eff3f9cc6552727934715e039c28fc39650292
109c2405bf631ce9599a56df2131fa586716f04122c036524bd6696fd5945d941c59f31db06b57ad
a428ce043e1de99a3495235a10941893bc98fe6f5b46bdd15f835111d63edae95c689aac1f0920d7
02959604ee035f54bb2c8d260a5f39bf9abe0dfceea0c5a7afa156d253bdf99e2d976cf2454c9434
0533d94f0e470a281e82eaf4d4499d1ccc74c8b1933556a0eca47edf0d86ee401278fca92a5dac5c
ebc8a702d6d0c5a2a5561e1169c345bbc37ea8c6bf885bbc42c2f1a315d19e11ff7e4e785d5e4531
88e16022aa5a8a3d9b10cca09fc1cb65406cafaf87b38524ab251e98f4803dbee1d5b5f15cfc3236
7dc1322b53da4d25745ad2249da702dde0769f0cf7b91e759316b5cc9dc63cc4a6729c736034c3e0
50ccaa4cde9ee56b60182f28b18c7134c087a835c2811018ca0728a972cf9f932700234b05cc9fbe
ff57a6091c059d900fb992a74895221bd54752152e2bf083c64d5656286c006713df4c0f4a5a8f46
23c7ba69e200eaccc37203e28eda0812f8c34ffb7ed6e0ec0b26a2086b99418c534dd39e5df595fa
56e25f79215bed8d2500c19412f0f006943c2b8607b1643b95a4c37afee96db45c5f7a0917754af0
26afef43c6fafc15090f9a1fb0d5be96d876f49dc39f40093f48b1276baf031b2b6b19bc126ee5df
a5d20324cfeade2373c48d839b350abdfcef0645a5f14a78460563dacfdfdc1e5bd6be312083c199
3009f383d28a0c62b51a9c320ac6e103bbe1d65b6b82649b3deded8f006ec086371318b8f51b7980
2ef41540da1289ea1a77567033ff0ab50876a731b157bb8eb7632f9fe088dc9551898d866877cb9f
fffd618f2613553761c8cf57358347d059f56fc4a555b60be7bc3054c744ceb52754fd341661724e
8b28da2c4d1f832578e0d70ed67d18bca6f7630ad2c3d4da12f2ee65730035c35e3c329e85dd349d
e0fe63771ba1211bc2214dd0d3519fda28bcf44e6e17829f8ec4b242da5a4f91a8cf5cc7dd31029e
1d678a69a7616876137ca2175aa8c647837e01440d0c7ff61cd43542d68b03061a738e4c026b5764
190690f764d92205844b916c03ad9529ca2197a39e1d53125bc55ee3c1497fce9a7587565eb7853e
95d639d437c428fafae98574d13687347f8359e2b4fdbd89d9bdd3bd78b15ebce1fd8431351aed08
fc6ff1e4d9d7792f1fd6dda8a51e2e45be001a3d8e3a2fff5afe830990405ce0cdec6730e996575f
e45ba92555e664956f003785c21e992c5ece9bbd6ea447f961724f34e5c8ae2c449b46b9860424cf
9cce71c749343b0a496dcb9aac4e236b12651cafa5b0e10f2a2e4cffb2acef17772113ee76e1e921
5ceb54a824057335dcafd40c5cacaa22994483e7aec32e88581a2598e11cab556435d2b8bd2fd32a
adfdbd54f4f73e2aff7fec7aaa664f4ac71fe7499ab46f23235aa4aab315731fcc9744085a365182
d487c4c0c98591f48321b8fa080e00bb9bd34c754f17bfd4aca10ad2c9a97362a0780f8ccf411480
833e932aa2498250f3e7e1c08009bd9995fdac0d7818c7e990debe536f0565664f86adeceb4e8e40
bfb2fcab611263506849614642a689418c9142145717237490e5afae4563548c848a8125a3a636a7
314fab5cb30c6a5a93f4e1db8d87ae869c06a522fb13bf2354b21720e1fcb86c3d651d4af2679384
d0222a6754b7a3d1319895c7865ee7558fb7c9891d6f97d05ac7947a166193f271279f32ad909627
52cee35104554da33298c15ffb9731377362ccfd3106016da3623782b0ac95a799904ccedbf1ae47
b67dbcf2e224287680efee716ac178f664200f882fe684f4e36c0c72c9c8d0ccb1f67f532bc576a7
c586ea98cdc9b43bf5fda4f01303081b8afdad9960a7113196412bd971d715551bd0e7826da6f222
c1e39639080d26a4d0023b67295d1aca6d4becbfae437599c98a6780d3b2b980ee16587e71a7b7e2
655eaf4d3e4754b82e27f2ff5445da85017ad74a53339908c33650b8d358dc37d704f091126c52af
c143834d76297d7e00b6f4cb0eec83da07b449ff3aab49ffbfeede565e19e4ca627a84373a9d6cfd
0d97aa7e2ac73828a3abbb2ec06d8e1bc7eaa3cffe80e501a2218c727f8b66813fc359038409913e
de5d6e7c973d30bcb3768d7ede7b2fe47ee2ba8d4210e435dde84e20b1674b0e12bfe6090965441c
5e946d80c1289bccde8fa1448eb4d4113106f1eed1ac62959bc81c545b6822e4e0bcb8fef87d9d24
6a0f8ff5523bb8d66b06b8d028f0cbb98f0cdf8687282f9aa1d5db80e9cce554ab08ff4a332a587e
9317dd5f4b36f5bbf11adde4e8ea532ecb5892ac4f03ca3b32e64f99723347bd799d6ac801d25401
2ffb7f39b4b5162187bb12ded8ef00cf2774ad643ecc6c2cd221692da21915fc6631f0fc80c8c3c5
d8f59fc692e738bebdfaf8a967b19ca359c79d8916e775dd0b9ee423c08c34d0c83a269c0b156b53
5d29ce03798b2846469ab5f2b352ffd285a1644e60e2c7644109bba632cb518dba62ea5ca90231d5
d188757093cc9bd397d76bd9b9c4da89fca6b7c0a0c2fdb51fb26144416a30534b290a9cf63810ed
e9f167f42e19cbf062bd12c3a85f13cb1c4b4da26640d37c289aaa0903cc687bcaee85d839c45488
27e3f7321b4d4958a529ddda9b9f765368b4772dd90e1dd9c47d457725a18a22be93d29fb208998a
fe2b4fe67eebb716f465d36d097364e03a87e2a923a639032b3fb3ef90764d7c68a2ac97c5775216
23c5cfbddd0e87bd2383f42783a63e9b0f74c38ac7d825a318cd2278e203c4a3ce4e1c81359d2c9a
f539220de8c4d8ca5702ef8174b0c474703c8ddaf09bd6195a9d531844906feda6b6ec3cb05928a3
f37b4408824d09ffe9d64c7741f1c3f17fbdbc057bcc01b0bae09956a2d586e11bd6a93309b5bb9c
c889dbe382864fc253f0b960a9ec5bde2622df8a9197f313100fc3b74abba4ec00e2bacd5ac61aaa
d22aad809782f2990f39f014dfee1e3398591b88a29bd6cbdc7271fac064c288db950b896fef544c
15c1b663950e354bdcba71c6f12ac0d5c62fc6fa0300502af6c1fdefec39f86bed9653b6641fccd8
3ca10c2405b4170909d59c8d29c4e91f420a500f20ea41c9ee71caf0acf69d65bd3f8a46f55cc672
0d531c93a621cc902751f5ee0b853e7352f6ce444e826456513d5ac76fe8b1baeb86a375fc03703a
dbb822f0996e798ff5bc3fa912abb7a11f17c9e2862353f5acccf69ae92049ecfb5807e27a9cd62f
a844d9ec06cc987cabc534b4675214776df9528d77ca713639dbeccfdc019b8ef03b4de35600e908
e9ddda9d0fd855b9d6ca732b7cfa19c80a0a6f4680fa4eb172957ef28a325ff0d165155fa6012860
9b27c87cdc5272a3695bd6be9278c61a6b23358fdfdd9c1c9aab745c90c07b1297d74813bb616598
d1632d055c57e656e7a5e66ac48bca002ba2ebbec326276c4612e3fe4e56a4f8966d2420798b3de9
d823d3cf1b9ff997842764f200be1d8a4c0a88eeaa28333169037b14519c52f9e1a24e72b1eff82e
608c34d0457eb7136132999e4f70b988ba2d54c3954994c9aa251caad28f4200ed6224dfc493c83a
0057187f84eb3237305d4daa641a1f95d4aabd07e3e53abbbff9f05f71db659915297cc16d3f8b50
7a93bde55113b1f53bcd8cd7910deb2119285e5bb9e29adaea2e12976981895db414798d7f478bb1
c0f81934bf0a98aa53df91834a4c51ca90e63dcbd6e626dff5d8a5dea06d17e48efcf59ea8c3dc92
82340e00d7b2cee6edcaca34d8e7507ea540f47e2bdce08f9f1373638affcb37d6b452170e4b20d6
fa82c16f081a4419d49118386afc9c1bdf029ae605a72e5073e6c29c08a68d6c972c49ad61599230
bf79f071f0172696c586d8b4f697679dbe3fb566e456a69199fc9603b6cd37d6b701aededaa66ff1
946cdaf071bd353018a35052ab7ab3aaede68fa01fbe460024e0f29cdecaaaa91cf99bd34c8f9d92
78025262ac87e68c19d3af6e0ef20174496ebb04ea7f3d7d09b80b9fb5aa162635a24943d5c88ed2
97d229a8aa822e8dc03da18ca7959ad27c4fd1a789abc9b14f5617a69c69837e90d263e60591906b
9297daa073c89f7db957731b77d3bcd988824c516625c557339d4893d7d2a9756e17d1749bc8aeb2
7c81d231bc00e7ccd38fb0b81baca5947c7e7a5c06de91d53bc85d521432fea091fcf87bf5e699e5
aa6e54d5583fb7e5c8b35b11322d7809a5afa811404b398b20c003240e34d66a18561e3157ff0354
e8fa6c9338cc7b5c14459ccf8ab7ca8fd3cff4c56ad983d3ad2be3ba09958e7190ce11c048a62d1c
466446f790e70bac96abecbd4ca0ff48fc285e0a5fd3c8c711384fac1a83960c8d967c9db6554383
fa99907e48347d62baea06374bdf753be318b439010130fdc4417a94d26b1bca53032e60a472bd7d
dc5c32e782f85cb15664974c1beb4743f9c1a40b3ed42b7d6dcd1994c283c74d877e9a912bf1496f
e2810afcdd5ad72cb4ed1c3af8945d358e08dc2254120848569b87a8f9a43f570b896835baab99da
ed9e662aeb8d56c3245391154239d034ca7a426e65a521b946ef8072f0560819a61b98864a3d1e52
dc2c866c7dd31218165166a637c68b54ea31253603363145494d45ce2029f8ce18f62129bf895dee
d24d4d52336ad0831f8313909d84d3c6b008677f4222bcb487896698abea5722177d41810aaf4f70
77cabcb8ee1f1479297940c9eb238cd49a39c4241385243f3452ff700ecdbe3d2ea680892143cc85
78ff1d3530c999056146148885ee2f2685dbf0a727761375c722014fb1cd04df81299231a48b5ab9
71397e3b562794a3bdcde1e7c3519f16565921b105373105b4627539193e20fc18e281669c5cb293
20ccae1f5c8e0244b6ac699a
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 SSC_Copy_State <Virtual>  0
 HBW_Pick TASK  0 -1
 HBW_Copy_State <Virtual>  0
 PID_10 PID  0
 PID_11 PID  0
 hunt_exp_light PROGRAM  0 -1
 HBW_Home <Virtual>  0
 HBW_Pick_Sto <Virtual>  0
 test TASK  0 -1
 HBW_Pickup_ST PROGRAM  0 -1
 HWB_Extend_Arm <Virtual>  0
 HBW_Retract_Arm <Virtual>  0
 HWB_PickUp TASK  0 -1
 HBW_HTO1POS <Virtual>  0
 HBW_Left_1Block <Virtual>  0
 HBW_HomeTo2_Col <Virtual>  0
 HWB_HomeTo3_Col <Virtual>  0
 HWB_HomeTo2_Row <Virtual>  0
 HWB_HomeTo3_Row <Virtual>  0
 HWB_HomeTo1_Col <Virtual>  0
 HBW_move_left_1 <Virtual>  0
 HWB_Home_to_11 <Virtual>  0
 HWB_11_DropOff <Virtual>  0
 HBW_Pickup <Virtual>  0
 HBW_PickUp_R1 <Virtual>  0
 HBW_Send_VGR <Virtual>  0
 HBW_PickUp_VGR <Virtual>  0
 HBW_Return_VGR <Virtual>  0
 HBW_MotorsOff <Virtual>  0
 HBW_ConvTo11 <Virtual>  0
 HBW_Return_Top <Virtual>  0
 HBW_MV_11_12 <Virtual>  0
 HBW_Conv_12 <Virtual>  0
 HBW_Conv_12_Lat <Virtual>  0
 HBW_RETRACT_13 <Virtual>  0
 HBW_Retract_23 <Virtual>  0
 HBW_Conv13_Lat <Virtual>  0
 HBW_Conv_2Row <Virtual>  0
 HBW_PickUp_R2 <Virtual>  0
 HBW_Conv11_Lat <Virtual>  0
 HBW_Retract_12 <Virtual>  0
 HBW_Shift_C1C2 <Virtual>  0
 HBW_Move_R1_R2 <Virtual>  0
#END

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"VGR Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC410 C410 1 0x0 MC409 C409 1 0x0 MC412 Y28 1 0x0 MC412 MC450 1 0x0 MC411 C411 1 0x0 MC408 C408 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC413 Y29 1 0x0 MC413 MC451 1 0x0 X27 MI200 1"

// Rung VGR_Copy_State#2
// Offset 27
NOP

// Rung VGR_Copy_State#3
// Offset 28
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC800 Y41 1 0x0 Y41 MI801 1 0x0 MC802 Y43 1 0x0 Y43 MI803 1 0x0 MC804 C804 1 0x0 MC805 C805 1 0x0 MC806 Y44 1 0x0 MC807 Y20 1 0x0 MC808 C811 1 0x0 MC809 C809 1 0x0 MC810 C810 1 0x0 MC812 C812 1 0x0 MC813 C813 1 0x0 MC814 C814 1 0x0 MC816 Y45 1 0x0 MC817 Y46 1 0x0 MC818 Y21 1"

// Rung MPO_Copy_State#2
// Offset 39
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC800 C1600 1 0x0 MC801 C1601 1 0x0 MC802 C1602 1 0x0 MC803 C1603 1 0x0 MC804 C1604 1 0x0 Y31 MI800 1 0x0 MC850 C1605 1"

// Rung SLD_Copy_State#2
// Offset 19
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"SSC Program"
#END

STR ST1
COPY 0x1 "4 0x0 MC606 C1200 1 0x0 MC607 C1201 1 0x0 MC608 C1202 1 0x0 MC609 C1203 1 0x0 MC615 C1215 1 0x0 MC616 C1216 1 0x0 MC617 C1217 1 0x0 MC618 C1218 1 0x0 MC619 C1219 1 0x0 MC620 C1220 1"

// Rung SSC_Copy_State#2
// Offset 25
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block HBW_Home
$LGCMOD HBW_Home

// Rung HBW_Home#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Home#2
// Offset 8
STRN C215
ANDN X0
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 60 60
OUT Y51

// Rung HBW_Home#3
// Offset 26
STRN C215
ANDN X3
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5

// Rung HBW_Home#4
// Offset 43
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y76

// Rung HBW_Home#5
// Offset 64
NOP

// Rung HBW_Home#6
// Offset 65
RET

// End of Code Block HBW_Home
$LGCEND HBW_Home

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 Y40 1 0x0 Y80 MHR102 1 0x0 MC101 C205 1 0x0 MC102 C206 1 0x0 MC103 C207 1 0x0 MC104 C208 1 0x0 MC105 C209 1 0x0 MC106 C210 1 0x0 MC107 C211 1 0x0 MC108 C212 1 0x0 MC109 C213 1 0x0 MC110 C214 1 0x0 MC111 C215 1 0x0 MC112 C216 1 0x0 X2 MI101 1 0x0 X10 MI102 1 0x0 X11 MI103 1 0x0 X3 MI104 1 0x0 X0 MI105 1 0x0 X6 MI106 1 0x0 X7 MI107 1 0x0 X8 MI108 1 0x0 X9 MI109 1 0x0 $HBW_Encoder_X.Acc MHR1 1 0x0 $HBW_Encoder_Z.Acc MHR2 1"

// Rung HBW_Copy_State#2
// Offset 55
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block HBW_HomeTo2_Col
$LGCMOD HBW_HomeTo2_Col

// Rung HBW_HomeTo2_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_HomeTo2_Col#2
// Offset 17
STRGE -2775 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_HomeTo2_Col#3
// Offset 22
NOP

// Rung HBW_HomeTo2_Col#4
// Offset 23
NOP

// Rung HBW_HomeTo2_Col#5
// Offset 24
NOP

// Rung HBW_HomeTo2_Col#6
// Offset 25
RET

// End of Code Block HBW_HomeTo2_Col
$LGCEND HBW_HomeTo2_Col

// Beginning of Code Block HWB_HomeTo1_Col
$LGCMOD HWB_HomeTo1_Col

// Rung HWB_HomeTo1_Col#1
// Offset 0
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HWB_HomeTo1_Col#2
// Offset 17
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_HomeTo1_Col#3
// Offset 22
NOP

// Rung HWB_HomeTo1_Col#4
// Offset 23
NOP

// Rung HWB_HomeTo1_Col#5
// Offset 24
RET

// End of Code Block HWB_HomeTo1_Col
$LGCEND HWB_HomeTo1_Col

// Beginning of Code Block HWB_Home_to_11
$LGCMOD HWB_Home_to_11

// Rung HWB_Home_to_11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HWB_Home_to_11#2
// Offset 22
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_Home_to_11#3
// Offset 27
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HWB_Home_to_11#4
// Offset 49
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_Home_to_11#5
// Offset 54
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HWB_Home_to_11#6
// Offset 73
NOP

// Rung HWB_Home_to_11#7
// Offset 74
NOP

// Rung HWB_Home_to_11#8
// Offset 75
RET

// End of Code Block HWB_Home_to_11
$LGCEND HWB_Home_to_11

// Beginning of Code Block HWB_11_DropOff
$LGCMOD HWB_11_DropOff

// Rung HWB_11_DropOff#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HWB_11_DropOff#2
// Offset 8
STRGE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HWB_11_DropOff#3
// Offset 13
STRN C215
ANDN C250
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51

// Rung HWB_11_DropOff#4
// Offset 31
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y4
AND ST2
OUT Y5

// Rung HWB_11_DropOff#5
// Offset 51
STRGE 2850 $HBW_Encoder_Z.Acc
OUT C251

// Rung HWB_11_DropOff#6
// Offset 56
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 60 60
OUT Y7

// Rung HWB_11_DropOff#7
// Offset 73
RET

// End of Code Block HWB_11_DropOff
$LGCEND HWB_11_DropOff

// Beginning of Code Block HBW_PickUp_R1
$LGCMOD HBW_PickUp_R1

// Rung HBW_PickUp_R1#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R1#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R1#3
// Offset 41
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R1#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R1#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_PickUp_R1#6
// Offset 69
NOP

// Rung HBW_PickUp_R1#7
// Offset 70
NOP

// Rung HBW_PickUp_R1#8
// Offset 71
NOP

// Rung HBW_PickUp_R1#9
// Offset 72
NOP

// Rung HBW_PickUp_R1#10
// Offset 73
RET

// End of Code Block HBW_PickUp_R1
$LGCEND HBW_PickUp_R1

// Beginning of Code Block HBW_Send_VGR
$LGCMOD HBW_Send_VGR

// Rung HBW_Send_VGR#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Send_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_Send_VGR#3
// Offset 37
STRN C215
AND X2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y48
AND ST2
OUT Y49

// Rung HBW_Send_VGR#4
// Offset 56
NOP

// Rung HBW_Send_VGR#5
// Offset 57
NOP

// Rung HBW_Send_VGR#6
// Offset 58
RET

// End of Code Block HBW_Send_VGR
$LGCEND HBW_Send_VGR

// Beginning of Code Block HBW_PickUp_VGR
$LGCMOD HBW_PickUp_VGR

// Rung HBW_PickUp_VGR#1
// Offset 0
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_PickUp_VGR#2
// Offset 19
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_PickUp_VGR#3
// Offset 37
STRN C215
AND X11
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_PickUp_VGR#4
// Offset 56
NOP

// Rung HBW_PickUp_VGR#5
// Offset 57
NOP

// Rung HBW_PickUp_VGR#6
// Offset 58
RET

// End of Code Block HBW_PickUp_VGR
$LGCEND HBW_PickUp_VGR

// Beginning of Code Block HBW_Return_VGR
$LGCMOD HBW_Return_VGR

// Rung HBW_Return_VGR#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C253
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y6

// Rung HBW_Return_VGR#2
// Offset 22
STRN C215
AND X1
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
AND ST2
OUT Y48

// Rung HBW_Return_VGR#3
// Offset 41
STRN C215
AND C251
DUPBOOL
ANDN X1
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_Return_VGR#4
// Offset 63
STRLE 2575 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_VGR#5
// Offset 68
NOP

// Rung HBW_Return_VGR#6
// Offset 69
NOP

// Rung HBW_Return_VGR#7
// Offset 70
RET

// End of Code Block HBW_Return_VGR
$LGCEND HBW_Return_VGR

// Beginning of Code Block HBW_MotorsOff
$LGCMOD HBW_MotorsOff

// Rung HBW_MotorsOff#1
// Offset 0
STRN C215
ANDN ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_MotorsOff#2
// Offset 18
STRN C215
AND ST2
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 60 60
OUT Y5
OUT Y4

// Rung HBW_MotorsOff#3
// Offset 36
STRN C215
AND ST2
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 60 60
OUT Y49
OUT Y48

// Rung HBW_MotorsOff#4
// Offset 54
NOP

// Rung HBW_MotorsOff#5
// Offset 55
NOP

// Rung HBW_MotorsOff#6
// Offset 56
NOP

// Rung HBW_MotorsOff#7
// Offset 57
RET

// End of Code Block HBW_MotorsOff
$LGCEND HBW_MotorsOff

// Beginning of Code Block HBW_ConvTo11
$LGCMOD HBW_ConvTo11

// Rung HBW_ConvTo11#1
// Offset 0
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_ConvTo11#2
// Offset 22
NOP

// Rung HBW_ConvTo11#3
// Offset 23
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_ConvTo11#4
// Offset 28
STRN C215
AND C251
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_ConvTo11#5
// Offset 50
STRLE 80 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_ConvTo11#6
// Offset 55
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_ConvTo11#7
// Offset 74
NOP

// Rung HBW_ConvTo11#8
// Offset 75
NOP

// Rung HBW_ConvTo11#9
// Offset 76
RET

// End of Code Block HBW_ConvTo11
$LGCEND HBW_ConvTo11

// Beginning of Code Block HBW_Return_Top
$LGCMOD HBW_Return_Top

// Rung HBW_Return_Top#1
// Offset 0
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_Return_Top#2
// Offset 19
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
POPBOOL
AND ST2
OUT Y5

// Rung HBW_Return_Top#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Return_Top#4
// Offset 46
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_Return_Top#5
// Offset 64
STRLE 80 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Return_Top#6
// Offset 69
NOP

// Rung HBW_Return_Top#7
// Offset 70
NOP

// Rung HBW_Return_Top#8
// Offset 71
RET

// End of Code Block HBW_Return_Top
$LGCEND HBW_Return_Top

// Beginning of Code Block HBW_MV_11_12
$LGCMOD HBW_MV_11_12

// Rung HBW_MV_11_12#1
// Offset 0
STRN C215
DUPBOOL
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_MV_11_12#2
// Offset 21
NOP

// Rung HBW_MV_11_12#3
// Offset 22
NOP

// Rung HBW_MV_11_12#4
// Offset 23
NOP

// Rung HBW_MV_11_12#5
// Offset 24
RET

// End of Code Block HBW_MV_11_12
$LGCEND HBW_MV_11_12

// Beginning of Code Block HBW_Conv_12
$LGCMOD HBW_Conv_12

// Rung HBW_Conv_12#1
// Offset 0
NOP

// Rung HBW_Conv_12#2
// Offset 1
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_12#3
// Offset 20
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Conv_12#4
// Offset 40
STRGE $HBW_Encoder_Z.Acc 80
OUT C251

// Rung HBW_Conv_12#5
// Offset 45
NOP

// Rung HBW_Conv_12#6
// Offset 46
RET

// End of Code Block HBW_Conv_12
$LGCEND HBW_Conv_12

// Beginning of Code Block HBW_Conv_12_Lat
$LGCMOD HBW_Conv_12_Lat

// Rung HBW_Conv_12_Lat#1
// Offset 0
NOP

// Rung HBW_Conv_12_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv_12_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv_12_Lat#4
// Offset 42
STRGE 5325 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv_12_Lat#5
// Offset 47
NOP

// Rung HBW_Conv_12_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv_12_Lat
$LGCEND HBW_Conv_12_Lat

// Beginning of Code Block HBW_RETRACT_13
$LGCMOD HBW_RETRACT_13

// Rung HBW_RETRACT_13#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_RETRACT_13#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_RETRACT_13#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_RETRACT_13#4
// Offset 46
STRN C215
AND C250
DUPBOOL
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
POPBOOL
AND ST2
OUT Y51

// Rung HBW_RETRACT_13#5
// Offset 68
STRGE 7685 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_RETRACT_13#6
// Offset 73
RET

// End of Code Block HBW_RETRACT_13
$LGCEND HBW_RETRACT_13

// Beginning of Code Block HBW_Retract_23
$LGCMOD HBW_Retract_23

// Rung HBW_Retract_23#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_23#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_23#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_23#4
// Offset 46
STRN C215
AND ST2
OUT Y51
AND X11
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50

// Rung HBW_Retract_23#5
// Offset 65
STRGE 7685 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Retract_23#6
// Offset 70
RET

// End of Code Block HBW_Retract_23
$LGCEND HBW_Retract_23

// Beginning of Code Block HBW_Conv13_Lat
$LGCMOD HBW_Conv13_Lat

// Rung HBW_Conv13_Lat#1
// Offset 0
NOP

// Rung HBW_Conv13_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv13_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv13_Lat#4
// Offset 42
STRGE 7685 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv13_Lat#5
// Offset 47
NOP

// Rung HBW_Conv13_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv13_Lat
$LGCEND HBW_Conv13_Lat

// Beginning of Code Block HBW_Conv_2Row
$LGCMOD HBW_Conv_2Row

// Rung HBW_Conv_2Row#1
// Offset 0
NOP

// Rung HBW_Conv_2Row#2
// Offset 1
NOP

// Rung HBW_Conv_2Row#3
// Offset 2
NOP

// Rung HBW_Conv_2Row#4
// Offset 3
STRN C215
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
AND ST2
OUT Y6

// Rung HBW_Conv_2Row#5
// Offset 22
STRN C215
AND C251
AND X11
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
AND ST2
OUT Y4

// Rung HBW_Conv_2Row#6
// Offset 42
STRGE $HBW_Encoder_Z.Acc 1380
OUT C251

// Rung HBW_Conv_2Row#7
// Offset 47
NOP

// Rung HBW_Conv_2Row#8
// Offset 48
RET

// End of Code Block HBW_Conv_2Row
$LGCEND HBW_Conv_2Row

// Beginning of Code Block HBW_PickUp_R2
$LGCMOD HBW_PickUp_R2

// Rung HBW_PickUp_R2#1
// Offset 0
NOP

// Rung HBW_PickUp_R2#2
// Offset 1
STRN C215
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
AND ST2
OUT Y7

// Rung HBW_PickUp_R2#3
// Offset 20
STRN C215
AND ST2
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y51
OUT Y50

// Rung HBW_PickUp_R2#4
// Offset 38
NOP

// Rung HBW_PickUp_R2#5
// Offset 39
STRN C215
AND C251
DUPBOOL
AND X10
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y5
POPBOOL
AND ST2
OUT Y4

// Rung HBW_PickUp_R2#6
// Offset 61
STRLE 1400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_PickUp_R2#7
// Offset 66
NOP

// Rung HBW_PickUp_R2#8
// Offset 67
NOP

// Rung HBW_PickUp_R2#9
// Offset 68
NOP

// Rung HBW_PickUp_R2#10
// Offset 69
RET

// End of Code Block HBW_PickUp_R2
$LGCEND HBW_PickUp_R2

// Beginning of Code Block HBW_Conv11_Lat
$LGCMOD HBW_Conv11_Lat

// Rung HBW_Conv11_Lat#1
// Offset 0
NOP

// Rung HBW_Conv11_Lat#2
// Offset 1
STRN C215
ANDN C250
DUPBOOL
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y6
POPBOOL
AND ST2
OUT Y7

// Rung HBW_Conv11_Lat#3
// Offset 23
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Conv11_Lat#4
// Offset 42
STRGE 3020 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Conv11_Lat#5
// Offset 47
NOP

// Rung HBW_Conv11_Lat#6
// Offset 48
RET

// End of Code Block HBW_Conv11_Lat
$LGCEND HBW_Conv11_Lat

// Beginning of Code Block HBW_Retract_12
$LGCMOD HBW_Retract_12

// Rung HBW_Retract_12#1
// Offset 0
STRN C215
ANDN X11
DUPBOOL
ANDN C251
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
POPBOOL
AND ST2
OUT Y8

// Rung HBW_Retract_12#2
// Offset 22
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Retract_12#3
// Offset 41
STRGE 400 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Retract_12#4
// Offset 46
RET

// End of Code Block HBW_Retract_12
$LGCEND HBW_Retract_12

// Beginning of Code Block HBW_Shift_C1C2
$LGCMOD HBW_Shift_C1C2

// Rung HBW_Shift_C1C2#1
// Offset 0
STRGE 5320 $HBW_Encoder_X.Acc
OUT C250

// Rung HBW_Shift_C1C2#2
// Offset 5
NOP

// Rung HBW_Shift_C1C2#3
// Offset 6
STRN C215
AND C250
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
OUT Y50
AND ST2
OUT Y51

// Rung HBW_Shift_C1C2#4
// Offset 25
NOP

// Rung HBW_Shift_C1C2#5
// Offset 26
STRN C215
AND ST2
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
OUT Y7
OUT Y6

// Rung HBW_Shift_C1C2#6
// Offset 44
NOP

// Rung HBW_Shift_C1C2#7
// Offset 45
RET

// Rung HBW_Shift_C1C2#8
// Offset 46
NOP

// End of Code Block HBW_Shift_C1C2
$LGCEND HBW_Shift_C1C2

// Beginning of Code Block HBW_Move_R1_R2
$LGCMOD HBW_Move_R1_R2

// Rung HBW_Move_R1_R2#1
// Offset 0
STRGE 1700 $HBW_Encoder_Z.Acc
OUT C251

// Rung HBW_Move_R1_R2#2
// Offset 5
NOP

// Rung HBW_Move_R1_R2#3
// Offset 6
STRN C215
AND C251
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
OUT Y4
AND ST2
OUT Y5

// Rung HBW_Move_R1_R2#4
// Offset 25
NOP

// Rung HBW_Move_R1_R2#5
// Offset 26
NOP

// Rung HBW_Move_R1_R2#6
// Offset 27
RET

// End of Code Block HBW_Move_R1_R2
$LGCEND HBW_Move_R1_R2

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#2
// Offset 3
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#3
// Offset 6
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#4
// Offset 9
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#5
// Offset 12
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// Rung $Main#6
// Offset 15
#BEGIN FMT_COMMENT 
"Hunter Demo Light<br>"
#END

STR ST1
RUN hunt_exp_light

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
SG HBW_Program.S0

// Rung HBW_Program#2
// Offset 2
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#3
// Offset 10
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#4
// Offset 12
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#5
// Offset 14
STR ST1
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#6
// Offset 22
NOP

// Rung HBW_Program#7
// Offset 23
STR C213
JMP HBW_Program.S1

// Rung HBW_Program#8
// Offset 25
SG HBW_Program.S1

// Rung HBW_Program#9
// Offset 27
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#10
// Offset 35
STR ST1
OUT $HBW_Encoder_X.EnableCapture

// Rung HBW_Program#11
// Offset 37
STR ST1
OUT $HBW_Encoder_Z.EnableCapture

// Rung HBW_Program#12
// Offset 39
STR ST1
MOVE 0 N1

// Rung HBW_Program#13
// Offset 42
STR ST1
DUPBOOL
STR C205
ANDN C206
STR C206
ANDN C205
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 500 60
POPBOOL
DUPBOOL
AND C205
OUT Y48
POPBOOL
AND C206
OUT Y49

// Rung HBW_Program#14
// Offset 71
STR ST1
DUPBOOL
STR C207
ANDN C208
STRN C207
AND C208
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
POPBOOL
DUPBOOL
AND C207
OUT Y50
POPBOOL
AND C208
OUT Y51

// Rung HBW_Program#15
// Offset 100
STR ST1
DUPBOOL
STR C209
ANDN C210
STRN C209
AND C210
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
POPBOOL
DUPBOOL
AND C209
OUT Y4
POPBOOL
AND C210
OUT Y5

// Rung HBW_Program#16
// Offset 129
STR ST1
DUPBOOL
STR C211
ANDN C212
STRN C211
AND C212
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
POPBOOL
DUPBOOL
AND C211
OUT Y6
POPBOOL
AND C212
OUT Y7

// Rung HBW_Program#17
// Offset 158
STR C213
JMP HBW_Program.S2

// Rung HBW_Program#18
// Offset 160
SG HBW_Program.S2

// Rung HBW_Program#19
// Offset 162
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#20
// Offset 170
STR X0
OUT $HBW_Encoder_X.ResetLevel

// Rung HBW_Program#21
// Offset 172
STR X3
OUT $HBW_Encoder_Z.ResetLevel

// Rung HBW_Program#22
// Offset 174
STR ST1
CALL HBW_Home 0x1 DST511 "3" "3"

// Rung HBW_Program#23
// Offset 182
STR X0
AND X11
AND X3
JMP HBW_Program.S3

// Rung HBW_Program#24
// Offset 186
STR C212
JMP HBW_Program.S3

// Rung HBW_Program#25
// Offset 188
NOP

// Rung HBW_Program#26
// Offset 189
SG HBW_Program.S3

// Rung HBW_Program#27
// Offset 191
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#28
// Offset 199
STR ST1
CALL HWB_Home_to_11 0x1 DST511 "3" "3"

// Rung HBW_Program#29
// Offset 207
STRN C250
ANDN C251
JMP HBW_Program.S4

// Rung HBW_Program#30
// Offset 210
SG HBW_Program.S4

// Rung HBW_Program#31
// Offset 212
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#32
// Offset 220
STR ST1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#33
// Offset 228
STR X10
ANDN C251
JMP HBW_Program.S5

// Rung HBW_Program#34
// Offset 231
SG HBW_Program.S5

// Rung HBW_Program#35
// Offset 233
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#36
// Offset 241
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#37
// Offset 249
STRN C251
AND C250
JMP HBW_Program.S6

// Rung HBW_Program#38
// Offset 252
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#39
// Offset 254
SG HBW_Program.S6

// Rung HBW_Program#40
// Offset 256
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#41
// Offset 264
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#42
// Offset 272
STRN X2
INC N1

// Rung HBW_Program#43
// Offset 274
STRN X2
JMP HBW_Program.S7

// Rung HBW_Program#44
// Offset 276
SG HBW_Program.S7

// Rung HBW_Program#45
// Offset 278
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#46
// Offset 286
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#47
// Offset 294
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#48
// Offset 303
SG HBW_Program.S8

// Rung HBW_Program#49
// Offset 305
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#50
// Offset 313
STR ST1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#51
// Offset 321
STRN C250
JMP HBW_Program.S9

// Rung HBW_Program#52
// Offset 323
SG HBW_Program.S9

// Rung HBW_Program#53
// Offset 325
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#54
// Offset 333
STR ST1
CALL HBW_Return_Top 0x1 DST511 "3" "3"

// Rung HBW_Program#55
// Offset 341
STR X10
ANDN C251
JMP HBW_Program.S10
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#56
// Offset 351
SG HBW_Program.S10

// Rung HBW_Program#57
// Offset 353
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#58
// Offset 361
STR ST1
CALL HBW_MV_11_12 0x1 DST511 "3" "3"

// Rung HBW_Program#59
// Offset 369
STRN C250
JMP HBW_Program.S11

// Rung HBW_Program#60
// Offset 371
SG HBW_Program.S11

// Rung HBW_Program#61
// Offset 373
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#62
// Offset 381
STRE N1 1
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#63
// Offset 392
STRE N1 2
CALL HBW_PickUp_R1 0x1 DST511 "3" "3"

// Rung HBW_Program#64
// Offset 403
STRE N1 3
CALL HBW_Move_R1_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#65
// Offset 414
STRE N1 3
ANDLE 1650 $HBW_Encoder_Z.Acc
JMP HBW_Program.S51

// Rung HBW_Program#66
// Offset 423
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#67
// Offset 426
NOP

// Rung HBW_Program#68
// Offset 427
SG HBW_Program.S51

// Rung HBW_Program#69
// Offset 429
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#70
// Offset 437
STR ST1
CALL HBW_PickUp_R2 0x1 DST511 "3" "3"

// Rung HBW_Program#71
// Offset 445
STR X10
ANDN C251
JMP HBW_Program.S12

// Rung HBW_Program#72
// Offset 448
SG HBW_Program.S12

// Rung HBW_Program#73
// Offset 450
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#74
// Offset 458
STR ST1
CALL HWB_11_DropOff 0x1 DST511 "3" "3"

// Rung HBW_Program#75
// Offset 466
STRN C251
AND C250
JMP HBW_Program.S13

// Rung HBW_Program#76
// Offset 469
SG HBW_Program.S13

// Rung HBW_Program#77
// Offset 471
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#78
// Offset 479
STR ST1
CALL HBW_Send_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#79
// Offset 487
STRN X2
INC N1

// Rung HBW_Program#80
// Offset 489
STRN X2
JMP HBW_Program.S14

// Rung HBW_Program#81
// Offset 491
SG HBW_Program.S14

// Rung HBW_Program#82
// Offset 493
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#83
// Offset 501
STR ST1
CALL HBW_Return_VGR 0x1 DST511 "3" "3"

// Rung HBW_Program#84
// Offset 509
STR X11
JMP HBW_Program.S15
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#85
// Offset 518
SG HBW_Program.S15

// Rung HBW_Program#86
// Offset 520
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#87
// Offset 528
STRE N1 1
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#88
// Offset 539
STRE N1 2
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#89
// Offset 550
STRE N1 3
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#90
// Offset 561
STRE N1 4
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#91
// Offset 572
STRE N1 5
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#92
// Offset 583
STRE N1 6
CALL HBW_Conv_2Row 0x1 DST511 "3" "3"

// Rung HBW_Program#93
// Offset 594
STRE N1 7
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#94
// Offset 605
STRE N1 8
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#95
// Offset 616
STRE N1 9
CALL HBW_Conv_12 0x1 DST511 "3" "3"

// Rung HBW_Program#96
// Offset 627
NOP

// Rung HBW_Program#97
// Offset 628
STRN C251
JMP HBW_Program.S16
CALL HBW_MotorsOff 0x1 DST511 "3" "3"

// Rung HBW_Program#98
// Offset 637
SG HBW_Program.S16

// Rung HBW_Program#99
// Offset 639
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#100
// Offset 647
STRE N1 1
CALL HBW_Conv11_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#101
// Offset 658
STRE N1 2
CALL HBW_Conv_12_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#102
// Offset 669
STRE N1 3
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#103
// Offset 680
STRE N1 4
CALL HBW_Conv13_Lat 0x1 DST511 "3" "3"

// Rung HBW_Program#104
// Offset 691
NOP

// Rung HBW_Program#105
// Offset 692
STR C215
JMP HBW_Program.S0

// Rung HBW_Program#106
// Offset 694
STRN C250
AND X10
JMP HBW_Program.S17

// Rung HBW_Program#107
// Offset 697
SG HBW_Program.S17

// Rung HBW_Program#108
// Offset 699
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#109
// Offset 707
STRE N1 1
CALL HBW_Retract_12 0x1 DST511 "3" "3"

// Rung HBW_Program#110
// Offset 718
STRE N1 2
CALL HBW_RETRACT_13 0x1 DST511 "3" "3"

// Rung HBW_Program#111
// Offset 729
STRE N1 3
CALL HBW_Retract_23 0x1 DST511 "3" "3"

// Rung HBW_Program#112
// Offset 740
NOP

// Rung HBW_Program#113
// Offset 741
STR X11
ANDN C251
ANDN C250
JMP HBW_Program.S11

// Rung HBW_Program#114
// Offset 745
STR X11
ANDE N1 1
JMP HBW_Program.S50

// Rung HBW_Program#115
// Offset 751
SG HBW_Program.S50

// Rung HBW_Program#116
// Offset 753
STR ST1
CALL HBW_Shift_C1C2 0x1 DST511 "3" "3"

// Rung HBW_Program#117
// Offset 761
STRN Y50
ANDN C250
JMP HBW_Program.S11

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#2
// Offset 8
STR ST1
DUPBOOL
STR C410
ANDN C409
STRN C410
AND C409
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 100
POPBOOL
DUPBOOL
AND C410
OUT Y27
POPBOOL
AND C409
OUT Y26

// Rung VGR_Program#3
// Offset 37
STR ST1
DUPBOOL
STR C408
ANDN C411
STRN C408
AND C411
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 100
POPBOOL
DUPBOOL
AND C408
OUT Y24
POPBOOL
AND C411
OUT Y25

// Rung VGR_Program#4
// Offset 66
STR ST1
DUPBOOL
STR C406
ANDN C407
STRN C406
AND C407
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 100
POPBOOL
DUPBOOL
AND C406
OUT Y23
POPBOOL
AND C407
OUT Y22

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STR C813
OUT Y18

// Rung MPO_Program#4
// Offset 12
STR C810
OUT Y17

// Rung MPO_Program#5
// Offset 14
STR C811
OUT Y52

// Rung MPO_Program#6
// Offset 16
STR ST1
DUPBOOL
STR C804
ANDN C805
STR C805
ANDN C804
ORSTR
ANDSTR
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 100
POPBOOL
DUPBOOL
AND C804
OUT Y53
POPBOOL
AND C805
OUT Y15

// Rung MPO_Program#7
// Offset 45
STR C814
OUT Y19

// Rung MPO_Program#8
// Offset 47
STR C809
JMP MPO_Program.S2

// Rung MPO_Program#9
// Offset 49
SG MPO_Program.S1

// Rung MPO_Program#10
// Offset 51
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#11
// Offset 59
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#12
// Offset 61
STRN X24
SET Y17

// Rung MPO_Program#13
// Offset 63
STR Y17
OUT Y20
ANDN X17
ONDTMR T0 1000 Y44

// Rung MPO_Program#14
// Offset 69
SG MPO_Program.S2

// Rung MPO_Program#15
// Offset 71
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#16
// Offset 79
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#17
// Offset 81
STRN X19
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y53

// Rung MPO_Program#18
// Offset 97
STR X19
JMP MPO_Program.S3

// Rung MPO_Program#19
// Offset 99
SG MPO_Program.S3

// Rung MPO_Program#20
// Offset 101
STR ST1
SET Y17

// Rung MPO_Program#21
// Offset 103
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#22
// Offset 111
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#23
// Offset 113
STR X19
SET Y19

// Rung MPO_Program#24
// Offset 115
STR X19
ONDTMR T100 2000 Y18

// Rung MPO_Program#25
// Offset 119
STR T100.DN
JMP MPO_Program.S4

// Rung MPO_Program#26
// Offset 121
SG MPO_Program.S4

// Rung MPO_Program#27
// Offset 123
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#28
// Offset 131
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#29
// Offset 133
STR X19
RST Y19

// Rung MPO_Program#30
// Offset 135
STRN X16
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 90
OUT Y15

// Rung MPO_Program#31
// Offset 151
STR X16
JMP MPO_Program.S5

// Rung MPO_Program#32
// Offset 153
SG MPO_Program.S5

// Rung MPO_Program#33
// Offset 155
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#34
// Offset 163
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#35
// Offset 165
STR X16
SET Y19

// Rung MPO_Program#36
// Offset 167
STR Y19
ONDTMR T101 2000 C815

// Rung MPO_Program#37
// Offset 171
STR C815
RST Y18

// Rung MPO_Program#38
// Offset 173
STRN Y18
JMP MPO_Program.S6

// Rung MPO_Program#39
// Offset 175
SG MPO_Program.S6

// Rung MPO_Program#40
// Offset 177
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#41
// Offset 185
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#42
// Offset 187
STR X16
RST Y19

// Rung MPO_Program#43
// Offset 189
STRN Y19
ONDTMR T102 1000 C818

// Rung MPO_Program#44
// Offset 193
STR C818
JMP MPO_Program.S7

// Rung MPO_Program#45
// Offset 195
SG MPO_Program.S7

// Rung MPO_Program#46
// Offset 197
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#47
// Offset 205
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#48
// Offset 207
STRN X15
OUT Y45

// Rung MPO_Program#49
// Offset 209
STR X15
TMRDOWN T102 1000
OUT Y43

// Rung MPO_Program#50
// Offset 213
STR T102.Done
JMP MPO_Program.S8

// Rung MPO_Program#51
// Offset 215
SG MPO_Program.S8

// Rung MPO_Program#52
// Offset 217
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#53
// Offset 225
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#54
// Offset 227
STRN X13
OUT Y45

// Rung MPO_Program#55
// Offset 229
STR X13
TMRDOWN T103 1000
OUT Y21

// Rung MPO_Program#56
// Offset 233
STR T103.Done
JMP MPO_Program.S9

// Rung MPO_Program#57
// Offset 235
SG MPO_Program.S9

// Rung MPO_Program#58
// Offset 237
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#59
// Offset 245
STRN C809
JMP MPO_Program.S0

// Rung MPO_Program#60
// Offset 247
STR ST1
OUT Y47

// Rung MPO_Program#61
// Offset 249
STRN X12
ONDTMR T104 1000 Y46

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
SG SLD_Program.S0

// Rung SLD_Program#2
// Offset 2
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#3
// Offset 10
STR C1600
OUT Y30

// Rung SLD_Program#4
// Offset 12
STR C1601
OUT Y31

// Rung SLD_Program#5
// Offset 14
STR C1602
OUT Y32

// Rung SLD_Program#6
// Offset 16
STR C1603
OUT Y33

// Rung SLD_Program#7
// Offset 18
STR C1604
OUT Y34

// Rung SLD_Program#8
// Offset 20
STR C1605
JMP SLD_Program.S1

// Rung SLD_Program#9
// Offset 22
SG SLD_Program.S1

// Rung SLD_Program#10
// Offset 24
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#11
// Offset 32
STRN C1605
JMP SLD_Program.S0

// Rung SLD_Program#12
// Offset 34
STRN X35
OFFDTMR T200 1750 C1651

// Rung SLD_Program#13
// Offset 38
STR C1651
OUT Y30

// Rung SLD_Program#14
// Offset 40
STRGE T200.Acc 1750
FLASHER 500 500 Y899

// Rung SLD_Program#15
// Offset 48
SG SLD_Program.S2

// Rung SLD_Program#16
// Offset 50
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#17
// Offset 58
STRN C1605
JMP SLD_Program.S0

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STR C1200
OUT Y39

// Rung SSC_Program#4
// Offset 12
STR C1201
OUT Y40

// Rung SSC_Program#5
// Offset 14
STR C1202
OUT Y41

// Rung SSC_Program#6
// Offset 16
STR C1215
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y35

// Rung SSC_Program#7
// Offset 32
STR C1216
PWMOUT @ssc_vertical $ssc_vertical Y11 500 100
OUT Y36

// Rung SSC_Program#8
// Offset 48
STR C1217
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#9
// Offset 64
STR C1218
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#10
// Offset 80
STR ST2
ANDPD X47
ANDPDPF
STR ST2
AND CT150.Done
CNT CT150 100

// Rung SSC_Program#11
// Offset 88
STR C1203
JMP SSC_Program.S1

// Rung SSC_Program#12
// Offset 90
SG SSC_Program.S1

// Rung SSC_Program#13
// Offset 92
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#14
// Offset 100
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#15
// Offset 102
STRN X41
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// Rung SSC_Program#16
// Offset 118
STRN X40
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y36

// Rung SSC_Program#17
// Offset 134
STR X40
AND X41
JMP SSC_Program.S2

// Rung SSC_Program#18
// Offset 137
SG SSC_Program.S2

// Rung SSC_Program#19
// Offset 139
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#20
// Offset 147
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#21
// Offset 149
STR X44
ANDPDPF
STR ST2
CNT CT150 300

// Rung SSC_Program#22
// Offset 154
STRN CT150.Done
PWMOUT @ssc_vertical $ssc_vertical Y11 60 100
OUT Y35

// Rung SSC_Program#23
// Offset 170
STR X46
STR ST2
CNT CT151 1300

// Rung SSC_Program#24
// Offset 174
STRN CT151.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y38

// Rung SSC_Program#25
// Offset 190
STR CT150.Done
AND CT151.Done
JMP SSC_Program.S3

// Rung SSC_Program#26
// Offset 193
SG SSC_Program.S3

// Rung SSC_Program#27
// Offset 195
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#28
// Offset 203
STRN C1203
JMP SSC_Program.S0

// Rung SSC_Program#29
// Offset 205
STR X46
STR ST2
CNT CT152 300

// Rung SSC_Program#30
// Offset 209
STRN CT152.Done
PWMOUT @ssc_horizontal $ssc_horizontal Y12 60 100
OUT Y37

// End of Code Block SSC_Program
$PGMEND SSC_Program

// Beginning of Code Block hunt_exp_light
$PRGRM hunt_exp_light

// Rung hunt_exp_light#1
// Offset 0
STR ST2
COPY 0x1 "4 0x0 MC402 Y39 1"

// End of Code Block hunt_exp_light
$PGMEND hunt_exp_light

// Beginning of Code Block HWB_PickUp
$TSK HWB_PickUp

// Rung HWB_PickUp#1
// Offset 0
NOP

// End of Code Block HWB_PickUp
$TSKEND HWB_PickUp

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"C1","copy","",""
"C11","C11_Interlock","","Used to delay logic by one scan"
"C12","C12_Interlock_2","","Used to delay logic by one scan"
"C20","HBW_Has_Pallet","","True when carrying a pallet"
"C51","X_Direction","","True: Left False: Right"
"C52","Z_Direction","","True: Down False: Up"
"C80","Conveyor_Timeout","","Bit high when Conveyor Timeout timer active"
"C90","HBW_XY_PID_EN","","Enables PID control in HBW_Move_XZ"
"C101","HBW_T1_Send","Modbus MC101","Task to deliver a pallet to conveyor"
"C102","HBW_T2_Receive","Modbus MC102","Task to pickup a pallet from conveyor"
"C103","HBW_T3_Reset","Modbus MC103","Reinitialize and home all axises"
"C104","HBW_T4_Manual","Modbus MC104","Switch to manual mode"
"C110","HBW_Move_X_L","Modbus MC110","Move Horizontal Axis towards bay"
"C111","HBW_Move_X_R","Modbus MC111","Move Horizontal Axis towards Conveyor"
"C112","HBW_Move_Y_In","Modbus MC112","Move Cantilever In"
"C113","HBW_Move_Y_Out","Modbus MC113","Move Cantilever Out"
"C114","HBW_Move_Z_Up","Modbus MC114","Move Vertical Axis Up"
"C115","HBW_Move_Z_Down","Modbus MC115","Move Vertical Axis Down"
"C116","HBW_Conveyor_In","Modbus MC116","Move Conveyor In"
"C117","HBW_Conveyor_Out","Modbus MC117","Move Conveyor Out"
"C130","HBW_Status_Ready","Modbus MC130","On when ready for a task"
"C133","HBW_Mov_Conveyor","Modbus MC133","Status Conveyor Moving"
"C134","HBW_Moving_X","Modbus MC134","Status GantryMovingX"
"C135","HBW_Moving_Y","Modbus MC135","Status GantryMovingY"
"C136","HBW_Moving_Z","Modbus MC136","Status GantryMovingZ"
"C138","HBW_Status_Y_Pos","Modbus MC138","Current Y position"
"C141","HBW_Target_Y_Pos","Modbus MC141","Target Y position"
"C150","HBW_MoveComplete","","HBW_Move_XZ completion interlock."
"C180","HBW_Fault","Modbus MC180","Status in Fault State"
"C182","Fault_X_Target","","Active when X target out of range"
"C183","Fault_Z_target","","Active when Z target out of range"
"C400","VGR_T0","",""
"C410","VGR_T1","",""
"C420","VGR_T2","",""
"C430","VGR_T3","",""
"C440","VGR_T4","",""
"C500","VGR_Man_Control","",""
"C799","VGR_RESET","",""
"V105","HBW_Task_X_slot","Modbus MHR105","Value for slot X coord"
"V106","HBW_Task_Y_slot","Modbus MHR106","Value for slot y coord"
"V118","HBW_PWM_Set_X","Modbus MHR118","Set Horizontal Axis PWM Duty Cycle %"
"V119","HBW_PWM_Set_Y","Modbus MHR119","Set Cantilever Axis PWM Duty Cycle %"
"V120","HBW_PWM_Set_Z","Modbus MHR120","Set Vertical Axis PWM Duty cycle %"
"V131","HBW_Cur_Progress","Modbus MHR131","0 to 100 percent job completion"
"V132","HBW_Cur_Stage","Modbus MHR132","Current stage number"
"V137","HBW_Status_X_Pos","Modbus MHR137","Current X encoder position"
"V139","HBW_Status_Z_Pos","Modbus MHR139","Current Z encoder position"
"V140","HBW_Target_X_Pos","Modbus MHR140","Target X encoder position"
"V142","HBW_Target_Z_Pos","Modbus MHR142","Target Z encoder position"
"V181","HBW_Fault_code","Modbus MHR181","Current Fault code"
"V801","VGR_Fault_Code","",""
"N810","VGR_Rot_Target","",""
"N811","VGR_X_Target","",""
"N812","VGR_Y_Target","",""
"D0","MC","",""
"D1","Feeder_Extend","",""
"D140","X_Start_Position","","Distance to target"
"D142","Y_Start_Position","","Distance to target"
"D143","HBW_PWM_Cur_X","","PWM value for X for XZ movement task"
"D144","HBW_PWM_Cur_Z","","PWM value for Z for XZ movement task"
"T3","T_HBW_S6","",""
"T4","T_Conveyor_Timer","","Used to detect conveyor faults"
"MPO_Program.S2","Vaccum_MO","",""
"MPO_Program.S3","Vaccum","",""
"MPO_Program.S4","Vacumm_MO","",""
"MPO_Program.S5","Vaccum_Load","",""
"US0","_CP_Strogram_A","","CP_State_Program"
"US1","_VGR_Movement","","VGR_Movement"
"US2","_SSC_Check_InOut","","SSC_Check_InOut"
"UB0","_VGR_MisScan_A","","VGR_Movement.Done ThisScan"
#END

